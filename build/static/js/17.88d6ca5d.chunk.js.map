{"version":3,"sources":["views/common/TextFieldGroup.js","contants/contants.js","views/base/tables/TableUser.js"],"names":["TextFieldGroup","field","value","label","error","type","onChange","checkUserExists","readOnly","placeholder","className","classnames","onBlur","name","defaultProps","headers","Headers","auth","localStorage","getItem","append","Users","props","getData","a","setState","isLoading","axios","baseURL","Constants","BASE_URL","url","LIST_USER","method","res","pagination","data","dataApi","active","map","val","Status","totalActive","openDelete","item","modalDelete","state","delete","key","activePage","page","itemsCount","limit","modalCom","viewingUser","communities","updated","action","Email","Name","Phone","Gender","Company_Id","Role_Id","UserName","Password","Sale_Id","Code","dataCompany","currentCompany","dataSale","currentSale","dataRole","currentRole","arrPagination","indexPage","this","i","j","temparray","arrTotal","length","slice","push","d","toLocaleUpperCase","includes","getCompanyData","getSaleData","getRoleData","alert","body","ADD_USER","is_success","message","id","UPDATE_USER","DELETE_USER","fetchData","fetch","global","then","users","json","result","total","catch","console","log","LIST_COMPANY","resCompany","undefined","LIST_COMPANY_WITH_ID","currentC","LIST_SALE","resSale","LIST_SALE_WITH_ID","LIST_ROLE","resRole","LIST_ROLE_WITH_ID","e","target","style","styles","success","danger","deleted","tags","searchInput","searchKey","outline","color","floatRight","size","onClick","toggleModal","responsive","wa10","wh12","wh15","w5","row","mgl5","openUpdate","float","marginRight","padding","isOpen","flexLabel","htmlFor","flexOption","selected","_id","addUser","updateUser","disabled","toggle","Component","width","height","textDecoration","marginTop","spinner","center","textAlign","tbody","overflowY","marginLeft","display","userActive","userPending","nagemonNameCol","image","borderRadius","marginBottom"],"mappings":"6KAAA,mCAIMA,EAAiB,SAAC,GAA4F,IAA1FC,EAAyF,EAAzFA,MAAOC,EAAkF,EAAlFA,MAAOC,EAA2E,EAA3EA,MAAOC,EAAoE,EAApEA,MAAOC,EAA6D,EAA7DA,KAAMC,EAAuD,EAAvDA,SAAUC,EAA6C,EAA7CA,gBAAiBC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC/F,OACE,sBAAKC,UAAWC,IAAW,aAAc,CAAE,YAAaP,IAAxD,UACE,uBAAOM,UAAU,gBAAjB,SAAkCP,IAClC,uBACEG,SAAUA,EACVM,OAAQL,EACRL,MAAOA,EACPG,KAAMA,EACNQ,KAAMZ,EACNQ,YAAaA,EACbD,SAAUA,EACVE,UAAU,iBAEbN,GAAS,sBAAMM,UAAU,aAAhB,SAA8BN,QAc5CJ,EAAec,aAAe,CAC5BT,KAAM,QAGOL,O,iCCpCA,KACb,SAAa,iCAEb,UAAc,iBACd,kBAAsB,qBACtB,SAAa,gBACb,YAAgB,mBAChB,YAAgB,mBAEhB,aAAiB,oBACjB,qBAAyB,wBACzB,YAAgB,mBAChB,eAAmB,sBACnB,eAAmB,sBAEnB,UAAc,iBACd,kBAAsB,qBACtB,SAAa,gBACb,YAAgB,mBAChB,YAAgB,mBAEhB,aAAiB,oBACjB,qBAAyB,wBACzB,YAAgB,mBAChB,eAAmB,sBACnB,eAAmB,sBAEnB,UAAc,iBACd,kBAAsB,qBACtB,SAAa,gBACb,YAAgB,mBAChB,YAAgB,mBAEhB,cAAkB,qBAClB,sBAA0B,yBAC1B,aAAiB,oBACjB,gBAAoB,uBACpB,gBAAoB,uBAEpB,SAAa,gBACb,iBAAqB,oBACrB,QAAY,eACZ,WAAe,kBACf,WAAe,kBAEf,aAAiB,oBACjB,qBAAyB,wBACzB,YAAgB,mBAChB,eAAmB,sBACnB,eAAmB,wB,wSCjCjBe,EAAU,IAAIC,QACZC,EAAOC,aAAaC,QAAQ,QAClCJ,EAAQK,OAAO,gBAAiB,UAAYH,GAC5CF,EAAQK,OAAO,eAAgB,oB,IACzBC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IAoDVC,QArDmB,sBAqDT,8BAAAC,EAAA,6DACN,EAAKC,SAAS,CAAEC,WAAW,IADrB,SAEYC,IAAM,CACpBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUG,UACfC,OAAQ,QALN,OAEAC,EAFA,OAON,EAAKC,WAAWD,EAAIE,KAAKA,MACzB,EAAKX,SAAS,CAAEY,QAASH,EAAIE,KAAKA,OAE9BE,EAAS,EAEbJ,EAAIE,KAAKA,KAAKG,KAAI,SAAAC,GACI,WAAdA,EAAIC,SACJH,GAAkB,MAI1B,EAAKb,SAAS,CAAEC,WAAW,EAAOgB,YAAaJ,IAlBzC,2CArDS,EAqPnBK,WAAa,SAACC,GACV,EAAKnB,SAAS,CACVoB,aAAc,EAAKC,MAAMD,YACzBE,OAAQH,KAtPZ,EAAKE,MAAQ,CACTV,KAAM,GACNY,IAAK,GACLC,WAAY,EACZC,KAAM,EACNC,WAAY,EACZC,MAAO,GACPV,YAAa,EACbW,UAAU,EACVC,YAAa,GACbC,YAAa,GACbC,QAAS,GACTnB,QAAS,GACToB,OAAQ,MACRC,MAAO,GACPC,KAAM,GACNC,MAAO,GACPC,OAAQ,MACRC,WAAY,GACZC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,KAAM,GACN1B,OAAQ,GACRI,aAAa,EACbE,OAAQ,KACRqB,YAAa,GACbC,eAAgB,GAChBC,SAAU,GACVC,YAAa,GACbC,SAAU,GACVC,YAAa,GACbC,cAAe,GACfC,UAAW,GApCA,E,4FAuCnB,sBAAAnD,EAAA,sDACIoD,KAAKrD,UADT,gD,8EAIA,SAAWc,GACP,IAAIwC,EAAGC,EAAGC,EACNC,EAAW,GACf,IAAKH,EAAI,EAAGC,EAAIzC,EAAQ4C,OAAQJ,EAAIC,EAAGD,GAFV,EAGzBE,EAAY1C,EAAQ6C,MAAML,EAAGA,EAHJ,GAIzBG,EAASG,KAAKJ,GAElBH,KAAKnD,SAAS,CAAEiD,cAAeM,EAAU5C,KAAM4C,EAASJ,KAAK9B,MAAM6B,e,uBAwBvE,SAAU3B,GACN,IAAQ2B,EAAcC,KAAK9B,MAAnB6B,UAGR,GAFAC,KAAKnD,SAAS,CAAEuB,IAAKA,IAEV,IAAPA,EAAW,CACX,IAAIoC,EAAI,GACRR,KAAK9B,MAAMT,QAAQE,KAAI,SAAAC,IACfA,EAAImB,KAAK0B,oBAAoBC,SAAStC,EAAIqC,sBAAwB7C,EAAIkB,MAAM2B,oBAAoBC,SAAStC,EAAIqC,uBAC7GD,EAAED,KAAK3C,MAGf,IAAIF,EAAS,EAEb8C,EAAE7C,KAAI,SAAAC,GACgB,WAAdA,EAAIC,SACJH,GAAkB,MAI1BsC,KAAKnD,SAAS,CAAEW,KAAMgD,EAAG1C,YAAaJ,QACnC,CACH,IAAIA,EAAS,EAEbsC,KAAK9B,MAAMT,QAAQE,KAAI,SAAAC,GACD,WAAdA,EAAIC,SACJH,GAAkB,MAI1BsC,KAAKnD,SAAS,CAAEW,KAAMwC,KAAK9B,MAAM4B,cAAcC,GAAYjC,YAAaJ,O,gEAIhF,WAAkBU,GAAlB,SAAAxB,EAAA,sEACUoD,KAAKW,iBADf,uBAEUX,KAAKY,cAFf,uBAGUZ,KAAKa,cAHf,OAIe,OAAPzC,GACA4B,KAAKnD,SAAS,CACV4B,UAAWuB,KAAK9B,MAAMO,SACtBI,OAAQT,EACRU,MAAO,GACPC,KAAM,GACNC,MAAO,GACPC,OAAQ,MACRC,WAAY,GACZC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,QAAS,GACTC,KAAM,KAjBlB,gD,6EAsBA,SAASnB,EAAKR,GACVoC,KAAKnD,SAAL,eAAiBuB,EAAMR,M,4DAG3B,oDAAAhB,EAAA,2DACmGoD,KAAK9B,MAA5FY,EADZ,EACYA,MAAOC,EADnB,EACmBA,KAAMC,EADzB,EACyBA,MAAOI,EADhC,EACgCA,SAAUG,EAD1C,EAC0CA,KAAMF,EADhD,EACgDA,SAAUJ,EAD1D,EAC0DA,OAAQE,EADlE,EACkEA,QAASD,EAD3E,EAC2EA,WAAYI,EADvF,EACuFA,QAEtE,MAATR,GAA0B,IAATA,GACN,MAARC,GAAwB,IAARA,GACP,MAATC,GAA0B,IAATA,GACL,MAAZI,GAAgC,IAAZA,GACZ,MAARG,GAAwB,IAARA,GACJ,MAAZF,GAAgC,IAAZA,EAR/B,uBASQyB,MAAM,uCATd,iCAaUC,EAAO,CACTjC,MAAOA,EACPC,KAAMA,EACNC,MAAOA,EACPC,OAAQA,EACRC,WAAYA,EACZC,QAASA,EACTC,SAAUA,EACVC,SAAUA,EACVC,QAASA,EACTC,KAAMA,GAGVS,KAAKnD,SAAS,CAAEC,WAAW,IA1B/B,SA2BsBC,IAAM,CACpBC,QAASC,IAAUC,SACnBC,IAAKF,IAAU+D,SACf3D,OAAQ,MACRG,KAAMuD,IA/Bd,OAkC+B,IAPrBzD,EA3BV,QAkCYE,KAAKyD,YACTjB,KAAKrD,UACLqD,KAAKnD,SAAS,CAAC4B,UAAWuB,KAAK9B,MAAMO,aAErCqC,MAAMxD,EAAIE,KAAK0D,SACflB,KAAKnD,SAAS,CAAEC,WAAW,KAvCnC,iD,qHA2CA,WAAiBkB,GAAjB,SAAApB,EAAA,sEACUoD,KAAKW,eAAe3C,EAAKkB,YADnC,uBAEUc,KAAKY,YAAY5C,EAAKsB,SAFhC,uBAGUU,KAAKa,YAAY7C,EAAKmB,SAHhC,OAKIa,KAAKnD,SAAS,CACV4B,UAAWuB,KAAK9B,MAAMO,SACtBI,OAAQ,SACRC,MAAOd,EAAKc,MACZC,KAAMf,EAAKe,KACXC,MAAOhB,EAAKgB,MACZC,OAAQjB,EAAKiB,OACbC,WAAYlB,EAAKkB,WACjBC,QAASnB,EAAKmB,QACdC,SAAUpB,EAAKoB,SACfC,SAAUrB,EAAKqB,SACfC,QAAStB,EAAKsB,QACdC,KAAMvB,EAAKuB,KACX4B,GAAInD,EAAI,IACRH,OAAQG,EAAKH,SAnBrB,gD,sHAuBA,sDAAAjB,EAAA,2DAEuCoD,KAAK9B,MADhCY,EADZ,EACYA,MAAOC,EADnB,EACmBA,KAAMC,EADzB,EACyBA,MAAOI,EADhC,EACgCA,SAAUG,EAD1C,EAC0CA,KAAMF,EADhD,EACgDA,SAAUJ,EAD1D,EAC0DA,OAAQE,EADlE,EACkEA,QAC1DD,EAFR,EAEQA,WAAYI,EAFpB,EAEoBA,QAASzB,EAF7B,EAE6BA,OAEZ,MAATiB,GAA0B,IAATA,GACN,MAARC,GAAwB,IAARA,GACP,MAATC,GAA0B,IAATA,GACL,MAAZI,GAAgC,IAAZA,GACZ,MAARG,GAAwB,IAARA,GACJ,MAAZF,GAAgC,IAAZA,EAT/B,uBAUQyB,MAAM,uCAVd,iCAcUC,EAAO,CACTjC,MAAOA,EACPC,KAAMA,EACNC,MAAOA,EACPC,OAAQA,EACRC,WAAYA,EACZC,QAASA,EACTC,SAAUA,EACVC,SAAUA,EACVC,QAASA,EACTC,KAAMA,EACN4B,GAAInB,KAAK9B,MAAMiD,GACftD,OAAQA,GAGZmC,KAAKnD,SAAS,CAAEC,WAAW,IA7B/B,SA8BsBC,IAAM,CACpBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUmE,YACf/D,OAAQ,OACRG,KAAMuD,IAlCd,OAqC+B,IAPrBzD,EA9BV,QAqCYE,KAAKyD,YACTjB,KAAKrD,UACLqD,KAAKnD,SAAS,CAAC4B,UAAWuB,KAAK9B,MAAMO,aAErCqC,MAAMxD,EAAIE,KAAK0D,SACflB,KAAKnD,SAAS,CAAEC,WAAW,KA1CnC,iD,iHAqDA,4BAAAF,EAAA,6DACIoD,KAAKnD,SAAS,CAAEC,WAAW,IAD/B,SAEsBC,IAAM,CACpBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUoE,YACfhE,OAAQ,SACRG,KAAM,CACF,GAAMwC,KAAK9B,MAAMC,OAAX,OAPlB,OAW+B,IATrBb,EAFV,QAWYE,KAAKyD,YACTjB,KAAKrD,UACLqD,KAAKnD,SAAS,CAAEoB,aAAc+B,KAAK9B,MAAMD,YAAaE,OAAQ,SAE9D2C,MAAMxD,EAAIE,KAAK0D,SACflB,KAAKnD,SAAS,CAAEC,WAAW,KAhBnC,gD,4EAqBA,WAAoB,IAAD,OAAVwB,EAAU,uDAAH,EACNE,EAAQwB,KAAK9B,MAAMM,MACnBJ,EAAM4B,KAAK9B,MAAME,KAAO,GACxBkD,EAAY,CACdjE,OAAQ,MACRlB,QAASA,GAEboF,MAAMC,EAAOtE,SAAW,oBAAsBkB,EAAM,SAAWE,EAAO,UAAYE,EAAO8C,GAAWG,MAAK,SAAAC,GACrGA,EAAMC,OAAOF,MAAK,SAAAG,GACd,EAAK/E,SAAS,CACVW,KAAMoE,EAAOpE,KACbe,WAAYqD,EAAOC,MACnBxD,WAAYC,EACZR,YAAa8D,EAAO9D,YACpBc,QAAS,WAGlBkD,MAAMC,QAAQC,O,mEAGrB,WAAqBb,GAArB,iBAAAvE,EAAA,sEAC6BG,IAAM,CAC3BC,QAASC,IAAUC,SACnBC,IAAKF,IAAUgF,aACf5E,OAAQ,QAJhB,UACU6E,EADV,OAOa,IAANf,QAAkBgB,GAANhB,EAPnB,gCAQ+BpE,IAAM,CACzBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUmF,qBAAuBjB,EACtC9D,OAAQ,QAXpB,OAaiC,OALnBgF,EARd,QAaoB7E,KAAKA,WAAsC2E,GAAtBE,EAAS7E,KAAKA,MAC3CwC,KAAKnD,SAAS,CAAE4C,eAAgB4C,EAAS7E,KAAKA,KAAKuB,OAd/D,OAiBIiB,KAAKnD,SAAS,CAAE2C,YAAa0C,EAAW1E,KAAKA,OAjBjD,gD,uHAoBA,WAAkB2D,GAAlB,iBAAAvE,EAAA,sEAC0BG,IAAM,CACxBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUqF,UACfjF,OAAQ,QAJhB,UACUkF,EADV,OAOa,IAANpB,QAAkBgB,GAANhB,EAPnB,gCAQkCpE,IAAM,CAC5BC,QAASC,IAAUC,SACnBC,IAAKF,IAAUuF,kBAAoBrB,EACnC9D,OAAQ,QAXpB,OAaoC,OALtBsC,EARd,QAauBnC,KAAKA,WAAyC2E,GAAzBxC,EAAYnC,KAAKA,MACjDwC,KAAKnD,SAAS,CAAE8C,YAAaA,EAAYnC,KAAKA,KAAKuB,OAd/D,OAiBIiB,KAAKnD,SAAS,CAAE6C,SAAU6C,EAAQ/E,KAAKA,OAjB3C,gD,uHAoBA,WAAkB2D,GAAlB,iBAAAvE,EAAA,sEAC0BG,IAAM,CACxBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUwF,UACfpF,OAAQ,QAJhB,UACUqF,EADV,OAOa,IAANvB,QAAkBgB,GAANhB,EAPnB,gCAQkCpE,IAAM,CAC5BC,QAASC,IAAUC,SACnBC,IAAKF,IAAU0F,kBAAoBxB,EACnC9D,OAAQ,QAXpB,OAaoC,OALtBwC,EARd,QAauBrC,KAAKA,WAAyC2E,GAAzBtC,EAAYrC,KAAKA,MACjDwC,KAAKnD,SAAS,CAAEgD,YAAaA,EAAYrC,KAAKA,KAAKuB,OAd/D,OAiBIiB,KAAKnD,SAAS,CAAE+C,SAAU8C,EAAQlF,KAAKA,OAjB3C,gD,gFAoBA,SAAYoF,GACR5C,KAAKnD,SAAL,eAAiB+F,EAAEC,OAAO5G,KAAO2G,EAAEC,OAAOvH,U,oBAG9C,WAAU,IAAD,OACL,EACwG0E,KAAK9B,MADrGV,EAAR,EAAQA,KAAMY,EAAd,EAAcA,IAA+BoB,GAA7C,EAAmBd,YAAnB,EAAgCC,YAAhC,EAA6Ca,aACzCC,EADJ,EACIA,eAAgBC,EADpB,EACoBA,SAAUC,EAD9B,EAC8BA,YAAad,EAD3C,EAC2CA,OAAQe,EADnD,EACmDA,SAAUC,EAD7D,EAC6DA,YAAaC,EAD1E,EAC0EA,cAAeC,EADzF,EACyFA,UACzF,OAAKC,KAAK9B,MAAMpB,UAqOZ,qBAAKqE,GAAG,eAAR,SACI,sBAAKrF,UAAU,cAAf,UACI,qBAAKA,UAAU,eACf,qBAAKA,UAAU,eACf,qBAAKA,UAAU,oBAvOnB,sBAAKA,UAAU,kBAAf,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,mBAAGgH,MAAOC,EAAOC,QAAjB,SAA2BhD,KAAK9B,MAAMU,UACtC,mBAAGkE,MAAOC,EAAOE,OAAjB,SAA0BjD,KAAK9B,MAAMgF,UACrC,eAAC,IAAD,WACI,eAAC,IAAD,WACI,mBAAGpH,UAAU,wBADjB,uBAC8EqG,GAAnBnC,KAAK9B,MAAMV,MAAwC,MAAnBwC,KAAK9B,MAAMV,KAC9FwC,KAAK9B,MAAMV,KAAK6C,OAAS,EAFjC,aAE8CL,KAAK9B,MAAMJ,YAFzD,WAE8EkC,KAAK9B,MAAM6B,UAAY,EAFrG,IAGI,qBAAK+C,MAAOC,EAAOI,KAAnB,SACI,gCACI,cAAC,IAAD,CAAOL,MAAOC,EAAOK,YAAa1H,SAAU,SAACkH,GAAD,OAAO,EAAKS,UAAUT,EAAEC,OAAOvH,QAAQW,KAAK,MAAMX,MAAO8C,EAAKvC,YAAY,WACtH,cAAC,IAAD,CAAQyH,SAAO,EAACC,MAAM,UAAUT,MAAOC,EAAOS,WAAYC,KAAK,KAAKC,QAAO,uCAAE,WAAMd,GAAN,SAAAhG,EAAA,sEAAiB,EAAK+G,YAAY,OAAlC,mFAAF,sDAA3E,yBAIZ,cAAC,IAAD,UACI,eAAC,IAAD,CAAOC,YAAU,EAAjB,UACI,gCACI,+BACI,oBAAId,MAAOC,EAAOc,KAAlB,iBACA,oBAAIf,MAAOC,EAAOe,KAAlB,sBACA,oBAAIhB,MAAOC,EAAOe,KAAlB,kBACA,oBAAIhB,MAAOC,EAAOgB,KAAlB,mBACA,oBAAIjB,MAAOC,EAAOe,KAAlB,mBACA,oBAAIhB,MAAOC,EAAOe,KAAlB,oBACA,oBAAIhB,MAAOC,EAAOe,KAAlB,oBACA,oBAAIhB,MAAOC,EAAOe,KAAlB,kBACA,oBAAIhB,MAAOC,EAAOiB,GAAlB,yBAGR,qCAEgB7B,GAAR3E,EACAA,EAAKG,KAAI,SAACK,EAAMiC,GACZ,OACI,qBAAY6C,MAAOC,EAAOkB,IAA1B,UACI,oBAAInB,MAAOC,EAAOc,KAAlB,SAAyB5D,EAAI,IAC7B,oBAAI6C,MAAOC,EAAOe,KAAlB,SAAyB9F,EAAKoB,WAC9B,oBAAI0D,MAAOC,EAAOe,KAAlB,SAAyB9F,EAAKe,OAC9B,oBAAI+D,MAAOC,EAAOgB,KAAlB,SAAyB/F,EAAKc,QAC9B,oBAAIgE,MAAOC,EAAOe,KAAlB,SAAyB9F,EAAKgB,QAC9B,oBAAI8D,MAAOC,EAAOe,KAAlB,SAAyB9F,EAAKiB,SAC9B,oBAAI6D,MAAOC,EAAOe,KAAlB,SAAyB9F,EAAKH,SAC9B,oBAAIiF,MAAOC,EAAOe,KAAlB,SAAyB9F,EAAKuB,OAC9B,qBAAIuD,MAAOC,EAAOiB,GAAlB,UACI,cAAC,IAAD,CAAQlB,MAAOC,EAAOmB,KAAMZ,SAAO,EAACC,MAAM,UAAUE,KAAK,KAAKC,QAAO,uCAAE,WAAOd,GAAP,SAAAhG,EAAA,sEAAmB,EAAKuH,WAAWnG,GAAnC,mFAAF,sDAArE,oBAAkI,IAClI,cAAC,IAAD,CAAQsF,SAAO,EAACC,MAAM,SAASE,KAAK,KAAKC,QAAS,SAACd,GAAQ,EAAK7E,WAAWC,IAA3E,yBAXCiC,MAeZ,aAOG,GAAxBH,EAAcO,OAAc,GACxB,qBAAKyC,MAAO,CAAEsB,MAAO,QAASC,YAAa,OAAQC,QAAS,QAA5D,SACI,oBAAIxB,MAAOC,EAAOkB,IAAlB,SAEQnE,EAAcnC,KAAI,SAACK,EAAMiC,GACrB,OACI,6BACI,cAAC,IAAD,CAAQ6C,MAAOC,EAAOxF,WAAYgG,MAAOtD,GAAKF,EAAY,UAAY,SAAU2D,QAAS,SAAAd,GAAO,EAAK/F,SAAS,CAAEW,KAAMsC,EAAcG,GAAIF,UAAWE,KAAnJ,SAA4JA,EAAI,kBAUxM,eAAC,IAAD,CAAOsE,OAAQvE,KAAK9B,MAAMO,SAAU3C,UAAWkE,KAAKtD,MAAMZ,UAA1D,UACI,cAAC,IAAD,UAAmC,OAArBkE,KAAK9B,MAAMW,OAAX,oBACd,eAAC,IAAD,WACI,cAAC,IAAD,CACIxD,MAAM,QACNE,MAAM,QACND,MAAO0E,KAAK9B,MAAMY,MAClBjD,YAAa,QAEbH,SAAU,SAAAkH,GAAC,OAAI,EAAKlH,SAAS,QAASkH,EAAEC,OAAOvH,UAGnD,cAAC,IAAD,CACID,MAAM,OACNE,MAAM,OACND,MAAO0E,KAAK9B,MAAMa,KAClBlD,YAAa,OAEbH,SAAU,SAAAkH,GAAC,OAAI,EAAKlH,SAAS,OAAQkH,EAAEC,OAAOvH,UAIlD,cAAC,IAAD,CACID,MAAM,WACNE,MAAM,WACND,MAAO0E,KAAK9B,MAAMmB,SAClB5D,KAAM,WACNI,YAAa,WACbD,SAAoB,OAAViD,EACVnD,SAAU,SAAAkH,GAAC,OAAI,EAAKlH,SAAS,WAAYkH,EAAEC,OAAOvH,UAItD,cAAC,IAAD,CACID,MAAM,OACNE,MAAM,OACNM,YAAa,OACbP,MAAO0E,KAAK9B,MAAMqB,KAElB7D,SAAU,SAAAkH,GAAC,OAAI,EAAKlH,SAAS,OAAQkH,EAAEC,OAAOvH,UAIlD,cAAC,IAAD,CACID,MAAM,WACNE,MAAM,WACNM,YAAa,WACbP,MAAO0E,KAAK9B,MAAMkB,SAElB1D,SAAU,SAAAkH,GAAC,OAAI,EAAKlH,SAAS,WAAYkH,EAAEC,OAAOvH,UAItD,cAAC,IAAD,CACID,MAAM,QACNE,MAAM,QACND,MAAO0E,KAAK9B,MAAMc,MAClBnD,YAAa,QAEbH,SAAU,SAAAkH,GAAC,OAAI,EAAKlH,SAAS,QAASkH,EAAEC,OAAOvH,UAInD,gCACI,uBAAOwH,MAAOC,EAAOyB,UAAWC,QAAQ,MAAxC,yBACA,yBAAQ3B,MAAOC,EAAO2B,WAAYzI,KAAK,SAASP,SAAU,SAAAkH,GAAC,OAAI,EAAKlH,SAAS,SAAUkH,EAAEC,OAAOvH,QAAhG,UACA,wBAAQA,MAAO0E,KAAK9B,MAAMe,OAA1B,SAAwD,IAArBe,KAAK9B,MAAMe,OAAX,wBAAoDe,KAAK9B,MAAMe,SAC9F,wBAAQ3D,MAAO,MAAf,iBACA,wBAAQA,MAAO,UAAf,2BAIR,gCACI,uBAAOwH,MAAOC,EAAOyB,UAAWC,QAAQ,MAAxC,0BACA,yBAAQ3B,MAAOC,EAAO2B,WAAYzI,KAAK,aAAaP,SAAU,SAAAkH,GAAC,OAAI,EAAKlH,SAAS,aAAckH,EAAEC,OAAOvH,QAAxG,UACI,wBAAQA,MAAO0E,KAAK9B,MAAMgB,WAA1B,mBAEIM,EAAY7B,KAAI,SAACK,EAAMiC,GACnB,OAAGjC,EAAKe,MAAQU,EAER,wBAAQkF,UAAQ,EAACrJ,MAAO0C,EAAK4G,IAA7B,SAAmC5G,EAAKe,OAIxC,wBAAQzD,MAAO0C,EAAK4G,IAApB,SAA0B5G,EAAKe,gBAQvD,gCACI,uBAAO+D,MAAOC,EAAOyB,UAAWC,QAAQ,MAAxC,uBACA,yBAAQ3B,MAAOC,EAAO2B,WAAYzI,KAAK,UAAUP,SAAU,SAAAkH,GAAC,OAAI,EAAKlH,SAAS,UAAWkH,EAAEC,OAAOvH,QAAlG,UACI,wBAAQA,MAAO0E,KAAK9B,MAAMiB,QAA1B,mBAEIS,EAASjC,KAAI,SAACK,EAAMiC,GAChB,OAAGjC,EAAKe,MAAQc,EAER,wBAAQ8E,UAAQ,EAACrJ,MAAO0C,EAAK4G,IAA7B,SAAmC5G,EAAKe,OAIxC,wBAAQzD,MAAO0C,EAAK4G,IAApB,SAA0B5G,EAAKe,gBAQvD,gCACI,uBAAO+D,MAAOC,EAAOyB,UAAWC,QAAQ,MAAxC,uBACA,yBAAQ3B,MAAOC,EAAO2B,WAAYzI,KAAK,UAAUP,SAAU,SAAAkH,GAAC,OAAI,EAAKlH,SAAS,UAAWkH,EAAEC,OAAOvH,QAAlG,UACI,wBAAQA,MAAO0E,KAAK9B,MAAMoB,QAA1B,mBAEII,EAAS/B,KAAI,SAACK,EAAMiC,GAChB,OAAGjC,EAAKe,MAAQY,EAER,wBAAQgF,UAAQ,EAACrJ,MAAO0C,EAAK4G,IAA7B,SAAmC5G,EAAKe,OAIxC,wBAAQzD,MAAO0C,EAAK4G,IAApB,SAA0B5G,EAAKe,mBAQ3D,eAAC,IAAD,WACI,cAAC,IAAD,CAAQwE,MAAM,UAAUG,QAAS,SAAAd,GAA6B,QAAtB,EAAK1E,MAAMW,OAAmB,EAAKgG,UAAY,EAAKC,cAAgBC,SAAU/E,KAAK9B,MAAMpB,UAAjI,kBAA0J,IAC1J,cAAC,IAAD,CAAQyG,MAAM,YAAYG,QAAS,SAAAd,GAAC,OAAI,EAAKe,YAAY,QAAzD,0BAIR,eAAC,IAAD,CAAOY,OAAQvE,KAAK9B,MAAMD,YAAa+G,OAAQ,SAAApC,GAAC,OAAI,EAAK/F,SAAS,CAAEoB,aAAc,EAAKC,MAAMD,YAAaE,OAAQ,QAASrC,UAAWkE,KAAKtD,MAAMZ,UAAjJ,UACI,cAAC,IAAD,CAAakJ,OAAQ,SAAApC,GAAC,OAAI,EAAK/F,SAAS,CAAEoB,aAAc,EAAKC,MAAMD,YAAaE,OAAQ,QAAxF,oBACA,cAAC,IAAD,UACI,uBAAOsG,QAAQ,MAAf,+CAAqDzE,KAAK9B,MAAMC,OAAS6B,KAAK9B,MAAMC,OAAOW,MAAQ,GAAnG,WAEJ,eAAC,IAAD,WACI,cAAC,IAAD,CAAQyE,MAAM,UAAUG,QAAS,SAAAd,GAAC,OAAI,EAAKzE,UAAU4G,SAAU/E,KAAK9B,MAAMpB,UAA1E,oBAAqG,IACrG,cAAC,IAAD,CAAQyG,MAAM,YAAYG,QAAS,SAAAd,GAAC,OAAI,EAAK/F,SAAS,CAAEoB,aAAc,EAAKC,MAAMD,YAAaE,OAAQ,QAAtG,iC,GAvkBR8G,aAylBdlC,EAAM,aACRc,KAAM,CACFqB,MAAO,KACPd,MAAO,OACPe,OAAQ,QAEZ5H,WAAY,CACR8G,YAAa,OAEjBG,UAAW,CACPU,MAAO,KAEXR,WAAY,CACRQ,MAAO,KAEXtI,EAAG,CACCwI,eAAgB,QAEpB5B,WAAY,CACRY,MAAO,QACPiB,UAAW,OAEfC,QAAS,CACLJ,MAAO,QAEXK,OAAQ,CACJC,UAAW,UAEfC,MAAO,CACHN,OAAQ,QACRO,UAAW,QAEf5B,KAAM,CACFoB,MAAO,MACPd,MAAO,OACPe,OAAQ,QAEZpB,KAAM,CACFmB,MAAO,MACPd,MAAO,OACPe,OAAQ,QAEZnB,GAAI,CACAkB,MAAO,MACPd,MAAO,OACPe,OAAQ,QAEZlB,IAAK,CACDG,MAAO,OACPc,MAAO,QAEXlC,QAAS,CACLO,MAAO,SAEXN,OAAQ,CACJM,MAAO,OAEXW,KAAM,CACFyB,WAAY,OAEhBxC,KAAM,CACFiB,MAAO,QACPC,YAAa,MACba,MAAO,SAEX9B,YAAa,CACT8B,MAAO,QACPU,QAAS,gBAEbC,WAAY,CACRtC,MAAO,SAEXuC,YAAa,CACTvC,MAAO,OAEXwC,eAAgB,CACZb,MAAO,SAEXc,MAAO,CACHd,MAAO,QACPC,OAAQ,QACRc,aAAc,YAjFV,OAmFF,CACFC,aAAc,QAIPzJ,a","file":"static/js/17.88d6ca5d.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder }) => {\n  return (\n    <div className={classnames('form-group', { 'has-error': error })}>\n      <label className=\"control-label\">{label}</label>\n      <input\n        onChange={onChange}\n        onBlur={checkUserExists}\n        value={value}\n        type={type}\n        name={field}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        className=\"form-control\"\n      />\n    {error && <span className=\"help-block\">{error}</span>}\n    </div>  );\n}\n\nTextFieldGroup.propTypes = {\n  field: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checkUserExists: PropTypes.func\n}\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextFieldGroup;\n","export default {\n  \"BASE_URL\" : \"http://thanhvien.applamdep.com\",\n\n  \"LIST_USER\" : \"/api/list-user\",\n  \"LIST_USER_WITH_ID\" : \"/api/list-user?id=\",\n  \"ADD_USER\" : \"/api/add-user\",\n  \"UPDATE_USER\" : \"/api/update-user\",\n  \"DELETE_USER\" : \"/api/delete-user\",\n\n  \"LIST_TYPEKEY\" : \"/api/list-typekey\",\n  \"LIST_TYPEKEY_WITH_ID\" : \"/api/list-typekey?id=\",\n  \"ADD_TYPEKEY\" : \"/api/add-typekey\",\n  \"UPDATE_TYPEKEY\" : \"/api/update-typekey\",\n  \"DELETE_TYPEKEY\" : \"/api/delete-typekey\",\n\n  \"LIST_ROLE\" : \"/api/list-role\",\n  \"LIST_ROLE_WITH_ID\" : \"/api/list-role?id=\",\n  \"ADD_ROLE\" : \"/api/add-role\",\n  \"UPDATE_ROLE\" : \"/api/update-role\",\n  \"DELETE_ROLE\" : \"/api/delete-role\",\n\n  \"LIST_SALELOG\" : \"/api/list-salelog\",\n  \"LIST_SALELOG_WITH_ID\" : \"/api/list-salelog?id=\",\n  \"ADD_SALELOG\" : \"/api/add-salelog\",\n  \"UPDATE_SALELOG\" : \"/api/update-salelog\",\n  \"DELETE_SALELOG\" : \"/api/delete-salelog\",\n\n  \"LIST_SALE\" : \"/api/list-sale\",\n  \"LIST_SALE_WITH_ID\" : \"/api/list-sale?id=\",\n  \"ADD_SALE\" : \"/api/add-sale\",\n  \"UPDATE_SALE\" : \"/api/update-sale\",\n  \"DELETE_SALE\" : \"/api/delete-sale\",\n\n  \"LIST_KEYORDER\" : \"/api/list-keyorder\",\n  \"LIST_KEYORDER_WITH_ID\" : \"/api/list-keyorder?id=\",\n  \"ADD_KEYORDER\" : \"/api/add-keyorder\",\n  \"UPDATE_KEYORDER\" : \"/api/update-keyorder\",\n  \"DELETE_KEYORDER\" : \"/api/delete-keyorder\",\n\n  \"LIST_KEY\" : \"/api/list-key\",\n  \"LIST_KEY_WITH_ID\" : \"/api/list-key?id=\",\n  \"ADD_KEY\" : \"/api/add-key\",\n  \"UPDATE_KEY\" : \"/api/update-key\",\n  \"DELETE_KEY\" : \"/api/delete-key\",\n\n  \"LIST_COMPANY\" : \"/api/list-company\",\n  \"LIST_COMPANY_WITH_ID\" : \"/api/list-company?id=\",\n  \"ADD_COMPANY\" : \"/api/add-company\",\n  \"UPDATE_COMPANY\" : \"/api/update-company\",\n  \"DELETE_COMPANY\" : \"/api/delete-company\",\n\n};\n","import React, { Component } from 'react';\n\nimport {\n    Card,\n    CardBody,\n    CardHeader,\n    Col,\n    Row,\n    Table, Button, Input,\n    ModalHeader, ModalBody, ModalFooter, Modal,\n    Alert\n} from 'reactstrap';\nimport 'moment-timezone';\nimport Constants from \"./../../../contants/contants\";\nimport TextFieldGroup from \"../../../views/common/TextFieldGroup\";\nimport axios from 'axios'\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\nclass Users extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            key: '',\n            activePage: 1,\n            page: 1,\n            itemsCount: 0,\n            limit: 20,\n            totalActive: 0,\n            modalCom: false,\n            viewingUser: {},\n            communities: [],\n            updated: '',\n            dataApi: [],\n            action: 'new',\n            Email: '',\n            Name: '',\n            Phone: '',\n            Gender: 'Nam',\n            Company_Id: '',\n            Role_Id: '',\n            UserName: '',\n            Password: '',\n            Sale_Id: '',\n            Code: '',\n            Status: '',\n            modalDelete: false,\n            delete: null,\n            dataCompany: [],\n            currentCompany: '',\n            dataSale: [],\n            currentSale: '',\n            dataRole: [],\n            currentRole: '',\n            arrPagination: [],\n            indexPage: 0\n        };\n    }\n    async componentDidMount() {\n        this.getData()\n    }\n\n    pagination(dataApi) {\n        var i, j, temparray, chunk = 5;\n        var arrTotal = [];\n        for (i = 0, j = dataApi.length; i < j; i += chunk) {\n            temparray = dataApi.slice(i, i + chunk);\n            arrTotal.push(temparray);\n        }\n        this.setState({ arrPagination: arrTotal, data: arrTotal[this.state.indexPage] });\n    }\n\n    getData = async () => {\n        this.setState({ isLoading: true });\n        const res = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.LIST_USER,\n            method: 'GET',\n        });\n        this.pagination(res.data.data);\n        this.setState({ dataApi: res.data.data });\n\n        let active = 0\n\n        res.data.data.map(val => {\n            if (val.Status == \"Actived\") {\n                active = active + 1\n            }\n        })\n\n        this.setState({ isLoading: false, totalActive: active });\n    }\n\n    searchKey(key) {\n        const { indexPage } = this.state;\n        this.setState({ key: key })\n\n        if (key != '') {\n            let d = []\n            this.state.dataApi.map(val => {\n                if (val.Name.toLocaleUpperCase().includes(key.toLocaleUpperCase()) || val.Email.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n                    d.push(val)\n                }\n            })\n            let active = 0\n\n            d.map(val => {\n                if (val.Status == \"Actived\") {\n                    active = active + 1\n                }\n            })\n\n            this.setState({ data: d, totalActive: active })\n        } else {\n            let active = 0\n\n            this.state.dataApi.map(val => {\n                if (val.Status == \"Actived\") {\n                    active = active + 1\n                }\n            })\n\n            this.setState({ data: this.state.arrPagination[indexPage], totalActive: active })\n        }\n    }\n\n    async toggleModal(key) {\n        await this.getCompanyData()\n        await this.getSaleData()\n        await this.getRoleData()\n        if (key == 'new') {\n            this.setState({\n                modalCom: !this.state.modalCom,\n                action: key,\n                Email: '',\n                Name: '',\n                Phone: '',\n                Gender: 'Nam',\n                Company_Id: '',\n                Role_Id: '',\n                UserName: '',\n                Password: '',\n                Sale_Id: '',\n                Code: ''\n            })\n        }\n    }\n\n    onChange(key, val) {\n        this.setState({ [key]: val })\n    }\n\n    async addUser() {\n        const { Email, Name, Phone, UserName, Code, Password, Gender, Role_Id, Company_Id, Sale_Id } = this.state\n\n        if (Email == null || Email == ''\n            || Name == null || Name == ''\n            || Phone == null || Phone == ''\n            || UserName == null || UserName == ''\n            || Code == null || Code == ''\n            || Password == null || Password == '') {\n            alert(\"Please fill in all the requirements\");\n            return\n        }\n\n        const body = {\n            Email: Email,\n            Name: Name,\n            Phone: Phone,\n            Gender: Gender,\n            Company_Id: Company_Id,\n            Role_Id: Role_Id,\n            UserName: UserName,\n            Password: Password,\n            Sale_Id: Sale_Id,\n            Code: Code\n        }\n\n        this.setState({ isLoading: true });\n        const res = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.ADD_USER,\n            method: 'PUT',\n            data: body\n        });\n\n        if (res.data.is_success == true) {\n            this.getData();\n            this.setState({modalCom: !this.state.modalCom})\n        } else {\n            alert(res.data.message);\n            this.setState({ isLoading: false });\n        }\n    }\n\n    async openUpdate(item) {\n        await this.getCompanyData(item.Company_Id)\n        await this.getSaleData(item.Sale_Id)\n        await this.getRoleData(item.Role_Id)\n\n        this.setState({\n            modalCom: !this.state.modalCom,\n            action: \"update\",\n            Email: item.Email,\n            Name: item.Name,\n            Phone: item.Phone,\n            Gender: item.Gender,\n            Company_Id: item.Company_Id,\n            Role_Id: item.Role_Id,\n            UserName: item.UserName,\n            Password: item.Password,\n            Sale_Id: item.Sale_Id,\n            Code: item.Code,\n            id: item['_id'],\n            Status: item.Status\n        })\n    }\n\n    async updateUser() {\n        const { Email, Name, Phone, UserName, Code, Password, Gender, Role_Id,\n            Company_Id, Sale_Id, Status} = this.state\n\n        if (Email == null || Email == ''\n            || Name == null || Name == ''\n            || Phone == null || Phone == ''\n            || UserName == null || UserName == ''\n            || Code == null || Code == ''\n            || Password == null || Password == '') {\n            alert(\"Please fill in all the requirements\");\n            return\n        }\n\n        const body = {\n            Email: Email,\n            Name: Name,\n            Phone: Phone,\n            Gender: Gender,\n            Company_Id: Company_Id,\n            Role_Id: Role_Id,\n            UserName: UserName,\n            Password: Password,\n            Sale_Id: Sale_Id,\n            Code: Code,\n            id: this.state.id,\n            Status: Status\n        }\n\n        this.setState({ isLoading: true });\n        const res = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.UPDATE_USER,\n            method: 'POST',\n            data: body\n        });\n\n        if (res.data.is_success == true) {\n            this.getData();\n            this.setState({modalCom: !this.state.modalCom})\n        } else {\n            alert(res.data.message);\n            this.setState({ isLoading: false });\n        }\n    }\n\n    openDelete = (item) => {\n        this.setState({\n            modalDelete: !this.state.modalDelete,\n            delete: item\n        })\n    }\n\n    async delete() {\n        this.setState({ isLoading: true });\n        const res = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.DELETE_USER,\n            method: 'DELETE',\n            data: {\n                \"id\": this.state.delete['_id']\n            }\n        });\n\n        if (res.data.is_success == true) {\n            this.getData();\n            this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n        } else {\n            alert(res.data.message);\n            this.setState({ isLoading: false });\n        }\n\n    }\n\n    getUsers(page = 1) {\n        const limit = this.state.limit;\n        const key = this.state.key || '';\n        const fetchData = {\n            method: 'GET',\n            headers: headers\n        };\n        fetch(global.BASE_URL + '/admin/users?key=' + key + '&page=' + page + '&limit=' + limit, fetchData).then(users => {\n            users.json().then(result => {\n                this.setState({\n                    data: result.data,\n                    itemsCount: result.total,\n                    activePage: page,\n                    totalActive: result.totalActive,\n                    updated: '',\n                });\n            })\n        }).catch(console.log);\n    }\n\n    async getCompanyData(id) {\n        const resCompany = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.LIST_COMPANY,\n            method: 'GET',\n        });\n\n        if(id != '' || id != undefined){\n            const currentC = await axios({\n                baseURL: Constants.BASE_URL,\n                url: Constants.LIST_COMPANY_WITH_ID + id,\n                method: 'GET',\n            });\n            if(currentC.data.data != null || currentC.data.data != undefined){\n                this.setState({ currentCompany: currentC.data.data.Name });\n            }\n        }\n        this.setState({ dataCompany: resCompany.data.data });\n    }\n\n    async getSaleData(id) {\n        const resSale = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.LIST_SALE,\n            method: 'GET',\n        });\n\n        if(id != '' || id != undefined){\n            const currentSale = await axios({\n                baseURL: Constants.BASE_URL,\n                url: Constants.LIST_SALE_WITH_ID + id,\n                method: 'GET',\n            });\n            if(currentSale.data.data != null || currentSale.data.data != undefined){\n                this.setState({ currentSale: currentSale.data.data.Name });\n            }\n        }\n        this.setState({ dataSale: resSale.data.data });\n    }\n\n    async getRoleData(id) {\n        const resRole = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.LIST_ROLE,\n            method: 'GET',\n        });\n\n        if(id != '' || id != undefined){\n            const currentRole = await axios({\n                baseURL: Constants.BASE_URL,\n                url: Constants.LIST_ROLE_WITH_ID + id,\n                method: 'GET',\n            });\n            if(currentRole.data.data != null || currentRole.data.data != undefined){\n                this.setState({ currentRole: currentRole.data.data.Name });\n            }\n        }\n        this.setState({ dataRole: resRole.data.data });\n    }\n\n    inputChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        const { data, key, viewingUser, communities, dataCompany,\n            currentCompany, dataSale, currentSale, action, dataRole, currentRole, arrPagination, indexPage  } = this.state;\n        if (!this.state.isLoading) {\n            return (\n                <div className=\"animated fadeIn\">\n                    <Row>\n                        <Col>\n                            <p style={styles.success}>{this.state.updated}</p>\n                            <p style={styles.danger}>{this.state.deleted}</p>\n                            <Card>\n                                <CardHeader>\n                                    <i className=\"fa fa-align-justify\"></i> USERS (Total: {this.state.data != undefined || this.state.data != null ?\n                                        this.state.data.length : 0}, Active: {this.state.totalActive}, Page: {this.state.indexPage + 1})\n                                    <div style={styles.tags}>\n                                        <div>\n                                            <Input style={styles.searchInput} onChange={(e) => this.searchKey(e.target.value)} name=\"key\" value={key} placeholder=\"Search\" />\n                                            <Button outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={async e => await this.toggleModal(\"new\")}>Add</Button>\n                                        </div>\n                                    </div>\n                                </CardHeader>\n                                <CardBody>\n                                    <Table responsive>\n                                        <thead>\n                                            <tr>\n                                                <th style={styles.wa10}>No.</th>\n                                                <th style={styles.wh12}>Username</th>\n                                                <th style={styles.wh12}>Name</th>\n                                                <th style={styles.wh15}>Email</th>\n                                                <th style={styles.wh12}>Phone</th>\n                                                <th style={styles.wh12}>Gender</th>\n                                                <th style={styles.wh12}>Status</th>\n                                                <th style={styles.wh12}>Code</th>\n                                                <th style={styles.w5}>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                data != undefined ?\n                                                data.map((item, i) => {\n                                                    return (\n                                                        <tr key={i} style={styles.row}>\n                                                            <td style={styles.wa10}>{i + 1}</td>\n                                                            <td style={styles.wh12}>{item.UserName}</td>\n                                                            <td style={styles.wh12}>{item.Name}</td>\n                                                            <td style={styles.wh15}>{item.Email}</td>\n                                                            <td style={styles.wh12}>{item.Phone}</td>\n                                                            <td style={styles.wh12}>{item.Gender}</td>\n                                                            <td style={styles.wh12}>{item.Status}</td>\n                                                            <td style={styles.wh12}>{item.Code}</td>\n                                                            <td style={styles.w5}>\n                                                                <Button style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >Update</Button>{' '}\n                                                                <Button outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>Delete</Button>\n                                                            </td>\n                                                        </tr>\n                                                    );\n                                                }) : \"\"\n                                            }\n                                        </tbody>\n                                    </Table>\n                                </CardBody>\n                            </Card>\n                            {\n                                arrPagination.length == 1 ? \"\" :\n                                    <div style={{ float: 'right', marginRight: '10px', padding: '10px'  }}>\n                                        <tr style={styles.row}>\n                                            {\n                                                arrPagination.map((item, i) => {\n                                                    return (\n                                                        <td>\n                                                            <Button style={styles.pagination} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ data: arrPagination[i], indexPage: i }) }}>{i + 1}</Button>\n                                                        </td>\n                                                    );\n                                                })\n                                            }\n                                        </tr>\n                                    </div>\n                            }\n                        </Col>\n                    </Row>\n                    <Modal isOpen={this.state.modalCom} className={this.props.className}>\n                        <ModalHeader>{this.state.action == 'new' ? `Create` : `Update`}</ModalHeader>\n                        <ModalBody>\n                            <TextFieldGroup\n                                field=\"Email\"\n                                label=\"Email\"\n                                value={this.state.Email}\n                                placeholder={\"Email\"}\n                                // error={errors.title}\n                                onChange={e => this.onChange(\"Email\", e.target.value)}\n                            // rows=\"5\"\n                            />\n                            <TextFieldGroup\n                                field=\"Name\"\n                                label=\"Name\"\n                                value={this.state.Name}\n                                placeholder={\"Name\"}\n                                // error={errors.title}\n                                onChange={e => this.onChange(\"Name\", e.target.value)}\n                            // rows=\"5\"\n                            />\n\n                            <TextFieldGroup\n                                field=\"Password\"\n                                label=\"Password\"\n                                value={this.state.Password}\n                                type={\"password\"}\n                                placeholder={\"Password\"}\n                                readOnly={action == 'new' ? false : true}\n                                onChange={e => this.onChange(\"Password\", e.target.value)}\n                            // rows=\"5\"\n                            />\n\n                            <TextFieldGroup\n                                field=\"Code\"\n                                label=\"Code\"\n                                placeholder={\"Code\"}\n                                value={this.state.Code}\n                                // error={errors.title}\n                                onChange={e => this.onChange(\"Code\", e.target.value)}\n                            // rows=\"5\"\n                            />\n\n                            <TextFieldGroup\n                                field=\"UserName\"\n                                label=\"UserName\"\n                                placeholder={\"Username\"}\n                                value={this.state.UserName}\n                                // error={errors.title}\n                                onChange={e => this.onChange(\"UserName\", e.target.value)}\n                            // rows=\"5\"\n                            />\n\n                            <TextFieldGroup\n                                field=\"Phone\"\n                                label=\"Phone\"\n                                value={this.state.Phone}\n                                placeholder={\"Phone\"}\n                                // error={errors.title}\n                                onChange={e => this.onChange(\"Phone\", e.target.value)}\n                            // rows=\"5\"\n                            />\n\n                            <div>\n                                <label style={styles.flexLabel} htmlFor=\"tag\">Gender:    </label>\n                                <select style={styles.flexOption} name=\"Gender\" onChange={e => this.onChange(\"Gender\", e.target.value)}>\n                                <option value={this.state.Gender}>{this.state.Gender == '' ? ` - - - - - - - - - - ` : this.state.Gender}</option>\n                                    <option value={'Nam'}>Nam</option>\n                                    <option value={'Nữ'}>Nữ</option>\n                                </select>\n                            </div>\n\n                            <div>\n                                <label style={styles.flexLabel} htmlFor=\"tag\">Company:    </label>\n                                <select style={styles.flexOption} name=\"Company_Id\" onChange={e => this.onChange(\"Company_Id\", e.target.value)}>\n                                    <option value={this.state.Company_Id}>-----</option>\n                                    {\n                                        dataCompany.map((item, i) => {\n                                            if(item.Name == currentCompany){\n                                                return (\n                                                    <option selected value={item._id}>{item.Name}</option>\n                                                );\n                                            } else {\n                                                return (\n                                                    <option value={item._id}>{item.Name}</option>\n                                                );\n                                            }\n                                        })\n                                    }\n                                </select>\n                            </div>\n\n                            <div>\n                                <label style={styles.flexLabel} htmlFor=\"tag\">Role:    </label>\n                                <select style={styles.flexOption} name=\"Role_Id\" onChange={e => this.onChange(\"Role_Id\", e.target.value)}>\n                                    <option value={this.state.Role_Id}>-----</option>\n                                    {\n                                        dataRole.map((item, i) => {\n                                            if(item.Name == currentRole){\n                                                return (\n                                                    <option selected value={item._id}>{item.Name}</option>\n                                                );\n                                            } else {\n                                                return (\n                                                    <option value={item._id}>{item.Name}</option>\n                                                );\n                                            }\n                                        })\n                                    }\n                                </select>\n                            </div>\n\n                            <div>\n                                <label style={styles.flexLabel} htmlFor=\"tag\">Sale:    </label>\n                                <select style={styles.flexOption} name=\"Sale_Id\" onChange={e => this.onChange(\"Sale_Id\", e.target.value)}>\n                                    <option value={this.state.Sale_Id}>-----</option>\n                                    {\n                                        dataSale.map((item, i) => {\n                                            if(item.Name == currentSale){\n                                                return (\n                                                    <option selected value={item._id}>{item.Name}</option>\n                                                );\n                                            } else {\n                                                return (\n                                                    <option value={item._id}>{item.Name}</option>\n                                                );\n                                            }\n                                        })\n                                    }\n                                </select>\n                            </div>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"primary\" onClick={e => { this.state.action === 'new' ? this.addUser() : this.updateUser() }} disabled={this.state.isLoading}>Save</Button>{' '}\n                            <Button color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Cancel</Button>\n                        </ModalFooter>\n                    </Modal>\n\n                    <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n                        <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Delete`}</ModalHeader>\n                        <ModalBody>\n                            <label htmlFor=\"tag\">{`Do you want to delete user \"${this.state.delete ? this.state.delete.Email : ''}\" ?`}</label>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Delete</Button>{' '}\n                            <Button color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Cancel</Button>\n                        </ModalFooter>\n                    </Modal>\n                </div>\n            );\n        }\n        return (\n            <div id=\"page-loading\">\n                <div className=\"three-balls\">\n                    <div className=\"ball ball1\"></div>\n                    <div className=\"ball ball2\"></div>\n                    <div className=\"ball ball3\"></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    wa10: {\n        width: \"5%\",\n        float: \"left\",\n        height: \"80px\"\n    },\n    pagination: {\n        marginRight: '5px'\n    },\n    flexLabel: {\n        width: 100\n    },\n    flexOption: {\n        width: 300\n    },\n    a: {\n        textDecoration: 'none'\n    },\n    floatRight: {\n        float: \"right\",\n        marginTop: '3px'\n    },\n    spinner: {\n        width: \"30px\"\n    },\n    center: {\n        textAlign: \"center\"\n    },\n    tbody: {\n        height: \"380px\",\n        overflowY: \"auto\"\n    },\n    wh12: {\n        width: \"10%\",\n        float: \"left\",\n        height: \"80px\"\n    },\n    wh15: {\n        width: \"15%\",\n        float: \"left\",\n        height: \"80px\"\n    },\n    w5: {\n        width: \"20%\",\n        float: \"left\",\n        height: \"80px\"\n    },\n    row: {\n        float: \"left\",\n        width: \"100%\"\n    },\n    success: {\n        color: 'green'\n    },\n    danger: {\n        color: 'red'\n    },\n    mgl5: {\n        marginLeft: '5px'\n    },\n    tags: {\n        float: \"right\",\n        marginRight: \"5px\",\n        width: \"250px\"\n    },\n    searchInput: {\n        width: \"190px\",\n        display: 'inline-block',\n    },\n    userActive: {\n        color: 'green'\n    },\n    userPending: {\n        color: 'red'\n    },\n    nagemonNameCol: {\n        width: '328px'\n    },\n    image: {\n        width: '100px',\n        height: '100px',\n        borderRadius: '99999px'\n    },\n    mgl5: {\n        marginBottom: '0px'\n    }\n}\n\nexport default Users;\n"],"sourceRoot":""}