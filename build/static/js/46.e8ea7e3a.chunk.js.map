{"version":3,"sources":["views/base/tables/Notification/NotificationThemplate.js","assets/styles/styles.js"],"names":["NotificationThemplate","props","getData","a","companyid","state","setState","isLoading","axios","baseURL","Constants","BASE_URL","url","LIST_NOTIFICATION_TEMPLATE","data","company_id","method","resLocation","val","pagination","dataApi","getDataNotificationType","LIST_NOTIFICATION_TYPE","arrTempOptionCategory","i","length","push","value","code","label","name","dataType","arrOptionType","handleChangeCategory","newValue","actionMeta","objTypeNotification","console","log","openDelete","item","modalDelete","id","_id","key","totalActive","modalCom","updated","hidden","action","content","delete","arrPagination","indexPage","token","Authorization","localStorage","getItem","user","this","arr","JSON","parse","window","location","hash","isHidden","href","j","temparray","arrTotal","slice","d","map","toLocaleUpperCase","includes","active","Status","e","name_action","target","searchKey","alert","body","ADD_NOTIFICATION_TEMPLATE","status","I","element","index","findIndex","UPDATE_NOTIFICATION_TEMPLATE","DELETE_NOTIFICATION_TEMPLATE","className","css","override","size","color","loading","speedMultiplier","style","styles","tags","sm","lg","searchInput","onChange","actionSearch","placeholder","width","marginTop","onClick","resetSearch","outline","floatRight","toggleModal","ble","colSpan","undefined","mgl5","openUpdate","float","count","v","isOpen","md","xm","lx","isClearable","options","editor","ClassicEditor","event","addNotificationThemplate","updateNotificationThemplate","disabled","toggle","htmlFor","Component","marginRight","flexLabel","flexOption","textDecoration","spinner","center","textAlign","tbody","height","overflowY","wh25","w5","wa10","row","success","danger","marginLeft","display","userActive","userPending","nagemonNameCol","image","borderRadius"],"mappings":"ghBAgCMA,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA4DRC,QA7DmB,sBA6DT,gCAAAC,EAAA,6DACAC,EAAc,EAAKC,MAAnBD,UACR,EAAKE,SAAS,CAAEC,WAAW,IAFnB,SAGkBC,IAAM,CAC9BC,QAASC,IAAUC,SACnBC,IAAKF,IAAUG,2BACfC,KAAM,CACJC,WAAYX,GAEdY,OAAQ,SATF,OAGFC,EAHE,OAYJC,EAAMD,EAAYH,KAAKA,KAC3B,EAAKK,WAAWD,GAChB,EAAKZ,SAAS,CAAEc,QAASF,EAAKX,WAAW,IAdjC,2CA7DS,EA8EnBc,wBA9EmB,sBA8EO,oCAAAlB,EAAA,6DAChBC,EAAc,EAAKC,MAAnBD,UADgB,SAEEI,IAAM,CAC9BC,QAASC,IAAUC,SACnBC,IAAKF,IAAUY,uBACfR,KAAM,CACJC,WAAYX,GAEdY,OAAQ,SARc,OAaxB,IAXMC,EAFkB,OAWpBC,EAAMD,EAAYH,KAAKA,KACrBS,EAAwB,GACrBC,EAAI,EAAGA,EAAIN,EAAIO,OAAQD,IAC9BD,EAAsBG,KAAK,CACzBC,MAAOT,EAAIM,GAAGI,KAAMC,MAAOX,EAAIM,GAAGM,OAGtC,EAAKxB,SAAS,CAAEyB,SAAUb,EAAKc,cAAeT,IAlBtB,2CA9EP,EAmGnBU,qBAAuB,SAACC,EAAUC,GAChC,EAAK7B,SAAS,CAAE8B,oBAAqBF,EAAUN,KAAMM,EAASP,QAC9DU,QAAQC,IAAIJ,IArGK,EA4PnBK,WAAa,SAACC,GACZ,EAAKlC,SAAS,CACZmC,aAAc,EAAKpC,MAAMoC,YACzBC,GAAIF,EAAKG,OA7PX,EAAKtC,MAAQ,CACXS,KAAM,GACN8B,IAAK,GACLC,YAAa,EACbC,UAAU,EACVC,QAAS,GACT3B,QAAS,GACT4B,QAAQ,EACRC,OAAQ,MACRrB,KAAM,GACNsB,QAAS,GACTT,aAAa,EACbU,OAAQ,KACRC,cAAe,GACfC,UAAW,EACXC,MAAO,CAAEC,cAAc,UAAD,OAAYC,aAAaC,QAAQ,WACvDC,KAAMF,aAAaC,QAAQ,QAC3BlD,WAAW,EACXH,UAAWoD,aAAaC,QAAQ,cAChC1B,SAAU,GACVK,oBAAqB,GACrBJ,cAAe,IAvBA,E,4FA0BnB,8BAAA7B,EAAA,sDAKE,IAHAwD,KAAKzD,UACLyD,KAAKtC,0BACDuC,EAAMC,KAAKC,MAAMN,aAAaC,QAAQ,QACjCjC,EAAI,EAAGA,EAAIoC,EAAInC,OAAQD,IAC1BoC,EAAIpC,GAAGZ,KAAOmD,OAAOC,SAASC,MACT,GAAnBL,EAAIpC,GAAG0C,WACTH,OAAOC,SAASG,KAAO,MAR/B,gD,8EAcA,SAAW/C,GACT,IAAII,EAAG4C,EAAGC,EACNC,EAAW,GACf,IAAK9C,EAAI,EAAG4C,EAAIhD,EAAQK,OAAQD,EAAI4C,EAAG5C,GAFV,EAG3B6C,EAAYjD,EAAQmD,MAAM/C,EAAGA,EAHF,GAI3B8C,EAAS5C,KAAK2C,GAGO,GAAnBC,EAAS7C,OACXkC,KAAKrD,SAAS,CACZ0C,QAAQ,IAGVW,KAAKrD,SAAS,CACZ0C,QAAQ,IAIZW,KAAKrD,SAAS,CAAE8C,cAAekB,EAAUxD,KAAMwD,EAAS,O,uBA8C1D,WACE,MAA2BX,KAAKtD,MAAxBgD,EAAR,EAAQA,UAAWT,EAAnB,EAAmBA,IAGnB,GAAW,IAAPA,EAAW,CACb,IAAI4B,EAAI,GACRb,KAAKtD,MAAMe,QAAQqD,KAAI,SAAAvD,GACjBA,EAAIgC,QAAQwB,oBAAoBC,SAAS/B,EAAI8B,sBAE/CF,EAAE9C,KAAKR,MAGX,IAAI0D,EAAS,EAEbJ,EAAEC,KAAI,SAAAvD,GACc,WAAdA,EAAI2D,SACND,GAAkB,MAItBjB,KAAKrD,SAAS,CAAEQ,KAAM0D,EAAG3B,YAAa+B,QACjC,CACL,IAAIA,EAAS,EAEbjB,KAAKtD,MAAMe,QAAQqD,KAAI,SAAAvD,GACH,WAAdA,EAAI2D,SACND,GAAkB,MAItBjB,KAAKrD,SAAS,CAAEQ,KAAM6C,KAAKtD,MAAM+C,cAAcC,GAAYR,YAAa+B,O,0BAI5E,SAAaE,EAAGC,GAAc,IAAD,OAC3BpB,KAAKrD,SAAL,eACGyE,EAAcD,EAAEE,OAAOrD,QACvB,WACD,EAAKsD,iB,yBAIT,WAAe,IAAD,OACZtB,KAAKrD,SAAS,CACZsC,IAAK,KACJ,WACD,EAAKqC,iB,gEAIT,WAAkBrC,GAAlB,SAAAzC,EAAA,sDACa,OAAPyC,GACFe,KAAKrD,SAAS,CACZwC,UAAWa,KAAKtD,MAAMyC,SACtBG,OAAQL,EACRhB,KAAM,GACNsB,QAAS,KANf,gD,6EAWA,SAASN,EAAK1B,GACZyC,KAAKrD,SAAL,eAAiBsC,EAAM1B,M,6EAGzB,oCAAAf,EAAA,2DACuCwD,KAAKtD,MAAlCuB,EADV,EACUA,KAAMsB,EADhB,EACgBA,QAAS9C,EADzB,EACyBA,UACX,MAARwB,GAAwB,IAARA,GACP,MAAXsB,GAA8B,IAAXA,EAHvB,uBAIIgC,MAAM,2FAJV,iCAQQC,EAAO,CACX,KAAQvD,EACR,QAAWsB,EACX,WAAc9C,GAGhBuD,KAAKrD,SAAS,CAAEC,WAAW,IAd7B,SAeoBC,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAU0E,0BACfpE,OAAQ,OACRF,KAAMqE,IAnBV,OAsBoB,KAtBpB,OAsBUE,QACN1B,KAAKzD,UAELyD,KAAKrD,SAAS,CAAEwC,UAAWa,KAAKtD,MAAMyC,aAEtCoC,MAAM,8BACNvB,KAAKrD,SAAS,CAAEC,WAAW,KA5B/B,iD,qHAiCA,WAAiBiC,GAAjB,mBAAArC,EAAA,sDACU4B,EAAa4B,KAAKtD,MAAlB0B,SACFuD,EAAI,SAACC,GAAD,OAAaA,EAAQ3D,MAAQY,EAAKZ,MACtC4D,EAAQzD,EAAS0D,UAAUH,GAGjC3B,KAAKrD,SAAS,CACZwC,UAAWa,KAAKtD,MAAMyC,SACtBG,OAAQ,SACRC,QAASV,EAAKU,QACdtB,KAAMY,EAAKZ,KACXQ,oBAAqBL,EAASyD,IAAUzD,EAASN,OAAS,EAAI,CAAEE,MAAOI,EAASyD,GAAO5D,KAAMC,MAAOE,EAASyD,GAAO1D,MAAS,CAAEH,MAAO,GAAIE,MAAO,IACjJa,GAAIF,EAAI,MAZZ,gD,uIAgBA,kCAAArC,EAAA,2DAC4BwD,KAAKtD,MAAvB6C,EADV,EACUA,QAAStB,EADnB,EACmBA,KAEF,MAAXsB,GAA8B,IAAXA,GACb,MAARtB,GAAwB,IAARA,EAJpB,uBAKIsD,MAAM,2FALV,iCASQC,EAAO,CACX,QAAWjC,EACX,KAAQtB,EACR,GAAM+B,KAAKtD,MAAMqC,IAGnBiB,KAAKrD,SAAS,CAAEC,WAAW,IAf7B,SAgBoBC,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUgF,6BACf1E,OAAQ,OACRF,KAAMqE,IApBV,OAuBoB,KAvBpB,OAuBUE,QAEN1B,KAAKzD,UAELyD,KAAKrD,SAAS,CAAEwC,UAAWa,KAAKtD,MAAMyC,aAEtCoC,MAAM,yCACNvB,KAAKrD,SAAS,CAAEC,WAAW,KA9B/B,iD,iHAyCA,sBAAAJ,EAAA,6DACEwD,KAAKrD,SAAS,CAAEC,WAAW,IAD7B,SAEoBC,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUiF,6BACf3E,OAAQ,OACRF,KAAM,CACJ,GAAM6C,KAAKtD,MAAMqC,MAPvB,OAWoB,KAXpB,OAWU2C,QAEN1B,KAAKzD,UAELyD,KAAKrD,SAAS,CAAEmC,aAAckB,KAAKtD,MAAMoC,YAAaU,OAAQ,SAE9D+B,MAAM,gDACNvB,KAAKrD,SAAS,CAAEC,WAAW,KAlB/B,gD,+EAuBA,SAAYuE,GACVnB,KAAKrD,SAAL,eAAiBwE,EAAEE,OAAOlD,KAAOgD,EAAEE,OAAOrD,U,oBAG5C,WAAU,IAAD,OACP,EAAoFgC,KAAKtD,MAAjFS,EAAR,EAAQA,KAAMsC,EAAd,EAAcA,cAAeR,EAA7B,EAA6BA,IAAKrC,EAAlC,EAAkCA,UAAW6B,EAA7C,EAA6CA,oBAAqBJ,EAAlE,EAAkEA,cAClE,OAAKzB,EA8HH,qBAAKqF,UAAU,gBAAf,SACE,cAAC,IAAD,CAAWC,IAAKC,EAAUC,KAAM,GAAIC,MAAO,UAAWC,QAAStC,KAAKtD,MAAME,UAAW2F,gBAAiB,QA7HtG,sBAAKN,UAAU,kBAAf,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,mBAAGA,UAAU,wBADf,kCAEE,qBAAKO,MAAOC,IAAOC,KAAnB,SAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,KAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMD,GAAG,KAAKC,GAAG,IAAjB,SACE,8BACE,cAAC,IAAD,CAAOJ,MAAOC,IAAOI,YAAaC,SAAU,SAAC3B,GAC3C,EAAK4B,aAAa5B,EAAG,QACpBhD,KAAK,MAAMH,MAAOiB,EAAK+D,YAAY,wBAG1C,cAAC,IAAD,CAAML,GAAG,KAAKC,GAAG,IAAjB,SACE,cAAC,IAAD,CAASP,MAAM,UAAUG,MAAO,CAAES,MAAO,OAAQC,UAAW,GAAKd,KAAK,KAAKe,QAAS,SAAAhC,GAAO,EAAKiC,eAAhG,qDAIN,cAAC,IAAD,CAAMT,GAAG,KAAKC,GAAG,KAAjB,SACE,cAAC,IAAD,CAASS,SAAO,EAAChB,MAAM,UAAUG,MAAOC,IAAOa,WAAYlB,KAAK,KAAKe,QAAS,SAAAhC,GAAC,OAAI,EAAKoC,YAAY,QAApG,wCAMR,cAAC,IAAD,UAEE,wBAAOC,KAAG,EAACvB,UAAU,yDAArB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,6BACA,oBAAIA,UAAU,cAAd,2BACA,oBAAIA,UAAU,qBAGlB,kCACE,oBAAIwB,QAAQ,KAAKpE,OAAQW,KAAKtD,MAAM2C,OAAQ4C,UAAU,cAAtD,8DAEUyB,GAARvG,EACEA,EAAK2D,KAAI,SAACjC,EAAMhB,GACd,OACE,+BACE,oBAAIoE,UAAU,cAAd,SAA6BpE,EAAI,IACjC,oBAAIoE,UAAU,cAAd,SAA6BpD,EAAKZ,OAClC,oBAAIgE,UAAU,cAAd,SAA6BpD,EAAKU,UAClC,qBAAI0C,UAAU,cAAd,UACE,cAAC,IAAD,CAASO,MAAOC,IAAOkB,KAAMN,SAAO,EAAChB,MAAM,UAAUD,KAAK,KAAKe,QAAO,uCAAE,WAAOhC,GAAP,SAAA3E,EAAA,sEAAmB,EAAKoH,WAAW/E,GAAnC,mFAAF,sDAAtE,SACE,cAAC,IAAD,CAAOV,KAAK,gBACH,IACX,cAAC,IAAD,CAASkF,SAAO,EAAChB,MAAM,SAASD,KAAK,KAAKe,QAAS,SAAChC,GAAQ,EAAKvC,WAAWC,IAA5E,SACE,cAAC,IAAD,CAAOV,KAAK,oBATTN,MAcR,cAMjB,qBAAK2E,MAAO,CAAEqB,MAAO,SAArB,SACE,cAAC,IAAD,CAAYC,MAAOrE,EAAc3B,OAAQuE,MAAM,UAAUS,SAAU,SAAC3B,EAAG4C,GACrE,EAAKpH,SAAS,CAAEQ,KAAMsC,EAAcsE,EAAI,GAAIrE,UAAWqE,EAAI,cAMnE,eAAC,IAAD,CAAO3B,KAAK,KAAK4B,OAAQhE,KAAKtD,MAAMyC,SAAU8C,UAAWjC,KAAK1D,MAAM2F,UAApE,UACE,cAAC,IAAD,UAAmC,OAArBjC,KAAKtD,MAAM4C,OAAX,2CACd,eAAC,IAAD,WAEE,eAAC,IAAD,WACE,cAAC,IAAD,CAAM2E,GAAG,IAAIrB,GAAG,IAAID,GAAG,KAAKuB,GAAG,KAAKC,GAAG,IAAvC,SACE,cAAC,IAAD,+BAEF,cAAC,IAAD,CAAMF,GAAG,IAAIrB,GAAG,IAAID,GAAG,KAAKuB,GAAG,KAAKC,GAAG,IAAvC,SACE,cAAC,IAAD,CACEC,aAAW,EACXtB,SAAU9C,KAAK1B,qBACfN,MAAOS,EACP4F,QAAShG,SAKf,uBACA,uBAAO4D,UAAU,gBAAjB,sDACA,cAAC,WAAD,CACEqC,OAAQC,IACRpH,KAAM6C,KAAKtD,MAAM6C,QACjBuD,SAAU,SAAC0B,EAAOF,GAChB,IAAMnH,EAAOmH,EAAO/H,UACpB,EAAKI,SAAS,CAAE4C,QAASpC,UAI/B,eAAC,IAAD,WACE,cAAC,IAAD,CAASkF,MAAM,UAAUc,QAAS,SAAAhC,GAA6B,QAAtB,EAAKzE,MAAM4C,OAAmB,EAAKmF,2BAA6B,EAAKC,+BAAiCC,SAAU3E,KAAKtD,MAAME,UAApK,sBAA6L,IAC7L,cAAC,IAAD,CAASyF,MAAM,YAAYc,QAAS,SAAAhC,GAAC,OAAI,EAAKoC,YAAY,QAA1D,gCAIJ,eAAC,IAAD,CAAOS,OAAQhE,KAAKtD,MAAMoC,YAAa8F,OAAQ,SAAAzD,GAAC,OAAI,EAAKxE,SAAS,CAAEmC,aAAc,EAAKpC,MAAMoC,YAAaU,OAAQ,QAASyC,UAAWjC,KAAK1D,MAAM2F,UAAjJ,UACE,cAAC,IAAD,CAAa2C,OAAQ,SAAAzD,GAAC,OAAI,EAAKxE,SAAS,CAAEmC,aAAc,EAAKpC,MAAMoC,YAAaU,OAAQ,QAAxF,oBACA,cAAC,IAAD,UACE,uBAAOqF,QAAQ,MAAf,2CAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAASxC,MAAM,UAAUc,QAAS,SAAAhC,GAAC,OAAI,EAAK3B,UAAUmF,SAAU3E,KAAKtD,MAAME,UAA3E,oBAAuG,IACvG,cAAC,IAAD,CAASyF,MAAM,YAAYc,QAAS,SAAAhC,GAAC,OAAI,EAAKxE,SAAS,CAAEmC,aAAc,EAAKpC,MAAMoC,YAAaU,OAAQ,QAAvG,uC,GAxZsBsF,aAsa9B3C,EAAWD,cAAH,wFAMC7F,a,iCC5XAoG,IAhFA,CACbjF,WAAY,CACVuH,YAAa,OAEfC,UAAW,CACT/B,MAAO,KAETgC,WAAY,CACVhC,MAAO,KAETzG,EAAG,CACD0I,eAAgB,QAElB5B,WAAY,CACVO,MAAO,QACPX,UAAW,OAEbiC,QAAS,CACPlC,MAAO,QAETmC,OAAQ,CACNC,UAAW,UAEbC,MAAO,CACLC,OAAQ,QACRC,UAAW,QAEbC,KAAM,CACJxC,MAAO,MACPY,MAAO,OACP0B,OAAQ,QAEVG,GAAI,CACFzC,MAAO,MACPY,MAAO,OACP0B,OAAQ,QAEVI,KAAM,CACJ1C,MAAO,KACPY,MAAO,OACP0B,OAAQ,QAEVK,IAAK,CACH/B,MAAO,OACPZ,MAAO,QAET4C,QAAS,CACPxD,MAAO,SAETyD,OAAQ,CACNzD,MAAO,OAETsB,KAAM,CACJoC,WAAY,OAEdrD,KAAM,CACJmB,MAAO,QACPkB,YAAa,OAEflC,YAAa,CACXI,MAAO,QACP+C,QAAS,gBAEXC,WAAY,CACV5D,MAAO,SAET6D,YAAa,CACX7D,MAAO,OAET8D,eAAgB,CACdlD,MAAO,SAETmD,MAAO,CACLnD,MAAO,QACPsC,OAAQ,QACRc,aAAc","file":"static/js/46.e8ea7e3a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport CIcon from '@coreui/icons-react'\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Input,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n} from 'reactstrap';\n\nimport {\n  CButton,\n  CRow,\n  CCol,\n  CLabel\n} from '@coreui/react'\n\nimport Pagination from '@material-ui/lab/Pagination';\nimport 'moment-timezone';\nimport Constants from \"../../../../contants/contants_app\";\nimport TextFieldGroup from \"../../../Common/TextFieldGroup\";\nimport axios from 'axios'\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport styles from \"../../../../assets/styles/styles\";\n\nimport CreatableSelect from 'react-select/creatable';\n\nclass NotificationThemplate extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      totalActive: 0,\n      modalCom: false,\n      updated: '',\n      dataApi: [],\n      hidden: false,\n      action: 'new',\n      code: \"\",\n      content: \"\",\n      modalDelete: false,\n      delete: null,\n      arrPagination: [],\n      indexPage: 0,\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      user: localStorage.getItem('user'),\n      isLoading: false,\n      companyid: localStorage.getItem('company_id'),\n      dataType: [],\n      objTypeNotification: {},\n      arrOptionType: []\n    };\n  }\n  async componentDidMount() {\n\n    this.getData()\n    this.getDataNotificationType()\n    let arr = JSON.parse(localStorage.getItem('url'));\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].url == window.location.hash) {\n        if (arr[i].isHidden == true) {\n          window.location.href = '#/'\n        }\n      }\n    }\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden: false\n      })\n    } else {\n      this.setState({\n        hidden: true\n      })\n    }\n\n    this.setState({ arrPagination: arrTotal, data: arrTotal[0] });\n  }\n\n  getData = async () => {\n    const { companyid } = this.state\n    this.setState({ isLoading: true });\n    const resLocation = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_NOTIFICATION_TEMPLATE,\n      data: {\n        company_id: companyid\n      },\n      method: 'POST'\n    });\n\n    let val = resLocation.data.data;\n    this.pagination(val);\n    this.setState({ dataApi: val, isLoading: false });\n  }\n\n  getDataNotificationType = async () => {\n    const { companyid } = this.state\n    const resLocation = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_NOTIFICATION_TYPE,\n      data: {\n        company_id: companyid\n      },\n      method: 'POST'\n    });\n\n    let val = resLocation.data.data;\n    const arrTempOptionCategory = [];\n    for (let i = 0; i < val.length; i++) {\n      arrTempOptionCategory.push({\n        value: val[i].code, label: val[i].name\n      })\n    }\n    this.setState({ dataType: val, arrOptionType: arrTempOptionCategory })\n  }\n\n  handleChangeCategory = (newValue, actionMeta) => {\n    this.setState({ objTypeNotification: newValue, code: newValue.value })\n    console.log(newValue)\n  };\n\n  searchKey() {\n    const { indexPage, key } = this.state;\n    // this.setState({ key: key })\n\n    if (key != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if (val.content.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n      let active = 0\n\n      d.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: d, totalActive: active })\n    } else {\n      let active = 0\n\n      this.state.dataApi.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: this.state.arrPagination[indexPage], totalActive: active })\n    }\n  }\n\n  actionSearch(e, name_action) {\n    this.setState({\n      [name_action]: e.target.value\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  resetSearch() {\n    this.setState({\n      key: ''\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  async toggleModal(key) {\n    if (key == 'new') {\n      this.setState({\n        modalCom: !this.state.modalCom,\n        action: key,\n        code: \"\",\n        content: \"\"\n      })\n    }\n  }\n\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n\n  async addNotificationThemplate() {\n    const { code, content, companyid } = this.state\n    if (code == null || code == '' ||\n      content == null || content == '') {\n      alert(\"Vui lòng nhập đầy đủ trường dữ liệu !!!\");\n      return\n    }\n\n    const body = {\n      \"code\": code,\n      \"content\": content,\n      \"company_id\": companyid\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.ADD_NOTIFICATION_TEMPLATE,\n      method: 'POST',\n      data: body\n    });\n\n    if (res.status == 200) {\n      this.getData()\n\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(\"Thêm thất bại\");\n      this.setState({ isLoading: false });\n    }\n  }\n\n\n  async openUpdate(item) {\n    const { dataType } = this.state;\n    const I = (element) => element.code == item.code;\n    const index = dataType.findIndex(I);\n\n\n    this.setState({\n      modalCom: !this.state.modalCom,\n      action: \"update\",\n      content: item.content,\n      code: item.code,\n      objTypeNotification: dataType[index] && dataType.length > 0 ? { value: dataType[index].code, label: dataType[index].name } : { value: \"\", label: \"\" },\n      id: item['_id']\n    })\n  }\n\n  async updateNotificationThemplate() {\n    const { content, code } = this.state\n\n    if (content == null || content == '' ||\n      code == null || code == '') {\n      alert(\"Vui lòng nhập đầy đủ trường dữ liệu !!!\");\n      return\n    }\n\n    const body = {\n      \"content\": content,\n      \"code\": code,\n      \"id\": this.state.id\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.UPDATE_NOTIFICATION_TEMPLATE,\n      method: 'POST',\n      data: body\n    });\n\n    if (res.status == 200) {\n\n      this.getData()\n\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(\"Cập nhật thất bại\");\n      this.setState({ isLoading: false });\n    }\n  }\n\n  openDelete = (item) => {\n    this.setState({\n      modalDelete: !this.state.modalDelete,\n      id: item._id\n    })\n  }\n\n  async delete() {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.DELETE_NOTIFICATION_TEMPLATE,\n      method: 'POST',\n      data: {\n        \"id\": this.state.id\n      }\n    });\n\n    if (res.status == 200) {\n\n      this.getData()\n\n      this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n    } else {\n      alert(\"Xóa sản phẩm thất bại\");\n      this.setState({ isLoading: false });\n    }\n\n  }\n\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { data, arrPagination, key, isLoading, objTypeNotification, arrOptionType } = this.state;\n    if (!isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Danh sách dịch vụ\n                  <div style={styles.tags}>\n\n                    <CRow>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CRow>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <div>\n                              <Input style={styles.searchInput} onChange={(e) => {\n                                this.actionSearch(e, \"key\");\n                              }} name=\"key\" value={key} placeholder=\"Từ khóa\" />\n                            </div>\n                          </CCol>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <CButton color=\"primary\" style={{ width: '100%', marginTop: 5 }} size=\"sm\" onClick={e => { this.resetSearch() }}>Làm mới tìm kiếm</CButton>\n                          </CCol>\n                        </CRow>\n                      </CCol>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CButton outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={e => this.toggleModal(\"new\")}>Thêm mới</CButton>\n                      </CCol>\n                    </CRow>\n\n                  </div>\n                </CardHeader>\n                <CardBody>\n\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        <th className=\"text-center\">Mã loại</th>\n                        <th className=\"text-center\">Nội dung</th>\n                        <th className=\"text-center\"></th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <td colSpan=\"10\" hidden={this.state.hidden} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                <td className=\"text-center\">{item.code}</td>\n                                <td className=\"text-center\">{item.content}</td>\n                                <td className=\"text-center\">\n                                  <CButton style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >\n                                    <CIcon name=\"cilPencil\" />\n                                  </CButton>{' '}\n                                  <CButton outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>\n                                    <CIcon name=\"cilTrash\" />\n                                  </CButton>\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n                </CardBody>\n              </Card>\n              <div style={{ float: 'right' }}>\n                <Pagination count={arrPagination.length} color=\"primary\" onChange={(e, v) => {\n                  this.setState({ data: arrPagination[v - 1], indexPage: v - 1 })\n                }} />\n              </div>\n            </Col>\n          </Row>\n\n          <Modal size='xl' isOpen={this.state.modalCom} className={this.props.className}>\n            <ModalHeader>{this.state.action == 'new' ? `Tạo mới` : `Cập nhật`}</ModalHeader>\n            <ModalBody>\n\n              <CRow>\n                <CCol md=\"3\" lg=\"3\" sm=\"12\" xm=\"12\" lx=\"3\">\n                  <CLabel>Danh mục:</CLabel>\n                </CCol>\n                <CCol md=\"9\" lg=\"9\" sm=\"12\" xm=\"12\" lx=\"9\">\n                  <CreatableSelect\n                    isClearable\n                    onChange={this.handleChangeCategory}\n                    value={objTypeNotification}\n                    options={arrOptionType}\n                  />\n                </CCol>\n              </CRow>\n\n              <br />\n              <label className=\"control-label\">Mô tả thương hiệu</label>\n              <CKEditor\n                editor={ClassicEditor}\n                data={this.state.content}\n                onChange={(event, editor) => {\n                  const data = editor.getData();\n                  this.setState({ content: data })\n                }}\n              />\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => { this.state.action === 'new' ? this.addNotificationThemplate() : this.updateNotificationThemplate() }} disabled={this.state.isLoading}>Lưu</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Xoá`}</ModalHeader>\n            <ModalBody>\n              <label htmlFor=\"tag\">{`Xác nhận xóa !!!`}</label>\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Delete</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n        </div>\n      );\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nexport default NotificationThemplate;\n","const styles = {\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: 300\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: \"right\",\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh25: {\n    width: \"25%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  w5: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    marginLeft: '5px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\"\n  },\n  searchInput: {\n    width: \"190px\",\n    display: 'inline-block',\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n}\n\n\nexport default styles;\n"],"sourceRoot":""}