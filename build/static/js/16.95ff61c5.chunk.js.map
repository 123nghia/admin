{"version":3,"sources":["contants/contants.js","functions/callAPI.js","views/Common/TextFieldGroup.js","views/base/tables/Account.js"],"names":["axios","require","default","defaults","baseURL","constants","BASE_URL","connect","a","url","data","token","type","options","headers","get","is_success","post","put","delete","del","TextFieldGroup","field","value","label","error","onChange","checkUserExists","readOnly","placeholder","onClick","className","classnames","onBlur","name","defaultProps","Headers","auth","localStorage","getItem","append","Account","props","getData","setState","isLoading","API_CONNECT","Constants","LIST_USER","res","val","pagination","dataApi","openDelete","item","modalDelete","state","id","_id","key","modalCom","hidden","action","email","avatar","image_show","phone","address","username","arrPagination","indexPage","Authorization","this","i","j","temparray","arrTotal","length","slice","push","d","map","toLocaleUpperCase","includes","e","name_action","target","searchKey","files","console","log","reader","FileReader","readAsDataURL","onload","result","alert","form","FormData","UPLOAD_AVATAR","body","UPDATE_USER","status","DELETE_USER","css","override","size","color","loading","speedMultiplier","style","styles","tags","sm","lg","searchInput","actionSearch","width","marginTop","resetSearch","ble","colSpan","undefined","src","height","mgl5","outline","openUpdate","float","count","v","isOpen","onChangeImage","marginBottom","addProduct","updataUser","disabled","toggle","htmlFor","Component","marginRight","flexLabel","flexOption","textDecoration","floatRight","spinner","center","textAlign","tbody","overflowY","wh25","w5","wa10","row","success","danger","margin","display","userActive","userPending","nagemonNameCol","image","borderRadius"],"mappings":"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","file":"static/js/16.95ff61c5.chunk.js","sourcesContent":["export default {\n  \"BASE_URL\" : \"https://api.thulamua.com\",\n  //\"BASE_URL\" : \"http://localhost:3008\",\n  \"LOGIN\" : \"/api/login\",\n  \"LIST_USER\": \"/api/list_user\",\n  \"ADD_USER\":\"/api/add_user\",\n  \"UPDATE_USER\":\"/api/update_user\",\n  \"DELETE_USER\":\"/api/delete_user\",\n  \"UPLOAD_AVATAR\": \"/api/upload_avatar\",\n\n  \"LIST_CATEGORY\": \"/api/list_category\",\n  \"ADD_CATEGORY\": \"/api/add_category\",\n  \"UPDATE_CATEGORY\": \"/api/update_category\",\n  \"DELETE_CATEGORY\": \"/api/delete_category\",\n  \"UPLOAD_CATEGORY\": \"/api/upload_category\",\n\n  \"LIST_BRAND\": \"/api/list_brand\",\n  \"ADD_BRAND\": \"/api/add_brand\",\n  \"UPDATE_BRAND\": \"/api/update_brand\",\n  \"DELETE_BRAND\": \"/api/delete_brand\",\n  \"UPLOAD_BRAND\": \"/api/upload_brand\",\n\n  \"LIST_PRODUCT\": \"/api/list_product\",\n  \"LIST_PRODUCT_CATEGORY\": \"/api/list_product_category\",\n  \"ADD_PRODUCT\": \"/api/add_product\",\n  \"UPDATE_PRODUCT\": \"/api/update_product\",\n  \"DELETE_PRODUCT\": \"/api/delete_product\",\n  \"UPLOAD_PRODUCT\": \"/api/upload_product\",\n  \"UPLOAD_PRODUCT_MULTIPLE\": \"/api/upload_product_multiple\",\n\n  \"LIST_ORDER\": \"/api/list_order\",\n  \"LIST_ORDER_DETAIL\": \"/api/list_order_detail\",\n  \"LIST_ORDER_BY_USER\": \"/api/list_order_by_user\",\n  \"ADD_ORDER\": \"/api/add_order\",\n\n  \"LIST_DEAL\": \"/api/list_deal\",\n  \"ADD_DEAL\": \"/api/add_deal\",\n  \"UPDATE_DEAL\": \"/api/update_deal\",\n  \"DELETE_DEAL\": \"/api/delete_deal\",\n  \"UPLOAD_DEAL\": \"/api/upload_deal\",\n\n  \"LIST_COUNT_ORDER\": \"/api/list_count_order\",\n\n  \"LIST_BANNER\": \"/api/get_banner\",\n  \"GET_BANNER_BY_ID\": \"/api/get_banner_by_id\",\n  \"ADD_BANNER\": \"/api/add_banners\",\n  \"UPADTE_BANNER\": \"/api/update_banner\",\n  \"DELETE_BANNER\": \"/api/delete_banner\",\n  \"UPLOAD_BANNER\": \"/api/upload_banner\"\n};\n","import constants from './../contants/contants'\n\nconst axios = require('axios').default;\naxios.defaults.baseURL = constants.BASE_URL;\n\nconst connect = async function (url = \"\", data = {}, token = \"\", type) {\n  let options = {};\n  // console.log(\"Token: \", token)\n  if (token) {\n    options = {\n      headers: token\n    };\n  }\n  try {\n    switch (type) {\n      case \"GET\":\n        let get = await axios.get(url, data, options);\n        if (get.is_success == false) {\n          return null;\n        }\n        return get.data;\n      case \"POST\":\n        let post = await axios.post(url, data, options);\n        if (post.is_success == false) {\n          return null;\n        }\n        return post.data;\n      case \"PUT\":\n        let put = await axios.put(url, data, options);\n        if (put.is_success == false) {\n          return null;\n        }\n        return put.data;\n      case \"DELETE\":\n        let del = await axios.delete(url, data, options);\n        if (del.is_success == false) {\n          return null;\n        }\n        return del.data;\n    }\n\n  } catch (reason) {\n    return reason;\n  }\n\n\n}\n\nexport default connect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder, onClick }) => {\n  return (\n    <div className={classnames('form-group', { 'has-error': error })}>\n      <label className=\"control-label\">{label}</label>\n      <input\n        onChange={onChange}\n        onClick={onClick}\n        onBlur={checkUserExists}\n        value={value}\n        type={type}\n        name={field}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        className=\"form-control\"\n      />\n    {error && <span className=\"help-block\">{error}</span>}\n    </div>  );\n}\n\nTextFieldGroup.propTypes = {\n  field: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checkUserExists: PropTypes.func\n}\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextFieldGroup;\n","import React, { Component } from 'react';\nimport CIcon from '@coreui/icons-react'\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Input,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n} from 'reactstrap';\n\nimport {\n  CButton,\n  CRow,\n  CCol,\n  CLabel\n} from '@coreui/react'\n\nimport CreatableSelect from 'react-select/creatable';\nimport API_CONNECT from \"../../../functions/callAPI\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport 'moment-timezone';\nimport Constants from \"../../../contants/contants\";\nimport TextFieldGroup from \"../../Common/TextFieldGroup\";\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\n\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      modalCom: false,\n      dataApi: [],\n      hidden: false,\n      action: 'new',\n      name: \"\",\n      email: \"\",\n      avatar: \"\",\n      image_show: \"\",\n      phone: \"\",\n      address: \"\",\n      username: \"\",\n      modalDelete: false,\n      delete: null,\n      arrPagination: [],\n      indexPage: 0,\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      type: localStorage.getItem('type'),\n      isLoading: false,\n    };\n  }\n  async componentDidMount() {\n    this.getData()\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden: false\n      })\n    } else {\n      this.setState({\n        hidden: true\n      })\n    }\n\n    this.setState({ arrPagination: arrTotal, data: arrTotal[0] });\n  }\n\n  getData = async () => {\n    this.setState({ isLoading: true });\n    var res = await API_CONNECT(\n      Constants.LIST_USER, {}, \"\", \"POST\")\n\n    let val = res.data;\n    this.pagination(val);\n    this.setState({ dataApi: val, isLoading: false })\n  }\n\n  searchKey() {\n    const { indexPage, key } = this.state;\n\n    if (key != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if (val.name.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n          val.username.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n          val.email.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n          val.phone.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n\n      this.setState({ data: d })\n    } else {\n      this.setState({ data: this.state.arrPagination[indexPage] })\n    }\n  }\n\n  actionSearch(e, name_action) {\n    this.setState({\n      [name_action]: e.target.value\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  resetSearch() {\n    this.setState({\n      key: ''\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  onChangeImage(e) {\n    let files = e.target.files;\n    console.log(files)\n    let reader = new FileReader();\n    this.setState({ avatar: files[0] })\n    reader.readAsDataURL(files[0])\n    reader.onload = (e) => {\n      this.setState({ image_show: e.target.result })\n    }\n  }\n\n  // async toggleModal(key) {\n  //   const { modalCom, token, arrOptionBrand, arrOptionCategory } = this.state;\n  //   if (key == 'new') {\n  //     this.setState({\n  //       modalCom: !modalCom,\n  //       action: key,\n  //       category_id: \"\",\n  //       brand_id: \"\",\n  //       name: \"\",\n  //       href: \"\",\n  //       image_show: \"\",\n  //       image: \"\",\n  //       price: \"\",\n  //     }, async () => {\n  //       if (arrOptionBrand.length == 0 || arrOptionCategory.length == 0) {\n\n  //         const res_brand = await API_CONNECT(\n  //           Constants.LIST_BRAND, {}, token, \"POST\")\n\n  //         const res_category = await API_CONNECT(\n  //           Constants.LIST_CATEGORY, {}, token, \"POST\")\n\n  //         let arrTempOptionBrand = [];\n  //         let arrTempOptionCategory = [];\n\n  //         let dataBrand = res_brand.data;\n  //         let dataCategory = res_category.data;\n\n  //         for (let i = 0; i < dataBrand.length; i++) {\n  //           arrTempOptionBrand.push({\n  //             value: dataBrand[i]._id, label: dataBrand[i].name\n  //           })\n  //         }\n\n  //         for (let i = 0; i < dataCategory.length; i++) {\n  //           arrTempOptionCategory.push({\n  //             value: dataCategory[i]._id, label: dataCategory[i].name\n  //           })\n  //         }\n\n  //         this.setState({ arrOptionBrand: arrTempOptionBrand, arrOptionCategory: arrTempOptionCategory })\n  //       }\n  //     })\n  //   }\n  // }\n\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n\n  // async addProduct() {\n\n  //   const { category_id, brand_id, name, href, image, price } = this.state\n  //   if (name == null || name == '' ||\n  //     image == null || image == '' ||\n  //     category_id == null || category_id == '' ||\n  //     brand_id == null || brand_id == '') {\n  //     alert(\"Hãy nhập đầy đủ dữ liệu !!!\");\n  //     return\n  //   }\n\n  //   const form = new FormData();\n  //   form.append(\"image\", image);\n\n  //   await API_CONNECT(Constants.UPLOAD_PRODUCT, form, \"\", \"POST\")\n\n  //   const body = {\n  //     category_id: category_id,\n  //     brand_id: brand_id,\n  //     name: name,\n  //     href: href,\n  //     image: image.name,\n  //     price: price\n  //   }\n\n  //   this.setState({ isLoading: true });\n  //   var res = await API_CONNECT(\n  //     Constants.ADD_PRODUCT, body, \"\", \"POST\")\n\n  //   if (res.status == 200) {\n\n  //     this.getData()\n\n  //     this.setState({ modalCom: !this.state.modalCom })\n  //   } else {\n  //     alert(\"Thêm danh mục thất bại\");\n  //     this.setState({ isLoading: false });\n  //   }\n  // }\n\n  async openUpdate(item) {\n    this.setState({\n      modalCom: !this.state.modalCom,\n      action: \"update\",\n      name: item.name,\n      email: item.email,\n      avatar: item.avatar,\n      image_show: \"\",\n      phone: item.phone,\n      address: item.address,\n      username: item.username,\n      id: item['_id']\n    })\n  }\n\n  async updataUser() {\n    const { name, email, avatar, phone, address, username } = this.state\n\n    if (name == null || name == '' ||\n      email == null || email == '') {\n      alert(\"Tên và email trống !!!\");\n      return\n    }\n\n    const form = new FormData();\n    form.append(\"image\", avatar);\n\n    await API_CONNECT(Constants.UPLOAD_AVATAR, form, \"\", \"POST\")\n\n    const body = {\n      name: name,\n      email: email,\n      avatar: avatar.name,\n      phone: phone,\n      address: address,\n      username: username,\n      id: this.state.id,\n    }\n\n    this.setState({ isLoading: true });\n    var res = await API_CONNECT(\n      Constants.UPDATE_USER, body, \"\", \"POST\")\n\n    if (res.status == 200) {\n\n      this.getData()\n\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(\"Cập nhật thất bại\");\n      this.setState({ isLoading: false });\n    }\n  }\n\n  openDelete = (item) => {\n    this.setState({\n      modalDelete: !this.state.modalDelete,\n      id: item._id\n    })\n  }\n\n  async delete() {\n    this.setState({ isLoading: true });\n    var res = await API_CONNECT(\n      Constants.DELETE_USER, {\n      \"id\": this.state.id\n    }, \"\", \"POST\")\n\n    if (res.status == 200) {\n      this.getData()\n      this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n    } else {\n      alert(\"Xóa sản phẩm thất bại\");\n      this.setState({ isLoading: false });\n    }\n\n  }\n\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  getBadge(status) {\n    switch (status) {\n      case 'Actived': return 'success'\n      case 'Inactive': return 'secondary'\n      case 'Locked': return 'warning'\n      case 'Deactived': return 'danger'\n      default: return 'primary'\n    }\n  }\n\n  render() {\n    const { data, arrPagination, key, avatar, image_show } = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Danh sách danh mục\n                  <div style={styles.tags}>\n                    <CRow>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CRow>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <div>\n                              <Input style={styles.searchInput} onChange={(e) => {\n                                this.actionSearch(e, \"key\");\n                              }} name=\"key\" value={key} placeholder=\"Từ khóa\" />\n                            </div>\n                          </CCol>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <CButton color=\"primary\" style={{ width: '100%', marginTop: 5 }} size=\"sm\" onClick={e => { this.resetSearch() }}>Làm mới tìm kiếm</CButton>\n                          </CCol>\n                        </CRow>\n                      </CCol>\n                      <CCol sm=\"12\" lg=\"12\">\n                        {/* <CButton outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={e => this.toggleModal(\"new\")}>Thêm mới</CButton> */}\n                      </CCol>\n                    </CRow>\n\n                  </div>\n                </CardHeader>\n                <CardBody>\n\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        <th className=\"text-center\">Tên</th>\n                        <th className=\"text-center\">Avatar</th>\n                        <th className=\"text-center\">Email</th>\n                        <th className=\"text-center\">Phone</th>\n                        <th className=\"text-center\">Address</th>\n                        <th className=\"text-center\">#</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <td colSpan=\"10\" hidden={this.state.hidden} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                <td className=\"text-center\">{item.name}</td>\n                                <td className=\"text-center\">\n                                  {\n                                    item.avatar == \"\" || item.avatar == null ?\n                                      <img src={\"https://www.chanchao.com.tw/VietnamPrintPack/images/default.jpg\"} width={\"60px\"} height={\"60px\"} /> :\n                                      <img src={`${Constants.BASE_URL}/public/image_avatar/${item.avatar}`} width={\"60px\"} height={\"60px\"}/>\n                                  }\n                                </td>\n                                <td className=\"text-center\">{item.email}</td>\n                                <td className=\"text-center\">{item.phone}</td>\n                                <td className=\"text-center\">{item.address}</td>\n                                <td className=\"text-center\">\n                                  <CButton style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >\n                                    <CIcon name=\"cilPencil\" />\n                                  </CButton>{' '}\n                                  <CButton outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>\n                                    <CIcon name=\"cilTrash\" />\n                                  </CButton>\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n                </CardBody>\n              </Card>\n              <div style={{ float: 'right' }}>\n                <Pagination count={arrPagination.length} color=\"primary\" onChange={(e, v) => {\n                  this.setState({ data: arrPagination[v - 1], indexPage: v - 1 })\n                }} />\n              </div>\n            </Col>\n          </Row>\n\n          <Modal size=\"lg\" isOpen={this.state.modalCom} className={this.props.className}>\n            <ModalHeader>{this.state.action == 'new' ? `Tạo mới` : `Cập nhật`}</ModalHeader>\n            <ModalBody>\n              <TextFieldGroup\n                field=\"name\"\n                label=\"Tên\"\n                value={this.state.name}\n                placeholder={\"Tên sản phẩm\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"name\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"avatar\"\n                label=\"Ảnh đại diện\"\n                type={\"file\"}\n                onChange={e => { this.onChangeImage(e) }}\n                onClick={(e) => { e.target.value = null; this.setState({ image_show: \"\" }) }}\n              />\n              {\n                avatar == \"\" ? \"\" :\n                  <img width=\"350\" height=\"300\" src={\n                    image_show == \"\" ?\n                      `${Constants.BASE_URL}/public/image_avatar/${avatar}` : image_show} style={{ marginBottom: 20 }} />\n              }\n\n              <TextFieldGroup\n                field=\"email\"\n                label=\"Email\"\n                value={this.state.email}\n                placeholder={\"Email\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"email\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"phone\"\n                label=\"Số điện thoại\"\n                value={this.state.phone}\n                placeholder={\"Số điện thoại\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"phone\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"address\"\n                label=\"Địa chỉ\"\n                value={this.state.address}\n                placeholder={\"Địa chỉ\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"address\", e.target.value)}\n              // rows=\"5\"\n              />\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => { this.state.action === 'new' ? this.addProduct() : this.updataUser() }} disabled={this.state.isLoading}>Save</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => { this.setState({ modalCom: !this.state.modalCom }) }}>Cancel</CButton>\n            </ModalFooter>\n          </Modal>\n\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Delete`}</ModalHeader>\n            <ModalBody>\n              <label htmlFor=\"tag\">{`Xác nhận xóa !!!`}</label>\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Delete</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Cancel</CButton>\n            </ModalFooter>\n          </Modal>\n        </div>\n      );\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst styles = {\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: 300\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: \"right\",\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh25: {\n    width: \"25%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  w5: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    margin: '5px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\"\n  },\n  searchInput: {\n    width: \"190px\",\n    display: 'inline-block',\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n}\n\nexport default Account;\n"],"sourceRoot":""}