{"version":3,"sources":["views/game/configWeb/BannerAia.js","views/game/configWeb/GameConfig.js","views/game/configWeb/Content.js","views/game/configWeb.js","views/Common/TextFieldGroup.js"],"names":["BannerAia","setStateByName","name","value","props","onChangeImage","e","name_link","name_show","this","SaveAllConfigWeb","class","Button","variant","color","onClick","TextFieldGroup","field","label","type","onChange","target","alt","style","width","height","src","imageBannerDesktop","hrefImageBannerDesktop","placeholder","className","imageBannerMobile","hrefImageBannerMobile","Component","Seo","getTimeConver","datetime","moment","format","FormGroup","Label","for","Input","id","fromDate","todate","fromtime","totime","skinNumber","statusGame","poupintro","pupupSuccess","popupfail","headers","Headers","auth","localStorage","getItem","append","ConfigWeb","valueLink","valueShow","files","reader","FileReader","setState","readAsDataURL","onload","result","change","a","baseUrlapi","Constants","BASE_URL","url","newComany_id","state","company_id","bodyRequest","gameType","typeGame","axios","post","then","res","Swal","fire","title","timer","tabNameConfig","_id","icon","IoLogoBuffer","JSON","parse","i","tabcontent","tablinks","document","getElementsByClassName","length","classList","add","remove","replace","animation","getDataConfigWeb","ToggleViewConfigWeb","Output_newComany_id","get","params","data","console","log","idUpdate","isLoading","css","override","size","loading","speedMultiplier","List","sx","maxWidth","bgcolor","component","aria-labelledby","map","item","ListItemButton","pl","ListItemIcon","ListItemText","fontSize","primary","error","checkUserExists","readOnly","classnames","onBlur","defaultProps"],"mappings":"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","file":"static/js/86.d986c2e0.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\n\nexport default class BannerAia extends Component {\n  \n    SaveAllConfigWeb(value) {\n        this.props.SaveAllConfigWeb(value);\n    }\n    setStateByName = (name, value) => {\n        this.props.setStateByName(name, value);\n      };\n    onChangeImage=(e, name, name_link, name_show) =>{\n        this.props.onChangeImage(e, name, name_link, name_show);\n    }\n\n  render() {\n      \n    return (\n      <>\n        <div class=\"text-center\">\n          <Button\n            variant=\"contained\"\n            color=\"success\"\n            onClick={() => this.SaveAllConfigWeb(\"banner\")}\n          >\n            Lưu thay đổi\n          </Button>\n        </div>\n        <div class=\"mt-3\">\n          <h1>Banner trên PC</h1>\n          <TextFieldGroup\n            field=\"image\"\n            label=\"Hình ảnh\"\n            type={\"file\"}\n            onChange={(e) => this.onChangeImage(\n                e,\n                \"imageBannerDesktop\",\n                \"imageBannerDesktop_link\",\n                \"imageBannerDesktop_show\"\n              )}\n            onClick={(e) => {e.target.value = null;this.setStateByName(\"imageBannerDesktop_show\", \"\")}} \n   \n          />\n          <div class=\"text-center\">\n            <img\n              alt=\"\"\n              style={{ width: \"400px\" }}\n              height=\"auto\"\n              src={this.props.imageBannerDesktop}\n            />\n          </div>\n          <TextFieldGroup\n            field=\"hrefImageBannerDesktop\"\n            label=\"Đường dẫn(Nếu có)\"\n            value={this.props.hrefImageBannerDesktop}\n            placeholder=\"\"\n            type={\"text\"}\n            className=\"mt-3\"\n            onChange={(e) => {\n                this.setStateByName(\"hrefImageBannerDesktop\", e.target.value);\n              }}\n            \n          />\n        </div>\n        <hr />\n        <div class=\"mt-3\">\n          <h1>Banner trên điện thoại</h1>\n          <TextFieldGroup\n            field=\"image\"\n            label=\"Hình ảnh\"\n            type={\"file\"}\n            onChange={(e) => {\n              this.onChangeImage(\n                e,\n                \"imageBannerMobile\",\n                \"imageBannerMobile_link\",\n                \"imageBannerMobile_show\"\n              );\n            }}\n            onClick={(e) => {e.target.value = null;this.setStateByName(\"imageBannerMobile_show\", \"\")}} \n          />\n          <div class=\"text-center\">\n            <img\n              alt=\"\"\n              style={{ width: \"400px\" }}\n              height=\"auto\"\n              src={this.props.imageBannerMobile}\n            />\n          </div>\n          <TextFieldGroup\n            field=\"hrefImageBannerMobile\"\n            label=\"Đường dẫn(Nếu có)\"\n            value={this.props.hrefImageBannerMobile}\n            placeholder=\"\"\n            type={\"text\"}\n            className=\"mt-3\"\n            onChange={(e) => {\n              this.setStateByName(\"hrefImageBannerMobile\", e.target.value);\n            }}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport moment from 'moment'\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\nimport { Button, FormGroup, Label,Input  } from \"reactstrap\";\nimport {\n    CTextarea,\n  } from \"@coreui/react\";\nexport default class Seo extends Component {\n  SaveAllConfigWeb() {\n    this.props.SaveAllConfigWeb();\n  }\n  setStateByName = (name, value) => {\n    this.props.setStateByName(name, value);\n  };\n  onChangeImage=(e, name, name_link, name_show) =>{\n    this.props.onChangeImage(e, name, name_link, name_show);\n}\ngetTimeConver = (datetime) => {\n  if(datetime ==null )\n          return '';\n   return  moment(datetime).format('YYYY-MM-DD');\n\n}\n\n  render() {\n    \n    return (\n      <>\n        <div className=\"text-center\">\n          <Button\n            variant=\"contained\"\n            color=\"success\"\n            onClick={() => this.SaveAllConfigWeb()}\n          >\n            Lưu thay đổi\n          </Button>\n        </div>\n        <FormGroup>\n    <Label for=\"exampleDate\">\n     Từ ngày\n    </Label>\n    <Input\n      id=\"fromDate\"\n      name=\"fromDate\"\n      value={this.getTimeConver(this.props.fromDate)}\n      placeholder=\"date placeholder\"\n      type=\"date\"\n      onChange={(e) => {\n        this.setStateByName( \"fromDate\", e.target.value );\n      }}\n    />\n  </FormGroup>\n  <FormGroup>\n  <Label for=\"datetio\">\n     Tới ngày\n    </Label>\n    <Input\n      id=\"todate\"\n      name=\"todate\"\n      placeholder=\"Tới ngày\"\n      type=\"date\"\n      value={this.getTimeConver(this.props.todate)}\n      onChange={(e) => {\n        this.setStateByName( \"todate\", e.target.value );\n      }}\n    />\n  </FormGroup>\n    <FormGroup>\n      <Label for=\"fromtime\">\n        Từ giờ\n      </Label>\n      <Input\n        id=\"fromtime\"\n        name=\"fromtime\"\n        placeholder=\"time placeholder\"\n        type=\"time\"\n        value={this.props.fromtime}\n        onChange={(e) => {\n          this.setStateByName( \"fromtime\", e.target.value );\n        }}\n      />\n    </FormGroup>\n      <FormGroup>\n        <Label>\n          tới giờ\n        </Label>\n        <Input\n          id=\"totime\"\n          name=\"totime\"\n          placeholder=\"time placeholder\"\n          type=\"time\"\n          value={this.props.totime}\n          onChange={(e) => {\n            this.setStateByName( \"totime\", e.target.value );\n          }}\n        />\n      </FormGroup>\n   \n\n          \n      <FormGroup>\n    <Label >\n      Độ tuổi tham gia game\n    </Label>\n    <Input\n      name =\"skinNumber\"\n      placeholder=\"Độ tuổi thamg gia game\"\n      type=\"number\"\n      value={this.props.skinNumber}\n      onChange={(e) => {\n        this.setStateByName( \"skinNumber\", e.target.value );\n      }}\n    />\n  </FormGroup>\n     \n\n\n  <FormGroup>\n    <Label for=\"exampleSelect\">\n      Select\n    </Label>\n    <Input\n      id=\"exampleSelect\"\n      name=\"statusGame\"\n      value={this.props.statusGame}\n      onChange={(e) => {\n        this.setStateByName( \"statusGame\", e.target.value );\n      }}\n      type=\"select\"\n    >\n      <option value = \"1\" >\n         Bật\n      </option>\n      <option value =\"0\">\n        Tắt\n      </option>\n     \n    </Input>\n  </FormGroup>\n        </>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\nimport { Button } from \"reactstrap\";\nimport {\n    CTextarea,\n  } from \"@coreui/react\";\nexport default class Seo extends Component {\n  SaveAllConfigWeb() {\n    this.props.SaveAllConfigWeb();\n  }\n  setStateByName = (name, value) => {\n    this.props.setStateByName(name, value);\n  };\n  onChangeImage=(e, name, name_link, name_show) =>{\n    this.props.onChangeImage(e, name, name_link, name_show);\n}\n  render() {\n    return (\n      <>\n        <div className=\"text-center\">\n          <Button\n            variant=\"contained\"\n            color=\"success\"\n            onClick={() => this.SaveAllConfigWeb()}\n          >\n            Lưu thay đổi\n          </Button>\n        </div>\n        <TextFieldGroup\n            field=\"poupintro\"\n            label=\"Poup giới thiệu:\"\n            value={this.props.poupintro}\n            placeholder={\"\"}\n            onChange={(e) => {\n              this.setStateByName( \"poupintro\", e.target.value );\n            }}\n        />\n        <TextFieldGroup\n            field=\"pupupSuccess\"\n            label=\"Câu thông  báo khi trúng thưởng:\"\n            value={this.props.pupupSuccess}\n            placeholder={\"\"}\n            onChange={(e) => {\n              this.setStateByName( \"pupupSuccess\", e.target.value );\n            }}\n        />\n        <TextFieldGroup\n            field=\"introduce\"\n            label=\"Câu thông báo khi không trúng thưởng:\"\n            value={this.props.popupfail}\n            placeholder={\"\"}\n            onChange={(e) => {\n              this.setStateByName( \"popupfail\", e.target.value );\n            }}\n        />  \n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport List from \"@mui/material/List\";\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Constants from \"./../../contants/contants\";\nimport axios from \"axios\";\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport { IoLogoBuffer } from \"@react-icons/all-files/io/IoLogoBuffer\";\nimport BannerAia from \"./configWeb/BannerAia\";\nimport Logo from \"./configWeb/GameConfig\";\nimport Seo from \"./configWeb/Content\";\nimport { BiSlideshow } from \"react-icons/bi\";\nimport { MdOutlinePermDataSetting } from \"react-icons/md\";\nimport { BsChatDots } from \"react-icons/bs\";\n\nimport Swal from 'sweetalert2';\nlet headers = new Headers();\nconst auth = localStorage.getItem(\"auth\");\nheaders.append(\"Authorization\", \"Bearer \" + auth);\nheaders.append(\"Content-Type\", \"application/json\");\nclass ConfigWeb extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      tabNameConfig: [\n        {\n          _id: \"10\",\n          name: \"Thông tin tổng quan\",\n          icon: <BsChatDots style={{ width: \"24px \", height: \"24px \" }} />,\n        },\n        {\n          _id: \"5\",\n          name: \"Danh sách trúng thưởng\",\n          icon: <BsChatDots style={{ width: \"24px \", height: \"24px \" }} />,\n        },\n\n        {\n          _id: \"9\",\n          name: \"Banner game\",\n          icon: <BiSlideshow style={{ width: \"24px \", height: \"24px \" }} />,\n        },\n        {\n          _id: \"3\",\n          name: \"Nội dung game\",\n          icon: (\n            <MdOutlinePermDataSetting\n              style={{ width: \"24px \", height: \"24px \" }}\n            />\n          ),\n        },\n        {\n          _id: \"4\",\n          name: \"Cấu hình game\",\n          icon: <IoLogoBuffer style={{ width: \"24px \", height: \"24px \" }} />,\n        },\n      ],\n      company_id: JSON.parse(localStorage.getItem(\"user\")).company_id\n        ? JSON.parse(localStorage.getItem(\"user\")).company_id\n        : null,\n      poupintro: \"\",\n      pupupSuccess: \"\",\n      popupfail: \"\",\n      fromDate: \"\",\n      todate: \"\",\n      fromtime: \"\",\n      totime: \"\",\n      skinNumber: \"\",\n      statusGame: \"\",\n    };\n  }\n\n  ToggleViewConfigWeb(id) {\n    var i, tabcontent, tablinks;\n    tabcontent = document.getElementsByClassName(\"tabcontent\");\n    tablinks = document.getElementsByClassName(\"tablinks\");\n    const { tabNameConfig } = this.state;\n    for (i = 0; i < tabNameConfig.length; i++) {\n      if (tabNameConfig[i]._id === id) {\n        tablinks[i].classList.add(\"tabcontent-left-active\");\n      } else {\n        tablinks[i].classList.remove(\"tabcontent-left-active\");\n      }\n    }\n    for (i = 0; i < tabcontent.length; i++) {\n      if (tabcontent[i].id.replace(\"tabcontent\", \"\") === id) {\n        tabcontent[i].classList.add(\"defaultOpen\");\n        tabcontent[i].style.animation = \"hideOpa 1s ease-in-out\";\n      } else {\n        tabcontent[i].classList.remove(\"defaultOpen\");\n        tabcontent[i].style.animation = \"none\";\n      }\n    }\n  }\n  onChangeImage = (e, value, valueLink, valueShow) => {\n    let files = e.target.files;\n    let reader = new FileReader();\n    this.setState({ [valueLink]: files[0] });\n    reader.readAsDataURL(files[0]);\n    reader.onload = (e) => {\n      this.setState({ [value]: e.target.result, [valueShow]: e.target.result });\n    };\n  };\n  async componentDidMount() {\n      await this.getDataConfigWeb();\n      this.ToggleViewConfigWeb(\"9\");\n  }\n\n  async getDataConfigWeb() {\n    var baseUrlapi = Constants.BASE_URL;\n    let url = baseUrlapi + \"/api/game/getInfo\";\n    const newComany_id = this.state.company_id;\n    let Output_newComany_id;\n    if (newComany_id) {\n      Output_newComany_id = newComany_id;\n    } else {\n      Output_newComany_id = \"-1\";\n    }\n    await axios\n      .get(url, {\n        params: {\n          gameType: \"1\",\n\n          company_id: Output_newComany_id,\n        },\n      })\n      .then((res) => {\n        \n        var data = res.data.data;\n        console.log(data);\n        \n           this.setState(\n          {\n            idUpdate: data._id,\n            poupintro: data.poupintro,\n            pupupSuccess: data.pupupSuccess,\n            popupfail: data.popupfail,\n            fromDate: data.fromDate,\n            todate: data.todate,\n            fromtime: data.fromtime,\n            totime: data.totime,\n            skinNumber: data.skinNumber,\n            statusGame: data.statusGame,\n            imageBannerDesktop: data.imageBannerDesktop,\n            imageBannerMobile: data.imageBannerMobile,\n            hrefImageBannerMobile: data.hrefImageBannerMobile,\n            hrefImageBannerDesktop: data.hrefImageBannerDesktop\n          },\n          () => {\n\n            console.log(this.state);\n          }\n        );\n      });\n  }\n\n  SaveAllConfigWeb = async (change) => {\n\n   \n\n    var baseUrlapi = Constants.BASE_URL;\n    let url = baseUrlapi + \"/api/game/update\";\n    const newComany_id = this.state.company_id;\n    let Output_newComany_id;\n    if (newComany_id) {\n      Output_newComany_id = newComany_id;\n    } else {\n      Output_newComany_id = \"-1\";\n    }\n    const bodyRequest = {\n      gameType: \"1\",\n      company_id: Output_newComany_id,\n      poupintro: this.state.poupintro,\n      pupupSuccess: this.state.pupupSuccess,\n      popupfail: this.state.popupfail,\n      fromDate: this.state.fromDate,\n      todate: this.state.todate, \n      fromtime: this.state.fromtime,\n      totime: this.state.totime, \n      skinNumber: this.state.skinNumber,\n      statusGame: this.state.statusGame,\n      typeGame: \"1\",\n      imageBannerDesktop: this.state.imageBannerDesktop,\n      hrefImageBannerDesktop: this.state.hrefImageBannerDesktop,\n      imageBannerMobile: this.state.imageBannerMobile,\n      hrefImageBannerMobile: this.state.hrefImageBannerMobile\n\n\n};\n    \n\n    await axios\n    .post(url,bodyRequest )\n    .then((res) => {\n             Swal.fire({\n              title: 'thao tác thành công!',\n              timer: 3000,    \n            });\n    });\n \n  };\n\n  setStateByName = (name, value) => {\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <div className=\"flex-tabs\">\n            <div className=\"tab\">\n              <List\n                sx={{\n                  width: \"100%\",\n                  maxWidth: 360,\n                  bgcolor: \"background.paper\",\n                }}\n                component=\"nav\"\n                aria-labelledby=\"nested-list-subheader\"\n              >\n                {this.state.tabNameConfig\n                  ? this.state.tabNameConfig.map((item, i) => {\n                      return (\n                        <ListItemButton\n                          key={item._id}\n                          className={\n                            i === 0\n                              ? \" tablinks tabcontent-left-active\"\n                              : \" tablinks\"\n                          }\n                          onClick={() => this.ToggleViewConfigWeb(item._id)}\n                          sx={{ pl: 4 }}\n                        >\n                          <ListItemIcon>{item.icon}</ListItemIcon>\n                          <ListItemText\n                            className=\"tabcontent-left\"\n                            style={{\n                              fontSize: \"14px !important\",\n                              color: \"rgb(52, 71, 103)\",\n                            }}\n                            primary={item.name}\n                          />\n                        </ListItemButton>\n                      );\n                    })\n                  : null}\n              </List>\n            </div>\n            <div className=\"tabcontents\">\n              <div id=\"tabcontent3\" className=\"tabcontent\">\n                <Seo\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\n                  setStateByName={this.setStateByName}\n         \n                  pupupSuccess={this.state.pupupSuccess}\n                  poupintro={this.state.poupintro}\n                  popupfail={this.state.popupfail}\n                  fromDate={this.state.fromDate}\n                  todate={this.state.todate}\n                  fromtime={this.state.fromtime}\n                  totime={this.state.totime}\n                  skinNumber={this.state.skinNumber}\n                  statusGame={this.state.statusGame}\n                />\n              </div>\n              <div id=\"tabcontent9\" className=\"tabcontent\">\n                <BannerAia\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\n                  setStateByName={this.setStateByName}\n                  onChangeImage = {this.onChangeImage}\n                  imageBannerDesktop={this.state.imageBannerDesktop}\n                  hrefImageBannerDesktop={this.state.hrefImageBannerDesktop}\n                  imageBannerMobile={this.state.imageBannerMobile}\n                  hrefImageBannerMobile={this.state.hrefImageBannerMobile}\n                />\n              </div>\n              <div id=\"tabcontent4\" className=\"tabcontent \">\n                <Logo\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\n                  setStateByName={this.setStateByName}\n              \n                  pupupSuccess={this.state.pupupSuccess}\n                  poupintro={this.state.poupintro}\n                  popupfail={this.state.popupfail}\n                  fromDate={this.state.fromDate}\n                  todate={this.state.todate}\n                  fromtime={this.state.fromtime}\n                  totime={this.state.totime}\n                  skinNumber={this.state.skinNumber}\n                  statusGame={this.state.statusGame}\n                />\n              </div>\n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader\n          css={override}\n          size={50}\n          color={\"#123abc\"}\n          loading={this.state.isLoading}\n          speedMultiplier={1.5}\n        />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nexport default ConfigWeb;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder, onClick }) => {\n  return (\n    <div className={classnames('form-group', { 'has-error': error })}>\n      <label className=\"control-label\">{label}</label>\n      <input\n        onChange={onChange}\n        onClick={onClick}\n        onBlur={checkUserExists}\n        value={value}\n        type={type}\n        name={field}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        className=\"form-control\"\n      />\n    {error && <span className=\"help-block\">{error}</span>}\n    </div>  );\n}\n\nTextFieldGroup.propTypes = {\n  field: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checkUserExists: PropTypes.func\n}\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextFieldGroup;\n"],"sourceRoot":""}