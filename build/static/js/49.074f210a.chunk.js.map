{"version":3,"sources":["views/base/tables/Points/Point.js","assets/styles/styles.js"],"names":["Point","props","getData","a","companyid","state","setState","isLoading","axios","baseURL","Constants","BASE_URL","url","LIST_POINT","data","company_id","method","resLocation","val","pagination","dataApi","getPointByIUD","user_id","modalDetail","LIST_POINT_BY_UID","console","log","dataDetail","length","totalItem","total","chunkData","getPointInstockByIUD","LIST_POINT_INSTOCK_BY_UID","key","totalActive","modalCom","updated","hidden","action","arrPagination","indexPage","token","Authorization","localStorage","getItem","user","this","type","arr","JSON","parse","i","window","location","hash","isHidden","href","j","temparray","arrTotal","slice","push","d","map","label","toLocaleUpperCase","includes","active","Status","e","name_action","target","value","searchKey","name","className","css","override","size","color","loading","speedMultiplier","style","styles","tags","sm","lg","searchInput","onChange","actionSearch","placeholder","width","marginTop","onClick","resetSearch","ble","colSpan","undefined","item","UID","variant","point_used","point_instock","total_point","Date","create_date","toLocaleDateString","toLocaleTimeString","float","count","v","isOpen","order_id","product_id","_id","product_name","margin","Component","marginRight","flexLabel","flexOption","textDecoration","floatRight","spinner","center","textAlign","tbody","height","overflowY","wh25","w5","wa10","row","success","danger","mgl5","marginLeft","display","userActive","userPending","nagemonNameCol","image","borderRadius"],"mappings":"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","file":"static/js/49.074f210a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport CIcon from '@coreui/icons-react'\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Input,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter\n} from 'reactstrap';\n\nimport {\n  CButton,\n  CRow,\n  CCol\n} from '@coreui/react'\n\nimport Pagination from '@material-ui/lab/Pagination';\nimport 'moment-timezone';\nimport Constants from \"../../../../contants/contants_app\";\nimport styles from \"../../../../assets/styles/styles\";\nimport axios from 'axios'\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\n\nclass Point extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      totalActive: 0,\n      modalCom: false,\n      updated: '',\n      dataApi: [],\n      hidden: false,\n      action: 'new',\n      arrPagination: [],\n      indexPage: 0,\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      user: localStorage.getItem('user'),\n      companyid: localStorage.getItem('company_id'),\n      isLoading: false,\n      modalDetail: false,\n      dataDetail: [],\n      totalItem: 0,\n      chunkData: []\n    };\n  }\n  async componentDidMount() {\n    const { type } = this.state;\n\n    this.getData()\n\n    let arr = JSON.parse(localStorage.getItem('url'));\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].url == window.location.hash) {\n        if (arr[i].isHidden == true) {\n          window.location.href = '#/'\n        }\n      }\n    }\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden: false\n      })\n    } else {\n      this.setState({\n        hidden: true\n      })\n    }\n\n    this.setState({ arrPagination: arrTotal, data: arrTotal[0] });\n  }\n\n  getData = async () => {\n    const { companyid } = this.state\n    this.setState({ isLoading: true });\n    const resLocation = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_POINT,\n      data: {\n        company_id: companyid\n      },\n      method: 'POST'\n    });\n\n    let val = resLocation.data.data;\n\n    this.pagination(val);\n    this.setState({ dataApi: val, isLoading: false });\n  }\n\n  getPointByIUD = async (user_id) => {\n    const { companyid, modalDetail } = this.state\n\n    const resLocation = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_POINT_BY_UID,\n      data: {\n        company_id: companyid,\n        user_id: user_id\n      },\n      method: 'POST'\n    });\n\n    let val = resLocation.data.data;\n    console.log(val.data)\n    this.setState({ modalDetail: !modalDetail, dataDetail: val.data.length > 0 ? val.data[0] : [], totalItem: val.total, chunkData: val.data })\n  }\n\n  getPointInstockByIUD = async (user_id) => {\n    const { companyid, modalDetail } = this.state\n\n    const resLocation = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_POINT_INSTOCK_BY_UID,\n      data: {\n        company_id: companyid,\n        user_id: user_id\n      },\n      method: 'POST'\n    });\n\n    let val = resLocation.data.data;\n    this.setState({ modalDetail: !modalDetail, dataDetail: val.data[0], totalItem: val.total, chunkData: val.data })\n  }\n\n  searchKey() {\n    const { indexPage, key } = this.state;\n    // this.setState({ key: key })\n\n    if (key != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if (val.label.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n      let active = 0\n\n      d.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: d, totalActive: active })\n    } else {\n      let active = 0\n\n      this.state.dataApi.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: this.state.arrPagination[indexPage], totalActive: active })\n    }\n  }\n\n  actionSearch(e, name_action) {\n    this.setState({\n      [name_action]: e.target.value\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  resetSearch() {\n    this.setState({\n      key: ''\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { data, arrPagination, key, chunkData, totalItem, dataDetail } = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Danh sách tích điểm\n                  <div style={styles.tags}>\n\n                    <CRow>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CRow>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <div>\n                              <Input style={styles.searchInput} onChange={(e) => {\n                                this.actionSearch(e, \"key\");\n                              }} name=\"key\" value={key} placeholder=\"Từ khóa\" />\n                            </div>\n                          </CCol>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <CButton color=\"primary\" style={{ width: '100%', marginTop: 5 }} size=\"sm\" onClick={e => { this.resetSearch() }}>Làm mới tìm kiếm</CButton>\n                          </CCol>\n                        </CRow>\n                      </CCol>\n                      <CCol sm=\"12\" lg=\"12\">\n\n                      </CCol>\n                    </CRow>\n\n                  </div>\n                </CardHeader>\n                <CardBody>\n\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        <th className=\"text-center\">Tên người dùng</th>\n                        <th className=\"text-center\">Điểm đã dùng</th>\n                        <th className=\"text-center\">Điểm chưa dùng</th>\n                        <th className=\"text-center\">Tổng điểm</th>\n                        <th className=\"text-center\">Ngày tạo</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <td colSpan=\"10\" hidden={this.state.hidden} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                <td className=\"text-center\">\n                                  {item.name}\n                                </td>\n                                <td className=\"text-center\">\n                                  <CButton onClick={() => { this.getPointByIUD(item.UID) }} variant=\"outline\" color='info' style={{ width: 100, color: '#000000' }}>\n                                    {item.point_used}\n                                  </CButton>\n                                </td>\n                                <td className=\"text-center\">\n                                  <CButton onClick={() => { this.getPointInstockByIUD(item.UID) }} variant=\"outline\" color='info' style={{ width: 100, color: '#000000' }}>\n                                    {item.point_instock}\n                                  </CButton>\n                                </td>\n                                <td className=\"text-center\">\n                                  {item.total_point}\n                                </td>\n                                <td className=\"text-center\">\n                                  {new Date(item.create_date).toLocaleDateString() + \" \" + new Date(item.create_date).toLocaleTimeString()}\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n                </CardBody>\n              </Card>\n              <div style={{ float: 'right' }}>\n                <Pagination count={arrPagination.length} color=\"primary\" onChange={(e, v) => {\n                  this.setState({ data: arrPagination[v - 1], indexPage: v - 1 })\n                }} />\n              </div>\n            </Col>\n          </Row>\n\n          <Modal size='xl' isOpen={this.state.modalDetail} className={this.props.className}>\n            <ModalHeader>Chi tiết sử dụng điểm</ModalHeader>\n            <ModalBody>\n              <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th className=\"text-center\">STT.</th>\n                    <th className=\"text-center\">Mã đơn hàng</th>\n                    <th className=\"text-center\">Mã sản phẩm</th>\n                    <th className=\"text-center\">Tên sản phẩm</th>\n                    <th className=\"text-center\">Tổng điểm\t</th>\n                    <th className=\"text-center\">Ngày đổi</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <td colSpan=\"10\" hidden={dataDetail.length == 0 || dataDetail == undefined ? false : true} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                  {\n                    dataDetail != undefined ?\n                      dataDetail.map((item, i) => {\n                        return (\n                          <tr key={i}>\n                            <td className=\"text-center\">{i + 1}</td>\n                            <td className=\"text-center\">{item.order_id}</td>\n                            <td className=\"text-center\">{item.product_id._id}</td>\n                            <td className=\"text-center\">\n                              {item.product_name}\n                            </td>\n                            <td className=\"text-center\">\n                              {item.total_point}\n                            </td>\n                            <td className=\"text-center\">\n                              {new Date(item.create_date).toLocaleDateString() + \" \" + new Date(item.create_date).toLocaleTimeString()}\n                            </td>\n                          </tr>\n                        );\n                      }) : \"\"\n                  }\n                </tbody>\n              </table>\n              <div style={{ float: 'right', margin: 5 }}>\n                <Pagination count={totalItem} color=\"primary\" onChange={(e, v) => {\n                  this.setState({ dataDetail: chunkData[v - 1] })\n                }} />\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"secondary\" onClick={e => this.setState({ modalDetail: !this.state.modalDetail })}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n        </div>\n      );\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nexport default Point;\n","const styles = {\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: 300\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: \"right\",\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh25: {\n    width: \"25%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  w5: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    marginLeft: '5px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\"\n  },\n  searchInput: {\n    width: \"190px\",\n    display: 'inline-block',\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n}\n\n\nexport default styles;\n"],"sourceRoot":""}