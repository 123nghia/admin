{"version":3,"sources":["views/users/ProfileUser.js"],"names":["headers","Headers","auth","localStorage","getItem","append","Users","props","getData","a","setState","isLoading","axios","baseURL","Constants","BASE_URL","url","PLUGIN_GET_USER_BYID","method","state","token","res","val","data","dataApi","currentPassword","Password","current_slug","Company_Id","undefined","Slug","companyID","_id","Email","Name","Phone","Address","UserName","Message_Code","isDisable","getPackageName","package_id","PLUGIN_DATA_PACKAGE","resPackage","updated","delete","hidden","Authorization","role","type","company_id","arrTotalPackage","isChange","isChangeSlug","this","arr","JSON","parse","i","length","to","window","location","hash","href","key","name_link","e","target","name","value","id","password","PLUGIN_UPDATE_PASSWORD","new_password","is_success","alert","message","UPDATE_SLUG","body","isHash","Status","PLUGIN_UPDATE_USER_COMPANY","className","css","override","size","color","loading","speedMultiplier","style","styles","success","danger","deleted","sm","lg","content","outline","onClick","updateCompany","searchInput","onChange","readOnly","updatePassword","Component","datePicker","marginBottom","wa10","width","float","height","pagination","marginRight","flexLabel","flexOption","margin","textDecoration","floatRight","marginTop","spinner","center","textAlign","tbody","overflowY","wh12","wh15","w5","row","mgl5","marginLeft","tags","display","userActive","userPending","nagemonNameCol","image","borderRadius"],"mappings":"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","file":"static/js/31.1198f7b1.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n  Button,\r\n  Input,\r\n} from \"reactstrap\";\r\n\r\nimport {\r\n  CLabel,\r\n  CRow,\r\n  CCol,\r\n  CButton,\r\n  CTooltip,\r\n  CTextarea,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\nimport \"moment-timezone\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Constants from \"./../../contants/contants\";\r\nimport axios from \"axios\";\r\nimport { css } from \"@emotion/react\";\r\nimport DotLoader from \"react-spinners/DotLoader\";\r\nlet headers = new Headers();\r\nconst auth = localStorage.getItem(\"auth\");\r\nheaders.append(\"Authorization\", \"Bearer \" + auth);\r\nheaders.append(\"Content-Type\", \"application/json\");\r\nclass Users extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      updated: \"\",\r\n      dataApi: [],\r\n      delete: null,\r\n      hidden: true,\r\n      token: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n      role: localStorage.getItem(\"role\"),\r\n      type: localStorage.getItem(\"type\"),\r\n      company_id: localStorage.getItem(\"user\"),\r\n      current_slug: \"\",\r\n      companyID: \"\",\r\n      arrTotalPackage: [],\r\n      isChange: true,\r\n      isChangeSlug: true,\r\n      currentPassword: \"\",\r\n      isLoading: false,\r\n      isDisable: true,\r\n      Email: \"\",\r\n      Name: \"\",\r\n      Phone: \"\",\r\n      Address: \"\",\r\n      UserName: \"\",\r\n      Message_Code: \"\",\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    this.getData();\r\n\r\n    let arr = JSON.parse(localStorage.getItem(\"url\"));\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (\"#\" + arr[i].to == window.location.hash) {\r\n        if (arr[i].hidden == true) {\r\n          window.location.href = \"#/\";\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getData = async () => {\r\n    this.setState({ isLoading: true });\r\n    const res = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.PLUGIN_GET_USER_BYID,\r\n      method: \"POST\",\r\n      headers: this.state.token,\r\n    });\r\n    let val = res.data.data;\r\n\r\n    this.setState({\r\n      dataApi: val,\r\n      data: val,\r\n      currentPassword: val.Password,\r\n      isLoading: false,\r\n      current_slug:\r\n        val.Company_Id == null || val.Company_Id == undefined\r\n          ? null\r\n          : val.Company_Id.Slug,\r\n      companyID:\r\n        val.Company_Id == null || val.Company_Id == undefined\r\n          ? null\r\n          : val.Company_Id._id,\r\n      Email: val.Email,\r\n      Name: val.Name,\r\n      Phone: val.Phone,\r\n      Address: val.Address,\r\n      UserName: val.UserName,\r\n      Message_Code: val.Message_Code,\r\n      isDisable: true,\r\n    });\r\n  };\r\n\r\n  onChange(key, val) {\r\n    this.setState({ [key]: val });\r\n  }\r\n\r\n  openUpdate(name_link) {\r\n    this.setState({\r\n      [name_link]: !this.state[name_link],\r\n    });\r\n  }\r\n\r\n  getPackageName = async (package_id) => {\r\n    const resPackage = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.PLUGIN_DATA_PACKAGE,\r\n      method: \"POST\",\r\n      data: {\r\n        package_id: package_id,\r\n      },\r\n    });\r\n    return resPackage.data.data;\r\n  };\r\n\r\n  inputChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  async updatePassword(id, password) {\r\n    const res = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.PLUGIN_UPDATE_PASSWORD,\r\n      method: \"POST\",\r\n      data: {\r\n        id: id,\r\n        new_password: password,\r\n      },\r\n    });\r\n\r\n    if (res.data.is_success == true) {\r\n      this.getData();\r\n      this.setState({ isChange: true });\r\n    } else {\r\n      alert(res.data.message);\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  async updateSlug() {\r\n    const res = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.UPDATE_SLUG,\r\n      method: \"POST\",\r\n      data: {\r\n        id: this.state.companyID,\r\n        Slug: this.state.current_slug,\r\n      },\r\n    });\r\n\r\n    if (res.data.is_success == true) {\r\n      this.getData();\r\n      this.setState({ isChangeSlug: true });\r\n    } else {\r\n      alert(res.data.message);\r\n      this.setState({ isChangeSlug: false });\r\n    }\r\n  }\r\n\r\n  async updateCompany() {\r\n    const { Email, Name, Phone, Address, UserName, data, Message_Code } =\r\n      this.state;\r\n\r\n    if (\r\n      Name == null ||\r\n      Name == \"\" ||\r\n      Phone == null ||\r\n      Phone == \"\" ||\r\n      UserName == null ||\r\n      UserName == \"\"\r\n    ) {\r\n      alert(\"Vui lòng nhập đầy đủ trường !!!\");\r\n      return;\r\n    }\r\n\r\n    const body = {\r\n      isHash: false,\r\n      Name: Name == \"\" ? data.Name : Name,\r\n      Email: Email == \"\" ? data.Email : Email,\r\n      Phone: Phone == \"\" ? data.Phone : Phone,\r\n      Address: Address == \"\" ? data.Address : Address,\r\n      UserName: UserName == \"\" ? data.UserName : UserName,\r\n      Message_Code:\r\n        Message_Code == \"\" || Message_Code == null\r\n          ? data.Message_Code\r\n          : Message_Code,\r\n      Password: data.Password,\r\n      Status: data.Status,\r\n      id: data._id,\r\n    };\r\n\r\n    this.setState({ isLoading: true });\r\n    const res = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.PLUGIN_UPDATE_USER_COMPANY,\r\n      method: \"POST\",\r\n      data: body,\r\n    });\r\n\r\n    if (res.data.is_success == true) {\r\n      this.getData();\r\n    } else {\r\n      alert(res.data.message);\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      data,\r\n      current_slug,\r\n      isChange,\r\n      currentPassword,\r\n      isChangeSlug,\r\n      type,\r\n      isDisable,\r\n      Email,\r\n      Name,\r\n      Phone,\r\n      Address,\r\n      UserName,\r\n      Message_Code,\r\n    } = this.state;\r\n\r\n    if (!this.state.isLoading) {\r\n      return (\r\n        <div className=\"animated fadeIn\">\r\n          <Row>\r\n            <Col>\r\n              <p style={styles.success}>{this.state.updated}</p>\r\n              <p style={styles.danger}>{this.state.deleted}</p>\r\n              <Card>\r\n                <CardHeader>THÔNG TIN TÀI KHOẢN</CardHeader>\r\n                <CardBody className=\"table__overflow\">\r\n                  <CRow>\r\n                    <CCol sm=\"12\" lg=\"12\">\r\n                      <CRow>\r\n                        <CCol sm=\"12\" lg=\"10\">\r\n                          <CLabel>\r\n                            <strong>Quản lý tài khoản</strong>\r\n                          </CLabel>\r\n                        </CCol>\r\n                        {type == \"0\" || type == \"1\" ? (\r\n                          \"\"\r\n                        ) : (\r\n                          <CCol sm=\"12\" lg=\"2\">\r\n                            <CTooltip content=\"Xem chi tiết đơn hàng\">\r\n                              {isDisable ? (\r\n                                <CButton\r\n                                  outline\r\n                                  color=\"info\"\r\n                                  size=\"xm\"\r\n                                  onClick={async (e) => {\r\n                                    this.setState({ isDisable: !isDisable });\r\n                                  }}\r\n                                >\r\n                                  <CIcon name=\"cil-pencil\" /> Cập nhật\r\n                                </CButton>\r\n                              ) : (\r\n                                <CButton\r\n                                  outline\r\n                                  color=\"info\"\r\n                                  size=\"sm\"\r\n                                  onClick={async (e) => {\r\n                                    this.updateCompany();\r\n                                  }}\r\n                                >\r\n                                  <CIcon name=\"cil-pencil\" /> Xác nhận cập nhật\r\n                                </CButton>\r\n                              )}\r\n                            </CTooltip>\r\n                          </CCol>\r\n                        )}\r\n                      </CRow>\r\n                      <CRow>\r\n                        <CCol sm=\"12\" lg=\"12\">\r\n                          <div>\r\n                            <CLabel>Tên (*)</CLabel>\r\n                            <Input\r\n                              style={styles.searchInput}\r\n                              onChange={(e) => {\r\n                                this.setState({ Name: e.target.value });\r\n                              }}\r\n                              value={Name}\r\n                              readOnly={isDisable}\r\n                            />\r\n                          </div>\r\n                        </CCol>\r\n\r\n                        <CCol sm=\"12\" lg=\"12\">\r\n                          <CLabel>Email</CLabel>\r\n                          <Input\r\n                            style={styles.searchInput}\r\n                            value={Email}\r\n                            onChange={(e) => {\r\n                              this.setState({ Email: e.target.value });\r\n                            }}\r\n                            readOnly={isDisable}\r\n                          />\r\n                        </CCol>\r\n\r\n                        <CCol sm=\"12\" lg=\"12\">\r\n                          <CLabel>Số điện thoại (*)</CLabel>\r\n                          <Input\r\n                            style={styles.searchInput}\r\n                            value={Phone}\r\n                            onChange={(e) => {\r\n                              this.setState({ Phone: e.target.value });\r\n                            }}\r\n                            readOnly={isDisable}\r\n                          />\r\n                        </CCol>\r\n\r\n                        {/* <CCol sm=\"12\" lg=\"12\">\r\n                          <div>\r\n                            <CLabel>Giới tính</CLabel>\r\n                            <Input style={styles.searchInput} value={data.Gender} />\r\n                          </div>\r\n                        </CCol> */}\r\n\r\n                        <CCol sm=\"12\" lg=\"12\">\r\n                          <div>\r\n                            <CLabel>Địa chỉ</CLabel>\r\n                            <Input\r\n                              style={styles.searchInput}\r\n                              value={Address}\r\n                              onChange={(e) => {\r\n                                this.setState({ Address: e.target.value });\r\n                              }}\r\n                              readOnly={isDisable}\r\n                            />\r\n                          </div>\r\n                        </CCol>\r\n\r\n                        {/* <CCol sm=\"12\" lg=\"12\">\r\n                          <div>\r\n                            <CLabel>Tên công ty</CLabel>\r\n                            <Input style={styles.searchInput} value={data.Company_Id == undefined ? \"\" : data.Company_Id.Name} />\r\n                          </div>\r\n                        </CCol> */}\r\n\r\n                        <CCol sm=\"12\" lg=\"12\">\r\n                          <CLabel>Slug</CLabel>\r\n                          <CRow>\r\n                            <CCol sm=\"12\" lg=\"12\">\r\n                              <div>\r\n                                <Input\r\n                                  style={styles.searchInput}\r\n                                  readOnly={isDisable}\r\n                                  onChange={(e) => {\r\n                                    this.setState({\r\n                                      current_slug: e.target.value,\r\n                                    });\r\n                                  }}\r\n                                  value={current_slug}\r\n                                />\r\n                              </div>\r\n                            </CCol>\r\n                            \r\n                          </CRow>\r\n                        </CCol>\r\n\r\n                        <CCol sm=\"12\" lg=\"12\">\r\n                          <div>\r\n                            <CLabel>Tên đăng nhập (*)</CLabel>\r\n                            <Input\r\n                              style={styles.searchInput}\r\n                              value={UserName}\r\n                              onChange={(e) => {\r\n                                this.setState({ UserName: e.target.value });\r\n                              }}\r\n                              readOnly={isDisable}\r\n                            />\r\n                          </div>\r\n                        </CCol>\r\n\r\n                        <CCol sm=\"12\" lg=\"12\">\r\n                          <CLabel>Mật khẩu (*)</CLabel>\r\n                          <CRow>\r\n                            <CCol sm=\"9\" lg=\"9\">\r\n                              <Input\r\n                                type={\"password\"}\r\n                                style={styles.searchInput}\r\n                                readOnly={isChange}\r\n                                onChange={(e) => {\r\n                                  this.setState({\r\n                                    currentPassword: e.target.value,\r\n                                  });\r\n                                }}\r\n                                value={currentPassword}\r\n                              />\r\n                            </CCol>\r\n                            <CCol sm=\"3\" lg=\"3\">\r\n                              {isChange ? (\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  onClick={(e) => {\r\n                                    this.setState({ isChange: false });\r\n                                  }}\r\n                                >\r\n                                  Thay đổi\r\n                                </Button>\r\n                              ) : (\r\n                                <Button\r\n                                  color=\"primary\"\r\n                                  onClick={async (e) => {\r\n                                    await this.updatePassword(\r\n                                      data._id,\r\n                                      currentPassword\r\n                                    );\r\n                                  }}\r\n                                >\r\n                                  Cập nhật\r\n                                </Button>\r\n                              )}\r\n                            </CCol>\r\n                          </CRow>\r\n                        </CCol>\r\n\r\n                        {/* <CCol sm=\"12\" lg=\"12\">\r\n                          <div>\r\n                            <CLabel>Mã code message (nhắn tin với khách hàng)</CLabel>\r\n                            <CTextarea style={styles.searchInput} rows={9} value={Message_Code} onChange={(e) => { this.setState({ Message_Code: e.target.value }) }} readOnly={isDisable} />\r\n                          </div>\r\n                        </CCol> */}\r\n\r\n                        {/* <CCol sm=\"12\" lg=\"12\">\r\n                          <div>\r\n                            <CLabel>Trạng thái</CLabel>\r\n                            <Input style={styles.searchInput} onChange={(e) => { }} value={data.Status} />\r\n                          </div>\r\n                        </CCol> */}\r\n                      </CRow>\r\n                    </CCol>\r\n                  </CRow>\r\n                </CardBody>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div className=\"sweet-loading\">\r\n        <DotLoader\r\n          css={override}\r\n          size={50}\r\n          color={\"#123abc\"}\r\n          loading={this.state.isLoading}\r\n          speedMultiplier={1.5}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nconst styles = {\r\n  datePicker: {\r\n    marginBottom: 20,\r\n  },\r\n  wa10: {\r\n    width: \"5%\",\r\n    float: \"left\",\r\n    height: \"80px\",\r\n  },\r\n  pagination: {\r\n    marginRight: \"5px\",\r\n  },\r\n  flexLabel: {\r\n    width: 100,\r\n  },\r\n  flexOption: {\r\n    width: 200,\r\n    margin: \"1px\",\r\n  },\r\n  a: {\r\n    textDecoration: \"none\",\r\n  },\r\n  floatRight: {\r\n    float: \"right\",\r\n    marginTop: \"3px\",\r\n  },\r\n  spinner: {\r\n    width: \"30px\",\r\n  },\r\n  center: {\r\n    textAlign: \"center\",\r\n  },\r\n  tbody: {\r\n    height: \"380px\",\r\n    overflowY: \"auto\",\r\n  },\r\n  wh12: {\r\n    width: \"10%\",\r\n    float: \"left\",\r\n    height: \"80px\",\r\n  },\r\n  wh15: {\r\n    width: \"15%\",\r\n    float: \"left\",\r\n    height: \"80px\",\r\n  },\r\n  w5: {\r\n    width: \"12%\",\r\n    float: \"left\",\r\n    height: \"80px\",\r\n  },\r\n  row: {\r\n    float: \"left\",\r\n    width: \"100%\",\r\n  },\r\n  success: {\r\n    color: \"green\",\r\n  },\r\n  danger: {\r\n    color: \"red\",\r\n  },\r\n  mgl5: {\r\n    marginLeft: \"5px\",\r\n  },\r\n  tags: {\r\n    float: \"right\",\r\n    marginRight: \"5px\",\r\n  },\r\n  searchInput: {\r\n    width: \"100%\",\r\n    display: \"inline-block\",\r\n    margin: \"1px\",\r\n  },\r\n  userActive: {\r\n    color: \"green\",\r\n  },\r\n  userPending: {\r\n    color: \"red\",\r\n  },\r\n  nagemonNameCol: {\r\n    width: \"328px\",\r\n  },\r\n  image: {\r\n    width: \"100px\",\r\n    height: \"100px\",\r\n    borderRadius: \"99999px\",\r\n  },\r\n};\r\n\r\nexport default Users;\r\n"],"sourceRoot":""}