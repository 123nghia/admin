{"version":3,"sources":["views/DashBoard/ShopManager.js","views/DashBoard/SaleManager.js","views/DashBoard/AdminManager.js","views/DashBoard/Dashboard.js","contants/contants.js","helpers/callAPI.js"],"names":["ShopManager","props","state","month","dataUserSale","dataStatistical","arrPaginationStatistical","indexPageStatistical","company_id","localStorage","getItem","dataApi","arrTemp","hidden","hidden_all","arrAllUser","token","Authorization","isLoading","isLoadingCustomer","lengthData","a","this","setState","getCustomerByMonth","getDataForCharts","getCustomer","arr","phone","filter","data","Phone","length","i","j","temparray","arrTotal_Statistical","slice","push","index","id","JSON","parse","API_CONNECT","Constants","LIST_CUSTOMER_V2","res","is_success","count","axios","baseURL","BASE_URL","url","COMPANY_CHART","method","bodyUser","LIST_CUSTOMER_BY_MONTH","pagination_statistical","className","css","override","size","color","loading","speedMultiplier","row","xs","sm","md","lg","htmlFor","style","height","colSpan","undefined","map","item","Name","Email","Gender","Number","coefficient","toFixed","Date","Create_Date","toLocaleDateString","toLocaleTimeString","width","margin","Pagination","onChange","e","v","backgroundColor","datasets","label","labels","options","tooltips","enabled","float","target","value","custom","name","Component","indexPage","sale_id","status","SALE_CHART","console","log","GET_USER_SALE_BY_MONTH","ls","AdminManager","arrPagination","ADMIN_CHART","LIST_CUSTOMER_BY_MONTH_ADMIN","headers","Headers","auth","append","Dashboard","SaleManager","require","default","defaults","constants","connect","type","get","post","put","delete","del"],"mappings":"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","file":"static/js/47.c66ad898.chunk.js","sourcesContent":["import React, { lazy, Component } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CFormGroup,\n  CLabel,\n  CSelect, CCardGroup\n} from '@coreui/react'\n\nimport {\n  CChartBar,\n} from '@coreui/react-chartjs'\n\nimport {\n  Button\n} from 'reactstrap';\nimport axios from 'axios'\nimport Constants from \"./../../contants/contants\";\n\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport API_CONNECT from \"../../../src/helpers/callAPI\";\n\nclass ShopManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      month: 0,\n      dataUserSale: [],\n      dataStatistical: [],\n      arrPaginationStatistical: [],\n      indexPageStatistical: 0,\n      company_id: localStorage.getItem('user'),\n      dataApi: [],\n      arrTemp: [],\n      hidden: true,\n      hidden_all: true,\n      arrAllUser: [],\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      isLoading: false,\n      isLoadingCustomer: false,\n      lengthData: []\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    await this.getCustomerByMonth(\"01\");\n    await this.getDataForCharts();\n    await this.getCustomer(0);\n  }\n\n  countType(arr, phone) {\n    const count = arr.filter(data => data.Phone == phone);\n    return count.length;\n  }\n\n  pagination_statistical(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal_Statistical = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal_Statistical.push(temparray);\n    }\n    this.setState({ arrPaginationStatistical: arrTotal_Statistical, dataStatistical: arrTotal_Statistical[this.state.indexPageStatistical] });\n  }\n\n  async getCustomer(index) {\n\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n    this.setState({ isLoadingCustomer: true })\n\n    const res = await API_CONNECT(Constants.LIST_CUSTOMER_V2, {\n      \"condition\": {\n        \"Company_Id\": id.company_id\n      },\n      \"index\": index\n    }, this.state.token, \"POST\")\n\n\n    if (res.is_success == true) {\n      let data = res.data.data\n\n      this.setState({ dataApi: data, isLoadingCustomer: false, dataUserSale: data, lengthData: res.data.count });\n    }\n\n  }\n\n  async getDataForCharts() {\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.COMPANY_CHART,\n      method: 'POST',\n      data: {\n        company_id: id.company_id\n      }\n    });\n\n    this.setState({ arrAllUser: res.data.data, isLoading: false })\n  }\n\n  async getCustomerByMonth(month) {\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n    var bodyUser = {\n      company_id: id.company_id,\n      month: month\n    }\n\n    if (month == 0) {\n      await this.getCustomer(0);\n    } else {\n      const res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_CUSTOMER_BY_MONTH,\n        method: 'POST',\n        data: bodyUser\n      });\n\n      let data = res.data.data\n      if (data.length == 0) {\n        this.setState({ hidden: false })\n      } else {\n        this.setState({ hidden: true })\n      }\n      this.setState({ dataApi: data, arrTemp: data, isLoading: false });\n\n      this.pagination_statistical(data);\n    }\n  }\n\n  render() {\n    const { dataUserSale, hidden, isLoading, hidden_all, lengthData,\n      dataStatistical, arrPaginationStatistical, isLoadingCustomer } = this.state;\n    if (!isLoading) {\n      return (\n        <CRow>\n          <CCol>\n            <CCard>\n              <CCardHeader>\n                <CFormGroup row>\n                  <CCol xs=\"12\" sm=\"12\" md=\"3\" lg=\"3\">\n                    <CLabel htmlFor=\"selectSm\">Thống kê tổng số lượt user</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" sm=\"12\" md=\"9\" lg=\"9\">\n\n                  </CCol>\n                </CFormGroup>\n              </CCardHeader>\n              <CCardBody>\n                {\n                  isLoadingCustomer ?\n                    <div className=\"sweet-loading\" style={{ height: 276 }}>\n                      <DotLoader css={override} size={50} color={\"#123abc\"} loading={isLoadingCustomer} speedMultiplier={1.5} />\n                    </div> :\n                    <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                      <thead className=\"thead-light\">\n                        <tr>\n                          <th className=\"text-center\">STT.</th>\n                          <th className=\"text-center\">Tên</th>\n                          <th className=\"text-center\">Email</th>\n                          <th className=\"text-center\">Số điện thoại</th>\n                          <th className=\"text-center\">Giới tính</th>\n                          <th className=\"text-center\">Số lần đến</th>\n                          <th className=\"text-center\">Hệ số</th>\n                          <th className=\"text-center\">Lần cuối đến</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <td colSpan=\"9\" hidden={hidden_all} className=\"text-center\">Không có dữ liệu</td>\n                        {\n                          dataUserSale != undefined ?\n                            dataUserSale.map((item, i) => {\n                              return (\n                                <tr key={i}>\n                                  <td className=\"text-center\">{i + 1}</td>\n                                  <td className=\"text-center\">{item.Name}</td>\n                                  <td className=\"text-center\">{item.Email}</td>\n                                  <td className=\"text-center\">{item.Phone}</td>\n                                  <td className=\"text-center\">{item.Gender}</td>\n                                  <td className=\"text-center\">{item.count}</td>\n                                  <td className=\"text-center\">{Number(item.coefficient).toFixed(2)}</td>\n                                  <td className=\"text-center\">\n                                    {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\n                                  </td>\n                                </tr>\n                              );\n                            }) : \"\"\n                        }\n                      </tbody>\n                      <tfoot>\n\n                      </tfoot>\n                    </table>\n                }\n                <div style={{ width: '100%', margin: 10 }}>\n                  <Pagination count={lengthData} color=\"primary\" onChange={(e, v) => {\n                    this.getCustomer(v - 1)\n                  }} />\n                </div>\n                <br />\n\n                <CRow>\n                  <CCol xs=\"12\" sm=\"5\">\n                    <CCard backgroundColor=\"red\">\n                      <CCardHeader>\n                        Biểu đồ thể hiện lượt người dùng qua từng tháng\n                      </CCardHeader>\n                      <CCardBody>\n                        <CChartBar\n                          datasets={[\n                            {\n                              label: 'Tổng người lượt người dùng của tháng ',\n                              backgroundColor: '#0008ff',\n                              data: this.state.arrAllUser\n                            }\n                          ]}\n                          labels=\"months\"\n                          options={{\n                            tooltips: {\n                              enabled: true\n                            }\n                          }}\n                        />\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                  <CCol xs=\"12\" sm=\"7\">\n                    <CCard>\n                      <CCardHeader>\n                        <CFormGroup row>\n                          <CCol xs=\"12\" md=\"8\">\n                            <CLabel htmlFor=\"selectSm\">Người dùng theo tháng</CLabel>\n                          </CCol>\n                          <CCol xs=\"12\" md=\"4\">\n                            <div style={{ float: \"right\", width: \"250px\" }}>\n                              <CSelect onChange={async e => { await this.getCustomerByMonth(e.target.value) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                                <option value=\"01\">01</option>\n                                <option value=\"02\">02</option>\n                                <option value=\"03\">03</option>\n                                <option value=\"04\">04</option>\n                                <option value=\"05\">05</option>\n                                <option value=\"06\">06</option>\n                                <option value=\"07\">07</option>\n                                <option value=\"08\">08</option>\n                                <option value=\"09\">09</option>\n                                <option value=\"10\">10</option>\n                                <option value=\"11\">11</option>\n                                <option value=\"12\">12</option>\n                              </CSelect>\n                            </div>\n                          </CCol>\n                        </CFormGroup>\n                      </CCardHeader>\n                      <CCardBody>\n                        <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                          <thead className=\"thead-light\">\n                            <tr>\n                              <th className=\"text-center\">Tên</th>\n                              <th className=\"text-center\">Số điện thoại</th>\n                              <th className=\"text-center\">Giới tính</th>\n                              <th className=\"text-center\">Số lần đến</th>\n                              <th className=\"text-center\">Hệ số</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <td colSpan=\"7\" hidden={hidden} className=\"text-center\">Không có user trong tháng này</td>\n                            {\n                              dataStatistical != undefined ?\n                                dataStatistical.map((item, i) => {\n                                  return (\n                                    <tr key={i}>\n                                      <td className=\"text-center\">{item.Name}</td>\n                                      <td className=\"text-center\">{item.Phone}</td>\n                                      <td className=\"text-center\">{item.Gender}</td>\n                                      <td className=\"text-center\">{item.count}</td>\n                                      <td className=\"text-center\">{Number(item.coefficient).toFixed(2)}</td>\n                                    </tr>\n                                  );\n                                }) : \"\"\n                            }\n                          </tbody>\n                        </table>\n\n                        <div style={{ float: 'right' }}>\n                          <Pagination count={arrPaginationStatistical.length} color=\"primary\" onChange={(e, v) => {\n                            this.setState({\n                              dataStatistical: arrPaginationStatistical[v - 1], indexPageStatistical: v - 1\n                            })\n                          }} />\n                        </div>\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                </CRow>\n\n\n\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n\n      )\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nexport default ShopManager\n","import React, { lazy, Component } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CFormGroup,\n  CLabel,\n  CSelect, CCardGroup\n} from '@coreui/react'\n\nimport {\n  CChartBar,\n} from '@coreui/react-chartjs'\n\nimport {\n  Button\n} from 'reactstrap';\nimport axios from 'axios'\nimport Constants from \"./../../contants/contants\";\n\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport API_CONNECT from \"../../../src/helpers/callAPI\";\n\nclass ShopManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      month: 0,\n      dataUserSale: [],\n      indexPage: 0,\n      dataStatistical: [],\n      arrPaginationStatistical: [],\n      indexPageStatistical: 0,\n      company_id: localStorage.getItem('user'),\n      dataApi: [],\n      arrTemp: [],\n      hidden: true,\n      hidden_all: true,\n      arrAllUser: [],\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      isLoadingCustomer: false,\n      lengthData: []\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    await this.getCustomerByMonth(\"01\");\n    await this.getDataForCharts();\n    await this.getCustomer(0);\n  }\n\n  countType(arr, phone) {\n    const count = arr.filter(data => data.Phone == phone);\n    return count.length;\n  }\n\n  pagination_statistical(dataApi) {\n    var i, j, temparray, chunk = 2;\n    var arrTotal_Statistical = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal_Statistical.push(temparray);\n    }\n    this.setState({ arrPaginationStatistical: arrTotal_Statistical, dataStatistical: arrTotal_Statistical[this.state.indexPageStatistical] });\n  }\n\n  async getCustomer(index) {\n\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n\n    this.setState({ isLoadingCustomer: true })\n\n    const res = await API_CONNECT(Constants.LIST_CUSTOMER_V2, {\n      \"condition\": {\n        \"Company_Id\": id.company_id,\n        \"Sale_Id\": id.sale_id\n      },\n      \"index\": index\n    }, this.state.token, \"POST\")\n\n    if (res.status == 200) {\n      let data = res.data.data\n\n      this.setState({ dataApi: data, isLoadingCustomer: false, dataUserSale: data, lengthData: res.data.count });\n    }\n\n  }\n\n  async getDataForCharts() {\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.SALE_CHART,\n      method: 'POST',\n      data: {\n        company_id: id.company_id,\n        sale_id: id.sale_id\n      }\n    });\n\n    console.log(id.sale_id)\n    this.setState({ arrAllUser: res.data.data, isLoading: false })\n  }\n\n  async getCustomerByMonth(month) {\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n    var bodyUser = {\n      company_id: id.company_id,\n      month: month,\n      sale_id: id.sale_id\n    }\n\n    if (month == 0) {\n      await this.getCustomer(0);\n    } else {\n      const res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.GET_USER_SALE_BY_MONTH,\n        method: 'POST',\n        data: bodyUser\n      });\n\n      let data = res.data.data\n\n      if (data.length == 0) {\n        this.setState({ hidden: false })\n      } else {\n        this.setState({ hidden: true })\n      }\n      this.setState({ dataApi: data, arrTemp: data, isLoading: false });\n\n      this.pagination_statistical(data);\n    }\n  }\n\n  render() {\n    const { dataUserSale, hidden, hidden_all, lengthData,\n      dataStatistical, arrPaginationStatistical, isLoadingCustomer, isLoading } = this.state;\n    if (!isLoading) {\n      return (\n        <CRow>\n          <CCol>\n            <CCard>\n              <CCardHeader>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"selectSm\">Thống kê tổng số lượt user</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    {/*  */}\n                  </CCol>\n                </CFormGroup>\n              </CCardHeader>\n              <CCardBody>\n              {\n                  isLoadingCustomer ?\n                    <div className=\"sweet-loading\" style={{ height: 276 }}>\n                      <DotLoader css={override} size={50} color={\"#123abc\"} loading={isLoadingCustomer} speedMultiplier={1.5} />\n                    </div> :\n                    <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                      <thead className=\"thead-light\">\n                        <tr>\n                          <th className=\"text-center\">No.</th>\n                          <th className=\"text-center\">Tên</th>\n                          <th className=\"text-center\">Email</th>\n                          <th className=\"text-center\">Số điện thoại</th>\n                          <th className=\"text-center\">Giới tính</th>\n                          <th className=\"text-center\">Số lần đến</th>\n                          <th className=\"text-center\">Hệ số</th>\n                          <th className=\"text-center\">Lần cuối đến</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <td colSpan=\"9\" hidden={hidden_all} className=\"text-center\">Không có người dùng trong tháng</td>\n                        {\n                          dataUserSale != undefined ?\n                            dataUserSale.map((item, i) => {\n                              return (\n                                <tr key={i}>\n                                  <td className=\"text-center\">{i + 1}</td>\n                                  <td className=\"text-center\">{item.Name}</td>\n                                  <td className=\"text-center\">{item.Email}</td>\n                                  <td className=\"text-center\">{item.Phone}</td>\n                                  <td className=\"text-center\">{item.Gender}</td>\n                                  <td className=\"text-center\">{item.count}</td>\n                                  <td className=\"text-center\">{Number(item.coefficient).toFixed(2)}</td>\n                                  <td className=\"text-center\">\n                                    {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\n                                  </td>\n                                </tr>\n                              );\n                            }) : \"\"\n                        }\n                      </tbody>\n                      <tfoot>\n\n                      </tfoot>\n                    </table>\n                }\n                <div style={{ width: '100%', margin: 10 }}>\n                  <Pagination count={lengthData} color=\"primary\" onChange={(e, v) => {\n                    this.getCustomer(v - 1)\n                  }} />\n                </div>\n\n                <br />\n\n                <CRow>\n                  <CCol xs=\"12\" sm=\"5\">\n                    <CCard>\n                      <CCardHeader>\n                        Biểu đồ thể hiện lượt người dùng qua từng tháng\n                      </CCardHeader>\n                      <CCardBody>\n                        <CChartBar\n                          datasets={[\n                            {\n                              label: 'Tổng người lượt người dùng của tháng ',\n                              backgroundColor: '#0008ff',\n                              data: this.state.arrAllUser\n                            }\n                          ]}\n                          labels=\"months\"\n                          options={{\n                            tooltips: {\n                              enabled: true\n                            }\n                          }}\n                        />\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                  <CCol xs=\"12\" sm=\"7\">\n                    <CCard>\n                      <CCardHeader>\n                        <CFormGroup row>\n                          <CCol xs=\"12\" md=\"7\" ls=\"12\">\n                            <CLabel htmlFor=\"selectSm\">Người dùng trong từng tháng</CLabel>\n                          </CCol>\n                          <CCol xs=\"12\" md=\"5\" ls=\"12\">\n                            <div style={{ float: \"right\", width: \"250px\" }}>\n                              <CSelect onChange={async e => { await this.getCustomerByMonth(e.target.value) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                                <option value=\"01\">01</option>\n                                <option value=\"02\">02</option>\n                                <option value=\"03\">03</option>\n                                <option value=\"04\">04</option>\n                                <option value=\"05\">05</option>\n                                <option value=\"06\">06</option>\n                                <option value=\"07\">07</option>\n                                <option value=\"08\">08</option>\n                                <option value=\"09\">09</option>\n                                <option value=\"10\">10</option>\n                                <option value=\"11\">11</option>\n                                <option value=\"12\">12</option>\n                              </CSelect>\n                            </div>\n                          </CCol>\n                        </CFormGroup>\n                      </CCardHeader>\n                      <CCardBody>\n                        <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                          <thead className=\"thead-light\">\n                            <tr>\n                              <th className=\"text-center\">Tên</th>\n                              <th className=\"text-center\">Số điện thoại</th>\n                              <th className=\"text-center\">Giới tính</th>\n                              <th className=\"text-center\">Số lần đến</th>\n                              <th className=\"text-center\">Hệ số</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <td colSpan=\"7\" hidden={hidden} className=\"text-center\">Không có người dùng nào trong tháng</td>\n                            {\n                              dataStatistical != undefined ?\n                                dataStatistical.map((item, i) => {\n                                  return (\n                                    <tr key={i}>\n                                      <td className=\"text-center\">{item.Name}</td>\n                                      <td className=\"text-center\">{item.Phone}</td>\n                                      <td className=\"text-center\">{item.Gender}</td>\n                                      <td className=\"text-center\">{item.count}</td>\n                                      <td className=\"text-center\">{Number(item.coefficient).toFixed(2)}</td>\n                                    </tr>\n                                  );\n                                }) : \"\"\n                            }\n                          </tbody>\n                        </table>\n                        <div style={{ float: 'right' }}>\n                          <Pagination count={arrPaginationStatistical.length} color=\"primary\" onChange={(e, v) => {\n                            this.setState({\n                              dataStatistical: arrPaginationStatistical[v - 1], indexPageStatistical: v - 1\n                            })\n                          }} />\n                        </div>\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                </CRow>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n\n      )\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nexport default ShopManager\n","import React, { lazy, Component } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CFormGroup,\n  CLabel,\n  CSelect\n} from '@coreui/react'\n\nimport {\n  CChartBar,\n} from '@coreui/react-chartjs'\n\nimport axios from 'axios'\nimport Constants from \"./../../contants/contants\";\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport API_CONNECT from \"../../../src/helpers/callAPI\";\n\nclass AdminManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      month: 0,\n      dataUserSale: [],\n      arrPagination: [],\n      indexPage: 0,\n      dataStatistical: [],\n      arrPaginationStatistical: [],\n      indexPageStatistical: 0,\n      company_id: localStorage.getItem('user'),\n      dataApi: [],\n      arrTemp: [],\n      hidden: true,\n      hidden_all: true,\n      arrAllUser: [],\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      isLoading: false,\n      isLoadingCustomer: false,\n      lengthData: []\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    await this.getCustomerByMonth(\"01\");\n    await this.getDataForCharts();\n    await this.getCustomer(0);\n  }\n\n  countType(arr, phone) {\n    const count = arr.filter(data => data.Phone == phone);\n    return count.length;\n  }\n\n  pagination_statistical(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal_Statistical = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal_Statistical.push(temparray);\n    }\n    this.setState({ arrPaginationStatistical: arrTotal_Statistical, dataStatistical: arrTotal_Statistical[this.state.indexPageStatistical] });\n  }\n\n  async getCustomer(index) {\n    this.setState({ isLoadingCustomer: true })\n\n    const res = await API_CONNECT(Constants.LIST_CUSTOMER_V2, {\n      index: index\n    }, this.state.token, \"POST\")\n\n    if (res.status == 200) {\n      let data = res.data.data\n\n      this.setState({ dataApi: data, isLoadingCustomer: false, dataUserSale: data, lengthData: res.data.count });\n    }\n  }\n\n  async getDataForCharts() {\n\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.ADMIN_CHART,\n      method: 'POST',\n    });\n\n    this.setState({ arrAllUser: res.data.data, isLoading: false })\n  }\n\n  async getCustomerByMonth(month) {\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n    var bodyUser = {\n      month: month\n    }\n\n    if (month == 0) {\n      await this.getCustomer(0);\n    } else {\n      const res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_CUSTOMER_BY_MONTH_ADMIN,\n        method: 'POST',\n        data: bodyUser\n      });\n\n      let data = res.data.data\n      if (data.length == 0) {\n        this.setState({ hidden: false })\n      } else {\n        this.setState({ hidden: true })\n      }\n      this.setState({ dataApi: data, arrTemp: data, isLoading: false });\n\n      this.pagination_statistical(data);\n    }\n  }\n\n  render() {\n    const { dataUserSale, hidden, hidden_all, lengthData,\n      dataStatistical, arrPaginationStatistical, isLoadingCustomer } = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <CRow>\n          <CCol>\n            <CCard>\n              <CCardHeader>\n                <CFormGroup row>\n                  <CCol xs=\"12\" sm=\"12\" md=\"3\" lg=\"3\">\n                    <CLabel htmlFor=\"selectSm\">Thống kê tổng số lượt user</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" sm=\"12\" md=\"9\" lg=\"9\">\n\n                  </CCol>\n                </CFormGroup>\n              </CCardHeader>\n              <CCardBody>\n                {\n                  isLoadingCustomer ?\n                    <div className=\"sweet-loading\" style={{ height: 276 }}>\n                      <DotLoader css={override} size={50} color={\"#123abc\"} loading={isLoadingCustomer} speedMultiplier={1.5} />\n                    </div> :\n                    <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                      <thead className=\"thead-light\">\n                        <tr>\n                          <th className=\"text-center\">STT.</th>\n                          <th className=\"text-center\">Tên</th>\n                          <th className=\"text-center\">Email</th>\n                          <th className=\"text-center\">Số điện thoại</th>\n                          <th className=\"text-center\">Giới tính</th>\n                          <th className=\"text-center\">Số lần đến</th>\n                          <th className=\"text-center\">Hệ số</th>\n                          <th className=\"text-center\">Lần cuối đến</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <td colSpan=\"9\" hidden={hidden_all} className=\"text-center\">Không có dữ liệu</td>\n                        {\n                          dataUserSale != undefined ?\n                            dataUserSale.map((item, i) => {\n                              return (\n                                <tr key={i}>\n                                  <td className=\"text-center\">{i + 1}</td>\n                                  <td className=\"text-center\">{item.Name}</td>\n                                  <td className=\"text-center\">{item.Email}</td>\n                                  <td className=\"text-center\">{item.Phone}</td>\n                                  <td className=\"text-center\">{item.Gender}</td>\n                                  <td className=\"text-center\">{item.count}</td>\n                                  <td className=\"text-center\">{Number(item.coefficient).toFixed(2)}</td>\n                                  <td className=\"text-center\">\n                                    {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\n                                  </td>\n                                </tr>\n                              );\n                            }) : \"\"\n                        }\n                      </tbody>\n                      <tfoot>\n\n                      </tfoot>\n                    </table>\n\n                }\n                <div style={{ width: '100%', margin: 10 }}>\n                  <Pagination count={lengthData} color=\"primary\" onChange={(e, v) => {\n                    this.getCustomer(v - 1)\n                  }} />\n                </div>\n\n                <br />\n\n                <CRow>\n                  <CCol xs=\"12\" sm=\"5\">\n                    <CCard backgroundColor=\"red\">\n                      <CCardHeader>\n                        Biểu đồ thể hiện lượt người dùng qua từng tháng\n                      </CCardHeader>\n                      <CCardBody>\n                        <CChartBar\n                          datasets={[\n                            {\n                              label: 'Tổng người lượt người dùng của tháng ',\n                              backgroundColor: '#0008ff',\n                              data: this.state.arrAllUser\n                            }\n                          ]}\n                          labels=\"months\"\n                          options={{\n                            tooltips: {\n                              enabled: true\n                            }\n                          }}\n                        />\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                  <CCol xs=\"12\" sm=\"7\">\n                    <CCard>\n                      <CCardHeader>\n                        <CFormGroup row>\n                          <CCol xs=\"12\" md=\"8\">\n                            <CLabel htmlFor=\"selectSm\">Người dùng theo tháng</CLabel>\n                          </CCol>\n                          <CCol xs=\"12\" md=\"4\">\n                            <div style={{ float: \"right\", width: \"250px\" }}>\n                              <CSelect onChange={async e => { await this.getCustomerByMonth(e.target.value) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                                <option value=\"01\">01</option>\n                                <option value=\"02\">02</option>\n                                <option value=\"03\">03</option>\n                                <option value=\"04\">04</option>\n                                <option value=\"05\">05</option>\n                                <option value=\"06\">06</option>\n                                <option value=\"07\">07</option>\n                                <option value=\"08\">08</option>\n                                <option value=\"09\">09</option>\n                                <option value=\"10\">10</option>\n                                <option value=\"11\">11</option>\n                                <option value=\"12\">12</option>\n                              </CSelect>\n                            </div>\n                          </CCol>\n                        </CFormGroup>\n                      </CCardHeader>\n                      <CCardBody>\n                        <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                          <thead className=\"thead-light\">\n                            <tr>\n                              <th className=\"text-center\">Tên</th>\n                              <th className=\"text-center\">Số điện thoại</th>\n                              <th className=\"text-center\">Giới tính</th>\n                              <th className=\"text-center\">Số lần đến</th>\n                              <th className=\"text-center\">Hệ số</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <td colSpan=\"7\" hidden={hidden} className=\"text-center\">Không có user trong tháng này</td>\n                            {\n                              dataStatistical != undefined ?\n                                dataStatistical.map((item, i) => {\n                                  return (\n                                    <tr key={i}>\n                                      <td className=\"text-center\">{item.Name}</td>\n                                      <td className=\"text-center\">{item.Phone}</td>\n                                      <td className=\"text-center\">{item.Gender}</td>\n                                      <td className=\"text-center\">{item.count}</td>\n                                      <td className=\"text-center\">{Number(item.coefficient).toFixed(2)}</td>\n                                    </tr>\n                                  );\n                                }) : \"\"\n                            }\n                          </tbody>\n                        </table>\n                        <div style={{ float: 'right' }}>\n                          <Pagination count={arrPaginationStatistical.length} color=\"primary\" onChange={(e, v) => {\n                            this.setState({\n                              dataStatistical: arrPaginationStatistical[v - 1], indexPageStatistical: v - 1\n                            })\n                          }} />\n                        </div>\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                </CRow>\n\n\n\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n\n      )\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\nexport default AdminManager\n","import React, { lazy, Component } from 'react'\n\nimport ShopManager from './ShopManager'\nimport SaleManager from './SaleManager'\nimport AdminManager from './AdminManager'\n\n\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\nclass Dashboard extends Component {\n\n  render() {\n    return (\n      <div>\n        {\n          localStorage.getItem('role') == 'SALES' ? <SaleManager /> :\n            localStorage.getItem('role') == 'COMPANY' ? <ShopManager /> :\n              localStorage.getItem('role') == 'ADMIN' ? <AdminManager /> : <AdminManager />\n        }\n      </div>\n    )\n  }\n}\n\nexport default Dashboard\n","export default {\n  \"BASE_URL\" : \"https://admin-api.tikitech.vn\",\n  //\"BASE_URL\" : \"http://localhost:3006\",\n  \"LIST_USER\" : \"/api/list-user\",\n  \"LIST_USER_WITH_ID\" : \"/api/list-user?id=\",\n  \"ADD_USER\" : \"/api/add-user\",\n  \"UPDATE_USER\" : \"/api/update-user\",\n  \"DELETE_USER\" : \"/api/delete-user\",\n  \"LOGIN_ADMIN\" : \"/api/login_admin\",\n  \"GET_SHOP\" : \"/api/get-shop\",\n  \"GET_SALE\" : \"/api/get-sale\",\n  \"GET_COEFFICIENT\" : \"/api/calculator-coefficient-user\",\n  \"GET_COEFFICIENT_PER_SALE\" : \"/api/calculator-coefficient-user-per-sale\",\n  \"GET_USER_SALE_BY_MONTH\" : \"/api/get-user-of-sale-by-month\",\n  \"CALCULATOR_ALL_USER_OF_COMPANY\" : \"/api/calculator-all-user-company\",\n  \"CALCULATOR_ALL_USER_OF_SALE\" : \"/api/calculator-all-user-of-sale\",\n  \"GET_SEEDER\" : \"/api/get-seed\",\n  \"GET_SALE_NAME\": \"/api/get-name-sale\",\n  \"GET_USER_BY_ID\": \"/api/get-user-byID\",\n\n  \"LIST_CUSTOMER\" : \"/api/list-customer\",\n  \"LIST_CUSTOMER_V2\" : \"/api/list-customer-v2\",\n  \"LIST_CUSTOMER_BY_MONTH\" : \"/api/get-user-sale-by-month\",\n\n  \"LIST_CUSTOMER_BY_MONTH_ADMIN\" : \"/api/get-user-by-month-admin\",\n\n  \"LIST_TYPEKEY\" : \"/api/list-typekey\",\n  \"LIST_TYPEKEY_WITH_ID\" : \"/api/list-typekey?id=\",\n  \"ADD_TYPEKEY\" : \"/api/add-typekey\",\n  \"UPDATE_TYPEKEY\" : \"/api/update-typekey\",\n  \"DELETE_TYPEKEY\" : \"/api/delete-typekey\",\n\n  \"LIST_HARDWARE\" : \"/api/list-hardware\",\n  \"LIST_HARDWARE_WITH_ID\" : \"/api/list-hardware?id=\",\n  \"ADD_HARDWARE\" : \"/api/add-hardware\",\n  \"UPDATE_HARDWARE\" : \"/api/update-hardware\",\n  \"DELETE_HARDWARE\" : \"/api/delete-hardware\",\n\n  \"LIST_ORDER\" : \"/api/list-order-hardward\",\n  \"ADD_ORDER\" : \"/api/add-order\",\n  \"UPDATE_STATUS_ORDER\" : \"/api/update-status-order\",\n\n  \"LIST_TRANSACTION\" : \"/api/list-transaction\",\n  \"ADD_TRANSACTION\" : \"/api/add-transaction\",\n\n  \"LIST_CHECK_OUT\" : \"/api/list-checkout\",\n  \"LIST_HARDWARE_CHECKOUT\" : \"/api/get-list-hardward-by-check-out\",\n  \"UPDATE_STATUS_CHECKOUT\" : \"/api/update-status-hardware\",\n\n  \"LIST_ORDER_DETAIL\" : \"/api/list-orderdetail\",\n  \"LIST_ORDER_DETAIL_COMPANY\" : \"/api/list-order-detail\",\n  \"UPDATE_STATUS_HARDWARE_COMPANY\" : \"/api/update-status-hardware\",\n\n  \"LIST_ROLE\" : \"/api/list-role\",\n  \"LIST_ROLE_WITH_ID\" : \"/api/list-role?id=\",\n  \"ADD_ROLE\" : \"/api/add-role\",\n  \"UPDATE_ROLE\" : \"/api/update-role\",\n  \"DELETE_ROLE\" : \"/api/delete-role\",\n\n  \"LIST_SALELOG\" : \"/api/list-salelog\",\n  \"LIST_SALELOG_WITH_ID\" : \"/api/list-salelog?id=\",\n  \"ADD_SALELOG\" : \"/api/add-salelog\",\n  \"UPDATE_SALELOG\" : \"/api/update-salelog\",\n  \"DELETE_SALELOG\" : \"/api/delete-salelog\",\n\n  \"DATA_SALE\" : \"/api/get-data-sale\",\n  \"LIST_SALE\" : \"/api/list-sale\",\n  \"LIST_SALE_WITH_ID\" : \"/api/list-sale?id=\",\n  \"ADD_SALE\" : \"/api/add-sale\",\n  \"UPDATE_SALE\" : \"/api/update-sale\",\n  \"DELETE_SALE\" : \"/api/delete-sale\",\n\n  \"LIST_KEYORDER\" : \"/api/list-keyorder\",\n  \"LIST_KEYORDER_WITH_ID\" : \"/api/list-keyorder?id=\",\n  \"ADD_KEYORDER\" : \"/api/add-keyorder\",\n  \"UPDATE_KEYORDER\" : \"/api/update-keyorder\",\n  \"DELETE_KEYORDER\" : \"/api/delete-keyorder\",\n\n  \"LIST_KEY\" : \"/api/list-key\",\n  \"LIST_KEY_WITH_ID\" : \"/api/list-key?id=\",\n  \"ADD_KEY\" : \"/api/add-key\",\n  \"UPDATE_KEY\" : \"/api/update-key\",\n  \"DELETE_KEY\" : \"/api/delete-key\",\n\n  \"LIST_COMPANY\" : \"/api/list-company\",\n  \"LIST_COMPANY_WITH_ID\" : \"/api/list-company?id=\",\n  \"ADD_COMPANY\" : \"/api/add-company\",\n  \"UPDATE_COMPANY\" : \"/api/update-company\",\n  \"DELETE_COMPANY\" : \"/api/delete-company\",\n  \"DATA_COMPANY\" : \"/api/get-data-company\",\n\n  \"LIST_LINK\" : \"/api/list-link\",\n  \"LIST_LINK_WITH_ID\" : \"/api/list-link?id=\",\n  \"ADD_LINK\" : \"/api/add-link\",\n  \"UPDATE_LINK\" : \"/api/update-link\",\n  \"DELETE_LINK\" : \"/api/delete-link\",\n  \"GET-LINK-BY-ID\" : \"/api/link-by-id\",\n\n  \"LIST_CHECKED_ORDER\": \"/api/list-order-checked\",\n  \"ADD_CHECKED_ORDER\": \"/api/add-order-checked\",\n  \"LIST_CHECKED_PRODUCT\": \"/api/list-product-checked\",\n  \"ADD_CHECKED_PRODUCT\": \"/api/add-product-checked\",\n\n  \"LIST_BRAND_HARDWARE\": \"/api/list-brand-hardward\",\n  \"ADD_BRAND_HARDWARE\": \"/api/add-brand-hardward\",\n  \"UPDATE_BRAND_HARDWARE\": \"/api/update-brand-hardward\",\n  \"DELETE_BRAND_HARDWARE\": \"/api/delete-brand-hardward\",\n  \"UPLOAD_BRAND\": \"/api/upload-image-brand\",\n\n  \"LIST_PRODUCT_HARDWARE\": \"/api/list-product-hardward\",\n  \"ADD_PRODUCT_HARDWARE\": \"/api/add-product-hardward\",\n  \"UPDATE_PRODUCT_HARDWARE\": \"/api/update-product-hardward\",\n  \"DELETE_PRODUCT_HARDWARE\": \"/api/delete-product-hardward\",\n  \"UPLOAD_PRODUCT\": \"/api/upload-image-product\",\n\n  \"LIST_CATEGORY\": \"/api/list-category\",\n  \"ADD_CATEGORY\": \"/api/add-category\",\n  \"UPDATE_CATEGORY\": \"/api/update-category\",\n  \"DELETE_CATEGORY\": \"/api/delete-category\",\n  \"UPLOAD_CATEGORY\": \"/api/upload-category\",\n\n  \"ADMIN_CHART\": \"/api/admin-chart\",\n  \"COMPANY_CHART\": \"/api/company-chart\",\n  \"SALE_CHART\": \"/api/sale-chart\",\n\n  \"LIST_CONFIG\": \"/api/list-config\",\n  \"CONFIG_BY_ID\": \"/api/config-by-id\",\n  \"UPDATE_CONFIG\": \"/api/update-config\",\n\n  \"LIST_HISTORY\": \"/api/list-history\",\n  \"LIST_DETAIL_CUSTOMER\": \"/api/list-detail-customer\",\n  \"LIST_HISTORY_BY_SALE\": \"/api/list-history-by-sale\",\n  \"LIST_HISTORY_BY_PHONE\": \"/api/list-history-by-phone\",\n  \"ADD_HISTORY\": \"/api/add-history\",\n\n  \"GET_LIST_BRAND\": \"/brands\",\n  \"ADD_BRAND\": \"/add-brand\",\n  \"UPDATE_BRAND\": \"/update-brand\",\n  \"DELETE_BRAND\": \"/delete-brand\",\n\n  \"GET_LIST_TYPE\": \"/types\",\n  \"ADD_TYPE\": \"/add-type\",\n  \"UPDATE_TYPE\": \"/update-type\",\n  \"DELETE_TYPE\": \"/delete-type\",\n\n  \"GET_LIST_COLOR\": \"/v2/color\",\n  \"ADD_COLOR\": \"/v2/add-color\",\n  \"UPDATE_COLOR\": \"/v2/update-color\",\n  \"DELETE_COLOR\": \"/delete-color\",\n\n  \"GET_LIST_HAIR_COLOR\": \"/v2/color-hair\",\n\n  \"GET_LIST_PRODUCT\": \"/v2/product\",\n  \"ADD_PRODUCT\": \"/v2/add-product\",\n  \"UPDATE_PRODUCT\": \"/v2/update-product\",\n  \"DELETE_PRODUCT\": \"/delete-product\",\n\n  \"GET_LIST_HAIR\": \"/v2/hair\",\n\n  \"GET_LIST_SUGGEST\": \"/itemSdk\",\n\n\n};\n","import constants from './../contants/contants'\n\nconst axios = require('axios').default;\naxios.defaults.baseURL = constants.BASE_URL;\n\nconst connect = async function (url = \"\", data = {}, token = \"\", type) {\n  let options = {};\n  // console.log(\"Token: \", token)\n  if (token) {\n    options = {\n      headers: token\n    };\n  }\n  try {\n    switch (type) {\n      case \"GET\":\n        let get = await axios.get(url, data, options);\n        if (get.is_success == false) {\n          return null;\n        }\n        return get.data;\n      case \"POST\":\n        let post = await axios.post(url, data, options);\n        if (post.is_success == false) {\n          return null;\n        }\n        return post.data;\n      case \"PUT\":\n        let put = await axios.put(url, data, options);\n        if (put.is_success == false) {\n          return null;\n        }\n        return put.data;\n      case \"DELETE\":\n        let del = await axios.delete(url, data, options);\n        if (del.is_success == false) {\n          return null;\n        }\n        return del.data;\n    }\n\n  } catch (reason) {\n    return reason;\n  }\n\n\n}\n\nexport default connect;\n"],"sourceRoot":""}