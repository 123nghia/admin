{"version":3,"sources":["views/base/tables/AI_Skin/CustomerManager.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js"],"names":["headers","Headers","auth","localStorage","getItem","append","makeStyles","theme","root","marginTop","spacing","CustomerManager","props","getData","a","setState","isLoading","axios","baseURL","Constants","BASE_URL","url","LIST_CUSTOMER","method","res","val","data","result","valCount","Count","is_success","i","length","pagination","dataApi","active","map","Status","totalActive","getDataForCompany","LIST_CUSTOMER_FOR_COMPANY","Company_Id","JSON","parse","state","company_id","getDataForCompanyByMonth","month","LIST_CUSTOMER_FOR_COMPANY_BY_MONTH","hidden_m","dataByMonth","openDelete","item","modalDelete","delete","key","activePage","page","itemsCount","limit","modalCom","viewingUser","communities","updated","hidden","action","UserName","FullName","Phone","Address","Email","Type","arrPagination","indexPage","token","Authorization","arrTypeRequest","type","dataChart","this","getDataForCharts","arr","window","location","hash","isHidden","href","j","temparray","arrTotal","slice","push","arrMonth","arrTemp","d","toLocaleUpperCase","includes","alert","body","CUS_RES_ADD","message","id","CUS_RES_UPDATE","CUS_RES_DELETE","e","target","name","value","status","className","css","override","size","color","loading","speedMultiplier","style","styles","success","danger","deleted","tags","searchInput","onChange","searchKey","placeholder","ble","colSpan","undefined","Name","Date","Create_Date","toLocaleDateString","toLocaleTimeString","mgl5","outline","onClick","float","count","v","custom","datasets","label","backgroundColor","labels","options","tooltips","enabled","Component","marginRight","flexLabel","width","flexOption","textDecoration","floatRight","spinner","center","textAlign","tbody","height","overflowY","wh25","w5","wa10","row","marginLeft","display","userActive","userPending","nagemonNameCol","image","borderRadius","marginBottom","stylesOrCreator","arguments","makeStylesWithoutDefault","_extends","defaultTheme"],"mappings":"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","file":"static/js/60.c6d5c102.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Input\n} from 'reactstrap';\n\nimport {\n  CButton,\n  CSelect,\n} from '@coreui/react'\n\nimport {\n  CChartBar\n} from '@coreui/react-chartjs'\n\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport 'moment-timezone';\nimport Constants from \"../../../../contants/contants\";\nimport axios from 'axios'\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\nclass CustomerManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      dataByMonth: [],\n      key: '',\n      activePage: 1,\n      page: 1,\n      itemsCount: 0,\n      limit: 20,\n      totalActive: 0,\n      modalCom: false,\n      viewingUser: {},\n      communities: [],\n      updated: '',\n      dataApi: [],\n      hidden: false,\n      hidden_m: false,\n      action: 'new',\n      UserName: '',\n      FullName: '',\n      Phone: '',\n      Company_Id: '',\n      Address: '',\n      Email: '',\n      Type: \"0\",\n      Status: '',\n      modalDelete: false,\n      delete: null,\n      arrPagination: [],\n      indexPage: 0,\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      company_id: localStorage.getItem('user'),\n      isLoading: false,\n      arrTypeRequest: [],\n      type: localStorage.getItem('type'),\n      dataChart: []\n    };\n  }\n  async componentDidMount() {\n    if (this.state.type == '0' || this.state.type == '1') {\n      this.getData();\n    } else {\n      this.getDataForCompany();\n    }\n\n    this.getDataForCompanyByMonth('01');\n    this.getDataForCharts();\n    let arr = JSON.parse(localStorage.getItem('url'));\n\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].url == window.location.hash) {\n        if (arr[i].isHidden == true) {\n          window.location.href = '#/'\n        }\n      }\n    }\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden: false\n      })\n    } else {\n      this.setState({\n        hidden: true\n      })\n    }\n\n    this.setState({ arrPagination: arrTotal, data: arrTotal[this.state.indexPage] });\n  }\n\n  async getDataForCharts() {\n\n    let arrMonth = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"]\n    let arrTemp = [];\n    for (let i = 0; i < arrMonth.length; i++) {\n      const res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_CUSTOMER_FOR_COMPANY_BY_MONTH,\n        method: 'POST',\n        data: {\n          Company_Id: JSON.parse(this.state.company_id).company_id,\n          month: arrMonth[i]\n        }\n      });\n\n      arrTemp.push(res.data.data.result.length)\n    }\n\n    this.setState({ dataChart: arrTemp })\n  }\n\n  getData = async () => {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_CUSTOMER,\n      method: 'POST'\n    });\n    let val = res.data.data.result;\n\n    let valCount = res.data.data.Count;\n    if (res.data.is_success) {\n      for (let i = 0; i < val.length; i++) {\n        val[i].Count = valCount[i]\n      }\n\n      this.pagination(val);\n      this.setState({ dataApi: val });\n\n      let active = 0\n\n      val.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ isLoading: false, totalActive: active });\n    }\n  }\n\n  getDataForCompany = async () => {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_CUSTOMER_FOR_COMPANY,\n      method: 'POST',\n      data: {\n        Company_Id: JSON.parse(this.state.company_id).company_id\n      }\n    });\n\n    let val = res.data.data.result;\n    let valCount = res.data.data.Count;\n\n    if (res.data.is_success) {\n      for (let i = 0; i < val.length; i++) {\n        val[i].Count = valCount[i]\n      }\n\n      this.pagination(val);\n      this.setState({ dataApi: val });\n\n      let active = 0\n\n      val.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ isLoading: false, totalActive: active });\n    }\n  }\n\n  getDataForCompanyByMonth = async (month) => {\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_CUSTOMER_FOR_COMPANY_BY_MONTH,\n      method: 'POST',\n      data: {\n        Company_Id: JSON.parse(this.state.company_id).company_id,\n        month: month\n      }\n    });\n\n    let val = res.data.data.result;\n    let valCount = res.data.data.Count;\n\n    if (res.data.is_success) {\n      for (let i = 0; i < val.length; i++) {\n        val[i].Count = valCount[i]\n      }\n\n      if (val.length == 0) {\n        this.setState({\n          hidden_m: false\n        })\n      } else {\n        this.setState({\n          hidden_m: true\n        })\n      }\n\n      this.setState({ dataByMonth: val });\n    }\n  }\n\n  searchKey(key) {\n    this.setState({ key: key })\n\n    if (key != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if ((val.UserName.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n          val.FullName.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n          val.Phone.toLocaleUpperCase().includes(key.toLocaleUpperCase()))) {\n          d.push(val)\n        }\n      })\n      let active = 0\n\n      d.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: d, totalActive: active })\n    } else {\n      let active = 0\n\n      this.state.dataApi.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: this.state.dataApi, totalActive: active })\n    }\n  }\n\n  async toggleModal(key) {\n    if (key == 'new') {\n      this.setState({\n        modalCom: !this.state.modalCom,\n        action: key,\n        UserName: '',\n        FullName: '',\n        Phone: '',\n      })\n    }\n  }\n\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n\n  async addRoles() {\n    const { UserName, Phone, Type, FullName } = this.state\n\n    if (UserName == null || UserName == '' ||\n      Phone == null || Phone == '' || FullName == '') {\n      alert(\"Vui lòng nhập đầy đủ trường dữ liệu !!!\");\n      return\n    }\n\n    const body = {\n      UserName: UserName,\n      FullName: FullName,\n      Phone: Phone,\n      Company_Id: this.state.type == '0' || this.state.type == '1' ? null : JSON.parse(this.state.company_id).company_id,\n      Type: Type\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.CUS_RES_ADD,\n      method: 'PUT',\n      data: body\n    });\n\n    if (res.data.is_success == true) {\n      if (this.state.type == '0' || this.state.type == '1') {\n        this.getData();\n      } else {\n        this.getDataForCompany();\n      }\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(res.data.message);\n      this.setState({ isLoading: false });\n    }\n  }\n\n  async openUpdate(item) {\n    this.setState({\n      modalCom: !this.state.modalCom,\n      action: \"update\",\n      UserName: item.UserName,\n      FullName: item.FullName,\n      Phone: item.Phone,\n      Type: item.Type,\n      id: item['_id'],\n      Status: item.Status\n    })\n  }\n\n  async updateUser() {\n    const { UserName, Phone, Type, FullName, Status } = this.state\n    if (UserName == null || UserName == '' ||\n      Phone == null || Phone == '' || FullName == null || FullName == '') {\n      alert(\"Vui lòng nhập đầy đủ trường dữ liệu !!!\");\n      return\n\n    }\n\n    const body = {\n      UserName: UserName,\n      FullName: FullName,\n      Phone: Phone,\n      Type: Type,\n      id: this.state.id,\n      Status: Status\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.CUS_RES_UPDATE,\n      method: 'POST',\n      data: body\n    });\n\n    if (res.data.is_success == true) {\n      if (this.state.type == '0' || this.state.type == '1') {\n        this.getData();\n      } else {\n        this.getDataForCompany();\n      }\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(res.data.message);\n      this.setState({ isLoading: false });\n    }\n  }\n\n  openDelete = (item) => {\n    this.setState({\n      modalDelete: !this.state.modalDelete,\n      delete: item\n    })\n  }\n\n  async delete() {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.CUS_RES_DELETE,\n      method: 'DELETE',\n      data: {\n        \"id\": this.state.delete['_id']\n      }\n    });\n\n    if (res.data.is_success == true) {\n      if (this.state.type == '0' || this.state.type == '1') {\n        this.getData();\n      } else {\n        this.getDataForCompany();\n      }\n      this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n    } else {\n      alert(res.data.message);\n      this.setState({ isLoading: false });\n    }\n\n  }\n\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  getBadge(status) {\n    switch (status) {\n      case '0': return 'danger'\n      case '1': return 'success'\n      default: return 'primary'\n    }\n  }\n\n  getBadge_String(status) {\n    switch (status) {\n      case '0': return 'Chưa nhận quà'\n      case '1': return 'Đã nhận quà'\n      default: return 'primary'\n    }\n  }\n\n  render() {\n    const { data, arrPagination, key, type, dataByMonth, dataChart } = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <p style={styles.success}>{this.state.updated}</p>\n              <p style={styles.danger}>{this.state.deleted}</p>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Thống kê lượt khách hàng\n                  <div style={styles.tags}>\n                    <Input style={styles.searchInput} onChange={(e) => this.searchKey(e.target.value)} name=\"key\" value={key} placeholder=\"Tìm kiếm\" />\n                  </div>\n                </CardHeader>\n                <CardBody>\n\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        <th className=\"text-center\">Tên</th>\n                        <th className=\"text-center\">Tên đầy đủ</th>\n                        <th className=\"text-center\">Số điện thoại</th>\n                        {\n                          type == '0' || type == '1' ?\n                            <th className=\"text-center\">Công ty</th> : \"\"\n                        }\n                        <th className=\"text-center\">Lần đến gần nhất</th>\n                        <th className=\"text-center\">Số lần đến</th>\n                        {/* <th className=\"text-center\">Trạng thái</th> */}\n                        <th className=\"text-center\">#</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <td colSpan=\"10\" hidden={this.state.hidden} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                <td className=\"text-center\">{item.UserName}</td>\n                                <td className=\"text-center\">{item.FullName}</td>\n                                <td className=\"text-center\">{item.Phone}</td>\n                                {\n                                  type == '0' || type == '1' ?\n                                    <td className=\"text-center\">{item.Company_Id == null || item.Company_Id == undefined ? \"admin\" : item.Company_Id.Name}</td> : \"\"\n                                }\n                                <td className=\"text-center\">\n                                  {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\n                                </td>\n                                <td className=\"text-center\">{item.Count}</td>\n\n                                <td className=\"text-center\">\n                                  <CButton style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => { }} >\n                                    Lịch sử soi da\n                                  </CButton>\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n                </CardBody>\n              </Card>\n              <div style={{ float: 'right' }}>\n                <Pagination count={arrPagination.length} color=\"primary\" onChange={(e, v) => {\n                  this.setState({ data: arrPagination[v - 1], indexPage: v - 1 })\n                }} />\n              </div>\n\n            </Col>\n          </Row>\n\n          {\n            type == \"2\" ?\n              <Row>\n                <Col>\n                  <p style={styles.success}>{this.state.updated}</p>\n                  <p style={styles.danger}>{this.state.deleted}</p>\n                  <Card>\n                    <CardHeader>\n                      <i className=\"fa fa-align-justify\"></i> Thống kê lượt khách hàng theo từng tháng\n                      <div style={styles.tags}>\n                        Tháng\n                        <CSelect onChange={async e => { this.getDataForCompanyByMonth(e.target.value) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                          <option value=\"01\">01</option>\n                          <option value=\"02\">02</option>\n                          <option value=\"03\">03</option>\n                          <option value=\"04\">04</option>\n                          <option value=\"05\">05</option>\n                          <option value=\"06\">06</option>\n                          <option value=\"07\">07</option>\n                          <option value=\"08\">08</option>\n                          <option value=\"09\">09</option>\n                          <option value=\"10\">10</option>\n                          <option value=\"11\">11</option>\n                          <option value=\"12\">12</option>\n                        </CSelect>\n                      </div>\n                    </CardHeader>\n                    <CardBody>\n\n                      <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                        <thead className=\"thead-light\">\n                          <tr>\n                            <th className=\"text-center\">STT.</th>\n                            <th className=\"text-center\">Tên</th>\n                            <th className=\"text-center\">Tên đầy đủ</th>\n                            <th className=\"text-center\">Số điện thoại</th>\n                            {\n                              type == '0' || type == '1' ?\n                                <th className=\"text-center\">Công ty</th> : \"\"\n                            }\n                            <th className=\"text-center\">Lần đến gần nhất trong tháng</th>\n                            <th className=\"text-center\">Số lần đến</th>\n                            <th className=\"text-center\">#</th>\n                          </tr>\n                        </thead>\n                        <tbody>\n                          <td colSpan=\"10\" hidden={this.state.hidden_m} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                          {\n                            dataByMonth != undefined ?\n                              dataByMonth.map((item, i) => {\n                                return (\n                                  <tr key={i}>\n                                    <td className=\"text-center\">{i + 1}</td>\n                                    <td className=\"text-center\">{item.UserName}</td>\n                                    <td className=\"text-center\">{item.FullName}</td>\n                                    <td className=\"text-center\">{item.Phone}</td>\n                                    {\n                                      type == '0' || type == '1' ?\n                                        <td className=\"text-center\">{item.Company_Id == null || item.Company_Id == undefined ? \"admin\" : item.Company_Id.Name}</td> : \"\"\n                                    }\n                                    <td className=\"text-center\">\n                                      {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\n                                    </td>\n                                    <td className=\"text-center\">{item.Count}</td>\n\n                                    <td className=\"text-center\">\n                                      <CButton style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => { }} >\n                                        Lịch sử soi da\n                                      </CButton>\n                                    </td>\n                                  </tr>\n                                );\n                              }) : \"\"\n                          }\n                        </tbody>\n                      </table>\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row> : \"\"\n          }\n\n          {\n            type == \"2\" ?\n              <Row>\n                <Col>\n                  <p style={styles.success}>{this.state.updated}</p>\n                  <p style={styles.danger}>{this.state.deleted}</p>\n                  <Card>\n                    <CardHeader>\n                      <i className=\"fa fa-align-justify\"></i> Biểu đồ thể hiện lượt khách hàng theo từng tháng (Khách hàng mới sẽ được tính lại từ đầu khi sang tháng mới)\n                    </CardHeader>\n                    <CardBody>\n\n                      <CChartBar\n                        datasets={[\n                          {\n                            label: 'Lượt khách hàng mới của tháng',\n                            backgroundColor: '#f87979',\n                            data: dataChart\n                          }\n                        ]}\n                        labels=\"months\"\n                        options={{\n                          tooltips: {\n                            enabled: true\n                          }\n                        }}\n                      />\n\n                    </CardBody>\n                  </Card>\n                </Col>\n              </Row> : \"\"\n          }\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst styles = {\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: 300\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: \"right\",\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh25: {\n    width: \"25%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  w5: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    marginLeft: '5px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\",\n    width: \"250px\"\n  },\n  searchInput: {\n    width: \"190px\",\n    display: 'inline-block',\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n  mgl5: {\n    marginBottom: '0px'\n  }\n}\n\nexport default CustomerManager;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;"],"sourceRoot":""}