{"version":3,"sources":["views/base/tables/TableUser.js","contants/contants.js","views/Common/TextFieldGroup.js"],"names":["headers","Headers","auth","localStorage","getItem","append","Users","props","getData","a","state","company_id","role","setState","isLoading","id","JSON","parse","console","log","bodyUser","condition","Company_Id","bodyCustomer","Sale_Id","sale_id","axios","baseURL","Constants","BASE_URL","url","LIST_USER","method","res","data","LIST_CUSTOMER","pagination","dataApi","active","map","val","Status","totalActive","openDelete","item","modalDelete","delete","key","activePage","page","itemsCount","limit","modalCom","viewingUser","communities","updated","action","Email","Name","Phone","Gender","Role_Id","UserName","Password","Code","dataCompany","currentCompany","dataSale","currentSale","dataRole","currentRole","arrPagination","indexPage","this","i","j","temparray","arrTotal","length","slice","push","d","toLocaleUpperCase","includes","getCompanyData","getSaleData","getRoleData","alert","body","ADD_USER","is_success","message","UPDATE_USER","DELETE_USER","fetchData","fetch","global","then","users","json","result","total","catch","LIST_COMPANY","resCompany","undefined","LIST_COMPANY_WITH_ID","currentC","LIST_SALE","resSale","LIST_SALE_WITH_ID","LIST_ROLE","resRole","LIST_ROLE_WITH_ID","e","target","name","value","className","style","styles","success","danger","deleted","tags","searchInput","onChange","searchKey","placeholder","outline","color","floatRight","size","onClick","toggleModal","responsive","wa10","wh12","wh15","w5","row","Date","Create_Date","toLocaleDateString","toLocaleTimeString","mgl5","openUpdate","float","marginRight","padding","isOpen","field","label","type","readOnly","flexLabel","htmlFor","flexOption","selected","_id","addUser","updateUser","disabled","toggle","Component","width","height","textDecoration","marginTop","spinner","center","textAlign","tbody","overflowY","marginLeft","display","userActive","userPending","nagemonNameCol","image","borderRadius","marginBottom","TextFieldGroup","error","checkUserExists","classnames","onBlur","defaultProps"],"mappings":"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","file":"static/js/18.fc5b8c13.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Table, Button, Input,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n  Alert\n} from 'reactstrap';\nimport 'moment-timezone';\nimport Constants from \"./../../../contants/contants\";\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\nimport axios from 'axios'\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      activePage: 1,\n      page: 1,\n      itemsCount: 0,\n      limit: 20,\n      totalActive: 0,\n      modalCom: false,\n      viewingUser: {},\n      communities: [],\n      updated: '',\n      dataApi: [],\n      action: 'new',\n      Email: '',\n      Name: '',\n      Phone: '',\n      Gender: 'Nam',\n      Company_Id: '',\n      Role_Id: '',\n      UserName: '',\n      Password: '',\n      Sale_Id: '',\n      Code: '',\n      Status: '',\n      modalDelete: false,\n      delete: null,\n      dataCompany: [],\n      currentCompany: '',\n      dataSale: [],\n      currentSale: '',\n      dataRole: [],\n      currentRole: '',\n      arrPagination: [],\n      indexPage: 0,\n      role: localStorage.getItem('role'),\n      company_id: localStorage.getItem('user')\n    };\n  }\n  async componentDidMount() {\n    this.getData()\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n    this.setState({ arrPagination: arrTotal, data: arrTotal[this.state.indexPage] });\n  }\n\n  getData = async () => {\n    const { company_id, role } = this.state;\n    this.setState({ isLoading: true });\n    var id = JSON.parse(company_id);\n    console.log(id)\n    var bodyUser = {\n      condition: {\n        Company_Id: id.company_id\n      }\n    }\n\n    var bodyCustomer = {\n      condition: {\n        Company_Id: id.company_id,\n        Sale_Id: id.sale_id\n      }\n    }\n    if (role == 'ADMIN') {\n      var res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_USER,\n        method: 'POST'\n      });\n\n    } else if (role == 'SHOPMANAGER') {\n      var res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_USER,\n        method: 'POST',\n        data: bodyUser\n      });\n\n    } else if (role == 'SALES') {\n      var res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_CUSTOMER,\n        method: 'POST',\n        data: bodyCustomer\n      })\n    }\n\n    this.pagination(res.data.data);\n    this.setState({ dataApi: res.data.data });\n\n    let active = 0\n\n    res.data.data.map(val => {\n      if (val.Status == \"Actived\") {\n        active = active + 1\n      }\n    })\n\n    this.setState({ isLoading: false, totalActive: active });\n  }\n\n  searchKey(key) {\n    const { indexPage } = this.state;\n    this.setState({ key: key })\n\n    if (key != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if (val.Name.toLocaleUpperCase().includes(key.toLocaleUpperCase()) || val.Email.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n          d.push(val)\n        }\n      })\n      let active = 0\n\n      d.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: d, totalActive: active })\n    } else {\n      let active = 0\n\n      this.state.dataApi.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: this.state.arrPagination[indexPage], totalActive: active })\n    }\n  }\n\n  async toggleModal(key) {\n    await this.getCompanyData()\n    await this.getSaleData()\n    await this.getRoleData()\n    if (key == 'new') {\n      this.setState({\n        modalCom: !this.state.modalCom,\n        action: key,\n        Email: '',\n        Name: '',\n        Phone: '',\n        Gender: 'Nam',\n        Company_Id: '',\n        Role_Id: '',\n        UserName: '',\n        Password: '',\n        Sale_Id: '',\n        Code: ''\n      })\n    }\n  }\n\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n\n  async addUser() {\n    const { Email, Name, Phone, UserName, Code, Password, Gender, Role_Id, Company_Id, Sale_Id } = this.state\n\n    if (Email == null || Email == ''\n      || Name == null || Name == ''\n      || Phone == null || Phone == ''\n      || UserName == null || UserName == ''\n      || Role_Id == null || Role_Id == ''\n      || Password == null || Password == '') {\n      alert(\"Please fill in all the requirements\");\n      return\n    }\n\n    const body = {\n      Email: Email,\n      Name: Name,\n      Phone: Phone,\n      Gender: Gender,\n      Company_Id: Company_Id,\n      Role_Id: Role_Id,\n      UserName: UserName,\n      Password: Password,\n      Sale_Id: Sale_Id,\n      Code: Code\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.ADD_USER,\n      method: 'PUT',\n      data: body\n    });\n\n    if (res.data.is_success == true) {\n      this.getData();\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(res.data.message);\n      this.setState({ isLoading: false });\n    }\n  }\n\n  async openUpdate(item) {\n    await this.getCompanyData(item.Company_Id)\n    await this.getSaleData(item.Sale_Id)\n    await this.getRoleData(item.Role_Id)\n\n    this.setState({\n      modalCom: !this.state.modalCom,\n      action: \"update\",\n      Email: item.Email,\n      Name: item.Name,\n      Phone: item.Phone,\n      Gender: item.Gender,\n      Company_Id: item.Company_Id,\n      Role_Id: item.Role_Id,\n      UserName: item.UserName,\n      Password: item.Password,\n      Sale_Id: item.Sale_Id,\n      Code: item.Code,\n      id: item['_id'],\n      Status: item.Status\n    })\n  }\n\n  async updateUser() {\n    const { Email, Name, Phone, UserName, Code, Password, Gender, Role_Id,\n      Company_Id, Sale_Id, Status } = this.state\n\n    if (Email == null || Email == ''\n      || Name == null || Name == ''\n      || Phone == null || Phone == ''\n      || UserName == null || UserName == ''\n      || Password == null || Password == '') {\n      alert(\"Please fill in all the requirements\");\n      return\n    }\n\n    const body = {\n      Email: Email,\n      Name: Name,\n      Phone: Phone,\n      Gender: Gender,\n      Company_Id: Company_Id,\n      Role_Id: Role_Id,\n      UserName: UserName,\n      Password: Password,\n      Sale_Id: Sale_Id,\n      Code: Code,\n      id: this.state.id,\n      Status: Status\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.UPDATE_USER,\n      method: 'POST',\n      data: body\n    });\n\n    if (res.data.is_success == true) {\n      this.getData();\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(res.data.message);\n      this.setState({ isLoading: false });\n    }\n  }\n\n  openDelete = (item) => {\n    this.setState({\n      modalDelete: !this.state.modalDelete,\n      delete: item\n    })\n  }\n\n  async delete() {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.DELETE_USER,\n      method: 'DELETE',\n      data: {\n        \"id\": this.state.delete['_id']\n      }\n    });\n\n    if (res.data.is_success == true) {\n      this.getData();\n      this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n    } else {\n      alert(res.data.message);\n      this.setState({ isLoading: false });\n    }\n\n  }\n\n  getUsers(page = 1) {\n    const limit = this.state.limit;\n    const key = this.state.key || '';\n    const fetchData = {\n      method: 'GET',\n      headers: headers\n    };\n    fetch(global.BASE_URL + '/admin/users?key=' + key + '&page=' + page + '&limit=' + limit, fetchData).then(users => {\n      users.json().then(result => {\n        this.setState({\n          data: result.data,\n          itemsCount: result.total,\n          activePage: page,\n          totalActive: result.totalActive,\n          updated: '',\n        });\n      })\n    }).catch(console.log);\n  }\n\n  async getCompanyData(id) {\n    const resCompany = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_COMPANY,\n      method: 'GET',\n    });\n\n    if (id != '' || id != undefined) {\n      const currentC = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_COMPANY_WITH_ID + id,\n        method: 'GET',\n      });\n      if (currentC.data.data != null || currentC.data.data != undefined) {\n        this.setState({ currentCompany: currentC.data.data.Name });\n      }\n    }\n    this.setState({ dataCompany: resCompany.data.data });\n  }\n\n  async getSaleData(id) {\n    const resSale = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_SALE,\n      method: 'GET',\n    });\n\n    if (id != '' || id != undefined) {\n      const currentSale = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_SALE_WITH_ID + id,\n        method: 'GET',\n      });\n      if (currentSale.data.data != null || currentSale.data.data != undefined) {\n        this.setState({ currentSale: currentSale.data.data.Name });\n      }\n    }\n    this.setState({ dataSale: resSale.data.data });\n  }\n\n  async getRoleData(id) {\n    const resRole = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_ROLE,\n      method: 'GET',\n    });\n\n    if (id != '' || id != undefined) {\n      const currentRole = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_ROLE_WITH_ID + id,\n        method: 'GET',\n      });\n      if (currentRole.data.data != null || currentRole.data.data != undefined) {\n        this.setState({ currentRole: currentRole.data.data.Name });\n      }\n    }\n    this.setState({ dataRole: resRole.data.data });\n  }\n\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { data, key, viewingUser, communities, dataCompany, role,\n      currentCompany, dataSale, currentSale, action, dataRole, currentRole, arrPagination, indexPage } = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <p style={styles.success}>{this.state.updated}</p>\n              <p style={styles.danger}>{this.state.deleted}</p>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> USERS (Total: {this.state.data != undefined || this.state.data != null ?\n                    this.state.data.length : 0}, Active: {this.state.totalActive}, Page: {this.state.indexPage + 1})\n                  <div style={styles.tags}>\n                    {\n                      role == 'SALES' ? \"\" :\n                        <div>\n                          <Input style={styles.searchInput} onChange={(e) => this.searchKey(e.target.value)} name=\"key\" value={key} placeholder=\"Search\" />\n                          <Button outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={async e => await this.toggleModal(\"new\")}>Add</Button>\n                        </div>\n                    }\n                  </div>\n                </CardHeader>\n                <CardBody>\n                  {\n                    role == 'SALES' ? <Table responsive>\n                                        <thead>\n                                          <tr>\n                                            <th style={styles.wa10}>No.</th>\n                                            <th style={styles.wh12}>Name</th>\n                                            <th style={styles.wh12}>Email</th>\n                                            <th style={styles.wh15}>Phone</th>\n                                            <th style={styles.wh12}>Gender</th>\n                                            <th style={styles.wh12}>Company Id</th>\n                                            <th style={styles.wh12}>Sale Id</th>\n                                            <th style={styles.wh12}>Date</th>\n                                            <th style={styles.w5}>Action</th>\n                                          </tr>\n                                        </thead>\n                                        <tbody>\n                                          {\n                                            data != undefined ?\n                                              data.map((item, i) => {\n                                                return (\n                                                  <tr key={i} style={styles.row}>\n                                                    <td style={styles.wa10}>{i + 1}</td>\n                                                    <td style={styles.wh12}>{item.Name}</td>\n                                                    <td style={styles.wh12}>{item.Email}</td>\n                                                    <td style={styles.wh15}>{item.Phone}</td>\n                                                    <td style={styles.wh12}>{item.Gender}</td>\n                                                    <td style={styles.wh12}>{item.Company_Id}</td>\n                                                    <td style={styles.wh12}>{item.Sale_Id}</td>\n                                                    <td style={styles.wh12}>\n                                                      {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\n                                                    </td>\n                                                    <td style={styles.w5}>\n                                                      <Button style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >Update</Button>{' '}\n                                                      <Button outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>Delete</Button>\n                                                    </td>\n                                                  </tr>\n                                                );\n                                              }) : \"\"\n                                          }\n                                        </tbody>\n                                      </Table> :\n                                      <Table responsive>\n                                        <thead>\n                                          <tr>\n                                            <th style={styles.wa10}>No.</th>\n                                            <th style={styles.wh12}>Username</th>\n                                            <th style={styles.wh12}>Name</th>\n                                            <th style={styles.wh15}>Email</th>\n                                            <th style={styles.wh12}>Phone</th>\n                                            <th style={styles.wh12}>Gender</th>\n                                            <th style={styles.wh12}>Status</th>\n                                            <th style={styles.wh12}>Code</th>\n                                            <th style={styles.w5}>Action</th>\n                                          </tr>\n                                        </thead>\n                                        <tbody>\n                                          {\n                                            data != undefined ?\n                                              data.map((item, i) => {\n                                                return (\n                                                  <tr key={i} style={styles.row}>\n                                                    <td style={styles.wa10}>{i + 1}</td>\n                                                    <td style={styles.wh12}>{item.UserName}</td>\n                                                    <td style={styles.wh12}>{item.Name}</td>\n                                                    <td style={styles.wh15}>{item.Email}</td>\n                                                    <td style={styles.wh12}>{item.Phone}</td>\n                                                    <td style={styles.wh12}>{item.Gender}</td>\n                                                    <td style={styles.wh12}>{item.Status}</td>\n                                                    <td style={styles.wh12}>{item.Code}</td>\n                                                    <td style={styles.w5}>\n                                                      <Button style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >Update</Button>{' '}\n                                                      <Button outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>Delete</Button>\n                                                    </td>\n                                                  </tr>\n                                                );\n                                              }) : \"\"\n                                          }\n                                        </tbody>\n                                      </Table>\n                  }\n                </CardBody>\n              </Card>\n              {\n                arrPagination.length == 1 ? \"\" :\n                  <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                    <tr style={styles.row}>\n                      {\n                        arrPagination.map((item, i) => {\n                          return (\n                            <td>\n                              <Button style={styles.pagination} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ data: arrPagination[i], indexPage: i }) }}>{i + 1}</Button>\n                            </td>\n                          );\n                        })\n                      }\n                    </tr>\n                  </div>\n              }\n            </Col>\n          </Row>\n          <Modal isOpen={this.state.modalCom} className={this.props.className}>\n            <ModalHeader>{this.state.action == 'new' ? `Create` : `Update`}</ModalHeader>\n            <ModalBody>\n              <TextFieldGroup\n                field=\"Email\"\n                label=\"Email\"\n                value={this.state.Email}\n                placeholder={\"Email\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"Email\", e.target.value)}\n              // rows=\"5\"\n              />\n              <TextFieldGroup\n                field=\"Name\"\n                label=\"Name\"\n                value={this.state.Name}\n                placeholder={\"Name\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"Name\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"Password\"\n                label=\"Password\"\n                value={this.state.Password}\n                type={\"password\"}\n                placeholder={\"Password\"}\n                readOnly={action == 'new' ? false : true}\n                onChange={e => this.onChange(\"Password\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"Code\"\n                label=\"Code\"\n                placeholder={\"Code\"}\n                value={this.state.Code}\n                // error={errors.title}\n                onChange={e => this.onChange(\"Code\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"UserName\"\n                label=\"UserName\"\n                placeholder={\"Username\"}\n                value={this.state.UserName}\n                // error={errors.title}\n                onChange={e => this.onChange(\"UserName\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"Phone\"\n                label=\"Phone\"\n                value={this.state.Phone}\n                placeholder={\"Phone\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"Phone\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <div>\n                <label style={styles.flexLabel} htmlFor=\"tag\">Gender:    </label>\n                <select style={styles.flexOption} name=\"Gender\" onChange={e => this.onChange(\"Gender\", e.target.value)}>\n                  <option value={this.state.Gender}>{this.state.Gender == '' ? ` - - - - - - - - - - ` : this.state.Gender}</option>\n                  <option value={'Nam'}>Nam</option>\n                  <option value={'Nữ'}>Nữ</option>\n                </select>\n              </div>\n\n              <div>\n                <label style={styles.flexLabel} htmlFor=\"tag\">Company:    </label>\n                <select style={styles.flexOption} name=\"Company_Id\" onChange={e => this.onChange(\"Company_Id\", e.target.value)}>\n                  <option value={this.state.Company_Id}>-----</option>\n                  {\n                    dataCompany.map((item, i) => {\n                      if (item.Name == currentCompany) {\n                        return (\n                          <option selected value={item._id}>{item.Name}</option>\n                        );\n                      } else {\n                        return (\n                          <option value={item._id}>{item.Name}</option>\n                        );\n                      }\n                    })\n                  }\n                </select>\n              </div>\n\n              <div>\n                <label style={styles.flexLabel} htmlFor=\"tag\">Role:    </label>\n                <select style={styles.flexOption} name=\"Role_Id\" onChange={e => this.onChange(\"Role_Id\", e.target.value)}>\n                  <option value={this.state.Role_Id}>-----</option>\n                  {\n                    dataRole.map((item, i) => {\n                      if (item.Name == currentRole) {\n                        return (\n                          <option selected value={item._id}>{item.Name}</option>\n                        );\n                      } else {\n                        return (\n                          <option value={item._id}>{item.Name}</option>\n                        );\n                      }\n                    })\n                  }\n                </select>\n              </div>\n\n              <div>\n                <label style={styles.flexLabel} htmlFor=\"tag\">Sale:    </label>\n                <select style={styles.flexOption} name=\"Sale_Id\" onChange={e => this.onChange(\"Sale_Id\", e.target.value)}>\n                  <option value={this.state.Sale_Id}>-----</option>\n                  {\n                    dataSale.map((item, i) => {\n                      if (item.Name == currentSale) {\n                        return (\n                          <option selected value={item._id}>{item.Name}</option>\n                        );\n                      } else {\n                        return (\n                          <option value={item._id}>{item.Name}</option>\n                        );\n                      }\n                    })\n                  }\n                </select>\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={e => { this.state.action === 'new' ? this.addUser() : this.updateUser() }} disabled={this.state.isLoading}>Save</Button>{' '}\n              <Button color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Cancel</Button>\n            </ModalFooter>\n          </Modal>\n\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Delete`}</ModalHeader>\n            <ModalBody>\n              <label htmlFor=\"tag\">{`Do you want to delete user \"${this.state.delete ? this.state.delete.Email : ''}\" ?`}</label>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Delete</Button>{' '}\n              <Button color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Cancel</Button>\n            </ModalFooter>\n          </Modal>\n        </div>\n      );\n    }\n    return (\n      <div id=\"page-loading\">\n        <div className=\"three-balls\">\n          <div className=\"ball ball1\"></div>\n          <div className=\"ball ball2\"></div>\n          <div className=\"ball ball3\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: 300\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: \"right\",\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh12: {\n    width: \"10%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wh15: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  w5: {\n    width: \"20%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    marginLeft: '5px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\",\n    width: \"250px\"\n  },\n  searchInput: {\n    width: \"190px\",\n    display: 'inline-block',\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n  mgl5: {\n    marginBottom: '0px'\n  }\n}\n\nexport default Users;\n","export default {\n  \"BASE_URL\" : \"http://thanhvien.applamdep.com\",\n  //\"BASE_URL\" : \"http://localhost:3000\",\n\n  \"LIST_USER\" : \"/api/list-user\",\n  \"LIST_CUSTOMER\" : \"/api/list-customer\",\n  \"LIST_USER_WITH_ID\" : \"/api/list-user?id=\",\n  \"ADD_USER\" : \"/api/add-user\",\n  \"UPDATE_USER\" : \"/api/update-user\",\n  \"DELETE_USER\" : \"/api/delete-user\",\n  \"LOGIN_ADMIN\" : \"/api/login_admin\",\n  \"LIST_TYPEKEY\" : \"/api/list-typekey\",\n  \"LIST_TYPEKEY_WITH_ID\" : \"/api/list-typekey?id=\",\n  \"ADD_TYPEKEY\" : \"/api/add-typekey\",\n  \"UPDATE_TYPEKEY\" : \"/api/update-typekey\",\n  \"DELETE_TYPEKEY\" : \"/api/delete-typekey\",\n\n  \"LIST_ROLE\" : \"/api/list-role\",\n  \"LIST_ROLE_WITH_ID\" : \"/api/list-role?id=\",\n  \"ADD_ROLE\" : \"/api/add-role\",\n  \"UPDATE_ROLE\" : \"/api/update-role\",\n  \"DELETE_ROLE\" : \"/api/delete-role\",\n\n  \"LIST_SALELOG\" : \"/api/list-salelog\",\n  \"LIST_SALELOG_WITH_ID\" : \"/api/list-salelog?id=\",\n  \"ADD_SALELOG\" : \"/api/add-salelog\",\n  \"UPDATE_SALELOG\" : \"/api/update-salelog\",\n  \"DELETE_SALELOG\" : \"/api/delete-salelog\",\n\n  \"LIST_SALE\" : \"/api/list-sale\",\n  \"LIST_SALE_WITH_ID\" : \"/api/list-sale?id=\",\n  \"ADD_SALE\" : \"/api/add-sale\",\n  \"UPDATE_SALE\" : \"/api/update-sale\",\n  \"DELETE_SALE\" : \"/api/delete-sale\",\n\n  \"LIST_KEYORDER\" : \"/api/list-keyorder\",\n  \"LIST_KEYORDER_WITH_ID\" : \"/api/list-keyorder?id=\",\n  \"ADD_KEYORDER\" : \"/api/add-keyorder\",\n  \"UPDATE_KEYORDER\" : \"/api/update-keyorder\",\n  \"DELETE_KEYORDER\" : \"/api/delete-keyorder\",\n\n  \"LIST_KEY\" : \"/api/list-key\",\n  \"LIST_KEY_WITH_ID\" : \"/api/list-key?id=\",\n  \"ADD_KEY\" : \"/api/add-key\",\n  \"UPDATE_KEY\" : \"/api/update-key\",\n  \"DELETE_KEY\" : \"/api/delete-key\",\n\n  \"LIST_COMPANY\" : \"/api/list-company\",\n  \"LIST_COMPANY_WITH_ID\" : \"/api/list-company?id=\",\n  \"ADD_COMPANY\" : \"/api/add-company\",\n  \"UPDATE_COMPANY\" : \"/api/update-company\",\n  \"DELETE_COMPANY\" : \"/api/delete-company\",\n\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder }) => {\n  return (\n    <div className={classnames('form-group', { 'has-error': error })}>\n      <label className=\"control-label\">{label}</label>\n      <input\n        onChange={onChange}\n        onBlur={checkUserExists}\n        value={value}\n        type={type}\n        name={field}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        className=\"form-control\"\n      />\n    {error && <span className=\"help-block\">{error}</span>}\n    </div>  );\n}\n\nTextFieldGroup.propTypes = {\n  field: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checkUserExists: PropTypes.func\n}\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextFieldGroup;\n"],"sourceRoot":""}