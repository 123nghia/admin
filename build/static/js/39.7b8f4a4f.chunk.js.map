{"version":3,"sources":["views/base/tables/MakeUp/SubType.js","functions/callAPI.js"],"names":["headers","Headers","auth","localStorage","getItem","append","SubType","props","getData","a","setState","isLoading","API_CONNECT","Constants","LIST_TYPE","res_product","LIST_COLOR_SELECT","isADMIN","company_id","res_color","val","data","pagination","dataApi","arrColor","arrColorChoose","getData_Company","LIST_TYPE_COMPANY","JSON","parse","state","user","openDelete","item","modalDelete","id","_id","key","keyColor","modalCom","updated","hidden","action","vi","image","hover","sub_type","color_id","isNull","delete","arrPagination","arrShowColor","indexPage","token","Authorization","type","collapse","this","arr","i","length","url","window","location","hash","isHidden","href","j","temparray","arrTotal","slice","push","console","log","d","map","name","toLocaleUpperCase","includes","active","Status","totalActive","e","name_action","target","value","searchKey","hex","searchColor","LIST_COLOR","LIST_COLOR_COMPANY","alert","body","axios","baseURL","BASE_URL","ADD_TYPE","method","status","arrTemp","setData","undefined","UPDATE_TYPE","DELETE_TYPE","files","reader","FileReader","readAsDataURL","onload","result","dataColor","split","lodash","remove","actionSearchColor","show","style","backgroundColor","width","onChange","placeholder","height","overflowY","cursor","onClick","onChooseColor","lg","color","className","border","padding","fontWeight","xs","sm","margin","onRemoveColor","marginTop","marginLeft","float","fontSize","outline","css","override","size","loading","speedMultiplier","styles","tags","searchInput","actionSearch","resetSearch","floatRight","toggleModal","ble","colSpan","src","mgl5","openUpdate","count","v","isOpen","field","label","onChangeImage","marginBottom","custom","selected","renderSelect","renderSelectUpdate","addRoles","updateUser","disabled","toggle","htmlFor","Component","marginRight","flexLabel","flexOption","textDecoration","spinner","center","textAlign","tbody","wh25","w5","wa10","row","success","danger","display","userActive","userPending","nagemonNameCol","borderRadius","require","default","defaults","constants","connect","options","get","is_success","post","put","del"],"mappings":"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","file":"static/js/39.7b8f4a4f.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport CIcon from '@coreui/icons-react'\nimport lodash from 'lodash';\n\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n  Input,\n  Button\n} from 'reactstrap';\n\nimport {\n  CButton,\n  CLabel,\n  CSelect,\n  CRow,\n  CCol,\n  CListGroup,\n  CListGroupItem,\n  CCollapse,\n} from '@coreui/react'\n\nimport Pagination from '@material-ui/lab/Pagination';\nimport 'moment-timezone';\nimport Constants from \"../../../../contants/contants\";\nimport TextFieldGroup from \"../../../Common/TextFieldGroup\";\nimport axios from 'axios'\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport API_CONNECT from \"../../../../functions/callAPI\";\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\n\nclass SubType extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      keyColor: '',\n      modalCom: false,\n      updated: '',\n      dataApi: [],\n      hidden: false,\n      action: 'new',\n      vi: '',\n      image: '',\n      hover: '',\n      sub_type: '',\n      color_id: [],\n      isNull: false,\n      modalDelete: false,\n      delete: null,\n      arrPagination: [],\n      arrColor: [],\n      arrColorChoose: [],\n      arrShowColor: [],\n      indexPage: 0,\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      type: localStorage.getItem('type'),\n      user: localStorage.getItem('user'),\n      isLoading: false,\n      collapse: false\n    };\n  }\n  async componentDidMount() {\n    const { type } = this.state;\n    if (type == '0' || type == '1') {\n      this.getData()\n    } else {\n      this.getData_Company()\n    }\n\n\n\n    let arr = JSON.parse(localStorage.getItem('url'));\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].url == window.location.hash) {\n        if (arr[i].isHidden == true) {\n          window.location.href = '#/'\n        }\n      }\n    }\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden: false\n      })\n    } else {\n      this.setState({\n        hidden: true\n      })\n    }\n\n    console.log(arrTotal[0])\n\n    this.setState({ arrPagination: arrTotal, data: arrTotal[0] });\n  }\n\n  getData = async () => {\n    this.setState({ isLoading: true });\n\n    const res_product = await API_CONNECT(\n      Constants.LIST_TYPE + \"/null\", {}, \"\", \"GET\")\n\n    const res_color = await API_CONNECT(\n      Constants.LIST_COLOR_SELECT, { isADMIN: true, company_id: null }, \"\", \"POST\")\n\n    let val = res_product.data;\n\n    this.pagination(val);\n    this.setState({ dataApi: val, isLoading: false, arrColor: res_color.data, arrColorChoose: res_color.data });\n\n  }\n\n  getData_Company = async () => {\n    this.setState({ isLoading: true });\n    const res_product = await API_CONNECT(\n      Constants.LIST_TYPE_COMPANY + JSON.parse(this.state.user).company_id + \"/null\", {}, \"\", \"GET\")\n\n    const res_color = await API_CONNECT(\n      Constants.LIST_COLOR_SELECT, {\n      isADMIN: false, company_id: JSON.parse(this.state.user).company_id\n    }, \"\", \"POST\")\n\n    let val = res_product.data;\n\n    this.pagination(val);\n    this.setState({ dataApi: val, isLoading: false, arrColor: res_color.data, arrColorChoose: res_color.data  });\n  }\n\n  searchKey() {\n    const { indexPage, key } = this.state;\n    // this.setState({ key: key })\n\n    if (key != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if (val.name.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n          val.vi.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n      let active = 0\n\n      d.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: d, totalActive: active })\n    } else {\n      let active = 0\n\n      this.state.dataApi.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: this.state.arrPagination[indexPage], totalActive: active })\n    }\n  }\n\n  actionSearch(e, name_action) {\n    this.setState({\n      [name_action]: e.target.value\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  resetSearch() {\n    this.setState({\n      key: ''\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  searchColor() {\n    const { keyColor, arrColorChoose, arrColor } = this.state;\n\n    if (keyColor != '') {\n      let d = []\n      arrColorChoose.map(val => {\n        if (val.hex.toLocaleUpperCase().includes(keyColor.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n\n      this.setState({ arrColorChoose: d })\n    } else {\n      this.setState({ arrColorChoose: arrColor })\n    }\n  }\n\n  actionSearchColor(e, name_action) {\n    this.setState({\n      [name_action]: e\n    }, () => {\n      this.searchColor();\n    });\n  }\n\n  async toggleModal(key) {\n    const { type } = this.state;\n\n    if (type == '0' || type == '1') {\n      var res_color = await API_CONNECT(\n        Constants.LIST_COLOR, {}, \"\", \"GET\")\n    } else {\n      var res_color = await API_CONNECT(\n        Constants.LIST_COLOR_COMPANY + JSON.parse(this.state.user).company_id, {}, \"\", \"GET\")\n    }\n\n    if (key == 'new') {\n      this.setState({\n        modalCom: !this.state.modalCom,\n        action: key,\n        vi: \"\",\n        image: \"\",\n        hover: '',\n        arrColorChoose: res_color.data,\n        arrShowColor: [],\n        collapse: false\n      })\n    }\n  }\n\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n\n  async addRoles() {\n    const { vi, image, hover, sub_type, color_id } = this.state\n    if (vi == null || vi == '' ||\n      image == null || image == '') {\n      alert(\"Please fill in all the requirements\");\n      return\n    }\n\n    const body = {\n      vi: vi,\n      image: image,\n      company_id: this.state.type == '0' || this.state.type == '1' ? \"\" : JSON.parse(this.state.user).company_id,\n      hover: hover,\n      sub_type: sub_type,\n      color_id: color_id\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.ADD_TYPE,\n      method: 'POST',\n      data: body\n    });\n\n    if (res.status == 200) {\n      if (this.state.type == '0' || this.state.type == '1') {\n        this.getData()\n      } else {\n        this.getData_Company()\n      };\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(\"Thêm sản phẩm thất bại\");\n      this.setState({ isLoading: false });\n    }\n  }\n\n  async openUpdate(item) {\n    const { type } = this.state;\n    if (type == '0' || type == '1') {\n      var res_color = await API_CONNECT(\n        Constants.LIST_COLOR, {}, \"\", \"GET\")\n    } else {\n      var res_color = await API_CONNECT(\n        Constants.LIST_COLOR_COMPANY + JSON.parse(this.state.user).company_id, {}, \"\", \"GET\")\n    }\n\n    let arrTemp = [];\n    let setData = item.color_id == undefined ? [] : item.color_id\n    for (let i = 0; i < setData.length; i++) {\n      arrTemp.push(setData[i])\n    }\n\n    this.setState({\n      modalCom: !this.state.modalCom,\n      action: \"update\",\n      vi: item.vi || item.name,\n      image: item.image,\n      isNull: item.isNull,\n      id: item['_id'],\n      hover: item.hover,\n      sub_type: item.sub_type,\n      color_id: item.color_id == undefined ? [] : item.color_id,\n      arrColorChoose: res_color.data,\n      arrShowColor: arrTemp,\n      collapse: false\n    })\n  }\n\n  async updateUser() {\n    const { image, vi, isNull, hover, sub_type, arrShowColor } = this.state\n    if (vi == null || vi == '' ||\n      image == null || image == '') {\n      alert(\"Please fill in all the requirements\");\n      return\n    }\n\n\n\n    const body = {\n      vi: vi,\n      image: image,\n      id: this.state.id,\n      status: isNull,\n      hover: hover,\n      sub_type: sub_type,\n      color_id: arrShowColor\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.UPDATE_TYPE,\n      method: 'POST',\n      data: body\n    });\n\n    if (res.status == 200) {\n      if (this.state.type == '0' || this.state.type == '1') {\n        this.getData()\n      } else {\n        this.getData_Company()\n      };\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(\"Cập nhật thất bại\");\n      this.setState({ isLoading: false });\n    }\n  }\n\n  openDelete = (item) => {\n    this.setState({\n      modalDelete: !this.state.modalDelete,\n      id: item._id\n    })\n  }\n\n  async delete() {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.DELETE_TYPE,\n      method: 'POST',\n      data: {\n        \"id\": this.state.id\n      }\n    });\n\n    if (res.status == 200) {\n      if (this.state.type == '0' || this.state.type == '1') {\n        this.getData()\n      } else {\n        this.getData_Company()\n      };\n      this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n    } else {\n      alert(\"Xóa sản phẩm thất bại\");\n      this.setState({ isLoading: false });\n    }\n\n  }\n\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  getBadge(status) {\n    switch (status) {\n      case 'Actived': return 'success'\n      case 'Inactive': return 'secondary'\n      case 'Locked': return 'warning'\n      case 'Deactived': return 'danger'\n      default: return 'primary'\n    }\n  }\n\n  onChangeImage(e) {\n    let files = e.target.files;\n    let reader = new FileReader();\n    reader.readAsDataURL(files[0])\n    reader.onload = (e) => {\n      this.setState({ image: e.target.result })\n    }\n  }\n\n  onChooseColor(data) {\n    const { arrShowColor, arrColorChoose } = this.state;\n    const dataColor = data.split('/')\n    arrShowColor.push({ _id: dataColor[0], hex: dataColor[1] })\n    lodash.remove(arrColorChoose, {\n      hex: dataColor[1]\n    });\n    this.actionSearchColor('', 'keyColor')\n    this.setState({ arrShowColor: arrShowColor, arrColorChoose: arrColorChoose })\n  }\n\n  onRemoveColor(data) {\n    const { arrShowColor, arrColorChoose } = this.state;\n\n    const dataColor = data.split('/')\n    arrColorChoose.push({ _id: dataColor[0], hex: dataColor[1] })\n\n    lodash.remove(arrShowColor, {\n      hex: dataColor[1]\n    });\n\n    this.setState({ arrShowColor: arrShowColor, arrColorChoose: arrColorChoose })\n  }\n\n  renderSelect() {\n    const { arrColorChoose, arrShowColor, collapse, keyColor } = this.state;\n\n    return (\n      <div>\n        <CCollapse show={collapse}>\n          <CListGroup>\n            <CListGroupItem style={{ backgroundColor: \"#000000\" }}>\n              <Input style={{ width: '100%' }} onChange={(e) => {\n                this.actionSearchColor(e.target.value, \"keyColor\");\n              }} name=\"keyColor\" value={keyColor} placeholder=\"Tìm kiếm\" />\n            </CListGroupItem>\n            <div style={{ height: '200px', overflowY: 'scroll' }}>\n              {\n                arrColorChoose.map((item, i) => {\n                  return (\n                    <CListGroupItem style={{ cursor: 'pointer' }} key={i} onClick={() => { this.onChooseColor(item._id + \"/\" + item.hex) }}>\n                      <CRow>\n                        <CCol lg=\"2\">{item.hex}</CCol>\n                        <CCol lg=\"10\"><div style={{ backgroundColor: item.hex, width: '100%', height: 20 }}></div></CCol>\n                      </CRow>\n                    </CListGroupItem>\n                  );\n                })\n              }\n            </div>\n          </CListGroup>\n        </CCollapse>\n\n        <CButton\n          color=\"primary\"\n          style={{ width: '100%' }}\n          onClick={() => { this.setState({ collapse: !collapse }) }}\n          className={'mb-1'}\n        >{\n            !collapse ? \"Chọn màu\" : \"Đóng\"\n          }</CButton>\n\n        <div style={{ height: '200px', overflowY: 'scroll', border: '1px solid black', padding: 10 }}>\n          <CLabel style={{ fontWeight: 'bolder' }}>Danh sách màu đã chọn</CLabel>\n          <CRow>\n            {\n              arrShowColor.map((item, i) => {\n                return (\n                  <CCol xs=\"3\" sm=\"3\" lg=\"3\" key={i}>\n\n                    {item.hex}\n                    <div style={{ backgroundColor: item.hex, width: '100%', height: '20px', margin: 1, border: \"1px solid black\" }}>\n                      <div onClick={() => { this.onRemoveColor(item._id + \"/\" + item.hex) }} style={{ marginTop: 3, cursor: 'pointer', marginLeft: 5, width: 15, height: 15, color: '#ffffff', float: 'right', fontSize: 10 }}>X</div>\n                    </div>\n\n                  </CCol>\n                );\n              })\n            }\n          </CRow>\n        </div>\n      </div>\n    )\n  }\n\n  renderSelectUpdate() {\n    const { arrColorChoose, arrShowColor, collapse, keyColor } = this.state;\n\n    for (let i = 0; i < arrShowColor.length; i++) {\n      lodash.remove(arrColorChoose, {\n        hex: arrShowColor[i].hex\n      });\n    }\n\n    return (\n      <div>\n        <CCollapse show={collapse}>\n          <CListGroup>\n            <CListGroupItem style={{ backgroundColor: \"#000000\" }}>\n              <Input style={{ width: '100%' }} onChange={(e) => {\n                this.actionSearchColor(e.target.value, \"keyColor\");\n              }} name=\"keyColor\" value={keyColor} placeholder=\"Tìm kiếm\" />\n            </CListGroupItem>\n            <div style={{ height: '200px', overflowY: 'scroll' }}>\n              {\n                arrColorChoose.map((item, i) => {\n                  return (\n                    <CListGroupItem style={{ cursor: 'pointer' }} key={i} onClick={() => { this.onChooseColor(item._id + \"/\" + item.hex) }}>\n                      <CRow>\n                        <CCol lg=\"2\">{item.hex}</CCol>\n                        <CCol lg=\"10\"><div style={{ backgroundColor: item.hex, width: '100%', height: 20 }}></div></CCol>\n                      </CRow>\n                    </CListGroupItem>\n                  );\n                })\n              }\n            </div>\n          </CListGroup>\n        </CCollapse>\n\n        <CButton\n          outline\n          color=\"primary\"\n          style={{ width: '100%' }}\n          onClick={() => { this.setState({ collapse: !collapse }) }}\n          className={'mb-2'}\n        >{\n            !collapse ? \"Nhấn để chọn màu\" : \"Đóng\"\n          }</CButton>\n\n        <div style={{ height: '200px', overflowY: 'scroll', border: '1px solid black', padding: 10 }}>\n          <CLabel style={{ fontWeight: 'bolder' }}>Danh sách màu đã chọn</CLabel>\n          <CRow>\n            {\n              arrShowColor.map((item, i) => {\n                return (\n                  <CCol xs=\"3\" sm=\"3\" lg=\"3\" key={i}>\n\n                    {item.hex}\n                    <div style={{ backgroundColor: item.hex, width: '100%', height: '20px', margin: 1, border: \"1px solid black\" }}>\n                      <div onClick={() => { this.onRemoveColor(item._id + \"/\" + item.hex) }} style={{ marginTop: 3, cursor: 'pointer', marginLeft: 5, width: 15, height: 15, color: '#ffffff', float: 'right', fontSize: 10 }}>X</div>\n                    </div>\n\n                  </CCol>\n                );\n              })\n            }\n          </CRow>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { data, arrPagination, key } = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Danh mục\n                  <div style={styles.tags}>\n                    <CRow>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CRow>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <div>\n                              <Input style={styles.searchInput} onChange={(e) => {\n                                this.actionSearch(e, \"key\");\n                              }} name=\"key\" value={key} placeholder=\"Từ khóa\" />\n                            </div>\n                          </CCol>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <CButton color=\"primary\" style={{ width: '100%', marginTop: 5 }} size=\"sm\" onClick={e => { this.resetSearch() }}>Làm mới tìm kiếm</CButton>\n                          </CCol>\n                        </CRow>\n                      </CCol>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CButton outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={e => this.toggleModal(\"new\")}>Thêm mới</CButton>\n                      </CCol>\n                    </CRow>\n                  </div>\n                </CardHeader>\n                <CardBody>\n\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        <th className=\"text-center\">Tên</th>\n                        <th className=\"text-center\">Hình ảnh</th>\n                        <th className=\"text-center\">Vi</th>\n                        <th className=\"text-center\">Màu</th>\n                        <th className=\"text-center\">#</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <td colSpan=\"10\" hidden={this.state.hidden} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                <td className=\"text-center\">{item.name}</td>\n                                <td className=\"text-center\">\n                                  <img src={item.image} style={{ width: '50px', height: '50px' }} />\n                                </td>\n                                <td className=\"text-center\">{item.vi}</td>\n                                <td className=\"text-center\" style={{ width: 200 }}>\n                                  {item.color_id == undefined ? 0 : item.color_id.length}\n                                </td>\n                                <td className=\"text-center\">\n                                  <CButton style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >\n                                    <CIcon name=\"cilPencil\" />\n                                  </CButton>{' '}\n                                  <CButton outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>\n                                    <CIcon name=\"cilTrash\" />\n                                  </CButton>\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n                </CardBody>\n              </Card>\n              <div style={{ float: 'right' }}>\n                <Pagination count={arrPagination.length} color=\"primary\" onChange={(e, v) => {\n                  this.setState({ data: arrPagination[v - 1], indexPage: v - 1 })\n                }} />\n              </div>\n            </Col>\n          </Row>\n\n          <Modal size=\"lg\" isOpen={this.state.modalCom} className={this.props.className}>\n            <ModalHeader>{this.state.action == 'new' ? `Tạo mới` : `Cập nhật`}</ModalHeader>\n            <ModalBody>\n              <TextFieldGroup\n                field=\"vi\"\n                label=\"Tên\"\n                value={this.state.vi}\n                placeholder={\"Tên\"}\n                onChange={e => this.onChange(\"vi\", e.target.value)}\n              />\n\n              <TextFieldGroup\n                field=\"image\"\n                label=\"Ảnh thương hiệu\"\n                type={\"file\"}\n                onChange={e => { this.onChangeImage(e) }}\n                onClick={(e) => { e.target.value = null }}\n              />\n              {\n                this.state.image == \"\" ? \"\" :\n                  <img width=\"100\" height=\"150\" src={this.state.image} style={{ marginBottom: 20 }} />\n              }\n\n              {/* <TextFieldGroup\n                field=\"hover\"\n                label=\"Hover\"\n                value={this.state.hover}\n                placeholder={\"Hover\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"hover\", e.target.value)}\n              // rows=\"5\"\n              /> */}\n\n              <div>\n                <CLabel>Loại danh mục</CLabel>\n                <div style={{ width: \"100%\" }}>\n                  <CSelect onChange={async e => { this.setState({ sub_type: e.target.value }) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                    <option>-----</option>\n                    {\n                      [\"0\", \"1\"].map((item, i) => {\n                        if (item == this.state.sub_type) {\n                          return (\n                            <option selected key={i} value={item}>{item == \"0\" ? \"Make Up\" : \"Tóc\"}</option>\n                          );\n                        } else {\n                          return (\n                            <option key={i} value={item}>{item == \"0\" ? \"Make Up\" : \"Tóc\"}</option>\n                          );\n                        }\n                      })\n                    }\n                  </CSelect>\n                </div>\n              </div>\n\n              <div>\n                <CLabel>Chọn màu</CLabel>\n                <div style={{ width: \"100%\" }}>\n                  {\n                    this.state.action == 'new' ? this.renderSelect() : this.renderSelectUpdate()\n                  }\n                </div>\n              </div>\n              {/* {\n                this.state.action == 'new' ? \"\" :\n                  <div>\n                    <CLabel>Ẩn danh mục ?</CLabel>\n                    <div style={{ width: \"100%\" }}>\n                      <CSelect onChange={async e => { this.setState({ brand_id: e.target.value }) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                        {\n                          [true, false].map((item, i) => {\n                            if (item == this.state.isNull) {\n                              return (\n                                <option selected key={i} value={item}>{String(item)}</option>\n                              );\n                            } else {\n                              return (\n                                <option key={i} value={item}>{String(item)}</option>\n                              );\n                            }\n                          })\n                        }\n                      </CSelect>\n                    </div>\n                  </div>\n\n              } */}\n\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => {\n                this.state.action === 'new' ? this.addRoles() : this.updateUser()\n              }} disabled={this.state.isLoading}>Lưu</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Xoá`}</ModalHeader>\n            <ModalBody>\n              <label htmlFor=\"tag\">{`Xác nhận xóa !!!`}</label>\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Delete</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Cancel</CButton>\n            </ModalFooter>\n          </Modal>\n        </div>\n      );\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst styles = {\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: 300\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: \"right\",\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh25: {\n    width: \"25%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  w5: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    marginLeft: '5px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\"\n  },\n  searchInput: {\n    width: \"190px\",\n    display: 'inline-block',\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n}\n\nexport default SubType;\n","import constants from './../contants/contants'\n\nconst axios = require('axios').default;\naxios.defaults.baseURL = constants.BASE_URL;\n\nconst connect = async function (url = \"\", data = {}, token = \"\", type) {\n  let options = {};\n  // console.log(\"Token: \", token)\n  if (token) {\n    options = {\n      headers: token\n    };\n  }\n  try {\n    switch (type) {\n      case \"GET\":\n        let get = await axios.get(url, data, options);\n        if (get.is_success == false) {\n          return null;\n        }\n        return get.data;\n      case \"POST\":\n        let post = await axios.post(url, data, options);\n        if (post.is_success == false) {\n          return null;\n        }\n        return post.data;\n      case \"PUT\":\n        let put = await axios.put(url, data, options);\n        if (put.is_success == false) {\n          return null;\n        }\n        return put.data;\n      case \"DELETE\":\n        let del = await axios.delete(url, data, options);\n        if (del.is_success == false) {\n          return null;\n        }\n        return del.data;\n    }\n\n  } catch (reason) {\n    return reason;\n  }\n\n\n}\n\nexport default connect;\n"],"sourceRoot":""}