{"version":3,"sources":["contants/contants.js","functions/callAPI.js","views/Common/TextFieldGroup.js","views/base/tables/Deal.js"],"names":["axios","require","default","defaults","baseURL","constants","BASE_URL","connect","a","url","data","token","type","options","headers","get","is_success","post","put","delete","del","TextFieldGroup","field","value","label","error","onChange","checkUserExists","readOnly","placeholder","onClick","className","classnames","onBlur","name","defaultProps","Headers","auth","localStorage","getItem","append","Product","props","getData","setState","isLoading","API_CONNECT","Constants","LIST_DEAL","res","val","dataAdmin","pagination","dataApi","openDelete","item","modalDelete","state","id","_id","handleChangeCategory","e","i","arrCategory","arrAllProductOfAllCategory","arrAllProductChoosed","arrOptionCategory","arrChooseCategory","LIST_PRODUCT_CATEGORY","category_id","Array","found","find","element","push","handleUpdateCategory","arrUpdate","console","log","pushCategory","product","onRemoveCard","idCategory","splice","onCancelModal","modalCom","key","modalDetail","hidden","action","image","image_show","status","voucher","time_start","Date","time_finish","arrDetailBanner","arrPagination","objectValueCategory","indexPage","Authorization","accordion","arrRemoveOnUpdate","this","j","temparray","arrTotal","length","slice","d","map","toLocaleUpperCase","includes","name_action","target","searchKey","files","reader","FileReader","readAsDataURL","onload","result","category","LIST_CATEGORY","res_category","arrTempOptionCategory","dataCategory","alert","form","FormData","UPLOAD_DEAL","body","ADD_DEAL","arrTemp","y","dataItem","brand_id","price","slug","total_deal","dataTemp","onGetCategory","UPDATE_DEAL","DELETE_DEAL","title","color","md","lg","sm","xm","lx","block","active","variant","aria-pressed","style","maxHeight","overflowY","border","marginTop","borderRadius","margin","backgroundColor","height","size","float","isClearable","item_product","i_product","inline","custom","checked","index","findIndex","htmlFor","disabled","marginBottom","Number","src","width","css","override","loading","speedMultiplier","styles","tags","searchInput","actionSearch","resetSearch","outline","floatRight","toggleModal","ble","colSpan","undefined","getBadge_Type","toLocaleDateString","mgl5","openUpdate","count","v","isOpen","onChangeImage","changeDealType","selected","datePicker","flexLabel","flexOption","date","renderAddForm","addDeal","updateProduct","toggle","show","items","fields","itemsPerPage","scopedSlots","Component","marginRight","textDecoration","spinner","center","textAlign","tbody","wh25","w5","wa10","row","success","danger","display","userActive","userPending","nagemonNameCol"],"mappings":"6KAAe,KACb,SAAa,2BAEb,MAAU,aACV,UAAa,iBACb,SAAW,gBACX,YAAc,mBACd,YAAc,mBACd,cAAiB,qBAEjB,cAAiB,qBACjB,aAAgB,oBAChB,gBAAmB,uBACnB,gBAAmB,uBACnB,gBAAmB,uBAEnB,WAAc,kBACd,UAAa,iBACb,aAAgB,oBAChB,aAAgB,oBAChB,aAAgB,oBAEhB,aAAgB,oBAChB,sBAAyB,6BACzB,YAAe,mBACf,eAAkB,sBAClB,eAAkB,sBAClB,eAAkB,sBAClB,wBAA2B,+BAE3B,WAAc,kBACd,kBAAqB,yBACrB,mBAAsB,0BACtB,UAAa,iBAEb,UAAa,iBACb,SAAY,gBACZ,YAAe,mBACf,YAAe,mBACf,YAAe,mBAEf,iBAAoB,wBAEpB,YAAe,kBACf,iBAAoB,wBACpB,WAAc,mBACd,cAAiB,qBACjB,cAAiB,qBACjB,cAAiB,uB,yEC9CbA,EAAQC,EAAQ,KAASC,QAC/BF,EAAMG,SAASC,QAAUC,IAAUC,SAEnC,IAAMC,EAAO,uCAAG,wDAAAC,EAAA,sDAAgBC,EAAhB,+BAAsB,GAAIC,EAA1B,+BAAiC,GAAIC,EAArC,+BAA6C,GAAIC,EAAjD,uBACVC,EAAU,GAEVF,IACFE,EAAU,CACRC,QAASH,IALC,cASJC,EATI,OAUL,QAVK,QAgBL,SAhBK,QAsBL,QAtBK,QA4BL,WA5BK,0CAWQZ,EAAMe,IAAIN,EAAKC,EAAMG,GAX7B,WAYc,IADlBE,EAXI,QAYAC,WAZA,0CAaC,MAbD,iCAeDD,EAAIL,MAfH,yBAiBSV,EAAMiB,KAAKR,EAAKC,EAAMG,GAjB/B,WAkBe,IADnBI,EAjBI,QAkBCD,WAlBD,0CAmBC,MAnBD,iCAqBDC,EAAKP,MArBJ,yBAuBQV,EAAMkB,IAAIT,EAAKC,EAAMG,GAvB7B,WAwBc,IADlBK,EAvBI,QAwBAF,WAxBA,0CAyBC,MAzBD,iCA2BDE,EAAIR,MA3BH,yBA6BQV,EAAMmB,OAAOV,EAAKC,EAAMG,GA7BhC,WA8Bc,IADlBO,EA7BI,QA8BAJ,WA9BA,0CA+BC,MA/BD,iCAiCDI,EAAIV,MAjCH,mJAAH,qDA2CEH,O,iCChDf,mCAIMc,EAAiB,SAAC,GAAqG,IAAnGC,EAAkG,EAAlGA,MAAOC,EAA2F,EAA3FA,MAAOC,EAAoF,EAApFA,MAAOC,EAA6E,EAA7EA,MAAOb,EAAsE,EAAtEA,KAAMc,EAAgE,EAAhEA,SAAUC,EAAsD,EAAtDA,gBAAiBC,EAAqC,EAArCA,SAAUC,EAA2B,EAA3BA,YAAaC,EAAc,EAAdA,QAC5G,OACE,sBAAKC,UAAWC,IAAW,aAAc,CAAE,YAAaP,IAAxD,UACE,uBAAOM,UAAU,gBAAjB,SAAkCP,IAClC,uBACEE,SAAUA,EACVI,QAASA,EACTG,OAAQN,EACRJ,MAAOA,EACPX,KAAMA,EACNsB,KAAMZ,EACNO,YAAaA,EACbD,SAAUA,EACVG,UAAU,iBAEbN,GAAS,sBAAMM,UAAU,aAAhB,SAA8BN,QAc5CJ,EAAec,aAAe,CAC5BvB,KAAM,QAGOS,O,iXCGXP,EAAU,IAAIsB,QACZC,EAAOC,aAAaC,QAAQ,QAClCzB,EAAQ0B,OAAO,gBAAiB,UAAYH,GAC5CvB,EAAQ0B,OAAO,eAAgB,oB,IAEzBC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA4DRC,QA7DmB,sBA6DT,8BAAAnC,EAAA,6DACR,EAAKoC,SAAS,CAAEC,WAAW,IADnB,SAEQC,YACdC,IAAUC,UAAW,GAAI,GAAI,QAHvB,OAEJC,EAFI,OAKJC,EAAMD,EAAIvC,KAAKyC,UACnB,EAAKC,WAAWF,GAChB,EAAKN,SAAS,CAAES,QAASH,EAAKL,WAAW,IAPjC,2CA7DS,EAkUnBS,WAAa,SAACC,GACZ,EAAKX,SAAS,CACZY,aAAc,EAAKC,MAAMD,YACzBE,GAAIH,EAAKI,OArUM,EAuWnBC,qBAvWmB,uCAuWI,WAAOC,EAAGC,GAAV,+BAAAtD,EAAA,+DAC2F,EAAKiD,MAA7GM,EADa,EACbA,YAAaC,EADA,EACAA,2BAA4BC,EAD5B,EAC4BA,qBAAsBC,EADlD,EACkDA,kBAAmBC,EADrE,EACqEA,kBADrE,SAELrB,YACdC,IAAUqB,sBAAuB,CACjC,YAAeP,EAAEtC,OAChB,GAAI,QALc,OAEjB0B,EAFiB,OAOjBvC,EAAOuC,EAAIvC,KACfqD,EAAYD,GAAGO,YAAcR,EAAEtC,MAC/ByC,EAA2BF,GAAKpD,EAChCuD,EAAqBH,GAAK,IAAIQ,MAExBC,EAAQL,EAAkBM,MAAK,SAAAC,GAAO,OAAIA,EAAQlD,OAASsC,EAAEtC,SACnE4C,EAAkBL,GAAK,IAAIQ,MAC3BH,EAAkBL,GAAGY,KAAKH,GAC1B,EAAK3B,SAAS,CACZmB,YAAaA,EACbC,2BAA4BA,EAC5BC,qBAAsBA,EACtBE,kBAAmBA,IAnBA,4CAvWJ,0DA8XnBQ,qBA9XmB,uCA8XI,WAAOd,EAAGC,GAAV,iBAAAtD,EAAA,wDACoB,EAAKiD,MAAtCmB,EADa,EACbA,UADa,EACFV,kBACnBW,QAAQC,IAAIF,EAAUd,IAFD,2CA9XJ,0DAqYnBiB,aAAe,WACb,MAA6F,EAAKtB,MAA1FM,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,2BAA4BC,EAAjD,EAAiDA,qBAAsBE,EAAvE,EAAuEA,kBACvEJ,EAAYW,KAAK,CACfL,YAAa,GACbW,QAAS,KAEXhB,EAA2BU,KAAK,IAChCT,EAAqBS,KAAK,IAC1BP,EAAkBO,KAAK,IACvB,EAAK9B,SAAS,CACZmB,YAAaA,EACbC,2BAA4BA,EAC5BC,qBAAsBA,KAjZP,EAqZnBgB,aAAe,SAACC,GACd,MAA6F,EAAKzB,MAA1FM,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,2BAA4BC,EAAjD,EAAiDA,qBAAsBE,EAAvE,EAAuEA,kBAEvEJ,EAAYoB,OAAOD,EAAY,GAC/BlB,EAA2BmB,OAAOD,EAAY,GAC9CjB,EAAqBkB,OAAOD,EAAY,GACxCf,EAAkBgB,OAAOD,EAAY,GAErC,EAAKtC,SAAS,CACZmB,YAAaA,EACbC,2BAA4BA,EAC5BC,qBAAsBA,EACtBE,kBAAmBA,KAjaJ,EAqanBiB,cAAgB,WACd,MAAqG,EAAK3B,MAApGM,EAAN,EAAMA,YAAaC,EAAnB,EAAmBA,2BAA4BC,EAA/C,EAA+CA,qBAAsBE,EAArE,EAAqEA,kBAAmBkB,EAAxF,EAAwFA,SACxFtB,EAAc,IAAIO,MAClBN,EAA6B,IAAIM,MACjCL,EAAuB,IAAIK,MAC3BH,EAAoB,IAAIG,MACxB,EAAK1B,SAAS,CACZyC,UAAWA,EACXtB,YAAaA,EACbC,2BAA4BA,EAC5BC,qBAAsBA,EACtBE,kBAAmBA,KA9arB,EAAKV,MAAQ,CACX/C,KAAM,GACN4E,IAAK,GACLD,UAAU,EACVE,aAAa,EACblC,QAAS,GACTmC,QAAQ,EACRC,OAAQ,MACRvD,KAAM,GACNwD,MAAO,GACPC,WAAY,GACZ/E,KAAM,IACNgF,OAAQ,IACRC,QAAS,EACTC,WAAY,IAAIC,KAChBC,YAAa,IAAID,KACjBE,gBAAiB,GACjBzC,aAAa,EACbrC,OAAQ,KACR+E,cAAe,GACfhC,kBAAmB,GACnBiC,oBAAqB,GACrBC,UAAW,EACXzF,MAAO,CAAE0F,cAAc,UAAD,OAAY/D,aAAaC,QAAQ,WACvDM,WAAW,EACXyD,UAAW,EACXvC,YAAa,GACbC,2BAA4B,GAC5BC,qBAAsB,GACtBE,kBAAmB,GACnBS,UAAW,GACX2B,kBAAmB,IAjCJ,E,4FAoCnB,sBAAA/F,EAAA,sDACEgG,KAAK7D,UADP,gD,8EAIA,SAAWU,GACT,IAAIS,EAAG2C,EAAGC,EACNC,EAAW,GACf,IAAK7C,EAAI,EAAG2C,EAAIpD,EAAQuD,OAAQ9C,EAAI2C,EAAG3C,GAFV,EAG3B4C,EAAYrD,EAAQwD,MAAM/C,EAAGA,EAHF,GAI3B6C,EAASjC,KAAKgC,GAGO,GAAnBC,EAASC,OACXJ,KAAK5D,SAAS,CACZ4C,QAAQ,IAGVgB,KAAK5D,SAAS,CACZ4C,QAAQ,IAIZgB,KAAK5D,SAAS,CAAEsD,cAAeS,EAAUjG,KAAMiG,EAAS,O,uBAa1D,WACE,MAA2BH,KAAK/C,MAAxB2C,EAAR,EAAQA,UAAWd,EAAnB,EAAmBA,IAEnB,GAAW,IAAPA,EAAW,CACb,IAAIwB,EAAI,GACRN,KAAK/C,MAAMJ,QAAQ0D,KAAI,SAAA7D,GACjBA,EAAIhB,KAAK8E,oBAAoBC,SAAS3B,EAAI0B,sBAE5CF,EAAEpC,KAAKxB,MAIXsD,KAAK5D,SAAS,CAAElC,KAAMoG,SAEtBN,KAAK5D,SAAS,CAAElC,KAAM8F,KAAK/C,MAAMyC,cAAcE,O,0BAInD,SAAavC,EAAGqD,GAAc,IAAD,OAC3BV,KAAK5D,SAAL,eACGsE,EAAcrD,EAAEsD,OAAO5F,QACvB,WACD,EAAK6F,iB,yBAIT,WAAe,IAAD,OACZZ,KAAK5D,SAAS,CACZ0C,IAAK,KACJ,WACD,EAAK8B,iB,2BAIT,SAAcvD,GAAI,IAAD,OACXwD,EAAQxD,EAAEsD,OAAOE,MACjBC,EAAS,IAAIC,WACjBf,KAAK5D,SAAS,CAAE8C,MAAO2B,EAAM,KAC7BC,EAAOE,cAAcH,EAAM,IAC3BC,EAAOG,OAAS,SAAC5D,GACf,EAAKjB,SAAS,CAAE+C,WAAY9B,EAAEsD,OAAOO,Y,gEAIzC,WAAkBpC,GAAlB,4BAAA9E,EAAA,wDACiDgG,KAAK/C,MAA5C4B,EADV,EACUA,SAAU1E,EADpB,EACoBA,MAAOuD,EAD3B,EAC2BA,kBACd,OAAPoB,GACFkB,KAAK5D,SAAS,CACZyC,UAAWA,EACXI,OAAQH,EACRpD,KAAM,GACNyF,SAAU,GACV5D,YAAa,GACb2B,MAAO,GACPC,WAAY,GACZ/E,KAAM,IACNgF,OAAQ,IACRC,QAAS,EACTG,YAAa,IAAID,KACjBD,WAAY,IAAIC,KAChBI,oBAAqB,IAbvB,sBAcG,kCAAA3F,EAAA,yDAC+B,GAA5B0D,EAAkB0C,OADrB,gCAG4B9D,YACzBC,IAAU6E,cAAe,GAAIjH,EAAO,QAJvC,OAUC,IAPMkH,EAHP,OAMKC,EAAwB,GAExBC,EAAeF,EAAanH,KAEvBoD,EAAI,EAAGA,EAAIiE,EAAanB,OAAQ9C,IACvCgE,EAAsBpD,KAAK,CACzBnD,MAAOwG,EAAajE,GAAGH,IAAKnC,MAAOuG,EAAajE,GAAG5B,OAIvD,EAAKU,SAAS,CAAEsB,kBAAmB4D,IAhBpC,4CAjBP,gD,6EAuCA,SAASxC,EAAKpC,GACZsD,KAAK5D,SAAL,eAAiB0C,EAAMpC,M,4DAGzB,oDAAA1C,EAAA,2DAC6GgG,KAAK/C,MAAxGvB,EADV,EACUA,KAAMwD,EADhB,EACgBA,MAAO9E,EADvB,EACuBA,KAAMgF,EAD7B,EAC6BA,OAAQC,EADrC,EACqCA,QAAS9B,EAD9C,EAC8CA,YAAaE,EAD3D,EAC2DA,qBAAsB6B,EADjF,EACiFA,WAAYE,EAD7F,EAC6FA,YAEjE,GAAtBjC,EAAY6C,OAHlB,uBAIIoB,MAAM,4CAJV,0BAQWlE,EAAI,EARf,YAQkBA,EAAIC,EAAY6C,QARlC,oBASsC,IAA9B7C,EAAYD,GAAGO,aAAuD,GAAlCJ,EAAqBH,GAAG8C,OATpE,wBAUMoB,MAAM,+DAAD,OAA4ClE,EAAI,EAAhD,8FAVX,2BAaMC,EAAYD,GAAGkB,QAAUf,EAAqBH,GAbpD,QAQ0CA,IAR1C,0BAiBc,MAAR5B,GAAwB,IAARA,GACT,MAATwD,GAA0B,IAATA,EAlBrB,wBAmBIsC,MAAM,qEAnBV,kCAuBQC,EAAO,IAAIC,UACZ1F,OAAO,QAASkD,GAxBvB,UA0BQ5C,YAAYC,IAAUoF,YAAaF,EAAM,GAAI,QA1BrD,eA4BQG,EAAO,CACXlG,KAAMA,EACNwD,MAAOA,EAAMxD,KACbyF,SAAU5D,EACVnD,KAAMA,EACNgF,OAAQA,EACRC,QAASA,EACTC,WAAYA,EACZE,YAAaA,GAGfQ,KAAK5D,SAAS,CAAEC,WAAW,IAvC7B,UAwCkBC,YACdC,IAAUsF,SAAUD,EAAM,GAAI,QAzClC,QA2CoB,KA3CpB,OA2CUxC,QAENY,KAAK7D,UAEL6D,KAAK5D,SAAS,CAAEyC,UAAWmB,KAAK/C,MAAM4B,aAEtC2C,MAAM,4CACNxB,KAAK5D,SAAS,CAAEC,WAAW,KAlD/B,iD,kFAsDA,SAAegB,GACb2C,KAAK5D,SAAS,CAAEhC,KAAMiD,EAAEsD,OAAO5F,U,2BAGjC,SAAcgC,GAGZ,IAFA,IAAI+E,EAAU,GAELxE,EAAI,EAAGA,EAAIP,EAAKqD,OAAQ9C,IAAK,CACpCwE,EAAQ5D,KAAK,CACXL,YAAad,EAAKO,GAAGO,YAAYV,IACjCqB,QAAS,KAGX,IAAK,IAAIuD,EAAI,EAAGA,EAAIhF,EAAKO,GAAGkB,QAAQ4B,OAAQ2B,IAAK,CAC/C,IAAIC,EAAWjF,EAAKO,GAAGkB,QAAQuD,GAC/BC,EAASC,SAAWD,EAASC,SAAS9E,IACtC2E,EAAQxE,GAAGkB,QAAQN,KAAK,CACtBxC,KAAMsG,EAAStG,KACfwD,MAAO8C,EAAS9C,MAChB+C,SAAUD,EAASC,SACnBC,MAAOF,EAASE,MAChBC,KAAMH,EAASG,KACfC,WAAYJ,EAASI,cAI3B,OAAON,I,+DAGT,WAAiB/E,GAAjB,gCAAA/C,EAAA,sDAEE,IAFF,EAC0DgG,KAAK/C,MAArD9C,EADV,EACUA,MAAOuD,EADjB,EACiBA,kBAAmBqC,EADpC,EACoCA,kBACzBzC,EAAI,EAAGA,EAAIyC,EAAkBK,OAAQ9C,IAC5CP,EAAKoE,SAASjD,KAAK6B,EAAkBzC,IAGjC+E,EAAWrC,KAAKsC,cAAcvF,EAAKoE,UAEzCnB,KAAK5D,SAAS,CACZgC,UAAWiE,EACXtC,kBAAmB,GACnBlB,UAAWmB,KAAK/C,MAAM4B,SACtBI,OAAQ,SACRvD,KAAMqB,EAAKrB,KACXwD,MAAOnC,EAAKmC,MACZC,WAAY,GACZ/E,KAAM2C,EAAK3C,KACXkF,WAAYvC,EAAKuC,WACjBE,YAAazC,EAAKyC,YAClBJ,OAAQrC,EAAKqC,OACbC,QAAStC,EAAKsC,QACdnC,GAAIH,EAAI,KAbV,sBAcG,kCAAA/C,EAAA,yDAC+B,GAA5B0D,EAAkB0C,OADrB,gCAE4B9D,YACzBC,IAAU6E,cAAe,GAAIjH,EAAO,QAHvC,OASC,IAPMkH,EAFP,OAKKC,EAAwB,GAExBC,EAAeF,EAAanH,KAEvBoD,EAAI,EAAGA,EAAIiE,EAAanB,OAAQ9C,IACvCgE,EAAsBpD,KAAK,CACzBnD,MAAOwG,EAAajE,GAAGH,IAAKnC,MAAOuG,EAAajE,GAAG5B,OAIvD,EAAKU,SAAS,CAAEsB,kBAAmB4D,IAfpC,4CAtBL,gD,yHA0CA,8CAAAtH,EAAA,2DACqFgG,KAAK/C,MAAhFvB,EADV,EACUA,KAAMwD,EADhB,EACgBA,MAAO9E,EADvB,EACuBA,KAAMgF,EAD7B,EAC6BA,OAAQC,EADrC,EACqCA,QAASC,EAD9C,EAC8CA,WAAYE,EAD1D,EAC0DA,YAD1D,EACuEpB,UACzD,MAAR1C,GAAwB,IAARA,GACT,MAATwD,GAA0B,IAATA,EAHrB,uBAIIsC,MAAM,qEAJV,iCAQQC,EAAO,IAAIC,UACZ1F,OAAO,QAASkD,GATvB,SAWQ5C,YAAYC,IAAUoF,YAAaF,EAAM,GAAI,QAXrD,cAaQG,EAAO,CACXlG,KAAMA,EACNwD,MAAOA,EAAMxD,KACbtB,KAAMA,EACNgF,OAAQA,EACRC,QAASA,EACTC,WAAYA,EACZE,YAAaA,EACbtC,GAAI8C,KAAK/C,MAAMC,IAGjB8C,KAAK5D,SAAS,CAAEC,WAAW,IAxB7B,UAyBkBC,YACdC,IAAUgG,YAAaX,EAAM,GAAI,QA1BrC,QA4BoB,KA5BpB,OA4BUxC,QAENY,KAAK7D,UAEL6D,KAAK5D,SAAS,CAAEyC,UAAWmB,KAAK/C,MAAM4B,aAEtC2C,MAAM,yCACNxB,KAAK5D,SAAS,CAAEC,WAAW,KAnC/B,iD,iHA8CA,sBAAArC,EAAA,6DACEgG,KAAK5D,SAAS,CAAEC,WAAW,IAD7B,SAEkBC,YACdC,IAAUiG,YAAa,CACvB,GAAMxC,KAAK/C,MAAMC,IAChB,GAAI,QALT,OAOoB,KAPpB,OAOUkC,QACNY,KAAK7D,UACL6D,KAAK5D,SAAS,CAAEY,aAAcgD,KAAK/C,MAAMD,YAAarC,OAAQ,SAE9D6G,MAAM,gDACNxB,KAAK5D,SAAS,CAAEC,WAAW,KAZ/B,gD,+EAiBA,SAAYgB,GACV2C,KAAK5D,SAAL,eAAiBiB,EAAEsD,OAAOjF,KAAO2B,EAAEsD,OAAO5F,U,2BAG5C,SAAcX,GACZ,OAAQA,GACN,IAAK,IAAK,MAAO,CAAEqI,MAAO,yCAAmBC,MAAO,WACpD,IAAK,IAAK,MAAO,CAAED,MAAO,6CAAuBC,MAAO,WACxD,IAAK,IAAK,MAAO,CAAED,MAAO,kDAAsBC,MAAO,UACvD,QAAS,MAAO,c,2BAiFpB,WAAiB,IAAD,OACd,EAAgH1C,KAAK/C,MAA7GM,EAAR,EAAQA,YAAaI,EAArB,EAAqBA,kBAAmBD,EAAxC,EAAwCA,kBAAmBF,EAA3D,EAA2DA,2BAA4BC,EAAvF,EAAuFA,qBACvF,OACE,gCACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMkF,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAvC,SACE,6BACE,+EAGJ,cAAC,IAAD,CAAMJ,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAvC,SACE,cAAC,IAAD,CAASC,OAAK,EAACC,QAAM,EAACC,QAAQ,QAAQR,MAAM,UAAUS,eAAa,OACjE7H,QAAS,WAAQ,EAAKiD,gBADxB,6CAMJ,qBAAK6E,MAAO,CAAEC,UAAW,IAAKC,UAAW,SAAUC,OAAQ,gBAAiBC,UAAW,GAAIC,aAAc,GAAzG,SAEIlG,EAAYgD,KAAI,SAACxD,EAAMO,GACrB,IAAIoB,EAAapB,EACjB,OACE,eAAC,IAAD,CAAM8F,MAAO,CAAEM,OAAQ,IAAvB,UACE,cAAC,IAAD,CAAYN,MAAO,CAAEO,gBAAiB,UAAWC,OAAQ,IAAzD,SACE,cAAC,IAAD,CAASC,KAAK,KAAKnB,MAAM,SAASU,MAAO,CAAEU,MAAO,SAAWxI,QAAS,WACpE,EAAKmD,aAAaC,IADpB,iBAIF,eAAC,IAAD,WACE,eAAC,IAAD,CAAM0E,MAAO,CAAEM,OAAQ,IAAvB,UACE,cAAC,IAAD,CAAMf,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAvC,SACE,cAAC,IAAD,yCAEF,cAAC,IAAD,CAAMJ,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAvC,SACE,cAAC,IAAD,CACEgB,aAAW,EACXhJ,MAAO4C,EAAkBe,GAAY,GACrCxD,SAAU,SAACmC,GAAQ,EAAKD,qBAAqBC,EAAGqB,IAChDrE,QAASqD,SAKbF,EAA2BkB,GAAY0B,OAAS,EAC9C,eAAC,IAAD,WACE,cAAC,IAAD,8CAGA,cAAC,IAAD,CAAUgD,MAAO,CAAEQ,OAAQ,IAAKN,UAAW,UAA3C,SACE,cAAC,IAAD,UAEI9F,EAA2BkB,GAAY6B,KAAI,SAACyD,EAAcC,GACxD,OACE,cAAC,IAAD,CAAMtB,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAvC,SACE,eAAC,IAAD,CAAYG,QAAQ,kBAAkBgB,QAAM,EAA5C,UACE,cAAC,IAAD,CAAgBC,QAAM,EAACjH,GAAE,UAAK8G,EAAa7G,KACzC7B,QAAS,SAAC+B,GACR,GAAIA,EAAEsD,OAAOyD,QAAS,CACpB,IAAIlK,EAAOsD,EAA2BkB,GAAYuF,GAElDxG,EAAqBiB,GAAYR,KAAK,CACpCxC,KAAMxB,EAAKwB,KACXwD,MAAOhF,EAAKgF,MACZ+C,SAAU/H,EAAK+H,SAAS9E,IACxB+E,MAAOhI,EAAKgI,MACZC,KAAMjI,EAAKiI,OAGb,EAAK/F,SAAS,CAAEqB,qBAAsBA,QACjC,CACL,IAAIvD,EAAOsD,EAA2BkB,GAAYuF,GAE5CI,EAAQ5G,EAAqBiB,GAAY4F,WADjC,SAACrG,GAAD,OAAaA,EAAQvC,MAAQxB,EAAKwB,QAEhD+B,EAAqBiB,GAAYC,OAAO0F,EAAO,GAE/C,EAAKjI,SAAS,CAAEqB,qBAAsBA,QAI5C,eAAC,IAAD,CAAQyF,QAAQ,kBAAkBqB,QAASP,EAAa7G,IAAKiG,MAAO,CAAEM,OAAQ,IAA9E,UACE,gCAAK,iDAA0BM,EAAatI,QAC5C,cAAC,IAAD,CAAQL,YAAa,+BAAiBmJ,WACpC/G,EAAqBiB,GAAY4F,WAAU,SAAA5H,GAAG,OAAIA,EAAIhB,MAAQsI,EAAatI,SAAS,GAEpFtB,KAAK,SAASgJ,MAAO,CAAEqB,aAAc,GACrCvJ,SAAU,SAACmC,GACT,IAAMgH,EAAQ5G,EAAqBiB,GAAY4F,WAAU,SAAA5H,GAAG,OAAIA,EAAIhB,MAAQsI,EAAatI,QACzF+B,EAAqBiB,GAAY2F,GAAOjC,WAAasC,OAAOrH,EAAEsD,OAAO5F,OACrE,EAAKqB,SAAS,CAAEqB,qBAAsBA,OAG1C,qBAAKkH,IAAG,UAAKpI,IAAUzC,SAAf,iCAAgDkK,EAAa9E,OAAS0F,MAAO,OAAQhB,OAAQ,2BAU7G,mB,oBAYhC,WAAU,IAAD,OACP,EACyD5D,KAAK/C,MADtD/C,EAAR,EAAQA,KAAMwF,EAAd,EAAcA,cAAeZ,EAA7B,EAA6BA,IAAKI,EAAlC,EAAkCA,MAAOD,EAAzC,EAAyCA,OAAQK,EAAjD,EAAiDA,WAAYE,EAA7D,EAA6DA,YAC3DL,EADF,EACEA,WAAYJ,EADd,EACcA,YAAaU,EAD3B,EAC2BA,gBAAiBK,EAD5C,EAC4CA,UAC5C,OAAKE,KAAK/C,MAAMZ,UAoYd,qBAAKd,UAAU,gBAAf,SACE,cAAC,IAAD,CAAWsJ,IAAKC,EAAUjB,KAAM,GAAInB,MAAO,UAAWqC,QAAS/E,KAAK/C,MAAMZ,UAAW2I,gBAAiB,QAnYtG,sBAAKzJ,UAAU,kBAAf,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,mBAAGA,UAAU,wBADf,8BAEE,qBAAK6H,MAAO6B,EAAOC,KAAnB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMrC,GAAG,KAAKD,GAAG,KAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,GAAG,KAAKD,GAAG,IAAjB,SACE,8BACE,cAAC,IAAD,CAAOQ,MAAO6B,EAAOE,YAAajK,SAAU,SAACmC,GAC3C,EAAK+H,aAAa/H,EAAG,QACpB3B,KAAK,MAAMX,MAAO+D,EAAKzD,YAAY,wBAG1C,cAAC,IAAD,CAAMwH,GAAG,KAAKD,GAAG,IAAjB,SACE,cAAC,IAAD,CAASF,MAAM,UAAUU,MAAO,CAAEwB,MAAO,OAAQpB,UAAW,GAAKK,KAAK,KAAKvI,QAAS,SAAA+B,GAAO,EAAKgI,eAAhG,qDAIN,cAAC,IAAD,CAAMxC,GAAG,KAAKD,GAAG,KAAjB,SACE,cAAC,IAAD,CAAS0C,SAAO,EAAC5C,MAAM,UAAUU,MAAO6B,EAAOM,WAAY1B,KAAK,KAAKvI,QAAS,SAAA+B,GAAC,OAAI,EAAKmI,YAAY,QAApG,wCAKR,cAAC,IAAD,UAEE,wBAAOC,KAAG,EAAClK,UAAU,yDAArB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,2BACA,oBAAIA,UAAU,cAAd,8BACA,oBAAIA,UAAU,cAAd,4BAEA,oBAAIA,UAAU,cAAd,qBACA,oBAAIA,UAAU,cAAd,mDACA,oBAAIA,UAAU,cAAd,6CACA,oBAAIA,UAAU,cAAd,oBAGJ,kCACE,oBAAImK,QAAQ,KAAK1G,OAAQgB,KAAK/C,MAAM+B,OAAQzD,UAAU,cAAtD,8DAEUoK,GAARzL,EACEA,EAAKqG,KAAI,SAACxD,EAAMO,GACd,OACE,+BACE,oBAAI/B,UAAU,cAAd,SAA6B+B,EAAI,IACjC,oBAAI/B,UAAU,cAAd,SAA6BwB,EAAKrB,OAClC,oBAAIH,UAAU,cAAd,SAEkB,IAAdwB,EAAKmC,OAA6B,MAAdnC,EAAKmC,MACvB,qBAAKyF,IAAK,kEAAmEC,MAAO,OAAQhB,OAAQ,SACpG,qBAAKe,IAAG,UAAKpI,IAAUzC,SAAf,8BAA6CiD,EAAKmC,OAAS0F,MAAO,OAAQhB,OAAQ,WAGhG,oBAAIrI,UAAU,cAAd,SACE,cAAC,IAAD,CAAQmH,MAAO,EAAKkD,cAAc7I,EAAK3C,MAAMsI,MAA7C,SACG,EAAKkD,cAAc7I,EAAK3C,MAAMqI,UAInC,qBAAIlH,UAAU,cAAd,UAA6BwB,EAAKsC,QAAlC,QACA,oBAAI9D,UAAU,cAAd,SAEK,IAAIgE,KAAKxC,EAAKuC,YAAauG,uBAGhC,oBAAItK,UAAU,cAAd,SAEK,IAAIgE,KAAKxC,EAAKyC,aAAcqG,uBAGjC,qBAAItK,UAAU,cAAd,UACE,cAAC,IAAD,CAAS6H,MAAO6B,EAAOa,KAAMR,SAAO,EAAC5C,MAAM,OAAOmB,KAAK,KAAKvI,QAAO,uCAAE,WAAO+B,GAAP,SAAArD,EAAA,sDACnE,EAAKoC,SAAS,CAAEqD,gBAAiB1C,EAAKoE,SAAUpC,aAAcA,IADK,2CAAF,sDAAnE,SAGE,cAAC,IAAD,CAAOrD,KAAK,2BAEd,cAAC,IAAD,CAAS0H,MAAO6B,EAAOa,KAAMR,SAAO,EAAC5C,MAAM,UAAUmB,KAAK,KAAKvI,QAAO,uCAAE,WAAO+B,GAAP,SAAArD,EAAA,sEAAmB,EAAK+L,WAAWhJ,GAAnC,mFAAF,sDAAtE,SACE,cAAC,IAAD,CAAOrB,KAAK,gBAEd,cAAC,IAAD,CAAS4J,SAAO,EAAC5C,MAAM,SAASmB,KAAK,KAAKvI,QAAS,SAAC+B,GAAQ,EAAKP,WAAWC,IAA5E,SACE,cAAC,IAAD,CAAOrB,KAAK,oBArCT4B,MA0CR,cAMjB,qBAAK8F,MAAO,CAAEU,MAAO,SAArB,SACE,cAAC,IAAD,CAAYkC,MAAOtG,EAAcU,OAAQsC,MAAM,UAAUxH,SAAU,SAACmC,EAAG4I,GACrE,EAAK7J,SAAS,CAAElC,KAAMwF,EAAcuG,EAAI,GAAIrG,UAAWqG,EAAI,cAMnE,eAAC,IAAD,CAAOpC,KAAK,KAAKqC,OAAQlG,KAAK/C,MAAM4B,SAAUtD,UAAWyE,KAAK9D,MAAMX,UAApE,UACE,cAAC,IAAD,UAAmC,OAArByE,KAAK/C,MAAMgC,OAAX,2CACd,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,CAAM0D,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAvC,UACE,cAAC,IAAD,CACEjI,MAAM,OACNE,MAAM,gBACND,MAAOiF,KAAK/C,MAAMvB,KAClBL,YAAa,cAEbH,SAAU,SAAAmC,GAAC,OAAI,EAAKnC,SAAS,OAAQmC,EAAEsD,OAAO5F,UAIhD,cAAC,IAAD,CACED,MAAM,QACNE,MAAM,kBACNZ,KAAM,OACNc,SAAU,SAAAmC,GAAO,EAAK8I,cAAc9I,IACpC/B,QAAS,SAAC+B,GAAQA,EAAEsD,OAAO5F,MAAQ,KAAM,EAAKqB,SAAS,CAAE+C,WAAY,QAG5D,IAATD,GAAwB,MAATA,EAAgB,GAC7B,qBAAK0F,MAAM,MAAMhB,OAAO,MAAMe,IACd,IAAdxF,EAAA,UACK5C,IAAUzC,SADf,8BAC6CoF,GAAUC,EAAYiE,MAAO,CAAEqB,aAAc,MAGhG,sBAAKrB,MAAO,CAAEwB,MAAO,QAAUrJ,UAAU,OAAzC,UACE,cAAC,IAAD,8BAEE,cAAC,IAAD,CAASL,SAAQ,uCAAE,WAAMmC,GAAN,SAAArD,EAAA,sDAAa,EAAKoM,eAAe/I,GAAjC,2CAAF,sDAAyC8G,QAAM,EAACN,KAAK,KAAKnI,KAAK,WAAWwB,GAAG,WAA9F,SAEI,CAAC,IAAK,IAAK,KAAKqD,KAAI,SAACxD,EAAMO,GACzB,OAAIP,GAAQ,EAAKE,MAAM7C,KAEnB,wBAAQiM,UAAQ,EAAStL,MAAOgC,EAAhC,SAEY,KAARA,EACE,yCAA4B,KAARA,EAClB,yBAAiB,+BAJHO,GAUtB,wBAAgBvC,MAAOgC,EAAvB,SAEY,KAARA,EACE,yCAA4B,KAARA,EAClB,yBAAiB,+BAJZO,WAe3B,cAAC,IAAD,CACExC,MAAM,UACNE,MAAM,UACND,MAAOiF,KAAK/C,MAAMoC,QAClBhE,YAAa,UAEbH,SAAU,SAAAmC,GAAC,OAAI,EAAKnC,SAAS,UAAWmC,EAAEsD,OAAO5F,UAKnD,sBAAKqI,MAAO6B,EAAOqB,WAAnB,UACE,uBAAOlD,MAAO6B,EAAOsB,UAArB,6CACA,cAAC,IAAD,CAAYnD,MAAO6B,EAAOuB,WAAYH,SAAU,IAAI9G,KAAKD,GAAapE,SAAU,SAACuL,GAAD,OAAU,EAAKrK,SAAS,CAAEkD,WAAYmH,UAGxH,sBAAKrD,MAAO6B,EAAOqB,WAAnB,UACE,uBAAOlD,MAAO6B,EAAOsB,UAArB,uCACA,cAAC,IAAD,CAAYnD,MAAO6B,EAAOuB,WAAYH,SAAU,IAAI9G,KAAKC,GAActE,SAAU,SAACuL,GAAD,OAAU,EAAKrK,SAAS,CAAEoD,YAAaiH,aAI5H,eAAC,IAAD,CAAM9D,GAAG,IAAIC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAvC,UAEc,OAAV9D,EAEEe,KAAK0G,gBAAkB,GAyG3B,+BAKN,eAAC,IAAD,WACE,cAAC,IAAD,CAAShE,MAAM,UAAUpH,QAAS,SAAA+B,GAA6B,QAAtB,EAAKJ,MAAMgC,OAAmB,EAAK0H,UAAY,EAAKC,iBAAmBpC,SAAUxE,KAAK/C,MAAMZ,UAArI,sBAA8J,IAC9J,cAAC,IAAD,CAASqG,MAAM,YAAYpH,QAAS,SAAA+B,GAAO,EAAKuB,iBAAhD,gCAIJ,eAAC,IAAD,CAAOsH,OAAQlG,KAAK/C,MAAMD,YAAa6J,OAAQ,SAAAxJ,GAAC,OAAI,EAAKjB,SAAS,CAAEY,aAAc,EAAKC,MAAMD,YAAarC,OAAQ,QAASY,UAAWyE,KAAK9D,MAAMX,UAAjJ,UACE,cAAC,IAAD,CAAasL,OAAQ,SAAAxJ,GAAC,OAAI,EAAKjB,SAAS,CAAEY,aAAc,EAAKC,MAAMD,YAAarC,OAAQ,QAAxF,oBACA,cAAC,IAAD,UACE,uBAAO4J,QAAQ,MAAf,2CAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAS7B,MAAM,UAAUpH,QAAS,SAAA+B,GAAC,OAAI,EAAK1C,UAAU6J,SAAUxE,KAAK/C,MAAMZ,UAA3E,oBAAoG,IACpG,cAAC,IAAD,CAASqG,MAAM,YAAYpH,QAAS,SAAA+B,GAAC,OAAI,EAAKjB,SAAS,CAAEY,aAAc,EAAKC,MAAMD,YAAarC,OAAQ,QAAvG,gCAIJ,eAAC,IAAD,CAAOuL,OAAQlG,KAAK/C,MAAM8B,YAAa8E,KAAK,KAAKtI,UAAWyE,KAAK9D,MAAMX,UAAvE,UACE,cAAC,IAAD,mCACA,cAAC,IAAD,CAAW6H,MAAO,CAAEQ,OAAQ,IAAKN,UAAW,UAA5C,SAEI7D,EAAgBc,KAAI,SAACxD,EAAMO,GACzB,OACE,eAAC,IAAD,CAAO/B,UAAU,OAAO6H,MAAO,CAAEM,OAAQ,GAAzC,UACE,cAAC,IAAD,CAAaxG,GAAG,aAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAM2F,GAAG,KAAKD,GAAG,IAAjB,SACE,cAAC,IAAD,CAASI,OAAK,EAACN,MAAM,OAAOnH,UAAU,oBACpCD,QAAS,WAAQ,EAAKc,SAAS,CAAE0D,UAAWA,GAAaxC,EAAI,KAAOA,KADtE,SAGE,qBAAI/B,UAAU,UAAd,2BAAkCwB,EAAKc,YAAYnC,YAGvD,cAAC,IAAD,CAAMmH,GAAG,KAAKD,GAAG,IAAjB,SACE,qBAAK+B,IAAG,UAAKpI,IAAUzC,SAAf,kCAAiDiD,EAAKc,YAAYqB,OAAS0F,MAAO,QAAShB,OAAQ,iBAIjH,cAAC,IAAD,CAAWkD,KAAMhH,GAAaxC,EAA9B,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CACEyJ,MAAOhK,EAAKyB,QACZwI,OAAQ,CAAC,4BAAgB,mBAAY,6BAAe,+BAAiB,UACrEC,aAAc,EACdrK,YAAU,EACViH,KAAK,KACLqD,YAAa,CACX,4BAAgB,SAACnK,GAAD,OACd,6BAAKA,EAAKrB,QACV,mBAAY,SAACqB,GAAD,OACZ,6BAEI,qBAAK4H,IAAmB,IAAd5H,EAAKmC,OAA6B,MAAdnC,EAAKmC,MACjC,kEADQ,UAEL3C,IAAUzC,SAFL,iCAEsCiD,EAAKmC,OAAS0F,MAAO,OAAQhB,OAAQ,YAGzF,6BAAe,SAAC7G,GAAD,OACf,6BAAKA,EAAKkF,SAASvG,QAEnB,+BAAiB,SAACqB,GAAD,OACjB,6BAAKA,EAAKqF,cAEV,SAAO,SAACrF,GAAD,OACP,6BAAKA,EAAKmF,wBAU9B,cAAC,IAAD,UACE,cAAC,IAAD,CAASQ,MAAM,YAAYpH,QAAS,SAAA+B,GAAC,OAAI,EAAKjB,SAAS,CAAE2C,aAAc,EAAK9B,MAAM8B,eAAlF,sC,GAt6BQoI,aAo7BhBrC,EAAWD,cAAH,wFAMRI,EAAS,CACbqB,WAAY,CACV7B,aAAc,GACdG,MAAO,QAEThI,WAAY,CACVwK,YAAa,OAEfb,UAAW,CACT3B,MAAO,KAET4B,WAAY,CACV5B,MAAO,QAET5K,EAAG,CACDqN,eAAgB,QAElB9B,WAAY,CACVzB,MAAO,QACPN,UAAW,OAEb8D,QAAS,CACP1C,MAAO,QAET2C,OAAQ,CACNC,UAAW,UAEbC,MAAO,CACL7D,OAAQ,QACRN,UAAW,QAEboE,KAAM,CACJ9C,MAAO,MACPd,MAAO,OACPF,OAAQ,QAEV+D,GAAI,CACF/C,MAAO,MACPd,MAAO,OACPF,OAAQ,QAEVgE,KAAM,CACJhD,MAAO,KACPd,MAAO,OACPF,OAAQ,QAEViE,IAAK,CACH/D,MAAO,OACPc,MAAO,QAETkD,QAAS,CACPpF,MAAO,SAETqF,OAAQ,CACNrF,MAAO,OAEToD,KAAM,CACJpC,OAAQ,OAEVwB,KAAM,CACJpB,MAAO,QACPsD,YAAa,OAEfjC,YAAa,CACXP,MAAO,QACPoD,QAAS,gBAEXC,WAAY,CACVvF,MAAO,SAETwF,YAAa,CACXxF,MAAO,OAETyF,eAAgB,CACdvD,MAAO,SAET1F,MAAO,CACL0F,MAAO,QACPhB,OAAQ,QACRH,aAAc,YAIHxH","file":"static/js/18.bb614312.chunk.js","sourcesContent":["export default {\n  \"BASE_URL\" : \"https://api.thulamua.com\",\n  //\"BASE_URL\" : \"http://localhost:3008\",\n  \"LOGIN\" : \"/api/login\",\n  \"LIST_USER\": \"/api/list_user\",\n  \"ADD_USER\":\"/api/add_user\",\n  \"UPDATE_USER\":\"/api/update_user\",\n  \"DELETE_USER\":\"/api/delete_user\",\n  \"UPLOAD_AVATAR\": \"/api/upload_avatar\",\n\n  \"LIST_CATEGORY\": \"/api/list_category\",\n  \"ADD_CATEGORY\": \"/api/add_category\",\n  \"UPDATE_CATEGORY\": \"/api/update_category\",\n  \"DELETE_CATEGORY\": \"/api/delete_category\",\n  \"UPLOAD_CATEGORY\": \"/api/upload_category\",\n\n  \"LIST_BRAND\": \"/api/list_brand\",\n  \"ADD_BRAND\": \"/api/add_brand\",\n  \"UPDATE_BRAND\": \"/api/update_brand\",\n  \"DELETE_BRAND\": \"/api/delete_brand\",\n  \"UPLOAD_BRAND\": \"/api/upload_brand\",\n\n  \"LIST_PRODUCT\": \"/api/list_product\",\n  \"LIST_PRODUCT_CATEGORY\": \"/api/list_product_category\",\n  \"ADD_PRODUCT\": \"/api/add_product\",\n  \"UPDATE_PRODUCT\": \"/api/update_product\",\n  \"DELETE_PRODUCT\": \"/api/delete_product\",\n  \"UPLOAD_PRODUCT\": \"/api/upload_product\",\n  \"UPLOAD_PRODUCT_MULTIPLE\": \"/api/upload_product_multiple\",\n\n  \"LIST_ORDER\": \"/api/list_order\",\n  \"LIST_ORDER_DETAIL\": \"/api/list_order_detail\",\n  \"LIST_ORDER_BY_USER\": \"/api/list_order_by_user\",\n  \"ADD_ORDER\": \"/api/add_order\",\n\n  \"LIST_DEAL\": \"/api/list_deal\",\n  \"ADD_DEAL\": \"/api/add_deal\",\n  \"UPDATE_DEAL\": \"/api/update_deal\",\n  \"DELETE_DEAL\": \"/api/delete_deal\",\n  \"UPLOAD_DEAL\": \"/api/upload_deal\",\n\n  \"LIST_COUNT_ORDER\": \"/api/list_count_order\",\n\n  \"LIST_BANNER\": \"/api/get_banner\",\n  \"GET_BANNER_BY_ID\": \"/api/get_banner_by_id\",\n  \"ADD_BANNER\": \"/api/add_banners\",\n  \"UPADTE_BANNER\": \"/api/update_banner\",\n  \"DELETE_BANNER\": \"/api/delete_banner\",\n  \"UPLOAD_BANNER\": \"/api/upload_banner\"\n};\n","import constants from './../contants/contants'\n\nconst axios = require('axios').default;\naxios.defaults.baseURL = constants.BASE_URL;\n\nconst connect = async function (url = \"\", data = {}, token = \"\", type) {\n  let options = {};\n  // console.log(\"Token: \", token)\n  if (token) {\n    options = {\n      headers: token\n    };\n  }\n  try {\n    switch (type) {\n      case \"GET\":\n        let get = await axios.get(url, data, options);\n        if (get.is_success == false) {\n          return null;\n        }\n        return get.data;\n      case \"POST\":\n        let post = await axios.post(url, data, options);\n        if (post.is_success == false) {\n          return null;\n        }\n        return post.data;\n      case \"PUT\":\n        let put = await axios.put(url, data, options);\n        if (put.is_success == false) {\n          return null;\n        }\n        return put.data;\n      case \"DELETE\":\n        let del = await axios.delete(url, data, options);\n        if (del.is_success == false) {\n          return null;\n        }\n        return del.data;\n    }\n\n  } catch (reason) {\n    return reason;\n  }\n\n\n}\n\nexport default connect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder, onClick }) => {\n  return (\n    <div className={classnames('form-group', { 'has-error': error })}>\n      <label className=\"control-label\">{label}</label>\n      <input\n        onChange={onChange}\n        onClick={onClick}\n        onBlur={checkUserExists}\n        value={value}\n        type={type}\n        name={field}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        className=\"form-control\"\n      />\n    {error && <span className=\"help-block\">{error}</span>}\n    </div>  );\n}\n\nTextFieldGroup.propTypes = {\n  field: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checkUserExists: PropTypes.func\n}\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextFieldGroup;\n","import React, { Component } from 'react';\nimport CIcon from '@coreui/icons-react'\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Input,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n} from 'reactstrap';\n\nimport {\n  CButton,\n  CRow,\n  CCol,\n  CLabel,\n  CSelect,\n  CBadge,\n  CCard,\n  CCardHeader,\n  CCollapse,\n  CCardBody,\n  CDataTable,\n  CFormGroup,\n  CInputCheckbox,\n  CInput\n} from '@coreui/react'\n\nimport CreatableSelect from 'react-select/creatable';\nimport API_CONNECT from \"../../../functions/callAPI\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport 'moment-timezone';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Constants from \"../../../contants/contants\";\nimport TextFieldGroup from \"../../Common/TextFieldGroup\";\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport lodash from \"lodash\";\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      modalCom: false,\n      modalDetail: false,\n      dataApi: [],\n      hidden: false,\n      action: 'new',\n      name: \"\",\n      image: \"\",\n      image_show: \"\",\n      type: \"0\",\n      status: \"0\",\n      voucher: 0,\n      time_start: new Date(),\n      time_finish: new Date(),\n      arrDetailBanner: [],\n      modalDelete: false,\n      delete: null,\n      arrPagination: [],\n      arrOptionCategory: [],\n      objectValueCategory: {},\n      indexPage: 0,\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      isLoading: false,\n      accordion: 0,\n      arrCategory: [],\n      arrAllProductOfAllCategory: [],\n      arrAllProductChoosed: [],\n      arrChooseCategory: [],\n      arrUpdate: [],\n      arrRemoveOnUpdate: []\n    };\n  }\n  async componentDidMount() {\n    this.getData()\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden: false\n      })\n    } else {\n      this.setState({\n        hidden: true\n      })\n    }\n\n    this.setState({ arrPagination: arrTotal, data: arrTotal[0] });\n  }\n\n  getData = async () => {\n    this.setState({ isLoading: true });\n    var res = await API_CONNECT(\n      Constants.LIST_DEAL, {}, \"\", \"POST\")\n\n    let val = res.data.dataAdmin;\n    this.pagination(val);\n    this.setState({ dataApi: val, isLoading: false })\n  }\n\n  searchKey() {\n    const { indexPage, key } = this.state;\n\n    if (key != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if (val.name.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n\n      this.setState({ data: d })\n    } else {\n      this.setState({ data: this.state.arrPagination[indexPage] })\n    }\n  }\n\n  actionSearch(e, name_action) {\n    this.setState({\n      [name_action]: e.target.value\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  resetSearch() {\n    this.setState({\n      key: ''\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  onChangeImage(e) {\n    let files = e.target.files;\n    let reader = new FileReader();\n    this.setState({ image: files[0] })\n    reader.readAsDataURL(files[0])\n    reader.onload = (e) => {\n      this.setState({ image_show: e.target.result })\n    }\n  }\n\n  async toggleModal(key) {\n    const { modalCom, token, arrOptionCategory } = this.state;\n    if (key == 'new') {\n      this.setState({\n        modalCom: !modalCom,\n        action: key,\n        name: \"\",\n        category: [],\n        arrCategory: [],\n        image: \"\",\n        image_show: \"\",\n        type: \"0\",\n        status: \"0\",\n        voucher: 0,\n        time_finish: new Date(),\n        time_start: new Date(),\n        objectValueCategory: {},\n      }, async () => {\n        if (arrOptionCategory.length == 0) {\n\n          const res_category = await API_CONNECT(\n            Constants.LIST_CATEGORY, {}, token, \"POST\")\n\n          let arrTempOptionCategory = [];\n\n          let dataCategory = res_category.data;\n\n          for (let i = 0; i < dataCategory.length; i++) {\n            arrTempOptionCategory.push({\n              value: dataCategory[i]._id, label: dataCategory[i].name\n            })\n          }\n\n          this.setState({ arrOptionCategory: arrTempOptionCategory })\n        }\n      })\n    }\n  }\n\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n\n  async addDeal() {\n    const { name, image, type, status, voucher, arrCategory, arrAllProductChoosed, time_start, time_finish } = this.state;\n\n    if (arrCategory.length == 0) {\n      alert(`Chưa thiết lập banner !!!`);\n      return\n    }\n\n    for (let i = 0; i < arrCategory.length; i++) {\n      if (arrCategory[i].category_id == \"\" || arrAllProductChoosed[i].length == 0) {\n        alert(`Trong phần thiết lập banner, banner thứ ${i + 1} chưa chọn bất kì danh mục hoặc sản phẩm nào !!!`);\n        return\n      } else {\n        arrCategory[i].product = arrAllProductChoosed[i]\n      }\n    }\n\n    if (name == null || name == '' ||\n      image == null || image == '') {\n      alert(\"Hãy nhập đầy đủ dữ liệu !!!\");\n      return\n    }\n\n    const form = new FormData();\n    form.append(\"image\", image);\n\n    await API_CONNECT(Constants.UPLOAD_DEAL, form, \"\", \"POST\")\n\n    const body = {\n      name: name,\n      image: image.name,\n      category: arrCategory,\n      type: type,\n      status: status,\n      voucher: voucher,\n      time_start: time_start,\n      time_finish: time_finish\n    }\n\n    this.setState({ isLoading: true });\n    var res = await API_CONNECT(\n      Constants.ADD_DEAL, body, \"\", \"POST\")\n\n    if (res.status == 200) {\n\n      this.getData()\n\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(\"Thêm danh mục thất bại\");\n      this.setState({ isLoading: false });\n    }\n  }\n\n  changeDealType(e) {\n    this.setState({ type: e.target.value })\n  }\n\n  onGetCategory(item) {\n    let arrTemp = []\n\n    for (let i = 0; i < item.length; i++) {\n      arrTemp.push({\n        category_id: item[i].category_id._id,\n        product: []\n      })\n\n      for (let y = 0; y < item[i].product.length; y++) {\n        let dataItem = item[i].product[y];\n        dataItem.brand_id = dataItem.brand_id._id\n        arrTemp[i].product.push({\n          name: dataItem.name,\n          image: dataItem.image,\n          brand_id: dataItem.brand_id,\n          price: dataItem.price,\n          slug: dataItem.slug,\n          total_deal: dataItem.total_deal\n        })\n      }\n    }\n    return arrTemp;\n  }\n\n  async openUpdate(item) {\n    const { token, arrOptionCategory, arrRemoveOnUpdate } = this.state;\n    for (let i = 0; i < arrRemoveOnUpdate.length; i++) {\n      item.category.push(arrRemoveOnUpdate[i])\n    }\n\n    const dataTemp = this.onGetCategory(item.category)\n\n    this.setState({\n      arrUpdate: dataTemp,\n      arrRemoveOnUpdate: [],\n      modalCom: !this.state.modalCom,\n      action: \"update\",\n      name: item.name,\n      image: item.image,\n      image_show: \"\",\n      type: item.type,\n      time_start: item.time_start,\n      time_finish: item.time_finish,\n      status: item.status,\n      voucher: item.voucher,\n      id: item['_id']\n    }, async () => {\n      if (arrOptionCategory.length == 0) {\n        const res_category = await API_CONNECT(\n          Constants.LIST_CATEGORY, {}, token, \"POST\")\n\n        let arrTempOptionCategory = [];\n\n        let dataCategory = res_category.data;\n\n        for (let i = 0; i < dataCategory.length; i++) {\n          arrTempOptionCategory.push({\n            value: dataCategory[i]._id, label: dataCategory[i].name\n          })\n        }\n\n        this.setState({ arrOptionCategory: arrTempOptionCategory })\n      }\n    })\n  }\n\n  async updateProduct() {\n    const { name, image, type, status, voucher, time_start, time_finish, arrUpdate } = this.state\n    if (name == null || name == '' ||\n      image == null || image == '') {\n      alert(\"Hãy nhập đầy đủ dữ liệu !!!\");\n      return\n    }\n\n    const form = new FormData();\n    form.append(\"image\", image);\n\n    await API_CONNECT(Constants.UPLOAD_DEAL, form, \"\", \"POST\")\n\n    const body = {\n      name: name,\n      image: image.name,\n      type: type,\n      status: status,\n      voucher: voucher,\n      time_start: time_start,\n      time_finish: time_finish,\n      id: this.state.id,\n    }\n\n    this.setState({ isLoading: true });\n    var res = await API_CONNECT(\n      Constants.UPDATE_DEAL, body, \"\", \"POST\")\n\n    if (res.status == 200) {\n\n      this.getData()\n\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(\"Cập nhật thất bại\");\n      this.setState({ isLoading: false });\n    }\n  }\n\n  openDelete = (item) => {\n    this.setState({\n      modalDelete: !this.state.modalDelete,\n      id: item._id\n    })\n  }\n\n  async delete() {\n    this.setState({ isLoading: true });\n    var res = await API_CONNECT(\n      Constants.DELETE_DEAL, {\n      \"id\": this.state.id\n    }, \"\", \"POST\")\n\n    if (res.status == 200) {\n      this.getData()\n      this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n    } else {\n      alert(\"Xóa sản phẩm thất bại\");\n      this.setState({ isLoading: false });\n    }\n\n  }\n\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  getBadge_Type(type) {\n    switch (type) {\n      case '0': return { title: 'Ưu đãi mới nhất', color: \"primary\" }\n      case '1': return { title: 'Ưu đãi đang diễn ra', color: \"success\" }\n      case '2': return { title: 'Ưu đãi đã kết thúc', color: \"danger\" }\n      default: return 'Lỗi'\n    }\n  }\n\n  handleChangeCategory = async (e, i) => {\n    const { arrCategory, arrAllProductOfAllCategory, arrAllProductChoosed, arrOptionCategory, arrChooseCategory } = this.state;\n    let res = await API_CONNECT(\n      Constants.LIST_PRODUCT_CATEGORY, {\n      \"category_id\": e.value\n    }, \"\", \"POST\")\n\n    let data = res.data;\n    arrCategory[i].category_id = e.value;\n    arrAllProductOfAllCategory[i] = data\n    arrAllProductChoosed[i] = new Array()\n\n    const found = arrOptionCategory.find(element => element.value == e.value);\n    arrChooseCategory[i] = new Array();\n    arrChooseCategory[i].push(found)\n    this.setState({\n      arrCategory: arrCategory,\n      arrAllProductOfAllCategory: arrAllProductOfAllCategory,\n      arrAllProductChoosed: arrAllProductChoosed,\n      arrChooseCategory: arrChooseCategory\n    });\n  };\n\n  handleUpdateCategory = async (e, i) => {\n    const { arrUpdate, arrOptionCategory } = this.state;\n    console.log(arrUpdate[i]);\n    // console.log(e.value);\n    // console.log(arrOptionCategory.find(val => val.value == e.value));\n  }\n\n  pushCategory = () => {\n    const { arrCategory, arrAllProductOfAllCategory, arrAllProductChoosed, arrChooseCategory } = this.state;\n    arrCategory.push({\n      category_id: \"\",\n      product: []\n    })\n    arrAllProductOfAllCategory.push([])\n    arrAllProductChoosed.push([])\n    arrChooseCategory.push([])\n    this.setState({\n      arrCategory: arrCategory,\n      arrAllProductOfAllCategory: arrAllProductOfAllCategory,\n      arrAllProductChoosed: arrAllProductChoosed\n    });\n  };\n\n  onRemoveCard = (idCategory) => {\n    const { arrCategory, arrAllProductOfAllCategory, arrAllProductChoosed, arrChooseCategory } = this.state;\n\n    arrCategory.splice(idCategory, 1);\n    arrAllProductOfAllCategory.splice(idCategory, 1);\n    arrAllProductChoosed.splice(idCategory, 1);\n    arrChooseCategory.splice(idCategory, 1);\n\n    this.setState({\n      arrCategory: arrCategory,\n      arrAllProductOfAllCategory: arrAllProductOfAllCategory,\n      arrAllProductChoosed: arrAllProductChoosed,\n      arrChooseCategory: arrChooseCategory\n    })\n  }\n\n  onCancelModal = () => {\n    let { arrCategory, arrAllProductOfAllCategory, arrAllProductChoosed, arrChooseCategory, modalCom } = this.state;\n    arrCategory = new Array()\n    arrAllProductOfAllCategory = new Array()\n    arrAllProductChoosed = new Array()\n    arrChooseCategory = new Array()\n    this.setState({\n      modalCom: !modalCom,\n      arrCategory: arrCategory,\n      arrAllProductOfAllCategory: arrAllProductOfAllCategory,\n      arrAllProductChoosed: arrAllProductChoosed,\n      arrChooseCategory: arrChooseCategory\n    });\n  }\n\n  renderAddForm() {\n    const { arrCategory, arrChooseCategory, arrOptionCategory, arrAllProductOfAllCategory, arrAllProductChoosed } = this.state;\n    return (\n      <div>\n        <CRow>\n          <CCol md=\"5\" lg=\"5\" sm=\"12\" xm=\"12\" lx=\"5\">\n            <h3>\n              <strong>Tạo dữ liệu cho banner</strong>\n            </h3>\n          </CCol>\n          <CCol md=\"7\" lg=\"7\" sm=\"12\" xm=\"12\" lx=\"7\">\n            <CButton block active variant=\"ghost\" color=\"success\" aria-pressed=\"true\"\n              onClick={() => { this.pushCategory() }}>\n              Thêm sản phẩm\n            </CButton>\n          </CCol>\n        </CRow>\n        <div style={{ maxHeight: 400, overflowY: 'scroll', border: '1px solid red', marginTop: 15, borderRadius: 5 }}>\n          {\n            arrCategory.map((item, i) => {\n              let idCategory = i;\n              return (\n                <Card style={{ margin: 20 }}>\n                  <CardHeader style={{ backgroundColor: '#339966', height: 50 }}>\n                    <CButton size=\"sm\" color=\"danger\" style={{ float: 'right' }} onClick={() => {\n                      this.onRemoveCard(idCategory)\n                    }}>X</CButton>\n                  </CardHeader>\n                  <CardBody>\n                    <CRow style={{ margin: 20 }}>\n                      <CCol md=\"3\" lg=\"3\" sm=\"12\" xm=\"12\" lx=\"3\">\n                        <CLabel>Chọn danh mục:</CLabel>\n                      </CCol>\n                      <CCol md=\"9\" lg=\"9\" sm=\"12\" xm=\"12\" lx=\"9\">\n                        <CreatableSelect\n                          isClearable\n                          value={arrChooseCategory[idCategory][0]}\n                          onChange={(e) => { this.handleChangeCategory(e, idCategory) }}\n                          options={arrOptionCategory}\n                        />\n                      </CCol>\n                    </CRow>\n                    {\n                      arrAllProductOfAllCategory[idCategory].length > 0 ?\n                        <Card>\n                          <CardHeader>\n                            Danh sách sản phẩm\n                          </CardHeader>\n                          <CardBody style={{ height: 250, overflowY: 'scroll' }}>\n                            <CRow>\n                              {\n                                arrAllProductOfAllCategory[idCategory].map((item_product, i_product) => {\n                                  return (\n                                    <CCol md=\"6\" lg=\"6\" sm=\"12\" xm=\"12\" lx=\"6\">\n                                      <CFormGroup variant=\"custom-checkbox\" inline>\n                                        <CInputCheckbox custom id={`${item_product._id}`}\n                                          onClick={(e) => {\n                                            if (e.target.checked) {\n                                              let data = arrAllProductOfAllCategory[idCategory][i_product]\n\n                                              arrAllProductChoosed[idCategory].push({\n                                                name: data.name,\n                                                image: data.image,\n                                                brand_id: data.brand_id._id,\n                                                price: data.price,\n                                                slug: data.slug\n                                              })\n\n                                              this.setState({ arrAllProductChoosed: arrAllProductChoosed })\n                                            } else {\n                                              let data = arrAllProductOfAllCategory[idCategory][i_product]\n                                              const findI = (element) => element.name == data.name;\n                                              const index = arrAllProductChoosed[idCategory].findIndex(findI)\n                                              arrAllProductChoosed[idCategory].splice(index, 1)\n\n                                              this.setState({ arrAllProductChoosed: arrAllProductChoosed })\n                                            }\n                                          }}\n                                        />\n                                        <CLabel variant=\"custom-checkbox\" htmlFor={item_product._id} style={{ margin: 10 }}>\n                                          <div><strong>Tên sp: </strong>{item_product.name}</div>\n                                          <CInput placeholder={\"Số lượng deal\"} disabled={\n                                            arrAllProductChoosed[idCategory].findIndex(val => val.name == item_product.name) > -1 ?\n                                              false : true\n                                          } type=\"number\" style={{ marginBottom: 3 }}\n                                            onChange={(e) => {\n                                              const index = arrAllProductChoosed[idCategory].findIndex(val => val.name == item_product.name);\n                                              arrAllProductChoosed[idCategory][index].total_deal = Number(e.target.value)\n                                              this.setState({ arrAllProductChoosed: arrAllProductChoosed })\n                                            }} />\n\n                                          <img src={`${Constants.BASE_URL}/public/image_product/${item_product.image}`} width={\"70px\"} height={\"90px\"} />\n\n                                        </CLabel>\n                                      </CFormGroup>\n                                    </CCol>\n                                  )\n                                })\n                              }\n                            </CRow>\n                          </CardBody>\n                        </Card> : \"\"\n                    }\n                  </CardBody>\n                </Card>\n              )\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { data, arrPagination, key, image, action, time_start, time_finish,\n      image_show, modalDetail, arrDetailBanner, accordion} = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Danh sách danh mục\n                  <div style={styles.tags}>\n                    <CRow>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CRow>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <div>\n                              <Input style={styles.searchInput} onChange={(e) => {\n                                this.actionSearch(e, \"key\");\n                              }} name=\"key\" value={key} placeholder=\"Từ khóa\" />\n                            </div>\n                          </CCol>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <CButton color=\"primary\" style={{ width: '100%', marginTop: 5 }} size=\"sm\" onClick={e => { this.resetSearch() }}>Làm mới tìm kiếm</CButton>\n                          </CCol>\n                        </CRow>\n                      </CCol>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CButton outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={e => this.toggleModal(\"new\")}>Thêm mới</CButton>\n                      </CCol>\n                    </CRow>\n                  </div>\n                </CardHeader>\n                <CardBody>\n\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        <th className=\"text-center\">Tên banner</th>\n                        <th className=\"text-center\">Hình ảnh</th>\n                        <th className=\"text-center\">Loại deal</th>\n                        {/* <th className=\"text-center\">Trạng thái</th> */}\n                        <th className=\"text-center\">Voucher</th>\n                        <th className=\"text-center\">Thời gian bắt đầu</th>\n                        <th className=\"text-center\">Thời gian kết thúc</th>\n                        <th className=\"text-center\">#</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <td colSpan=\"10\" hidden={this.state.hidden} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                <td className=\"text-center\">{item.name}</td>\n                                <td className=\"text-center\">\n                                  {\n                                    item.image == \"\" || item.image == null ?\n                                      <img src={\"https://www.chanchao.com.tw/VietnamPrintPack/images/default.jpg\"} width={\"60px\"} height={\"60px\"} /> :\n                                      <img src={`${Constants.BASE_URL}/public/image_deal/${item.image}`} width={\"80px\"} height={\"60px\"} />\n                                  }\n                                </td>\n                                <td className=\"text-center\">\n                                  <CBadge color={this.getBadge_Type(item.type).color}>\n                                    {this.getBadge_Type(item.type).title}\n                                  </CBadge>\n                                </td>\n                                {/* <td className=\"text-center\">{item.status}</td> */}\n                                <td className=\"text-center\">{item.voucher} %</td>\n                                <td className=\"text-center\">\n                                  {\n                                    (new Date(item.time_start)).toLocaleDateString()\n                                  }\n                                </td>\n                                <td className=\"text-center\">\n                                  {\n                                    (new Date(item.time_finish)).toLocaleDateString()\n                                  }\n                                </td>\n                                <td className=\"text-center\">\n                                  <CButton style={styles.mgl5} outline color=\"info\" size=\"sm\" onClick={async (e) => {\n                                    this.setState({ arrDetailBanner: item.category, modalDetail: !modalDetail })\n                                  }} >\n                                    <CIcon name=\"cil-magnifying-glass\" />\n                                  </CButton>\n                                  <CButton style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >\n                                    <CIcon name=\"cilPencil\" />\n                                  </CButton>\n                                  <CButton outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>\n                                    <CIcon name=\"cilTrash\" />\n                                  </CButton>\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n                </CardBody>\n              </Card>\n              <div style={{ float: 'right' }}>\n                <Pagination count={arrPagination.length} color=\"primary\" onChange={(e, v) => {\n                  this.setState({ data: arrPagination[v - 1], indexPage: v - 1 })\n                }} />\n              </div>\n            </Col>\n          </Row>\n\n          <Modal size=\"xl\" isOpen={this.state.modalCom} className={this.props.className}>\n            <ModalHeader>{this.state.action == 'new' ? `Tạo mới` : `Cập nhật`}</ModalHeader>\n            <ModalBody>\n              <CRow>\n                <CCol md=\"3\" lg=\"3\" sm=\"12\" xm=\"12\" lx=\"3\">\n                  <TextFieldGroup\n                    field=\"name\"\n                    label=\"Tên banner\"\n                    value={this.state.name}\n                    placeholder={\"Tên deal\"}\n                    // error={errors.title}\n                    onChange={e => this.onChange(\"name\", e.target.value)}\n                  // rows=\"5\"\n                  />\n\n                  <TextFieldGroup\n                    field=\"image\"\n                    label=\"Ảnh banner\"\n                    type={\"file\"}\n                    onChange={e => { this.onChangeImage(e) }}\n                    onClick={(e) => { e.target.value = null; this.setState({ image_show: \"\" }) }}\n                  />\n                  {\n                    image == \"\" || image == null ? \"\" :\n                      <img width=\"150\" height=\"100\" src={\n                        image_show == \"\" ?\n                          `${Constants.BASE_URL}/public/image_deal/${image}` : image_show} style={{ marginBottom: 20 }} />\n                  }\n\n                  <div style={{ width: \"100%\" }} className=\"mt-3\">\n                    <CLabel>Loại deal:</CLabel>\n                    {\n                      <CSelect onChange={async e => { this.changeDealType(e) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                        {\n                          [\"0\", \"1\", \"2\"].map((item, i) => {\n                            if (item == this.state.type) {\n                              return (\n                                <option selected key={i} value={item}>\n                                  {\n                                    item == \"0\" ?\n                                      \"Ưu đãi mới nhất\" : item == \"1\" ?\n                                        \"Đang diễn ra\" : \"Đã kết thúc\"\n                                  }\n                                </option>\n                              );\n                            } else {\n                              return (\n                                <option key={i} value={item}>\n                                  {\n                                    item == \"0\" ?\n                                      \"Ưu đãi mới nhất\" : item == \"1\" ?\n                                        \"Đang diễn ra\" : \"Đã kết thúc\"\n                                  }\n                                </option>\n                              );\n                            }\n                          })\n                        }\n                      </CSelect>\n                    }\n                  </div>\n\n                  <TextFieldGroup\n                    field=\"voucher\"\n                    label=\"Voucher\"\n                    value={this.state.voucher}\n                    placeholder={\"Voucher\"}\n                    // error={errors.title}\n                    onChange={e => this.onChange(\"voucher\", e.target.value)}\n                  // rows=\"5\"\n                  />\n\n\n                  <div style={styles.datePicker}>\n                    <label style={styles.flexLabel}>Ngày bắt đầu:</label>\n                    <DatePicker style={styles.flexOption} selected={new Date(time_start)} onChange={(date) => this.setState({ time_start: date })} />\n                  </div>\n\n                  <div style={styles.datePicker}>\n                    <label style={styles.flexLabel}>Ngày kết thúc:</label>\n                    <DatePicker style={styles.flexOption} selected={new Date(time_finish)} onChange={(date) => this.setState({ time_finish: date })} />\n                  </div>\n\n                </CCol>\n                <CCol md=\"9\" lg=\"9\" sm=\"12\" xm=\"12\" lx=\"9\">\n                  {\n                    action == \"new\" ?\n                      //Thêm mới banner\n                      this.renderAddForm() : \"\"\n                      //Cập nhập banner\n                      // <div>\n                      //   <CRow>\n                      //     <CCol md=\"5\" lg=\"5\" sm=\"12\" xm=\"12\" lx=\"5\">\n                      //       <h3>\n                      //         <strong>Thiết lập dữ liệu cho banner</strong>\n                      //       </h3>\n                      //     </CCol>\n                      //     <CCol md=\"7\" lg=\"7\" sm=\"12\" xm=\"12\" lx=\"7\">\n                      //       <CButton block active variant=\"ghost\" color=\"success\" aria-pressed=\"true\"\n                      //         onClick={() => { }}>\n                      //         Tạo thêm một danh mục mới\n                      //       </CButton>\n                      //     </CCol>\n                      //   </CRow>\n                      //   <div style={{ maxHeight: 500, overflowY: 'scroll', border: '1px solid red', marginTop: 15, borderRadius: 5 }}>\n                      //     {\n                      //       arrUpdate.map((item, i) => {\n                      //         return (\n                      //           <Card style={{ margin: 20 }}>\n                      //             <CardHeader style={{ backgroundColor: '#339966' }}>\n                      //               <CButton color=\"danger\" style={{ float: 'right' }} onClick={() => {\n                      //                 arrRemoveOnUpdate.push(arrUpdate[i])\n                      //                 arrUpdate.splice(i, 1);\n                      //                 this.setState({ arrUpdate: arrUpdate, arrRemoveOnUpdate: arrRemoveOnUpdate });\n                      //               }}>X</CButton>\n                      //             </CardHeader>\n                      //             <CardBody>\n                      //               <CRow style={{ margin: 20 }}>\n                      //                 <CCol md=\"3\" lg=\"3\" sm=\"12\" xm=\"12\" lx=\"3\">\n                      //                   <CLabel>Chọn danh mục cho banner:</CLabel>\n                      //                 </CCol>\n                      //                 <CCol md=\"9\" lg=\"9\" sm=\"12\" xm=\"12\" lx=\"9\">\n                      //                   <CreatableSelect\n                      //                     isClearable\n                      //                     value={arrOptionCategory.find(val => val.value == item.category_id)}\n                      //                     onChange={(e) => {\n                      //                       this.handleUpdateCategory(e, i)\n                      //                     }}\n                      //                     options={arrOptionCategory}\n                      //                   />\n                      //                 </CCol>\n                      //               </CRow>\n                      //               {\n                      //                 item.product.length > 0 ?\n                      //                   <Card>\n                      //                     <CardHeader>\n                      //                       Danh sách sản phẩm\n                      //                     </CardHeader>\n                      //                     <CardBody style={{ height: 250, overflowY: 'scroll' }}>\n                      //                       <CRow>\n                      //                         {\n                      //                           item.product.map((item_product, i_product) => {\n                      //                             return (\n                      //                               <CCol md=\"4\" lg=\"4\" sm=\"12\" xm=\"12\" lx=\"4\">\n                      //                                 <CFormGroup variant=\"custom-checkbox\" inline>\n                      //                                   <CInputCheckbox\n                      //                                     custom\n                      //                                     id={`${item_product._id}`}\n                      //                                     defaultChecked\n                      //                                     onClick={(e) => {\n                      //                                       if (e.target.checked) {\n\n                      //                                       } else {\n\n                      //                                       }\n                      //                                     }}\n                      //                                   />\n                      //                                   <CLabel variant=\"custom-checkbox\" htmlFor={item_product._id} style={{ margin: 10 }}>\n\n                      //                                     <div><strong>Tên sp: </strong>{item_product.name}</div>\n                      //                                     <CRow>\n                      //                                       <CCol md=\"5\" lg=\"5\" sm=\"12\" xm=\"12\" lx=\"5\">\n                      //                                         <strong>SL deal:</strong>\n                      //                                       </CCol>\n                      //                                       <CCol md=\"7\" lg=\"7\" sm=\"12\" xm=\"12\" lx=\"7\">\n                      //                                         <CInput placeholder={\"Số lượng deal\"} value={item_product.total_deal} disabled={true} type=\"number\" style={{ marginBottom: 3, maxWidth: 150 }}\n                      //                                           onChange={(e) => {\n\n                      //                                           }} />\n                      //                                       </CCol>\n                      //                                     </CRow>\n\n                      //                                     <img src={`${Constants.BASE_URL}/public/image_product/${item_product.image}`} width={\"70px\"} height={\"90px\"} />\n\n                      //                                   </CLabel>\n                      //                                 </CFormGroup>\n                      //                               </CCol>\n                      //                             )\n                      //                           })\n                      //                         }\n                      //                       </CRow>\n                      //                     </CardBody>\n                      //                   </Card> : \"\"\n                      //               }\n                      //             </CardBody>\n                      //           </Card>\n                      //         )\n                      //       })\n                      //     }\n                      //   </div>\n                      // </div>\n                  }\n\n                  <br />\n                </CCol>\n              </CRow>\n\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => { this.state.action === 'new' ? this.addDeal() : this.updateProduct() }} disabled={this.state.isLoading}>Lưu</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => { this.onCancelModal() }}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Delete`}</ModalHeader>\n            <ModalBody>\n              <label htmlFor=\"tag\">{`Xác nhận xóa !!!`}</label>\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Xoá</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n\n          <Modal isOpen={this.state.modalDetail} size=\"xl\" className={this.props.className}>\n            <ModalHeader>Chi tiết banner</ModalHeader>\n            <ModalBody style={{ height: 500, overflowY: 'scroll' }}>\n              {\n                arrDetailBanner.map((item, i) => {\n                  return (\n                    <CCard className=\"mb-0\" style={{ margin: 5 }} >\n                      <CCardHeader id=\"headingOne\">\n                        <CRow>\n                          <CCol sm=\"12\" lg=\"4\">\n                            <CButton block color=\"link\" className=\"text-left m-0 p-0\"\n                              onClick={() => { this.setState({ accordion: accordion == i ? null : i }) }}\n                            >\n                              <h5 className=\"m-0 p-0\">Danh mục {item.category_id.name}</h5>\n                            </CButton>\n                          </CCol>\n                          <CCol sm=\"12\" lg=\"8\">\n                            <img src={`${Constants.BASE_URL}/public/image_category/${item.category_id.image}`} width={\"300px\"} height={\"150px\"} />\n                          </CCol>\n                        </CRow>\n                      </CCardHeader>\n                      <CCollapse show={accordion == i}>\n                        <CCardBody>\n                          <CDataTable\n                            items={item.product}\n                            fields={['Tên sản phẩm', 'Hình ảnh', 'Thương hiệu', 'Số lượng Sale', 'Giá']}\n                            itemsPerPage={3}\n                            pagination\n                            size=\"sm\"\n                            scopedSlots={{\n                              'Tên sản phẩm': (item) => (\n                                <td>{item.name}</td>)\n                              , 'Hình ảnh': (item) => (\n                                <td>\n                                  {\n                                    <img src={item.image == \"\" || item.image == null ?\n                                      \"https://www.chanchao.com.tw/VietnamPrintPack/images/default.jpg\" :\n                                      `${Constants.BASE_URL}/public/image_product/${item.image}`} width={\"60px\"} height={\"40px\"} />\n                                  }\n                                </td>)\n                              , 'Thương hiệu': (item) => (\n                                <td>{item.brand_id.name}\n                                </td>)\n                              , 'Số lượng Sale': (item) => (\n                                <td>{item.total_deal}\n                                </td>)\n                              , 'Giá': (item) => (\n                                <td>{item.price}</td>)\n                            }}\n                          />\n                        </CCardBody>\n                      </CCollapse>\n                    </CCard>\n                  )\n                })\n              }\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"secondary\" onClick={e => this.setState({ modalDetail: !this.state.modalDetail })}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n        </div>\n      );\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst styles = {\n  datePicker: {\n    marginBottom: 20,\n    width: '100%'\n  },\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: '100%'\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: \"right\",\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh25: {\n    width: \"25%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  w5: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    margin: '2px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\"\n  },\n  searchInput: {\n    width: \"190px\",\n    display: 'inline-block',\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n}\n\nexport default Product;\n"],"sourceRoot":""}