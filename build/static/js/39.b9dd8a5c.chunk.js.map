{"version":3,"sources":["views/base/tables/SpendingOrder.js","../node_modules/reactstrap/es/Button.js","../node_modules/reactstrap/es/CardFooter.js"],"names":["headers","Headers","auth","localStorage","getItem","append","Order","props","getData","a","setState","isLoading","axios","baseURL","Constants","BASE_URL","url","LIST_ORDER","method","res","pagination","data","dataApi","active","map","val","Status","totalActive","getOrderDetail","company_id","sale_id","status","LIST_ORDER_DETAIL","LIST_COMPANY","condition","_id","resCom","GET_SALE_NAME","resSale","dataOrderDetail","hiddenDetail","currentID","currentCom_ID","Name","currentSale_ID","curentStatus","state","key","keyStatus","activePage","page","itemsCount","limit","modalCom","viewingUser","communities","updated","action","modalDelete","delete","arrPagination","indexPage","dataCompany","currentCompany","DATA_COMPANY","this","arr","JSON","parse","i","length","to","window","location","hash","hidden","href","resCompany","j","temparray","arrTotal","slice","push","d","Company_Id","toLocaleUpperCase","includes","Email","Phone","Fax","Address","Website","Code","username","password","UserName","Password","alert","body","ADD_COMPANY","is_success","bodyAddUser","ADD_USER","console","log","message","item","id","ADD_TRANSACTION","result","UPDATE_STATUS_ORDER","addTransaction","modal","image","isActive","errors","position","e","target","name","value","getUsers","name_action","searchKey","keyEmail","keyPhone","keyFax","keyAddress","keyWebsite","keyCode","keyCompany","keyDateCreate","Date","className","style","styles","success","danger","deleted","tags","sm","lg","searchInput","onChange","actionSearch","placeholder","flexOption","custom","color","width","marginTop","size","onClick","resetSearch","ble","undefined","Purcharse_Date","toLocaleDateString","toLocaleTimeString","Active_Date","Count","getBadge","outline","openUpdate","Sale_Id","float","marginRight","padding","row","htmlFor","OrderID","HardWareID","isOpen","flexLabel","addCompany","updateOrder","disabled","toggleModal","toggle","Component","margin","textDecoration","floatRight","spinner","center","textAlign","tbody","height","overflowY","wh12","wh15","w5","wa10","mgl5","marginLeft","display","userActive","userPending","nagemonNameCol","borderRadius","propTypes","PropTypes","bool","string","block","tag","tagPropType","innerRef","oneOfType","object","func","children","node","cssModule","close","Button","_React$Component","_this","call","bind","_assertThisInitialized","_inheritsLoose","_proto","prototype","preventDefault","render","_this$props","ariaLabel","Tag","attributes","_objectWithoutPropertiesLoose","React","createElement","btnOutlineColor","classes","mapToCssModules","classNames","defaultAriaLabel","_extends","type","ref","defaultProps","CardFooter"],"mappings":"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","file":"static/js/39.b9dd8a5c.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  CardFooter,\n  Col,\n  Row,\n  Button, Input,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n} from 'reactstrap';\n\nimport {\n  CBadge,\n  CRow,\n  CCol,\n  CSelect,\n  CLabel\n} from '@coreui/react'\n\nimport 'moment-timezone';\nimport Constants from \"./../../../contants/contants\";\nimport axios from 'axios'\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\nclass Order extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      keyStatus: '',\n      activePage: 1,\n      page: 1,\n      itemsCount: 0,\n      limit: 20,\n      totalActive: 0,\n      modalCom: false,\n      viewingUser: {},\n      communities: [],\n      updated: '',\n      Status: '',\n      dataApi: [],\n      action: 'new',\n      modalDelete: false,\n      delete: null,\n      arrPagination: [],\n      indexPage: 0,\n      dataCompany: [],\n      currentCompany: '',\n      currentID: '',\n      currentCom_ID: '',\n      currentSale_ID: '',\n      curentStatus: '',\n      dataOrderDetail: [],\n      DATA_COMPANY: '',\n      hiddenDetail: true\n    };\n  }\n  async componentDidMount() {\n    this.getData();\n\n    let arr = JSON.parse(localStorage.getItem('url'));\n    for (let i = 0; i < arr.length; i++) {\n      if (\"#\" + arr[i].to == window.location.hash) {\n        if (arr[i].hidden == true) {\n          window.location.href = '#/'\n        }\n      }\n    }\n  }\n\n  async getCompanyData() {\n    const resCompany = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_COMPANY,\n      method: 'POST'\n    });\n    this.setState({ dataCompany: resCompany.data.data });\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n    this.setState({ arrPagination: arrTotal, data: arrTotal[this.state.indexPage] });\n  }\n\n  getData = async () => {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_ORDER,\n      method: 'POST',\n    });\n\n    this.pagination(res.data.data);\n    this.setState({ dataApi: res.data.data });\n\n    let active = 0\n\n    res.data.data.map(val => {\n      if (val.Status == \"Actived\") {\n        active = active + 1\n      }\n    })\n\n    this.setState({ isLoading: false, totalActive: active });\n  }\n\n  getOrderDetail = async (company_id, sale_id, status) => {\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_ORDER_DETAIL,\n      method: 'POST',\n      data: {\n        \"company_id\": company_id\n      }\n    });\n\n    const resCom = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_COMPANY,\n      method: 'POST',\n      data: {\n        condition: {\n          _id: company_id\n        }\n      }\n    });\n\n    const resSale = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.GET_SALE_NAME,\n      method: 'POST',\n      data: {\n        sale_id: sale_id\n      }\n    });\n\n    this.setState({\n      dataApi: res.data.data, dataOrderDetail: res.data.data,\n      hiddenDetail: false, currentID: company_id, currentCom_ID: resCom.data.data[0].Name,\n      currentSale_ID: resSale.data.data[0].Name, curentStatus: status\n    });\n  }\n\n  searchKey() {\n    const { indexPage, key, keyStatus } = this.state;\n    // this.setState({ key: key })\n\n    if (key != '' || keyStatus != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if (val.Company_Id.toLocaleUpperCase().includes(key.toLocaleUpperCase()) &&\n          val.Status.toLocaleUpperCase().includes(keyStatus.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n      let active = 0\n\n      d.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: d, totalActive: active })\n    } else {\n      let active = 0\n\n      this.state.dataApi.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: this.state.arrPagination[indexPage], totalActive: active })\n    }\n  }\n\n  toggleModal(key) {\n    if (key == 'new') {\n      this.setState({\n        modalCom: !this.state.modalCom,\n        action: key,\n        Name: '',\n        Email: '',\n        Phone: '',\n        Fax: '',\n        Address: '',\n        Website: '',\n        Code: '',\n        Status: '',\n        username: '',\n        password: ''\n      })\n    }\n  }\n\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n\n  async addCompany() {\n    const { Email, Name, Phone, Fax, Address, Website, Code, UserName, Password } = this.state\n\n    if (Email == null || Email == ''\n      || Name == null || Name == ''\n      || Phone == null || Phone == ''\n      || Address == null || Address == ''\n      || UserName == null || UserName == ''\n      || Password == null || Password == '') {\n      alert(\"Please fill in all the requirements\");\n      return\n    }\n\n    const body = {\n      Name: Name,\n      Email: Email,\n      Phone: Phone,\n      Fax: Fax,\n      Address: Address,\n      Website: Website,\n      Code: Code\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.ADD_COMPANY,\n      method: 'PUT',\n      data: body\n    });\n\n    if (res.data.is_success == true) {\n      this.getData();\n\n      const bodyAddUser = {\n        \"Name\": Name,\n        \"Email\": Email,\n        \"Phone\": Phone,\n        \"Address\": Address,\n        \"Company_Id\": res.data.data._id,\n        \"Role_Id\": \"60e6a98b39d7243f689a123c\",\n        \"UserName\": UserName,\n        \"Password\": Password,\n        \"Code\": res.data.data._id,\n        \"Status\": \"Actived\"\n      }\n\n      await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.ADD_USER,\n        method: 'POST',\n        data: bodyAddUser\n      });\n      console.log(res.data.data)\n\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(res.data.message);\n      this.setState({ isLoading: false });\n    }\n  }\n\n  openUpdate(item) {\n\n    this.setState({\n      modalCom: !this.state.modalCom,\n      action: \"update\",\n      id: item['_id'],\n      Status: item.Status,\n      DATA_COMPANY: item\n    })\n  }\n\n  async addTransaction() {\n    const body = {\n      company_id: this.state.DATA_COMPANY.Company_Id\n    }\n\n    let result = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.ADD_TRANSACTION,\n      method: 'POST',\n      data: body\n    });\n\n    if (result.data.is_success != true) {\n      alert(\"Có lỗi xảy ra khi thêm dữ liệu vào Transaction\")\n    }\n\n    return result;\n  }\n\n  async updateOrder() {\n    const { Status, DATA_COMPANY } = this.state\n\n    const body = {\n      Status: Status,\n      id: this.state.id\n    }\n\n    let result = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.UPDATE_STATUS_ORDER,\n      method: 'POST',\n      data: body\n    });\n\n    if (result.data.is_success == true) {\n      if (DATA_COMPANY.Status == 'SPENDING') {\n        let res = await this.addTransaction();\n        if (res.data.is_success) {\n          this.getData();\n          this.setState({ modalCom: !this.state.modalCom })\n          this.setState({ isLoading: true });\n        } else {\n          await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.UPDATE_STATUS_ORDER,\n            method: 'POST',\n            data: {\n              Status: 'SPENDING',\n              id: this.state.id\n            }\n          });\n\n          this.setState({ isLoading: false });\n        }\n      }\n    } else {\n      alert(result.data.message);\n      this.setState({ isLoading: false });\n    }\n  }\n\n  getBadge(status) {\n    switch (status) {\n      case 'SPENDING': return 'success'\n      default: return 'primary'\n    }\n  }\n\n  toggle(action = '') {\n    this.setState({\n      modal: !this.state.modal,\n      image: '',\n      url: '',\n      isActive: false,\n      isLoading: false,\n      errors: {},\n      action,\n      position: 1,\n      data: [],\n      updated: '',\n    });\n  }\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n  goSearch() {\n    this.getUsers();\n  }\n\n  actionSearch(e, name_action) {\n    this.setState({\n      [name_action]: e.target.value\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  resetSearch() {\n    this.setState({\n      key: '',\n      keyEmail: '',\n      keyPhone: '',\n      keyFax: '',\n      keyAddress: '',\n      keyWebsite: '',\n      keyCode: '',\n      keyCompany: '',\n      keyDateCreate: new Date(),\n      keyStatus: ''\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  render() {\n    const { data, key, action, arrPagination,\n      indexPage, dataOrderDetail } = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <p style={styles.success}>{this.state.updated}</p>\n              <p style={styles.danger}>{this.state.deleted}</p>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Danh sách đơn hàng (Page: {this.state.indexPage + 1})\n                  <div style={styles.tags}>\n                    <CRow>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CRow>\n                          <CCol sm=\"12\" lg=\"4\">\n                            <div>\n                              <Input style={styles.searchInput} onChange={(e) => {\n                                this.actionSearch(e, \"key\");\n                              }} name=\"key\" value={key} placeholder=\"Từ khóa\" />\n                            </div>\n                          </CCol>\n                          {/* <CCol sm=\"6\" lg=\"2\">\n                            <CInput type=\"date\" onChange={e => {\n                              this.actionSearch(e, \"keyDateCreate\");\n                            }} value={keyDateCreate} placeholder=\"Create Date\" />\n                          </CCol> */}\n                          <CCol sm=\"12\" lg=\"4\">\n                            <CSelect style={styles.flexOption} onChange={e => {\n\n                              this.actionSearch(e, \"keyStatus\");\n\n                            }} custom>\n                              {\n                                ['AVAILABLE', 'SPENDING'].map((item, i) => {\n                                  return (\n                                    <option value={item}>{item}</option>\n                                  );\n                                })\n                              }\n                            </CSelect>\n                          </CCol>\n                          <CCol sm=\"12\" lg=\"4\">\n                            <Button color=\"primary\" style={{ width: '100%', marginTop: 5 }} size=\"sm\" onClick={e => { this.resetSearch() }}>Làm mới tìm kiếm</Button>\n                          </CCol>\n                        </CRow>\n                      </CCol>\n                    </CRow>\n                  </div>\n                </CardHeader>\n                <CardBody>\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        <th className=\"text-center\">Mã công ty</th>\n                        <th className=\"text-center\">Ngày mua</th>\n                        <th className=\"text-center\">Ngày kích hoạt</th>\n                        <th className=\"text-center\">Số lượng mua</th>\n                        <th className=\"text-center\">Trạng thái</th>\n                        <th className=\"text-center\">#</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                <td className=\"text-center\">{item.Company_Id}</td>\n                                <td className=\"text-center\">\n                                  {(new Date(item.Purcharse_Date)).toLocaleDateString() + ' ' + (new Date(item.Purcharse_Date)).toLocaleTimeString()}\n                                </td>\n                                <td className=\"text-center\">\n                                  {(new Date(item.Active_Date)).toLocaleDateString() + ' ' + (new Date(item.Active_Date)).toLocaleTimeString()}\n                                </td>\n                                <td className=\"text-center\">{item.Count}</td>\n                                <td className=\"text-center\">\n                                  <CBadge color={this.getBadge(item.Status)}>\n                                    {item.Status}\n                                  </CBadge>\n                                </td>\n                                <td className=\"text-center\">\n                                  <Button outline color=\"primary\" size=\"sm\" onClick={(e) => this.openUpdate(item)} >Update</Button>{' '}\n                                  <Button outline color=\"success\" size=\"sm\" onClick={async (e) => { await this.getOrderDetail(item.Company_Id, item.Sale_Id, item.Status) }} >Chi tiết</Button>\n                                  {/* <Button outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>Delete</Button> */}\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n\n                </CardBody>\n                <CardFooter>\n                  {\n                    arrPagination.length == 1 ? \"\" :\n                      <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                        <tr style={styles.row}>\n                          {\n                            arrPagination.map((item, i) => {\n                              return (\n                                <td>\n                                  <Button style={styles.pagination} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ data: arrPagination[i], indexPage: i }) }}>{i + 1}</Button>\n                                </td>\n                              );\n                            })\n                          }\n                        </tr>\n                      </div>\n                  }\n                </CardFooter>\n              </Card>\n\n\n              <Card hidden={this.state.hiddenDetail}>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Chi tiết đơn hàng của {this.state.currentCom_ID} (Page: {this.state.indexPage + 1})\n\n                  <CRow style={{ marginTop: 20 }}>\n                    <CCol sm=\"6\" lg=\"6\">\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CLabel htmlFor=\"selectSm\">Tên công ty đăng ký phần cứng: {this.state.currentCom_ID}</CLabel>\n                      </CCol>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CLabel htmlFor=\"selectSm\">Tên sale: {this.state.currentSale_ID}</CLabel>\n                      </CCol>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CLabel htmlFor=\"selectSm\">Trạng thái đơn hàng: {\n                          <CBadge color={this.getBadge(this.state.curentStatus)}>\n                            {this.state.curentStatus}\n                          </CBadge>\n                        }</CLabel>\n                      </CCol>\n                    </CCol>\n                    <CCol sm=\"6\" lg=\"6\">\n                      <Button color=\"primary\" style={{ float: 'right', marginTop: 5 }} size=\"sm\" onClick={e => { this.setState({ hiddenDetail: true }) }}>Đóng</Button>\n                    </CCol>\n                  </CRow>\n                </CardHeader>\n                <CardBody>\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        <th className=\"text-center\">Mã đơn hàng</th>\n                        <th className=\"text-center\">Mã phần cứng</th>\n                        <th className=\"text-center\">Ngày mua</th>\n                        <th className=\"text-center\">Ngày kích hoạt</th>\n                        <th className=\"text-center\">Trạng thái</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {\n                        dataOrderDetail != undefined ?\n                          dataOrderDetail.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                <td className=\"text-center\">{item.OrderID}</td>\n                                <td className=\"text-center\">{item.HardWareID}</td>\n                                <td className=\"text-center\">\n                                  {(new Date(item.Purcharse_Date)).toLocaleDateString() + ' ' + (new Date(item.Purcharse_Date)).toLocaleTimeString()}\n                                </td>\n                                <td className=\"text-center\">\n                                  {(new Date(item.Active_Date)).toLocaleDateString() + ' ' + (new Date(item.Active_Date)).toLocaleTimeString()}\n                                </td>\n                                <td className=\"text-center\">\n                                  <CBadge color={this.getBadge(item.Status)}>\n                                    {item.Status}\n                                  </CBadge>\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n\n                </CardBody>\n              </Card>\n\n            </Col>\n          </Row>\n\n          <Modal isOpen={this.state.modalCom} className={this.props.className}>\n            <ModalHeader>{this.state.action == 'new' ? `Tạo mới` : `Cập nhật`}</ModalHeader>\n            <ModalBody>\n              {\n                action == 'new' ? \"\" : <div>\n                  <label style={styles.flexLabel} htmlFor=\"tag\">Status    </label>\n                  <select style={styles.flexOption} name=\"Status\" onChange={e => this.onChange(\"Status\", e.target.value)}>\n                    <option value={this.state.Status}>{this.state.Status == '' ? ` - - - - - - - - - - ` : this.state.Status}</option>\n                    {\n                      ['SPENDING', 'COMPLETE'].map((item, i) => {\n                        return (\n                          <option value={item}>{item}</option>\n                        );\n                      })\n                    }\n                  </select>\n                </div>\n              }\n\n            </ModalBody>\n\n            <ModalFooter>\n              <Button color=\"primary\" onClick={e => { this.state.action === 'new' ? this.addCompany() : this.updateOrder() }} disabled={this.state.isLoading}>Lưu</Button>{' '}\n              <Button color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Đóng</Button>\n            </ModalFooter>\n          </Modal>\n\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Delete`}</ModalHeader>\n            <ModalBody>\n              <label htmlFor=\"tag\">{`Do you want to delete user \"${this.state.delete ? this.state.delete.Email : ''}\" ?`}</label>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Delete</Button>{' '}\n              <Button color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Đóng</Button>\n            </ModalFooter>\n          </Modal>\n        </div >\n      );\n    }\n    return (\n      <div id=\"page-loading\">\n        <div className=\"three-balls\">\n          <div className=\"ball ball1\"></div>\n          <div className=\"ball ball2\"></div>\n          <div className=\"ball ball3\"></div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: 160,\n    margin: '1px'\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: 'right',\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh12: {\n    width: \"8%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wh15: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  w5: {\n    width: \"12%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    marginLeft: '5px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\"\n  },\n  searchInput: {\n    width: \"160px\",\n    display: 'inline-block',\n    margin: '1px'\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n}\n\nexport default Order;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      return this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return /*#__PURE__*/React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardFooter = function CardFooter(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-footer'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardFooter.propTypes = propTypes;\nCardFooter.defaultProps = defaultProps;\nexport default CardFooter;"],"sourceRoot":""}
