{"version":3,"sources":["contants/contants.js","functions/callAPI.js","views/Common/TextFieldGroup.js","views/base/tables/CountOrder.js"],"names":["axios","require","default","defaults","baseURL","constants","BASE_URL","connect","a","url","data","token","type","options","headers","get","is_success","post","put","delete","del","TextFieldGroup","field","value","label","error","onChange","checkUserExists","readOnly","placeholder","onClick","className","classnames","onBlur","name","defaultProps","Headers","auth","localStorage","getItem","append","Brand","props","getData","setState","isLoading","API_CONNECT","Constants","LIST_COUNT_ORDER","res","val","pagination","dataApi","state","key","modalCom","hidden","action","modalDelete","arrPagination","indexPage","Authorization","this","i","j","temparray","arrTotal","length","slice","push","css","override","size","color","loading","speedMultiplier","ble","colSpan","undefined","map","item","product_data","order_id","count","style","float","e","v","Component"],"mappings":"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","file":"static/js/16.22199871.chunk.js","sourcesContent":["export default {\n  \"BASE_URL\" : \"https://api.thulamua.com\",\n  //\"BASE_URL\" : \"http://localhost:3008\",\n  \"LOGIN\" : \"/api/login\",\n  \"LIST_USER\": \"/api/list_user\",\n  \"ADD_USER\":\"/api/add_user\",\n  \"UPDATE_USER\":\"/api/update_user\",\n  \"DELETE_USER\":\"/api/delete_user\",\n  \"UPLOAD_AVATAR\": \"/api/upload_avatar\",\n\n  \"LIST_CATEGORY\": \"/api/list_category\",\n  \"ADD_CATEGORY\": \"/api/add_category\",\n  \"UPDATE_CATEGORY\": \"/api/update_category\",\n  \"DELETE_CATEGORY\": \"/api/delete_category\",\n  \"UPLOAD_CATEGORY\": \"/api/upload_category\",\n\n  \"LIST_BRAND\": \"/api/list_brand\",\n  \"ADD_BRAND\": \"/api/add_brand\",\n  \"UPDATE_BRAND\": \"/api/update_brand\",\n  \"DELETE_BRAND\": \"/api/delete_brand\",\n  \"UPLOAD_BRAND\": \"/api/upload_brand\",\n\n  \"LIST_PRODUCT\": \"/api/list_product\",\n  \"LIST_PRODUCT_CATEGORY\": \"/api/list_product_category\",\n  \"ADD_PRODUCT\": \"/api/add_product\",\n  \"UPDATE_PRODUCT\": \"/api/update_product\",\n  \"DELETE_PRODUCT\": \"/api/delete_product\",\n  \"UPLOAD_PRODUCT\": \"/api/upload_product\",\n  \"UPLOAD_PRODUCT_MULTIPLE\": \"/api/upload_product_multiple\",\n\n  \"LIST_ORDER\": \"/api/list_order\",\n  \"LIST_ORDER_DETAIL\": \"/api/list_order_detail\",\n  \"LIST_ORDER_BY_USER\": \"/api/list_order_by_user\",\n  \"ADD_ORDER\": \"/api/add_order\",\n\n  \"LIST_DEAL\": \"/api/list_deal\",\n  \"ADD_DEAL\": \"/api/add_deal\",\n  \"UPDATE_DEAL\": \"/api/update_deal\",\n  \"DELETE_DEAL\": \"/api/delete_deal\",\n  \"UPLOAD_DEAL\": \"/api/upload_deal\",\n\n  \"LIST_COUNT_ORDER\": \"/api/list_count_order\",\n};\n","import constants from './../contants/contants'\n\nconst axios = require('axios').default;\naxios.defaults.baseURL = constants.BASE_URL;\n\nconst connect = async function (url = \"\", data = {}, token = \"\", type) {\n  let options = {};\n  // console.log(\"Token: \", token)\n  if (token) {\n    options = {\n      headers: token\n    };\n  }\n  try {\n    switch (type) {\n      case \"GET\":\n        let get = await axios.get(url, data, options);\n        if (get.is_success == false) {\n          return null;\n        }\n        return get.data;\n      case \"POST\":\n        let post = await axios.post(url, data, options);\n        if (post.is_success == false) {\n          return null;\n        }\n        return post.data;\n      case \"PUT\":\n        let put = await axios.put(url, data, options);\n        if (put.is_success == false) {\n          return null;\n        }\n        return put.data;\n      case \"DELETE\":\n        let del = await axios.delete(url, data, options);\n        if (del.is_success == false) {\n          return null;\n        }\n        return del.data;\n    }\n\n  } catch (reason) {\n    return reason;\n  }\n\n\n}\n\nexport default connect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder, onClick }) => {\n  return (\n    <div className={classnames('form-group', { 'has-error': error })}>\n      <label className=\"control-label\">{label}</label>\n      <input\n        onChange={onChange}\n        onClick={onClick}\n        onBlur={checkUserExists}\n        value={value}\n        type={type}\n        name={field}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        className=\"form-control\"\n      />\n    {error && <span className=\"help-block\">{error}</span>}\n    </div>  );\n}\n\nTextFieldGroup.propTypes = {\n  field: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checkUserExists: PropTypes.func\n}\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextFieldGroup;\n","import React, { Component } from 'react';\nimport CIcon from '@coreui/icons-react'\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Input,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n} from 'reactstrap';\n\nimport {\n  CButton,\n  CRow,\n  CCol\n} from '@coreui/react'\n\nimport API_CONNECT from \"../../../functions/callAPI\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport 'moment-timezone';\nimport Constants from \"../../../contants/contants\";\nimport TextFieldGroup from \"../../Common/TextFieldGroup\";\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\n\nclass Brand extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      modalCom: false,\n      dataApi: [],\n      hidden: false,\n      action: 'new',\n      modalDelete: false,\n      delete: null,\n      arrPagination: [],\n      indexPage: 0,\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      type: localStorage.getItem('type'),\n      isLoading: false,\n    };\n  }\n  async componentDidMount() {\n    this.getData()\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden: false\n      })\n    } else {\n      this.setState({\n        hidden: true\n      })\n    }\n\n    this.setState({ arrPagination: arrTotal, data: arrTotal[0] });\n  }\n\n  getData = async () => {\n    this.setState({ isLoading: true });\n    var res = await API_CONNECT(\n      Constants.LIST_COUNT_ORDER, {}, \"\", \"POST\")\n\n    let val = res.data;\n    this.pagination(val);\n    this.setState({ dataApi: val, isLoading: false })\n  }\n\n  render() {\n    const { data, arrPagination, key } = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Danh sách danh mục\n                </CardHeader>\n                <CardBody>\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        <th className=\"text-center\">Sản phẩm</th>\n                        <th className=\"text-center\">Mã đơn hàng</th>\n                        <th className=\"text-center\">Lượt mua</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <td colSpan=\"10\" hidden={this.state.hidden} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                <td className=\"text-center\">{item.product_data.name}</td>\n                                <td className=\"text-center\">{item.order_id}</td>\n                                <td className=\"text-center\">{item.count}</td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n                </CardBody>\n              </Card>\n              <div style={{ float: 'right' }}>\n                <Pagination count={arrPagination.length} color=\"primary\" onChange={(e, v) => {\n                  this.setState({ data: arrPagination[v - 1], indexPage: v - 1 })\n                }} />\n              </div>\n            </Col>\n          </Row>\n        </div>\n      );\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst styles = {\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: 300\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: \"right\",\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh25: {\n    width: \"25%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  w5: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    margin: '5px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\"\n  },\n  searchInput: {\n    width: \"190px\",\n    display: 'inline-block',\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n}\n\nexport default Brand;\n"],"sourceRoot":""}