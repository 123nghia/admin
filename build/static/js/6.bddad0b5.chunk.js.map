{"version":3,"sources":["views/Common/TextArea.js","views/PackageSale/index.js"],"names":["TextArea","field","value","label","error","type","onChange","checkUserExists","rows","className","classnames","onBlur","name","defaultProps","headers","Headers","auth","localStorage","getItem","append","PackageSale","props","getData","a","setState","isLoading","axios","baseURL","url","method","res","data","dataApi","active","map","val","Status","totalActive","openDelete","item","modalDelete","state","delete","key","activePage","page","itemsCount","limit","modalCom","viewingUser","communities","updated","action","Name","Company_Id","End_Date","Date","this","d","toLocaleUpperCase","includes","Email","push","alert","body","is_success","toggleModal","message","id","fetchData","fetch","global","BASE_URL","then","users","json","result","total","catch","console","log","pageNumber","getUsers","modal","image","isActive","errors","position","e","target","user","address","communityId","style","styles","success","danger","deleted","length","tags","searchInput","searchKey","placeholder","outline","color","floatRight","size","onClick","responsive","wh16","w5","i","row","openUpdate","isOpen","toggle","datePicker","selected","date","flexLabel","htmlFor","flexOption","addPackageSale","updatePackageSale","disabled","Component","marginBottom","width","textDecoration","float","marginTop","spinner","center","textAlign","tbody","height","overflowY","wh15","mgl5","marginLeft","marginRight","display","userActive","userPending","nagemonNameCol","borderRadius"],"mappings":"4KAAA,gCAIMA,EAAW,SAAC,GAA2E,IAAzEC,EAAwE,EAAxEA,MAAOC,EAAiE,EAAjEA,MAAOC,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,MAAOC,EAA4C,EAA5CA,KAAMC,EAAsC,EAAtCA,SAAUC,EAA4B,EAA5BA,gBAAiBC,EAAW,EAAXA,KAC/E,OACE,sBAAKC,UAAWC,IAAW,aAAc,CAAE,YAAaN,IAAxD,UACE,uBAAOK,UAAU,gBAAjB,SAAkCN,IAClC,0BACEG,SAAUA,EACVK,OAAQJ,EACRL,MAAOA,EACPG,KAAMA,EACNO,KAAMX,EACNQ,UAAU,yBACVD,KAAMA,IAGTJ,GAAS,sBAAMK,UAAU,aAAhB,SAA8BL,QAc5CJ,EAASa,aAAe,CACtBR,KAAM,OACNG,KAAM,M,2NCfJM,EAAU,IAAIC,QACZC,EAAOC,aAAaC,QAAQ,QAClCJ,EAAQK,OAAO,gBAAiB,UAAYH,GAC5CF,EAAQK,OAAO,eAAgB,oB,IACzBC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA2BVC,QA5BmB,sBA4BT,8BAAAC,EAAA,6DACN,EAAKC,SAAS,CAAEC,WAAW,IADrB,SAEYC,IAAM,CACpBC,QAAS,iCACTC,IAAK,iBACLC,OAAQ,QALN,OAEAC,EAFA,OAQN,EAAKN,SAAS,CAAEO,KAAMD,EAAIC,KAAKA,KAAMC,QAASF,EAAIC,KAAKA,OAEnDE,EAAS,EAEbH,EAAIC,KAAKA,KAAKG,KAAI,SAAAC,GACI,WAAdA,EAAIC,SACJH,GAAkB,MAI1B,EAAKT,SAAS,CAAEC,WAAW,EAAOY,YAAaJ,IAlBzC,2CA5BS,EAgLnBK,WAAa,SAACC,GACV,EAAKf,SAAS,CACVgB,aAAc,EAAKC,MAAMD,YACzBE,OAAQH,KAjLZ,EAAKE,MAAQ,CACTV,KAAM,GACNY,IAAK,GACLC,WAAY,EACZC,KAAM,EACNC,WAAY,EACZC,MAAO,GACPV,YAAa,EACbW,UAAU,EACVC,YAAa,GACbC,YAAa,GACbC,QAAS,GACTnB,QAAS,GACToB,OAAQ,MACRC,KAAM,GACNC,WAAY,GACZC,SAAU,IAAIC,KACdpB,OAAQ,GACRI,aAAa,EACbE,OAAQ,MArBG,E,4FAwBnB,sBAAAnB,EAAA,sDACIkC,KAAKnC,UADT,gD,6EAyBA,SAAUqB,GAGN,GAFAc,KAAKjC,SAAS,CAAEmB,IAAKA,IAEV,IAAPA,EAAW,CACX,IAAIe,EAAI,GACRD,KAAKhB,MAAMT,QAAQE,KAAI,SAAAC,IACfA,EAAIkB,KAAKM,oBAAoBC,SAASjB,EAAIgB,sBAAwBxB,EAAI0B,MAAMF,oBAAoBC,SAASjB,EAAIgB,uBAC7GD,EAAEI,KAAK3B,MAGf,IAAIF,EAAS,EAEbyB,EAAExB,KAAI,SAAAC,GACgB,WAAdA,EAAIC,SACJH,GAAkB,MAI1BwB,KAAKjC,SAAS,CAAEO,KAAM2B,EAAGrB,YAAaJ,QACnC,CACH,IAAIA,EAAS,EAEbwB,KAAKhB,MAAMT,QAAQE,KAAI,SAAAC,GACD,WAAdA,EAAIC,SACJH,GAAkB,MAI1BwB,KAAKjC,SAAS,CAAEO,KAAM0B,KAAKhB,MAAMT,QAASK,YAAaJ,O,yBAI/D,SAAYU,GACG,OAAPA,GACAc,KAAKjC,SAAS,CACVwB,UAAWS,KAAKhB,MAAMO,SACtBI,OAAQT,EACRU,KAAM,GACNC,WAAY,GACZC,SAAU,IAAIC,S,sBAK1B,SAASb,EAAKR,GACVsB,KAAKjC,SAAL,eAAiBmB,EAAMR,M,mEAG3B,sCAAAZ,EAAA,2DACmDkC,KAAKhB,MAA5CY,EADZ,EACYA,KAAMC,EADlB,EACkBA,WAAYC,EAD9B,EAC8BA,SAD9B,EACwCnB,OAEpB,MAAZmB,GAAgC,IAAZA,GACT,MAARF,GAAwB,IAARA,EAJ3B,uBAKQU,MAAM,uCALd,iCASUC,EAAO,CACTX,KAAMA,EACNC,WAAYA,EACZC,SAAUA,GAGdE,KAAKjC,SAAS,CAAEC,WAAW,IAf/B,SAgBsBC,IAAM,CACpBC,QAAS,iCACTC,IAAK,gBACLC,OAAQ,MACRE,KAAMiC,IApBd,OAuB+B,IAPrBlC,EAhBV,QAuBYC,KAAKkC,YACTR,KAAKnC,UACLmC,KAAKS,YAAY,SAEjBH,MAAMjC,EAAIC,KAAKoC,SACfV,KAAKjC,SAAS,CAAEC,WAAW,KA5BnC,iD,8EAgCA,SAAWc,GAEPkB,KAAKjC,SAAS,CACVwB,UAAWS,KAAKhB,MAAMO,SACtBI,OAAQ,SACRC,KAAMd,EAAKc,KACXC,WAAYf,EAAKe,WACjBC,SAAUhB,EAAKgB,SACfa,GAAI7B,EAAI,IACRH,OAAQG,EAAKH,W,sEAIrB,wCAAAb,EAAA,2DACmDkC,KAAKhB,MAA5CY,EADZ,EACYA,KAAMC,EADlB,EACkBA,WAAYC,EAD9B,EAC8BA,SAAUnB,EADxC,EACwCA,OAEpB,MAAZmB,GAAgC,IAAZA,GACT,MAARF,GAAwB,IAARA,EAJ3B,uBAKQU,MAAM,uCALd,iCASUC,EAAO,CACTX,KAAMA,EACNC,WAAYA,EACZC,SAAUA,EACVa,GAAIX,KAAKhB,MAAM2B,GACfhC,OAAQA,GAGZqB,KAAKjC,SAAS,CAAEC,WAAW,IAjB/B,SAkBsBC,IAAM,CACpBC,QAAS,iCACTC,IAAK,mBACLC,OAAQ,OACRE,KAAMiC,IAtBd,OAyB+B,IAPrBlC,EAlBV,QAyBYC,KAAKkC,YACTR,KAAKnC,UACLmC,KAAKS,YAAY,SAEjBH,MAAMjC,EAAIC,KAAKoC,SACfV,KAAKjC,SAAS,CAAEC,WAAW,KA9BnC,iD,iHAyCA,4BAAAF,EAAA,6DACIkC,KAAKjC,SAAS,CAAEC,WAAW,IAD/B,SAEsBC,IAAM,CACpBC,QAAS,iCACTC,IAAK,mBACLC,OAAQ,SACRE,KAAM,CACF,GAAM0B,KAAKhB,MAAMC,OAAX,OAPlB,OAW+B,IATrBZ,EAFV,QAWYC,KAAKkC,YACTR,KAAKnC,UACLmC,KAAKjC,SAAS,CAAEgB,aAAciB,KAAKhB,MAAMD,YAAaE,OAAQ,SAE9DqB,MAAMjC,EAAIC,KAAKoC,SACfV,KAAKjC,SAAS,CAAEC,WAAW,KAhBnC,gD,4EAqBA,WAAoB,IAAD,OAAVoB,EAAU,uDAAH,EACNE,EAAQU,KAAKhB,MAAMM,MACnBJ,EAAMc,KAAKhB,MAAME,KAAO,GACxB0B,EAAY,CACdxC,OAAQ,MACRf,QAASA,GAEbwD,MAAMC,EAAOC,SAAW,oBAAsB7B,EAAM,SAAWE,EAAO,UAAYE,EAAOsB,GAAWI,MAAK,SAAAC,GACrGA,EAAMC,OAAOF,MAAK,SAAAG,GACd,EAAKpD,SAAS,CACVO,KAAM6C,EAAO7C,KACbe,WAAY8B,EAAOC,MACnBjC,WAAYC,EACZR,YAAauC,EAAOvC,YACpBc,QAAS,WAGlB2B,MAAMC,QAAQC,O,qEAErB,WAAuBC,GAAvB,SAAA1D,EAAA,sDACIkC,KAAKyB,SAASD,GADlB,gD,2EAGA,WAAqB,IAAd7B,EAAa,uDAAJ,GACZK,KAAKjC,SAAS,CACV2D,OAAQ1B,KAAKhB,MAAM0C,MACnBC,MAAO,GACPxD,IAAK,GACLyD,UAAU,EACV5D,WAAW,EACX6D,OAAQ,GACRlC,SACAmC,SAAU,EACVxD,KAAM,GACNoB,QAAS,O,yBAGjB,SAAYqC,GACR/B,KAAKjC,SAAL,eAAiBgE,EAAEC,OAAO7E,KAAO4E,EAAEC,OAAOvF,U,sBAE9C,WACIuD,KAAKyB,a,2BAET,c,iCAGA,SAAoBQ,M,mCAGpB,SAAsBC,EAASC,M,oBAE/B,WAAU,IAAD,OACL,EAAkEnC,KAAKhB,MAA/DV,EAAR,EAAQA,KAAMY,EAAd,EAAcA,IAA+BS,GAA7C,EAAmBH,YAAnB,EAAgCC,YAAhC,EAA6CE,QAAQG,EAArD,EAAqDA,SACrD,OAAKE,KAAKhB,MAAMhB,UAqHZ,qBAAK2C,GAAG,eAAR,SACI,sBAAK3D,UAAU,cAAf,UACI,qBAAKA,UAAU,eACf,qBAAKA,UAAU,eACf,qBAAKA,UAAU,oBAvHnB,sBAAKA,UAAU,kBAAf,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,mBAAGoF,MAAOC,EAAOC,QAAjB,SAA2BtC,KAAKhB,MAAMU,UACtC,mBAAG0C,MAAOC,EAAOE,OAAjB,SAA0BvC,KAAKhB,MAAMwD,UACrC,eAAC,IAAD,WACI,eAAC,IAAD,WACI,mBAAGxF,UAAU,wBADjB,kBAC2DgD,KAAKhB,MAAMV,KAAKmE,OAD3E,aAC6FzC,KAAKhB,MAAMJ,YADxG,IAEI,qBAAKwD,MAAOC,EAAOK,KAAnB,SACI,gCACI,cAAC,IAAD,CAAON,MAAOC,EAAOM,YAAa9F,SAAU,SAACkF,GAAD,OAAO,EAAKa,UAAUb,EAAEC,OAAOvF,QAAQU,KAAK,MAAMV,MAAOyC,EAAK2D,YAAY,WACtH,cAAC,IAAD,CAAQC,SAAO,EAACC,MAAM,UAAUX,MAAOC,EAAOW,WAAYC,KAAK,KAAKC,QAAS,SAAAnB,GAAC,OAAI,EAAKtB,YAAY,QAAnG,yBAIZ,cAAC,IAAD,UACI,eAAC,IAAD,CAAO0C,YAAU,EAAjB,UACI,gCACI,+BACI,oBAAIf,MAAOC,EAAOe,KAAlB,iBACA,oBAAIhB,MAAOC,EAAOe,KAAlB,kBACA,oBAAIhB,MAAOC,EAAOe,KAAlB,wBACA,oBAAIhB,MAAOC,EAAOe,KAAlB,sBACA,oBAAIhB,MAAOC,EAAOe,KAAlB,oBACA,oBAAIhB,MAAOC,EAAOgB,GAAlB,yBAGR,gCAEQ/E,EAAKG,KAAI,SAACK,EAAMwE,GACZ,OACI,qBAAYlB,MAAOC,EAAOkB,IAA1B,UACI,oBAAInB,MAAOC,EAAOe,KAAlB,SAAyBE,EAAI,IAC7B,oBAAIlB,MAAOC,EAAOe,KAAlB,SAAyBtE,EAAKc,OAC9B,oBAAIwC,MAAOC,EAAOe,KAAlB,SAAyBtE,EAAKe,aAC9B,oBAAIuC,MAAOC,EAAOe,KAAlB,SAAyBtE,EAAKgB,WAC9B,oBAAIsC,MAAOC,EAAOe,KAAlB,SAAyBtE,EAAKH,SAC9B,qBAAIyD,MAAOC,EAAOgB,GAAlB,UACI,cAAC,IAAD,CAAQP,SAAO,EAACC,MAAM,UAAUE,KAAK,KAAKC,QAAS,SAACnB,GAAD,OAAO,EAAKyB,WAAW1E,IAA1E,oBAAkG,IAClG,cAAC,IAAD,CAAQgE,SAAO,EAACC,MAAM,SAASE,KAAK,KAAKC,QAAS,SAACnB,GAAQ,EAAKlD,WAAWC,IAA3E,yBARCwE,qBA8B7C,eAAC,IAAD,CAAOG,OAAQzD,KAAKhB,MAAMO,SAAUmE,OAAQ,SAAA3B,GAAC,OAAI,EAAKtB,YAAY,QAAQzD,UAAWgD,KAAKpC,MAAMZ,UAAhG,UACI,cAAC,IAAD,CAAa0G,OAAQ,SAAA3B,GAAC,OAAI,EAAKtB,YAAY,QAA3C,SAAyE,OAArBT,KAAKhB,MAAMW,OAAX,oBACpD,eAAC,IAAD,WACI,cAAC,IAAD,CACInD,MAAM,OACNE,MAAM,OACND,MAAOuD,KAAKhB,MAAMY,KAElB/C,SAAU,SAAAkF,GAAC,OAAI,EAAKlF,SAAS,OAAQkF,EAAEC,OAAOvF,UAGlD,sBAAK2F,MAAOC,EAAOsB,WAAnB,UACI,gDACA,cAAC,IAAD,CAAYC,SAAU,IAAI7D,KAAKD,GAAWjD,SAAU,SAACgH,GAAD,OAAU,EAAK9F,SAAS,CAAE+B,SAAU+D,UAG9E,OAAVlE,EAAkB,GAAK,gCACnB,uBAAOyC,MAAOC,EAAOyB,UAAWC,QAAQ,MAAxC,wBACA,yBAAQ3B,MAAOC,EAAO2B,WAAY7G,KAAK,SAASN,SAAU,SAAAkF,GAAC,OAAI,EAAKlF,SAAS,SAAUkF,EAAEC,OAAOvF,QAAhG,UACI,wBAAQA,MAAOuD,KAAKhB,MAAML,OAA1B,SAAwD,IAArBqB,KAAKhB,MAAML,OAAX,wBAAoDqB,KAAKhB,MAAML,SAClG,wBAAQlC,MAAO,UAAf,qBACA,wBAAQA,MAAO,SAAf,oBACA,wBAAQA,MAAO,YAAf,6BAKZ,gCACI,uBAAO2F,MAAOC,EAAOyB,UAAWC,QAAQ,MAAxC,0BACA,wBAAQ3B,MAAOC,EAAO2B,WAAY7G,KAAK,aAAaN,SAAU,SAAAkF,GAAC,OAAI,EAAKlF,SAAS,aAAckF,EAAEC,OAAOvF,QAAxG,SACI,wBAAQA,MAAOuD,KAAKhB,MAAMa,WAA1B,SAAgE,IAAzBG,KAAKhB,MAAMa,WAAX,wBAAwDG,KAAKhB,MAAMa,qBAItH,eAAC,IAAD,WACI,cAAC,IAAD,CAAQkD,MAAM,UAAUG,QAAS,SAAAnB,GAA6B,QAAtB,EAAK/C,MAAMW,OAAmB,EAAKsE,iBAAmB,EAAKC,qBAAuBC,SAAUnE,KAAKhB,MAAMhB,UAA/I,kBAAwK,IACxK,cAAC,IAAD,CAAQ+E,MAAM,YAAYG,QAAS,SAAAnB,GAAC,OAAI,EAAKtB,YAAY,QAAzD,0BAIR,eAAC,IAAD,CAAOgD,OAAQzD,KAAKhB,MAAMD,YAAa2E,OAAQ,SAAA3B,GAAC,OAAI,EAAKhE,SAAS,CAAEgB,aAAc,EAAKC,MAAMD,YAAaE,OAAQ,QAASjC,UAAWgD,KAAKpC,MAAMZ,UAAjJ,UACI,cAAC,IAAD,CAAa0G,OAAQ,SAAA3B,GAAC,OAAI,EAAKhE,SAAS,CAAEgB,aAAc,EAAKC,MAAMD,YAAaE,OAAQ,QAAxF,oBACA,cAAC,IAAD,UACI,uBAAO8E,QAAQ,MAAf,+CAAqD/D,KAAKhB,MAAMC,OAASe,KAAKhB,MAAMC,OAAOmB,MAAQ,GAAnG,WAEJ,eAAC,IAAD,WACI,cAAC,IAAD,CAAQ2C,MAAM,UAAUG,QAAS,SAAAnB,GAAC,OAAI,EAAK9C,UAAUkF,SAAUnE,KAAKhB,MAAMhB,UAA1E,oBAAqG,IACrG,cAAC,IAAD,CAAQ+E,MAAM,YAAYG,QAAS,SAAAnB,GAAC,OAAI,EAAKhE,SAAS,CAAEgB,aAAc,EAAKC,MAAMD,YAAaE,OAAQ,QAAtG,iC,GA/WFmF,aAiYpB/B,EAAM,aACRsB,WAAY,CACRU,aAAc,IAElBP,UAAW,CACPQ,MAAO,KAEXN,WAAY,CACRM,MAAO,KAEXxG,EAAG,CACCyG,eAAgB,QAEpBvB,WAAY,CACRwB,MAAO,QACPC,UAAW,OAEfC,QAAS,CACLJ,MAAO,QAEXK,OAAQ,CACJC,UAAW,UAEfC,MAAO,CACHC,OAAQ,QACRC,UAAW,QAEf3B,KAAM,CACFkB,MAAO,MACPE,MAAO,OACPM,OAAQ,QAEZE,KAAM,CACFV,MAAO,MACPE,MAAO,OACPM,OAAQ,QAEZzB,GAAI,CACAiB,MAAO,MACPE,MAAO,OACPM,OAAQ,QAEZvB,IAAK,CACDiB,MAAO,OACPF,MAAO,QAEXhC,QAAS,CACLS,MAAO,SAEXR,OAAQ,CACJQ,MAAO,OAEXkC,KAAM,CACFC,WAAY,OAEhBxC,KAAM,CACF8B,MAAO,QACPW,YAAa,MACbb,MAAO,SAEX3B,YAAa,CACT2B,MAAO,QACPc,QAAS,gBAEbC,WAAY,CACRtC,MAAO,SAEXuC,YAAa,CACTvC,MAAO,OAEXwC,eAAgB,CACZjB,MAAO,SAEX3C,MAAO,CACH2C,MAAO,QACPQ,OAAQ,QACRU,aAAc,YA5EV,OA8EF,CACFnB,aAAc,QAIP1G,a","file":"static/js/6.bddad0b5.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextArea = ({ field, value, label, error, type, onChange, checkUserExists, rows }) => {\n  return (\n    <div className={classnames('form-group', { 'has-error': error })}>\n      <label className=\"control-label\">{label}</label>\n      <textarea\n        onChange={onChange}\n        onBlur={checkUserExists}\n        value={value}\n        type={type}\n        name={field}\n        className=\"form-control blacktext\"\n        rows={rows}\n      >\n      </textarea>\n    {error && <span className=\"help-block\">{error}</span>}\n    </div>  );\n}\nTextArea.propTypes = {\n  field: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  rows: PropTypes.string,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checkUserExists: PropTypes.func\n}\n\nTextArea.defaultProps = {\n  type: 'text',\n  rows: '3'\n}\n\nexport default TextArea;","import React, { Component } from 'react';\r\n\r\nimport {\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Row,\r\n    Table, Button, Input,\r\n    ModalHeader, ModalBody, ModalFooter, Modal,\r\n    Alert\r\n} from 'reactstrap';\r\nimport 'moment-timezone';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport TextArea from \"../Common/TextArea\";\r\nimport TextFieldGroup from \"../Common/TextFieldGroup\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport axios from 'axios'\r\nlet headers = new Headers();\r\nconst auth = localStorage.getItem('auth');\r\nheaders.append('Authorization', 'Bearer ' + auth);\r\nheaders.append('Content-Type', 'application/json');\r\nclass PackageSale extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            key: '',\r\n            activePage: 1,\r\n            page: 1,\r\n            itemsCount: 0,\r\n            limit: 20,\r\n            totalActive: 0,\r\n            modalCom: false,\r\n            viewingUser: {},\r\n            communities: [],\r\n            updated: '',\r\n            dataApi: [],\r\n            action: 'new',\r\n            Name: \"\",\r\n            Company_Id: \"\",\r\n            End_Date: new Date(),\r\n            Status: \"\",\r\n            modalDelete: false,\r\n            delete: null\r\n        };\r\n    }\r\n    async componentDidMount() {\r\n        this.getData()\r\n    }\r\n\r\n    getData = async () => {\r\n        this.setState({ isLoading: true });\r\n        const res = await axios({\r\n            baseURL: 'http://thanhvien.applamdep.com',\r\n            url: '/api/list-sale',\r\n            method: 'GET',\r\n        });\r\n\r\n        this.setState({ data: res.data.data, dataApi: res.data.data });\r\n\r\n        let active = 0\r\n\r\n        res.data.data.map(val => {\r\n            if (val.Status == \"Actived\") {\r\n                active = active + 1\r\n            }\r\n        })\r\n\r\n        this.setState({ isLoading: false, totalActive: active });\r\n    }\r\n\r\n    searchKey(key) {\r\n        this.setState({ key: key })\r\n\r\n        if (key != '') {\r\n            let d = []\r\n            this.state.dataApi.map(val => {\r\n                if (val.Name.toLocaleUpperCase().includes(key.toLocaleUpperCase()) || val.Email.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\r\n                    d.push(val)\r\n                }\r\n            })\r\n            let active = 0\r\n\r\n            d.map(val => {\r\n                if (val.Status == \"Actived\") {\r\n                    active = active + 1\r\n                }\r\n            })\r\n\r\n            this.setState({ data: d, totalActive: active })\r\n        } else {\r\n            let active = 0\r\n\r\n            this.state.dataApi.map(val => {\r\n                if (val.Status == \"Actived\") {\r\n                    active = active + 1\r\n                }\r\n            })\r\n\r\n            this.setState({ data: this.state.dataApi, totalActive: active })\r\n        }\r\n    }\r\n\r\n    toggleModal(key) {\r\n        if (key == 'new') {\r\n            this.setState({\r\n                modalCom: !this.state.modalCom,\r\n                action: key,\r\n                Name: \"\",\r\n                Company_Id: \"\",\r\n                End_Date: new Date()\r\n            })\r\n        }\r\n    }\r\n\r\n    onChange(key, val) {\r\n        this.setState({ [key]: val })\r\n    }\r\n\r\n    async addPackageSale() {\r\n        const { Name, Company_Id, End_Date, Status } = this.state\r\n\r\n        if (End_Date == null || End_Date == ''\r\n            || Name == null || Name == '') {\r\n            alert(\"Please fill in all the requirements\");\r\n            return\r\n        }\r\n\r\n        const body = {\r\n            Name: Name,\r\n            Company_Id: Company_Id,\r\n            End_Date: End_Date\r\n        }\r\n\r\n        this.setState({ isLoading: true });\r\n        const res = await axios({\r\n            baseURL: 'http://thanhvien.applamdep.com',\r\n            url: '/api/add-sale',\r\n            method: 'PUT',\r\n            data: body\r\n        });\r\n\r\n        if (res.data.is_success == true) {\r\n            this.getData();\r\n            this.toggleModal(\"new\");\r\n        } else {\r\n            alert(res.data.message);\r\n            this.setState({ isLoading: false });\r\n        }\r\n    }\r\n\r\n    openUpdate(item) {\r\n\r\n        this.setState({\r\n            modalCom: !this.state.modalCom,\r\n            action: \"update\",\r\n            Name: item.Name,\r\n            Company_Id: item.Company_Id,\r\n            End_Date: item.End_Date,\r\n            id: item['_id'],\r\n            Status: item.Status\r\n        })\r\n    }\r\n\r\n    async updatePackageSale() {\r\n        const { Name, Company_Id, End_Date, Status } = this.state\r\n\r\n        if (End_Date == null || End_Date == ''\r\n            || Name == null || Name == '') {\r\n            alert(\"Please fill in all the requirements\");\r\n            return\r\n        }\r\n\r\n        const body = {\r\n            Name: Name,\r\n            Company_Id: Company_Id,\r\n            End_Date: End_Date,\r\n            id: this.state.id,\r\n            Status: Status\r\n        }\r\n\r\n        this.setState({ isLoading: true });\r\n        const res = await axios({\r\n            baseURL: 'http://thanhvien.applamdep.com',\r\n            url: '/api/update-sale',\r\n            method: 'POST',\r\n            data: body\r\n        });\r\n\r\n        if (res.data.is_success == true) {\r\n            this.getData();\r\n            this.toggleModal(\"new\");\r\n        } else {\r\n            alert(res.data.message);\r\n            this.setState({ isLoading: false });\r\n        }\r\n    }\r\n\r\n    openDelete = (item) => {\r\n        this.setState({\r\n            modalDelete: !this.state.modalDelete,\r\n            delete: item\r\n        })\r\n    }\r\n\r\n    async delete() {\r\n        this.setState({ isLoading: true });\r\n        const res = await axios({\r\n            baseURL: 'http://thanhvien.applamdep.com',\r\n            url: '/api/delete-sale',\r\n            method: 'DELETE',\r\n            data: {\r\n                \"id\": this.state.delete['_id']\r\n            }\r\n        });\r\n\r\n        if (res.data.is_success == true) {\r\n            this.getData();\r\n            this.setState({ modalDelete: !this.state.modalDelete, delete: null })\r\n        } else {\r\n            alert(res.data.message);\r\n            this.setState({ isLoading: false });\r\n        }\r\n\r\n    }\r\n\r\n    getUsers(page = 1) {\r\n        const limit = this.state.limit;\r\n        const key = this.state.key || '';\r\n        const fetchData = {\r\n            method: 'GET',\r\n            headers: headers\r\n        };\r\n        fetch(global.BASE_URL + '/admin/users?key=' + key + '&page=' + page + '&limit=' + limit, fetchData).then(users => {\r\n            users.json().then(result => {\r\n                this.setState({\r\n                    data: result.data,\r\n                    itemsCount: result.total,\r\n                    activePage: page,\r\n                    totalActive: result.totalActive,\r\n                    updated: '',\r\n                });\r\n            })\r\n        }).catch(console.log);\r\n    }\r\n    async handlePageChange(pageNumber) {\r\n        this.getUsers(pageNumber);\r\n    }\r\n    toggle(action = '') {\r\n        this.setState({\r\n            modal: !this.state.modal,\r\n            image: '',\r\n            url: '',\r\n            isActive: false,\r\n            isLoading: false,\r\n            errors: {},\r\n            action,\r\n            position: 1,\r\n            data: [],\r\n            updated: '',\r\n        });\r\n    }\r\n    inputChange(e) {\r\n        this.setState({ [e.target.name]: e.target.value });\r\n    }\r\n    goSearch() {\r\n        this.getUsers();\r\n    }\r\n    toggleChannel() {\r\n\r\n    }\r\n    execUpdateCommunity(user) {\r\n\r\n    }\r\n    setUserCommunityAdmin(address, communityId, admin = true) {\r\n    }\r\n    render() {\r\n        const { data, key, viewingUser, communities, action, End_Date } = this.state;\r\n        if (!this.state.isLoading) {\r\n            return (\r\n                <div className=\"animated fadeIn\">\r\n                    <Row>\r\n                        <Col>\r\n                            <p style={styles.success}>{this.state.updated}</p>\r\n                            <p style={styles.danger}>{this.state.deleted}</p>\r\n                            <Card>\r\n                                <CardHeader>\r\n                                    <i className=\"fa fa-align-justify\"></i> USERS (Total: {this.state.data.length}, Active: {this.state.totalActive})\r\n                                    <div style={styles.tags}>\r\n                                        <div>\r\n                                            <Input style={styles.searchInput} onChange={(e) => this.searchKey(e.target.value)} name=\"key\" value={key} placeholder=\"Search\" />\r\n                                            <Button outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={e => this.toggleModal(\"new\")}>Add</Button>\r\n                                        </div>\r\n                                    </div>\r\n                                </CardHeader>\r\n                                <CardBody>\r\n                                    <Table responsive>\r\n                                        <thead>\r\n                                            <tr>\r\n                                                <th style={styles.wh16}>No.</th>\r\n                                                <th style={styles.wh16}>Name</th>\r\n                                                <th style={styles.wh16}>Company ID</th>\r\n                                                <th style={styles.wh16}>End Date</th>\r\n                                                <th style={styles.wh16}>Status</th>\r\n                                                <th style={styles.w5}>Action</th>\r\n                                            </tr>\r\n                                        </thead>\r\n                                        <tbody>\r\n                                            {\r\n                                                data.map((item, i) => {\r\n                                                    return (\r\n                                                        <tr key={i} style={styles.row}>\r\n                                                            <td style={styles.wh16}>{i + 1}</td>\r\n                                                            <td style={styles.wh16}>{item.Name}</td>\r\n                                                            <td style={styles.wh16}>{item.Company_Id}</td>\r\n                                                            <td style={styles.wh16}>{item.End_Date}</td>\r\n                                                            <td style={styles.wh16}>{item.Status}</td>\r\n                                                            <td style={styles.w5}>\r\n                                                                <Button outline color=\"primary\" size=\"sm\" onClick={(e) => this.openUpdate(item)} >Update</Button>{' '}\r\n                                                                <Button outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>Delete</Button>\r\n                                                            </td>\r\n                                                        </tr>\r\n                                                    );\r\n                                                })\r\n                                            }\r\n                                        </tbody>\r\n                                    </Table>\r\n                                </CardBody>\r\n                            </Card>\r\n                            {/* <Pagination\r\n                                activePage={this.state.activePage}\r\n                                itemsCountPerPage={this.state.limit}\r\n                                totalItemsCount={this.state.itemsCount}\r\n                                pageRangeDisplayed={10} // so luong item hien thi tren pagination number\r\n                                onChange={e => this.handlePageChange(e)}\r\n                                itemClass=\"page-item\"\r\n                                linkClass=\"page-link\"\r\n                            /> */}\r\n                        </Col>\r\n                    </Row>\r\n\r\n                    <Modal isOpen={this.state.modalCom} toggle={e => this.toggleModal('new')} className={this.props.className}>\r\n                        <ModalHeader toggle={e => this.toggleModal('new')}>{this.state.action == 'new' ? `Create` : `Update`}</ModalHeader>\r\n                        <ModalBody>\r\n                            <TextFieldGroup\r\n                                field=\"Name\"\r\n                                label=\"Name\"\r\n                                value={this.state.Name}\r\n                                // error={errors.title}\r\n                                onChange={e => this.onChange(\"Name\", e.target.value)}\r\n                            // rows=\"5\"\r\n                            />\r\n                            <div style={styles.datePicker}>\r\n                                <label>End Date:  </label>\r\n                                <DatePicker selected={new Date(End_Date)} onChange={(date) => this.setState({ End_Date: date })} />\r\n                            </div>\r\n                            {\r\n                                action == 'new' ? \"\" : <div>\r\n                                    <label style={styles.flexLabel} htmlFor=\"tag\">Status    </label>\r\n                                    <select style={styles.flexOption} name=\"Status\" onChange={e => this.onChange(\"Status\", e.target.value)}>\r\n                                        <option value={this.state.Status}>{this.state.Status == '' ? ` - - - - - - - - - - ` : this.state.Status}</option>\r\n                                        <option value={'Actived'}>Actived</option>\r\n                                        <option value={'Locked'}>Locked</option>\r\n                                        <option value={'Deactived'}>Deactived</option>\r\n                                    </select>\r\n                                </div>\r\n                            }\r\n\r\n                            <div>\r\n                                <label style={styles.flexLabel} htmlFor=\"tag\">Company:    </label>\r\n                                <select style={styles.flexOption} name=\"Company_Id\" onChange={e => this.onChange(\"Company_Id\", e.target.value)}>\r\n                                    <option value={this.state.Company_Id}>{this.state.Company_Id == '' ? ` - - - - - - - - - - ` : this.state.Company_Id}</option>\r\n                                </select>\r\n                            </div>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={e => { this.state.action === 'new' ? this.addPackageSale() : this.updatePackageSale() }} disabled={this.state.isLoading}>Save</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n\r\n                    <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\r\n                        <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Delete`}</ModalHeader>\r\n                        <ModalBody>\r\n                            <label htmlFor=\"tag\">{`Do you want to delete user \"${this.state.delete ? this.state.delete.Email : ''}\" ?`}</label>\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Delete</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                </div>\r\n            );\r\n        }\r\n        return (\r\n            <div id=\"page-loading\">\r\n                <div className=\"three-balls\">\r\n                    <div className=\"ball ball1\"></div>\r\n                    <div className=\"ball ball2\"></div>\r\n                    <div className=\"ball ball3\"></div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst styles = {\r\n    datePicker: {\r\n        marginBottom: 20\r\n    },\r\n    flexLabel: {\r\n        width: 100\r\n    },\r\n    flexOption: {\r\n        width: 300\r\n    },\r\n    a: {\r\n        textDecoration: 'none'\r\n    },\r\n    floatRight: {\r\n        float: \"right\",\r\n        marginTop: '3px'\r\n    },\r\n    spinner: {\r\n        width: \"30px\"\r\n    },\r\n    center: {\r\n        textAlign: \"center\"\r\n    },\r\n    tbody: {\r\n        height: \"380px\",\r\n        overflowY: \"auto\"\r\n    },\r\n    wh16: {\r\n        width: \"17%\",\r\n        float: \"left\",\r\n        height: \"80px\"\r\n    },\r\n    wh15: {\r\n        width: \"20%\",\r\n        float: \"left\",\r\n        height: \"80px\"\r\n    },\r\n    w5: {\r\n        width: \"10%\",\r\n        float: \"left\",\r\n        height: \"80px\"\r\n    },\r\n    row: {\r\n        float: \"left\",\r\n        width: \"100%\"\r\n    },\r\n    success: {\r\n        color: 'green'\r\n    },\r\n    danger: {\r\n        color: 'red'\r\n    },\r\n    mgl5: {\r\n        marginLeft: '5px'\r\n    },\r\n    tags: {\r\n        float: \"right\",\r\n        marginRight: \"5px\",\r\n        width: \"250px\"\r\n    },\r\n    searchInput: {\r\n        width: \"190px\",\r\n        display: 'inline-block',\r\n    },\r\n    userActive: {\r\n        color: 'green'\r\n    },\r\n    userPending: {\r\n        color: 'red'\r\n    },\r\n    nagemonNameCol: {\r\n        width: '328px'\r\n    },\r\n    image: {\r\n        width: '100px',\r\n        height: '100px',\r\n        borderRadius: '99999px'\r\n    },\r\n    mgl5: {\r\n        marginBottom: '5px'\r\n    }\r\n}\r\n\r\nexport default PackageSale;\r\n"],"sourceRoot":""}