{"version":3,"sources":["views/base/tables/MakeUp/SubTypeHair.js","functions/callAPI.js"],"names":["headers","Headers","auth","localStorage","getItem","append","SubTypeHair","props","getData","a","setState","isLoading","API_CONNECT","Constants","LIST_TYPE","res_product","LIST_COLOR_SELECT","isADMIN","company_id","res_color","val","data","pagination","dataApi","arrColor","arrColorChoose","getData_Company","LIST_TYPE_COMPANY","JSON","parse","state","user","openDelete","item","modalDelete","id","_id","key","keyColor","modalCom","updated","hidden","action","vi","image","hover","sub_type","color_id","isNull","delete","arrPagination","arrShowColor","indexPage","token","Authorization","type","collapse","this","arr","i","length","url","window","location","hash","isHidden","href","j","temparray","arrTotal","slice","push","d","map","name","toLocaleUpperCase","includes","active","Status","totalActive","e","name_action","target","value","searchKey","hex","searchColor","LIST_COLOR","LIST_COLOR_COMPANY","alert","body","axios","baseURL","BASE_URL","ADD_TYPE","method","status","arrTemp","undefined","UPDATE_TYPE","DELETE_TYPE","files","reader","FileReader","readAsDataURL","onload","result","dataColor","split","lodash","remove","show","style","backgroundColor","width","onChange","actionSearchColor","placeholder","height","overflowY","onClick","onChooseColor","xs","sm","lg","color","className","margin","border","onRemoveColor","marginTop","cursor","marginLeft","float","fontSize","outline","padding","fontWeight","css","override","size","loading","speedMultiplier","styles","tags","searchInput","actionSearch","resetSearch","floatRight","toggleModal","ble","colSpan","src","mgl5","openUpdate","count","v","isOpen","field","label","onChangeImage","marginBottom","renderSelect","renderSelectUpdate","addRoles","updateUser","disabled","toggle","htmlFor","Component","marginRight","flexLabel","flexOption","textDecoration","spinner","center","textAlign","tbody","wh25","w5","wa10","row","success","danger","display","userActive","userPending","nagemonNameCol","borderRadius","require","default","defaults","constants","connect","options","get","is_success","post","put","del"],"mappings":"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","file":"static/js/52.fafd6ec8.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport CIcon from '@coreui/icons-react'\nimport lodash from 'lodash';\n\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n  Input,\n  Button\n} from 'reactstrap';\n\nimport {\n  CButton,\n  CLabel,\n  CSelect,\n  CRow,\n  CCol,\n  CListGroup,\n  CListGroupItem,\n  CCollapse,\n} from '@coreui/react'\n\nimport Pagination from '@material-ui/lab/Pagination';\nimport 'moment-timezone';\nimport Constants from \"../../../../contants/contants\";\nimport TextFieldGroup from \"../../../Common/TextFieldGroup\";\nimport axios from 'axios'\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport API_CONNECT from \"../../../../functions/callAPI\";\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\n\nclass SubTypeHair extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      keyColor: '',\n      modalCom: false,\n      updated: '',\n      dataApi: [],\n      hidden: false,\n      action: 'new',\n      vi: '',\n      image: '',\n      hover: '',\n      sub_type: '',\n      color_id: [],\n      isNull: false,\n      modalDelete: false,\n      delete: null,\n      arrPagination: [],\n      arrColor: [],\n      arrColorChoose: [],\n      arrShowColor: [],\n      indexPage: 0,\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      type: localStorage.getItem('type'),\n      user: localStorage.getItem('user'),\n      isLoading: false,\n      collapse: false\n    };\n  }\n  async componentDidMount() {\n    const { type } = this.state;\n    if (type == '0' || type == '1') {\n      this.getData()\n    } else {\n      this.getData_Company()\n    }\n\n\n\n    let arr = JSON.parse(localStorage.getItem('url'));\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].url == window.location.hash) {\n        if (arr[i].isHidden == true) {\n          window.location.href = '#/'\n        }\n      }\n    }\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden: false\n      })\n    } else {\n      this.setState({\n        hidden: true\n      })\n    }\n\n    this.setState({ arrPagination: arrTotal, data: arrTotal[0] });\n  }\n\n  getData = async () => {\n    this.setState({ isLoading: true });\n\n    const res_product = await API_CONNECT(\n      Constants.LIST_TYPE + \"/1\", {}, \"\", \"GET\")\n\n    const res_color = await API_CONNECT(\n      Constants.LIST_COLOR_SELECT, { isADMIN: true, company_id: null }, \"\", \"POST\")\n\n    let val = res_product.data;\n\n    this.pagination(val);\n    this.setState({ dataApi: val, isLoading: false, arrColor: res_color.data, arrColorChoose: res_color.data });\n\n  }\n\n  getData_Company = async () => {\n    this.setState({ isLoading: true });\n    const res_product = await API_CONNECT(\n      Constants.LIST_TYPE_COMPANY + JSON.parse(this.state.user).company_id + \"/1\", {}, \"\", \"GET\")\n\n    const res_color = await API_CONNECT(\n      Constants.LIST_COLOR_SELECT, {\n      isADMIN: true, company_id: JSON.parse(this.state.user).company_id\n    }, \"\", \"POST\")\n\n    let val = res_product.data;\n    this.pagination(val);\n    this.setState({ dataApi: val, isLoading: false, arrColor: res_color.data, arrColorChoose: res_color.data });\n  }\n\n  searchKey() {\n    const { indexPage, key } = this.state;\n    // this.setState({ key: key })\n\n    if (key != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if (val.name.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n          val.vi.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n      let active = 0\n\n      d.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: d, totalActive: active })\n    } else {\n      let active = 0\n\n      this.state.dataApi.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: this.state.arrPagination[indexPage], totalActive: active })\n    }\n  }\n\n  actionSearch(e, name_action) {\n    this.setState({\n      [name_action]: e.target.value\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  resetSearch() {\n    this.setState({\n      key: ''\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  searchColor() {\n    const { keyColor, arrColorChoose, arrColor } = this.state;\n\n    if (keyColor != '') {\n      let d = []\n      arrColorChoose.map(val => {\n        if (val.hex.toLocaleUpperCase().includes(keyColor.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n\n      this.setState({ arrColorChoose: d })\n    } else {\n      this.setState({ arrColorChoose: arrColor })\n    }\n  }\n\n  actionSearchColor(e, name_action) {\n    this.setState({\n      [name_action]: e.target.value\n    }, () => {\n      this.searchColor();\n    });\n  }\n\n  async toggleModal(key) {\n    const { type } = this.state;\n\n    if (type == '0' || type == '1') {\n      var res_color = await API_CONNECT(\n        Constants.LIST_COLOR, {}, \"\", \"GET\")\n    } else {\n      var res_color = await API_CONNECT(\n        Constants.LIST_COLOR_COMPANY + JSON.parse(this.state.user).company_id, {}, \"\", \"GET\")\n    }\n\n    if (key == 'new') {\n      this.setState({\n        modalCom: !this.state.modalCom,\n        action: key,\n        vi: \"\",\n        image: \"\",\n        hover: '',\n        arrColorChoose: res_color.data,\n        arrShowColor: [],\n        collapse: false\n      })\n    }\n  }\n\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n\n  async addRoles() {\n    const { vi, image, hover, sub_type, color_id } = this.state\n    if (vi == null || vi == '' ||\n      image == null || image == '') {\n      alert(\"Vui lòng nhập đầy đủ trường dữ liệu !!!\");\n      return\n    }\n\n    const body = {\n      vi: vi,\n      image: image,\n      company_id: this.state.type == '0' || this.state.type == '1' ? \"\" : JSON.parse(this.state.user).company_id,\n      hover: hover,\n      sub_type: \"1\",\n      color_id: color_id\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.ADD_TYPE,\n      method: 'POST',\n      data: body\n    });\n\n    if (res.status == 200) {\n      if (this.state.type == '0' || this.state.type == '1') {\n        this.getData()\n      } else {\n        this.getData_Company()\n      };\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(\"Thêm sản phẩm thất bại\");\n      this.setState({ isLoading: false });\n    }\n  }\n\n  async openUpdate(item) {\n    const { type } = this.state;\n    if (type == '0' || type == '1') {\n      var res_color = await API_CONNECT(\n        Constants.LIST_COLOR, {}, \"\", \"GET\")\n    } else {\n      var res_color = await API_CONNECT(\n        Constants.LIST_COLOR_COMPANY + JSON.parse(this.state.user).company_id, {}, \"\", \"GET\")\n    }\n\n    let arrTemp = [];\n    for (let i = 0; i < item.color_id.length; i++) {\n      arrTemp.push(item.color_id[i])\n    }\n\n    this.setState({\n      modalCom: !this.state.modalCom,\n      action: \"update\",\n      vi: item.vi || item.name,\n      image: item.image,\n      isNull: item.isNull,\n      id: item['_id'],\n      hover: item.hover,\n      sub_type: item.sub_type,\n      color_id: item.color_id == undefined ? [] : item.color_id,\n      arrColorChoose: res_color.data,\n      arrShowColor: arrTemp,\n      collapse: false\n    })\n  }\n\n  async updateUser() {\n    const { image, vi, isNull, hover, sub_type, arrShowColor } = this.state\n    if (vi == null || vi == '' ||\n      image == null || image == '') {\n      alert(\"Vui lòng nhập đầy đủ trường dữ liệu !!!\");\n      return\n    }\n\n\n\n    const body = {\n      vi: vi,\n      image: image,\n      id: this.state.id,\n      status: isNull,\n      hover: hover,\n      sub_type: sub_type,\n      color_id: arrShowColor\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.UPDATE_TYPE,\n      method: 'POST',\n      data: body\n    });\n\n    if (res.status == 200) {\n      if (this.state.type == '0' || this.state.type == '1') {\n        this.getData()\n      } else {\n        this.getData_Company()\n      };\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(\"Cập nhật thất bại\");\n      this.setState({ isLoading: false });\n    }\n  }\n\n  openDelete = (item) => {\n    this.setState({\n      modalDelete: !this.state.modalDelete,\n      id: item._id\n    })\n  }\n\n  async delete() {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.DELETE_TYPE,\n      method: 'POST',\n      data: {\n        \"id\": this.state.id\n      }\n    });\n\n    if (res.status == 200) {\n      if (this.state.type == '0' || this.state.type == '1') {\n        this.getData()\n      } else {\n        this.getData_Company()\n      };\n      this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n    } else {\n      alert(\"Xóa sản phẩm thất bại\");\n      this.setState({ isLoading: false });\n    }\n\n  }\n\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  getBadge(status) {\n    switch (status) {\n      case 'Actived': return 'success'\n      case 'Inactive': return 'secondary'\n      case 'Locked': return 'warning'\n      case 'Deactived': return 'danger'\n      default: return 'primary'\n    }\n  }\n\n  onChangeImage(e) {\n    let files = e.target.files;\n    let reader = new FileReader();\n    reader.readAsDataURL(files[0])\n    reader.onload = (e) => {\n      this.setState({ image: e.target.result })\n    }\n  }\n\n  onChooseColor(data) {\n    const { arrShowColor, arrColorChoose } = this.state;\n    const dataColor = data.split('/')\n    arrShowColor.push({ _id: dataColor[0], hex: dataColor[1] })\n    lodash.remove(arrColorChoose, {\n      hex: dataColor[1]\n    });\n\n    this.setState({ arrShowColor: arrShowColor, arrColorChoose: arrColorChoose })\n  }\n\n  onRemoveColor(data) {\n    const { arrShowColor, arrColorChoose } = this.state;\n\n    const dataColor = data.split('/')\n    arrColorChoose.push({ _id: dataColor[0], hex: dataColor[1] })\n\n    lodash.remove(arrShowColor, {\n      hex: dataColor[1]\n    });\n\n    this.setState({ arrShowColor: arrShowColor, arrColorChoose: arrColorChoose })\n  }\n\n  renderSelect() {\n    const { arrColorChoose, arrShowColor, collapse, keyColor } = this.state;\n\n    return (\n      <div>\n        <CCollapse show={collapse}>\n          <CListGroup>\n            <CListGroupItem style={{ backgroundColor: \"#000000\" }}>\n              <Input style={{ width: '100%' }} onChange={(e) => {\n                this.actionSearchColor(e, \"keyColor\");\n              }} name=\"keyColor\" value={keyColor} placeholder=\"Từ khóa\" />\n            </CListGroupItem>\n            <div style={{ height: '200px', overflowY: 'scroll' }}>\n              {\n                arrColorChoose.map((item, i) => {\n                  return (\n                    <CListGroupItem key={i} onClick={() => { this.onChooseColor(item._id + \"/\" + item.hex) }}>\n                      <CRow>\n                        <CCol xs=\"2\" sm=\"2\" lg=\"2\">{item.hex}</CCol>\n                        <CCol xs=\"10\" sm=\"10\" lg=\"10\"><div style={{ backgroundColor: item.hex, width: '100%', height: 20 }}></div></CCol>\n                      </CRow>\n                    </CListGroupItem>\n                  );\n                })\n              }\n            </div>\n          </CListGroup>\n        </CCollapse>\n\n        <CButton\n          color=\"primary\"\n          style={{ width: '100%' }}\n          onClick={() => { this.setState({ collapse: !collapse }) }}\n          className={'mb-1'}\n        >{\n            !collapse ? \"Chọn màu\" : \"Đóng\"\n          }</CButton>\n\n        <div style={{ height: '100px', overflowY: 'scroll' }}>\n          <CRow>\n            {\n              arrShowColor.map((item, i) => {\n                return (\n                  <CCol xs=\"2\" sm=\"2\" lg=\"2\" key={i}>\n\n                    {item.hex}\n                    <div style={{ backgroundColor: item.hex, width: '100%', height: '20px', margin: 1, border: \"1px solid black\" }}>\n                      <div onClick={() => { this.onRemoveColor(item._id + \"/\" + item.hex) }} style={{ marginTop: 3, cursor: 'pointer', marginLeft: 5, width: 15, height: 15, color: '#ffffff', float: 'right', fontSize: 10 }}>X</div>\n                    </div>\n\n                  </CCol>\n                );\n              })\n            }\n          </CRow>\n        </div>\n      </div>\n    )\n  }\n\n  renderSelectUpdate() {\n    const { arrColorChoose, arrShowColor, collapse, keyColor } = this.state;\n\n    for (let i = 0; i < arrShowColor.length; i++) {\n      lodash.remove(arrColorChoose, {\n        hex: arrShowColor[i].hex\n      });\n    }\n\n    return (\n      <div>\n        <CCollapse show={collapse}>\n          <CListGroup>\n            <CListGroupItem style={{ backgroundColor: \"#000000\" }}>\n              <Input style={{ width: '100%' }} onChange={(e) => {\n                this.actionSearchColor(e, \"keyColor\");\n              }} name=\"keyColor\" value={keyColor} placeholder=\"Tìm kiếm\" />\n            </CListGroupItem>\n            <div style={{ height: '200px', overflowY: 'scroll' }}>\n              {\n                arrColorChoose.map((item, i) => {\n                  return (\n                    <CListGroupItem style={{ cursor: 'pointer' }} key={i} onClick={() => { this.onChooseColor(item._id + \"/\" + item.hex) }}>\n                      <CRow>\n                        <CCol lg=\"2\">{item.hex}</CCol>\n                        <CCol lg=\"10\"><div style={{ backgroundColor: item.hex, width: '100%', height: 20 }}></div></CCol>\n                      </CRow>\n                    </CListGroupItem>\n                  );\n                })\n              }\n            </div>\n          </CListGroup>\n        </CCollapse>\n\n        <CButton\n          outline\n          color=\"primary\"\n          style={{ width: '100%' }}\n          onClick={() => { this.setState({ collapse: !collapse }) }}\n          className={'mb-2'}\n        >{\n            !collapse ? \"Nhấn để chọn màu\" : \"Đóng\"\n          }</CButton>\n\n        <div style={{ height: '200px', overflowY: 'scroll', border: '1px solid black', padding: 10 }}>\n          <CLabel style={{ fontWeight: 'bolder' }}>Danh sách màu đã chọn</CLabel>\n          <CRow>\n            {\n              arrShowColor.map((item, i) => {\n                return (\n                  <CCol xs=\"3\" sm=\"3\" lg=\"3\" key={i}>\n\n                    {item.hex}\n                    <div style={{ backgroundColor: item.hex, width: '100%', height: '20px', margin: 1, border: \"1px solid black\" }}>\n                      <div onClick={() => { this.onRemoveColor(item._id + \"/\" + item.hex) }} style={{ marginTop: 3, cursor: 'pointer', marginLeft: 5, width: 15, height: 15, color: '#ffffff', float: 'right', fontSize: 10 }}>X</div>\n                    </div>\n\n                  </CCol>\n                );\n              })\n            }\n          </CRow>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { data, arrPagination, key } = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Danh mục\n                  <div style={styles.tags}>\n                    <CRow>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CRow>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <div>\n                              <Input style={styles.searchInput} onChange={(e) => {\n                                this.actionSearch(e, \"key\");\n                              }} name=\"key\" value={key} placeholder=\"Từ khóa\" />\n                            </div>\n                          </CCol>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <CButton color=\"primary\" style={{ width: '100%', marginTop: 5 }} size=\"sm\" onClick={e => { this.resetSearch() }}>Làm mới tìm kiếm</CButton>\n                          </CCol>\n                        </CRow>\n                      </CCol>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CButton outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={e => this.toggleModal(\"new\")}>Thêm mới</CButton>\n                      </CCol>\n                    </CRow>\n                  </div>\n                </CardHeader>\n                <CardBody>\n\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        <th className=\"text-center\">Tên</th>\n                        <th className=\"text-center\">Hình ảnh</th>\n                        <th className=\"text-center\">Vi</th>\n                        <th className=\"text-center\">Màu</th>\n                        <th className=\"text-center\">#</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <td colSpan=\"10\" hidden={this.state.hidden} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                <td className=\"text-center\">{item.name}</td>\n                                <td className=\"text-center\">\n                                  <img src={item.image} style={{ width: '50px', height: '50px' }} />\n                                </td>\n                                <td className=\"text-center\">{item.vi}</td>\n                                <td className=\"text-center\" style={{ width: 200 }}>\n                                  {\n                                    item.color_id.length\n                                  }\n                                </td>\n                                <td className=\"text-center\">\n                                  <CButton style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >\n                                    <CIcon name=\"cilPencil\" />\n                                  </CButton>{' '}\n                                  <CButton outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>\n                                    <CIcon name=\"cilTrash\" />\n                                  </CButton>\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n                </CardBody>\n              </Card>\n              <div style={{ float: 'right' }}>\n                <Pagination count={arrPagination.length} color=\"primary\" onChange={(e, v) => {\n                  this.setState({ data: arrPagination[v - 1], indexPage: v - 1 })\n                }} />\n              </div>\n            </Col>\n          </Row>\n\n          <Modal size=\"lg\" isOpen={this.state.modalCom} className={this.props.className}>\n            <ModalHeader>{this.state.action == 'new' ? `Tạo mới` : `Cập nhật`}</ModalHeader>\n            <ModalBody>\n              <TextFieldGroup\n                field=\"vi\"\n                label=\"Tên\"\n                value={this.state.vi}\n                placeholder={\"Tên\"}\n                onChange={e => this.onChange(\"vi\", e.target.value)}\n              />\n\n              <TextFieldGroup\n                field=\"image\"\n                label=\"Ảnh thương hiệu\"\n                type={\"file\"}\n                onChange={e => { this.onChangeImage(e) }}\n                onClick={(e) => { e.target.value = null }}\n              />\n              {\n                this.state.image == \"\" ? \"\" :\n                  <img width=\"100\" height=\"150\" src={this.state.image} style={{ marginBottom: 20 }} />\n              }\n\n              {/* <TextFieldGroup\n                field=\"hover\"\n                label=\"Hover\"\n                value={this.state.hover}\n                placeholder={\"Hover\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"hover\", e.target.value)}\n              // rows=\"5\"\n              /> */}\n\n              {/* <div>\n                <CLabel>Loại danh mục</CLabel>\n                <div style={{ width: \"100%\" }}>\n                  <CSelect onChange={async e => { this.setState({ sub_type: e.target.value }) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                    <option>-----</option>\n                    {\n                      [\"0\", \"1\"].map((item, i) => {\n                        if (item == this.state.sub_type) {\n                          return (\n                            <option selected key={i} value={item}>{item == \"0\" ? \"Make Up\" : \"Tóc\"}</option>\n                          );\n                        } else {\n                          return (\n                            <option key={i} value={item}>{item == \"0\" ? \"Make Up\" : \"Tóc\"}</option>\n                          );\n                        }\n                      })\n                    }\n                  </CSelect>\n                </div>\n              </div> */}\n\n              <div>\n                <CLabel>Chọn màu</CLabel>\n                <div style={{ width: \"100%\" }}>\n                  {\n                    this.state.action == 'new' ? this.renderSelect() : this.renderSelectUpdate()\n                  }\n                </div>\n              </div>\n              {/* {\n                this.state.action == 'new' ? \"\" :\n                  <div>\n                    <CLabel>Ẩn danh mục ?</CLabel>\n                    <div style={{ width: \"100%\" }}>\n                      <CSelect onChange={async e => { this.setState({ brand_id: e.target.value }) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                        {\n                          [true, false].map((item, i) => {\n                            if (item == this.state.isNull) {\n                              return (\n                                <option selected key={i} value={item}>{String(item)}</option>\n                              );\n                            } else {\n                              return (\n                                <option key={i} value={item}>{String(item)}</option>\n                              );\n                            }\n                          })\n                        }\n                      </CSelect>\n                    </div>\n                  </div>\n\n              } */}\n\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => {\n                this.state.action === 'new' ? this.addRoles() : this.updateUser()\n              }} disabled={this.state.isLoading}>Lưu</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Xoá`}</ModalHeader>\n            <ModalBody>\n              <label htmlFor=\"tag\">{`Xác nhận xóa !!!`}</label>\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Delete</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n        </div>\n      );\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst styles = {\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: 300\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: \"right\",\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh25: {\n    width: \"25%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  w5: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    marginLeft: '5px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\"\n  },\n  searchInput: {\n    width: \"190px\",\n    display: 'inline-block',\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n}\n\nexport default SubTypeHair;\n","import constants from './../contants/contants'\n\nconst axios = require('axios').default;\naxios.defaults.baseURL = constants.BASE_URL;\n\nconst connect = async function (url = \"\", data = {}, token = \"\", type) {\n  let options = {};\n  // console.log(\"Token: \", token)\n  if (token) {\n    options = {\n      headers: token\n    };\n  }\n  try {\n    switch (type) {\n      case \"GET\":\n        let get = await axios.get(url, data, options);\n        if (get.is_success == false) {\n          return null;\n        }\n        return get.data;\n      case \"POST\":\n        let post = await axios.post(url, data, options);\n        if (post.is_success == false) {\n          return null;\n        }\n        return post.data;\n      case \"PUT\":\n        let put = await axios.put(url, data, options);\n        if (put.is_success == false) {\n          return null;\n        }\n        return put.data;\n      case \"DELETE\":\n        let del = await axios.delete(url, data, options);\n        if (del.is_success == false) {\n          return null;\n        }\n        return del.data;\n    }\n\n  } catch (reason) {\n    return reason;\n  }\n\n\n}\n\nexport default connect;\n"],"sourceRoot":""}