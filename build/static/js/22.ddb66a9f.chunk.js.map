{"version":3,"sources":["views/charts/MainChartExample.js","views/DashBoard/ShopManager.js","views/DashBoard/Dashboard.js","contants/contants.js"],"names":["getStyle","headers","Headers","auth","localStorage","getItem","append","ShopManager","props","state","month","dataUserSale","arrPagination","indexPage","dataStatistical","arrPaginationStatistical","indexPageStatistical","company_id","dataApi","arrTemp","hidden","hidden_all","a","this","getCustomer","arr","phone","filter","data","Phone","length","i","j","temparray","arrTotal","slice","push","setState","arrTotal_Statistical","id","JSON","parse","axios","baseURL","Constants","BASE_URL","url","LIST_CUSTOMER","method","res","arrCount_User_Company","some","item","count","countType","CALCULATOR_ALL_USER_OF_COMPANY","resCal_Compay","coefficient","calculator","pagination","bodyUser","LIST_CUSTOMER_BY_MONTH","arrCount_User","GET_COEFFICIENT","resCal","pagination_statistical","row","md","htmlFor","xs","className","colSpan","undefined","map","Name","Email","Gender","Date","Create_Date","toLocaleDateString","toLocaleTimeString","style","float","marginRight","padding","width","Button","color","onClick","e","onChange","getCustomerByMonth","target","value","custom","size","name","Component","Dashboard"],"mappings":"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","file":"static/js/22.ddb66a9f.chunk.js","sourcesContent":["import React from 'react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\n\nconst brandSuccess = getStyle('success') || '#4dbd74'\nconst brandInfo = getStyle('info') || '#20a8d8'\nconst brandDanger = getStyle('danger') || '#f86c6b'\n\nconst MainChartExample = attributes => {\n  const random = (min, max)=>{\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n\n  const defaultDatasets = (()=>{\n    let elements = 27\n    const data1 = []\n    const data2 = []\n    const data3 = []\n    for (let i = 0; i <= elements; i++) {\n      data1.push(random(50, 200))\n      data2.push(random(80, 100))\n      data3.push(65)\n    }\n    return [\n      {\n        label: 'My First dataset',\n        backgroundColor: hexToRgba(brandInfo, 10),\n        borderColor: brandInfo,\n        pointHoverBackgroundColor: brandInfo,\n        borderWidth: 2,\n        data: data1\n      },\n      {\n        label: 'My Second dataset',\n        backgroundColor: 'transparent',\n        borderColor: brandSuccess,\n        pointHoverBackgroundColor: brandSuccess,\n        borderWidth: 2,\n        data: data2\n      },\n      {\n        label: 'My Third dataset',\n        backgroundColor: 'transparent',\n        borderColor: brandDanger,\n        pointHoverBackgroundColor: brandDanger,\n        borderWidth: 1,\n        borderDash: [8, 5],\n        data: data3\n      }\n    ]\n  })()\n\n  const defaultOptions = (()=>{\n    return {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawOnChartArea: false\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              maxTicksLimit: 5,\n              stepSize: Math.ceil(250 / 5),\n              max: 250\n            },\n            gridLines: {\n              display: true\n            }\n          }]\n        },\n        elements: {\n          point: {\n            radius: 0,\n            hitRadius: 10,\n            hoverRadius: 4,\n            hoverBorderWidth: 3\n          }\n        }\n      }\n    }\n  )()\n\n  // render\n  return (\n    <CChartLine\n      {...attributes}\n      datasets={defaultDatasets}\n      options={defaultOptions}\n      labels={['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su']}\n    />\n  )\n}\n\n\nexport default MainChartExample\n","import React, { lazy, Component } from 'react'\nimport {\n  CBadge,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CCallout,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CSelect\n} from '@coreui/react'\n\n\nimport {\n  Button\n} from 'reactstrap';\nimport CIcon from '@coreui/icons-react'\nimport axios from 'axios'\nimport Constants from \"./../../contants/contants\";\nimport MainChartExample from '../charts/MainChartExample.js'\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\nclass ShopManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      month: 0,\n      dataUserSale: [],\n      arrPagination: [],\n      indexPage: 0,\n      dataStatistical: [],\n      arrPaginationStatistical: [],\n      indexPageStatistical: 0,\n      company_id: localStorage.getItem('user'),\n      dataApi: [],\n      arrTemp: [],\n      hidden: true,\n      hidden_all: true,\n    };\n  }\n\n  async componentDidMount() {\n    await this.getCustomer();\n  }\n\n  countType(arr, phone) {\n    const count = arr.filter(data => data.Phone == phone);\n    return count.length;\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n    this.setState({ arrPagination: arrTotal, dataUserSale: arrTotal[this.state.indexPage] });\n  }\n\n  pagination_statistical(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal_Statistical = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal_Statistical.push(temparray);\n    }\n    this.setState({ arrPaginationStatistical: arrTotal_Statistical, dataStatistical: arrTotal_Statistical[this.state.indexPageStatistical] });\n  }\n\n  async getCustomer() {\n\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_CUSTOMER,\n      method: 'POST',\n      data: {\n        \"condition\": {\n          \"Company_Id\": id.company_id\n        }\n      }\n    });\n\n    this.setState({ dataApi: res.data.data });\n\n\n    //STATISTICAL\n    let arrCount_User_Company = [];\n    for (let i = 0; i < res.data.data.length; i++) {\n      //check if exits in arr\n      if (!arrCount_User_Company.some(item => res.data.data[i].Phone == item.Phone)) {\n        res.data.data[i].count = this.countType(res.data.data, res.data.data[i].Phone);\n        const resCal_Compay = await axios({\n          baseURL: Constants.BASE_URL,\n          url: Constants.CALCULATOR_ALL_USER_OF_COMPANY,\n          method: 'POST',\n          data: {\n            \"company_id\": id.company_id,\n            \"phone\": res.data.data[i].Phone\n          }\n        });\n        res.data.data[i].coefficient = resCal_Compay.data.data.calculator;\n        arrCount_User_Company.push(res.data.data[i])\n      }\n    }\n    if (arrCount_User_Company.length == 0) {\n      this.setState({ hidden: false })\n    } else {\n      this.setState({ hidden: true })\n    }\n    this.pagination(arrCount_User_Company);\n\n  }\n\n  async getCustomerByMonth(month) {\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n    var bodyUser = {\n      company_id: id.company_id,\n      month: month\n    }\n\n    if (month == 0) {\n      await this.getCustomer();\n    } else {\n      const res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_CUSTOMER_BY_MONTH,\n        method: 'POST',\n        data: bodyUser\n      });\n\n      if (res.data.data.length == 0) {\n        this.setState({ hidden: false })\n      } else {\n        this.setState({ hidden: true })\n      }\n      this.setState({ dataApi: res.data.data, arrTemp: res.data.data });\n\n      //STATISTICAL\n      let arrCount_User = [];\n      for (let i = 0; i < this.state.arrTemp.length; i++) {\n        //check if exits in arr\n        if (!arrCount_User.some(item => this.state.arrTemp[i].Phone == item.Phone)) {\n          this.state.arrTemp[i].count = this.countType(this.state.arrTemp, this.state.arrTemp[i].Phone);\n          const resCal = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.GET_COEFFICIENT,\n            method: 'POST',\n            data: {\n              \"month\": month,\n              \"company_id\": id.company_id,\n              \"phone\": this.state.arrTemp[i].Phone\n            }\n          });\n          this.state.arrTemp[i].coefficient = resCal.data.data.calculator;\n          arrCount_User.push(this.state.arrTemp[i])\n        }\n      }\n\n      this.pagination_statistical(arrCount_User);\n    }\n  }\n\n  render() {\n    const { dataUserSale, hidden, arrPagination, indexPage, hidden_all,\n      dataStatistical, arrPaginationStatistical, indexPageStatistical } = this.state;\n    return (\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>\n              <CFormGroup row>\n                <CCol md=\"3\">\n                  <CLabel htmlFor=\"selectSm\">ALL USER SALE OF COMPANY</CLabel>\n                </CCol>\n                <CCol xs=\"12\" md=\"9\">\n                  {/*  */}\n                </CCol>\n              </CFormGroup>\n            </CCardHeader>\n            <CCardBody>\n              <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th className=\"text-center\">No.</th>\n                    <th className=\"text-center\">Name</th>\n                    <th className=\"text-center\">Email</th>\n                    <th className=\"text-center\">Phone</th>\n                    <th className=\"text-center\">Gender</th>\n                    <th className=\"text-center\">Time Visits</th>\n                    <th className=\"text-center\">Coefficient</th>\n                    <th className=\"text-center\">Last Times Visit</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <td colSpan=\"9\" hidden={hidden_all} className=\"text-center\">No users in this month</td>\n                  {\n                    dataUserSale != undefined ?\n                      dataUserSale.map((item, i) => {\n                        return (\n                          <tr key={i}>\n                            <td className=\"text-center\">{i + 1}</td>\n                            <td className=\"text-center\">{item.Name}</td>\n                            <td className=\"text-center\">{item.Email}</td>\n                            <td className=\"text-center\">{item.Phone}</td>\n                            <td className=\"text-center\">{item.Gender}</td>\n                            <td className=\"text-center\">{item.count}</td>\n                            <td className=\"text-center\">{item.coefficient}</td>\n                            <td className=\"text-center\">\n                              {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\n                            </td>\n                          </tr>\n                        );\n                      }) : \"\"\n                  }\n                </tbody>\n              </table>\n              {\n                arrPagination.length == 1 ? \"\" :\n                  <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                    <tr style={{ float: \"left\", width: \"100%\" }}>\n                      {\n                        arrPagination.map((item, i) => {\n                          return (\n                            <td>\n                              <Button style={{ marginRight: '5px' }} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ dataUserSale: arrPagination[i], indexPage: i }) }}>{i + 1}</Button>\n                            </td>\n                          );\n                        })\n                      }\n                    </tr>\n                  </div>\n              }\n            </CCardBody>\n          </CCard>\n\n          <CCard>\n            <CCardHeader>\n              <CFormGroup row>\n                <CCol md=\"3\">\n                  <CLabel htmlFor=\"selectSm\">NEW USER SALE ON MONTH OF COMPANY</CLabel>\n                </CCol>\n                <CCol xs=\"12\" md=\"9\">\n                  <div style={{ float: \"right\", width: \"250px\" }}>\n                    <CSelect onChange={async e => { await this.getCustomerByMonth(e.target.value) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                      <option value=\"0\">Choose month</option>\n                      <option value=\"01\">01</option>\n                      <option value=\"02\">02</option>\n                      <option value=\"03\">03</option>\n                      <option value=\"04\">04</option>\n                      <option value=\"05\">05</option>\n                      <option value=\"06\">06</option>\n                      <option value=\"07\">07</option>\n                      <option value=\"08\">08</option>\n                      <option value=\"09\">09</option>\n                      <option value=\"10\">10</option>\n                      <option value=\"11\">11</option>\n                      <option value=\"12\">12</option>\n                    </CSelect>\n                  </div>\n                </CCol>\n              </CFormGroup>\n            </CCardHeader>\n            <CCardBody>\n              <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th className=\"text-center\">No.</th>\n                    <th className=\"text-center\">Name</th>\n                    <th className=\"text-center\">Email</th>\n                    <th className=\"text-center\">Phone</th>\n                    <th className=\"text-center\">Gender</th>\n                    <th className=\"text-center\">Times Count</th>\n                    <th className=\"text-center\">Coefficient</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <td colSpan=\"7\" hidden={hidden} className=\"text-center\">No users in this month</td>\n                  {\n                    dataStatistical != undefined ?\n                      dataStatistical.map((item, i) => {\n                        return (\n                          <tr key={i}>\n                            <td className=\"text-center\">{i + 1}</td>\n                            <td className=\"text-center\">{item.Name}</td>\n                            <td className=\"text-center\">{item.Email}</td>\n                            <td className=\"text-center\">{item.Phone}</td>\n                            <td className=\"text-center\">{item.Gender}</td>\n                            <td className=\"text-center\">{item.count}</td>\n                            <td className=\"text-center\">{item.coefficient}</td>\n                          </tr>\n                        );\n                      }) : \"\"\n                  }\n                </tbody>\n              </table>\n\n              {\n                arrPaginationStatistical.length == 1 ? \"\" :\n                  <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                    <tr style={{ float: \"left\", width: \"100%\" }}>\n                      {\n                        arrPaginationStatistical.map((item, i) => {\n                          return (\n                            <td>\n                              <Button style={{ marginRight: '5px' }} color={i == indexPageStatistical ? 'primary' : 'danger'} onClick={e => { this.setState({ dataStatistical: arrPaginationStatistical[i], indexPageStatistical: i }) }}>{i + 1}</Button>\n                            </td>\n                          );\n                        })\n                      }\n                    </tr>\n                  </div>\n              }\n            </CCardBody>\n          </CCard>\n        </CCol>\n      </CRow>\n\n    )\n  }\n}\n\nexport default ShopManager\n","import React, { lazy, Component } from 'react'\nimport {\n  CBadge,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CCallout,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CSelect\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport axios from 'axios'\nimport Constants from \"./../../contants/contants\";\nimport MainChartExample from '../charts/MainChartExample.js'\nimport ShopManager from './ShopManager'\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div>\n        {\n          localStorage.getItem('role') == 'SHOPMANAGER' ? <ShopManager /> : \"\"\n        }\n      </div>\n    )\n  }\n}\n\nexport default Dashboard\n","export default {\n  \"BASE_URL\" : \"http://thanhvien.applamdep.com\",\n  //\"BASE_URL\" : \"http://localhost:3000\",\n  \"LIST_USER\" : \"/api/list-user\",\n  \"LIST_USER_WITH_ID\" : \"/api/list-user?id=\",\n  \"ADD_USER\" : \"/api/add-user\",\n  \"UPDATE_USER\" : \"/api/update-user\",\n  \"DELETE_USER\" : \"/api/delete-user\",\n  \"LOGIN_ADMIN\" : \"/api/login_admin\",\n  \"GET_SHOP\" : \"/api/get-shop\",\n  \"GET_SALE\" : \"/api/get-sale\",\n  \"GET_COEFFICIENT\" : \"/api/calculator-coefficient-user\",\n  \"GET_COEFFICIENT_PER_SALE\" : \"/api/calculator-coefficient-user-per-sale\",\n  \"GET_USER_SALE_BY_MONTH\" : \"/api/get-user-of-sale-by-month\",\n  \"CALCULATOR_ALL_USER_OF_COMPANY\" : \"/api/calculator-all-user-company\",\n  \"CALCULATOR_ALL_USER_OF_SALE\" : \"/api/calculator-all-user-of-sale\",\n\n  \"LIST_CUSTOMER\" : \"/api/list-customer\",\n  \"LIST_CUSTOMER_BY_MONTH\" : \"/api/get-user-sale-by-month\",\n\n  \"LIST_TYPEKEY\" : \"/api/list-typekey\",\n  \"LIST_TYPEKEY_WITH_ID\" : \"/api/list-typekey?id=\",\n  \"ADD_TYPEKEY\" : \"/api/add-typekey\",\n  \"UPDATE_TYPEKEY\" : \"/api/update-typekey\",\n  \"DELETE_TYPEKEY\" : \"/api/delete-typekey\",\n\n  \"LIST_ROLE\" : \"/api/list-role\",\n  \"LIST_ROLE_WITH_ID\" : \"/api/list-role?id=\",\n  \"ADD_ROLE\" : \"/api/add-role\",\n  \"UPDATE_ROLE\" : \"/api/update-role\",\n  \"DELETE_ROLE\" : \"/api/delete-role\",\n\n  \"LIST_SALELOG\" : \"/api/list-salelog\",\n  \"LIST_SALELOG_WITH_ID\" : \"/api/list-salelog?id=\",\n  \"ADD_SALELOG\" : \"/api/add-salelog\",\n  \"UPDATE_SALELOG\" : \"/api/update-salelog\",\n  \"DELETE_SALELOG\" : \"/api/delete-salelog\",\n\n  \"LIST_SALE\" : \"/api/list-sale\",\n  \"LIST_SALE_WITH_ID\" : \"/api/list-sale?id=\",\n  \"ADD_SALE\" : \"/api/add-sale\",\n  \"UPDATE_SALE\" : \"/api/update-sale\",\n  \"DELETE_SALE\" : \"/api/delete-sale\",\n\n  \"LIST_KEYORDER\" : \"/api/list-keyorder\",\n  \"LIST_KEYORDER_WITH_ID\" : \"/api/list-keyorder?id=\",\n  \"ADD_KEYORDER\" : \"/api/add-keyorder\",\n  \"UPDATE_KEYORDER\" : \"/api/update-keyorder\",\n  \"DELETE_KEYORDER\" : \"/api/delete-keyorder\",\n\n  \"LIST_KEY\" : \"/api/list-key\",\n  \"LIST_KEY_WITH_ID\" : \"/api/list-key?id=\",\n  \"ADD_KEY\" : \"/api/add-key\",\n  \"UPDATE_KEY\" : \"/api/update-key\",\n  \"DELETE_KEY\" : \"/api/delete-key\",\n\n  \"LIST_COMPANY\" : \"/api/list-company\",\n  \"LIST_COMPANY_WITH_ID\" : \"/api/list-company?id=\",\n  \"ADD_COMPANY\" : \"/api/add-company\",\n  \"UPDATE_COMPANY\" : \"/api/update-company\",\n  \"DELETE_COMPANY\" : \"/api/delete-company\",\n\n};\n"],"sourceRoot":""}