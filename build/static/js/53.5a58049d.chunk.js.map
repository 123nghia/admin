{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/Button.js","../node_modules/multiselect-react-dropdown/dist/index.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/multiselect/multiselect.component.tsx"],"names":["asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","propTypes","tag","tagPropType","inverse","PropTypes","bool","color","string","body","outline","className","cssModule","object","innerRef","oneOfType","func","Card","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","CardHeader","CardBody","active","block","disabled","onClick","size","children","node","close","Button","_React$Component","_this","call","bind","_assertThisInitialized","_inheritsLoose","_proto","prototype","e","preventDefault","render","_this$props","ariaLabel","btnOutlineColor","href","defaultAriaLabel","type","Component","module","exports","require","css","insertAt","document","head","getElementsByTagName","style","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","closeIconTypes","circle","circle2","cancel","Multiselect","state","inputValue","options","filteredOptions","unfilteredOptions","selectedValues","Object","assign","preSelectedValues","toggleOptionsList","highlightOption","avoidHighlightFirstOption","showCheckbox","keepSearchTerm","groupedObject","closeIconType","closeIcon","optionTimeout","n","searchWrapper","createRef","searchBox","onChange","onFocus","onBlur","renderMultiselectContainer","renderSelectedList","onRemoveSelectedItem","toggelOptionList","onArrowKeyNavigation","onSelectItem","filterOptionsByInput","removeSelectedValuesFromOptions","isSelectedValue","fadeOutSelection","isDisablePreSelectedValues","renderGroupByOptions","renderNormalOption","listenerCallback","resetSelectedValues","getSelectedItems","getSelectedItemsCount","hideOnClickOutside","isVisible","groupBy","singleSelect","groupByOptions","_this2","setState","initialSetValue","length","current","addEventListener","prevProps","prevSelectedvalues","JSON","stringify","focus","clearTimeout","removeEventListener","skipCheck","isObject","displayValue","optionList","filter","findIndex","v","item","indexOf","reduce","r","a","push","create","event","onSearch","target","_this3","matchValues","i","search","caseSensitiveSearch","toLowerCase","toString","keyCode","disablePreSelectedValues","previousState","index","onRemove","splice","_this4","closeOnSelect","selectionLimit","onSelect","onSingleSelect","_this5","emptyRecordMsg","loadingMessage","loading","keys","map","Fragment","obj","option","_this6","readOnly","checked","_this7","customCloseIcon","_this8","src","setTimeout","elem","offsetWidth","offsetHeight","getClientRects","element","getElementsByClassName","contains","_this9","placeholder","id","hidePlaceholder","disable","showArrow","onKeyDown","autoComplete","renderOptionList"],"mappings":"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","file":"static/js/53.5a58049d.chunk.js","sourcesContent":["function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      return this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return /*#__PURE__*/React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./multiselect-react-dropdown.cjs.production.min.js')\n} else {\n  module.exports = require('./multiselect-react-dropdown.cjs.development.js')\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// @ts-nocheck\nimport React from \"react\";\nimport \"./styles.css\";\nimport CloseCircle from '../assets/svg/closeCircle.svg';\nimport CloseCircleDark from '../assets/svg/closeCircleDark.svg';\nimport CloseLine from '../assets/svg/closeLine.svg';\nimport CloseSquare from '../assets/svg/closeSquare.svg';\nimport DownArrow from '../assets/svg/downArrow.svg';\nimport { IMultiselectProps } from \"./interface\";\n\nconst closeIconTypes = {\n  circle: CloseCircleDark,\n  circle2: CloseCircle,\n  close: CloseSquare,\n  cancel: CloseLine\n};\n\nexport class Multiselect extends React.Component<IMultiselectProps, any> {\n  static defaultProps: { options: never[]; disablePreSelectedValues: boolean; selectedValues: never[]; isObject: boolean; displayValue: string; showCheckbox: boolean; selectionLimit: number; placeholder: string; groupBy: string; style: {}; emptyRecordMsg: string; onSelect: () => void; onRemove: () => void; closeIcon: string; singleSelect: boolean; caseSensitiveSearch: boolean; id: string; closeOnSelect: boolean; avoidHighlightFirstOption: boolean; hidePlaceholder: boolean; showArrow: boolean; keepSearchTerm: boolean; };\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      options: props.options,\n      filteredOptions: props.options,\n      unfilteredOptions: props.options,\n      selectedValues: Object.assign([], props.selectedValues),\n      preSelectedValues: Object.assign([], props.selectedValues),\n      toggleOptionsList: false,\n      highlightOption: props.avoidHighlightFirstOption ? -1 : 0,\n\t\t\tshowCheckbox: props.showCheckbox,\n      keepSearchTerm: props.keepSearchTerm,\n      groupedObject: [],\n      closeIconType: closeIconTypes[props.closeIcon] || closeIconTypes['circle']\n    };\n    // @ts-ignore\n    this.optionTimeout = null;\n    // @ts-ignore\n\t\tthis.searchWrapper = React.createRef();\n    // @ts-ignore\n\t\tthis.searchBox = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.renderMultiselectContainer = this.renderMultiselectContainer.bind(this);\n    this.renderSelectedList = this.renderSelectedList.bind(this);\n    this.onRemoveSelectedItem = this.onRemoveSelectedItem.bind(this);\n    this.toggelOptionList = this.toggelOptionList.bind(this);\n    this.onArrowKeyNavigation = this.onArrowKeyNavigation.bind(this);\n    this.onSelectItem = this.onSelectItem.bind(this);\n    this.filterOptionsByInput = this.filterOptionsByInput.bind(this);\n    this.removeSelectedValuesFromOptions = this.removeSelectedValuesFromOptions.bind(this);\n    this.isSelectedValue = this.isSelectedValue.bind(this);\n    this.fadeOutSelection = this.fadeOutSelection.bind(this);\n    this.isDisablePreSelectedValues = this.isDisablePreSelectedValues.bind(this);\n    this.renderGroupByOptions = this.renderGroupByOptions.bind(this);\n    this.renderNormalOption = this.renderNormalOption.bind(this);\n    this.listenerCallback = this.listenerCallback.bind(this);\n    this.resetSelectedValues = this.resetSelectedValues.bind(this);\n    this.getSelectedItems = this.getSelectedItems.bind(this);\n    this.getSelectedItemsCount = this.getSelectedItemsCount.bind(this);\n    this.hideOnClickOutside = this.hideOnClickOutside.bind(this);\n    this.isVisible = this.isVisible.bind(this);\n  }\n\n  initialSetValue() {\n    const { showCheckbox, groupBy, singleSelect } = this.props;\n\t\tconst { options } = this.state;\n    if (!showCheckbox && !singleSelect) {\n      this.removeSelectedValuesFromOptions(false);\n\t\t} \n    // if (singleSelect) {\n    //   this.hideOnClickOutside();\n    // }\n\t\tif (groupBy && showCheckbox) {\n\t\t\tthis.groupByOptions(options);\n\t\t}\n  }\n\n  resetSelectedValues() {\n    const { unfilteredOptions } = this.state;\n    return new Promise((resolve) => {\n      this.setState({\n        selectedValues: [],\n        preSelectedValues: [],\n        options: unfilteredOptions,\n        filteredOptions: unfilteredOptions\n      }, () => {\n        // @ts-ignore\n        resolve();\n        this.initialSetValue();\n      });\n    });\n  }\n\n  getSelectedItems() {\n    return this.state.selectedValues;\n  }\n\n  getSelectedItemsCount() {\n    return this.state.selectedValues.length;\n  }\n\n  componentDidMount() {\n\t\tthis.initialSetValue();\n    // @ts-ignore\n    this.searchWrapper.current.addEventListener(\"click\", this.listenerCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedValues } = this.props;\n    const { options: prevOptions, selectedValues: prevSelectedvalues } = prevProps;\n    if (JSON.stringify(prevOptions) !== JSON.stringify(options)) {\n      this.setState({ options, filteredOptions: options, unfilteredOptions: options }, this.initialSetValue);\n    }\n    if (JSON.stringify(prevSelectedvalues) !== JSON.stringify(selectedValues)) {\n      this.setState({ selectedValues: Object.assign([], selectedValues), preSelectedValues: Object.assign([], selectedValues) }, this.initialSetValue);\n    }\n  }\n\n  listenerCallback() {\n    // @ts-ignore\n    this.searchBox.current.focus();\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    if (this.optionTimeout) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    }\n    // @ts-ignore\n    this.searchWrapper.current.removeEventListener('click', this.listenerCallback);\n  }\n\n  // Skipcheck flag - value will be true when the func called from on deselect anything.\n  removeSelectedValuesFromOptions(skipCheck) {\n    const { isObject, displayValue, groupBy } = this.props;\n    const { selectedValues = [], unfilteredOptions, options } = this.state;\n    if (!skipCheck && groupBy) {\n      this.groupByOptions(options);\n    }\n    if (!selectedValues.length && !skipCheck) {\n      return;\n    }\n    if (isObject) {\n      let optionList = unfilteredOptions.filter(item => {\n        return selectedValues.findIndex(\n          v => v[displayValue] === item[displayValue]\n        ) === -1\n          ? true\n          : false;\n      });\n      if (groupBy) {\n        this.groupByOptions(optionList);\n      }\n      this.setState(\n        { options: optionList, filteredOptions: optionList },\n        this.filterOptionsByInput\n      );\n      return;\n    }\n    let optionList = unfilteredOptions.filter(\n      item => selectedValues.indexOf(item) === -1\n    );\n\n    this.setState(\n      { options: optionList, filteredOptions: optionList },\n      this.filterOptionsByInput\n    );\n  }\n\n  groupByOptions(options) {\n    const { groupBy } = this.props;\n    const groupedObject = options.reduce(function(r, a) {\n      const key = a[groupBy] || \"Others\";\n      r[key] = r[key] || [];\n      r[key].push(a);\n      return r;\n    }, Object.create({}));\n    \n    this.setState({ groupedObject });\n  }\n\n  onChange(event) {\n    const { onSearch } = this.props;\n    this.setState(\n      { inputValue: event.target.value },\n      this.filterOptionsByInput\n    );\n    if (onSearch) {\n      onSearch(event.target.value);\n    }\n  }\n\n  filterOptionsByInput() {\n    let { options, filteredOptions, inputValue } = this.state;\n    const { isObject, displayValue } = this.props;\n    if (isObject) {\n      options = filteredOptions.filter(i => this.matchValues(i[displayValue], inputValue))\n    } else {\n      options = filteredOptions.filter(i => this.matchValues(i, inputValue));\n    }\n    this.groupByOptions(options);\n    this.setState({ options });\n  }\n\n  matchValues(value, search) {\n    if (this.props.caseSensitiveSearch) {\n      return value.indexOf(search) > -1;\n    }\n    if (value.toLowerCase) {\n      return value.toLowerCase().indexOf(search.toLowerCase()) > -1;\n    }\n    return value.toString().indexOf(search) > -1;\n  }\n\n  onArrowKeyNavigation(e) {\n    const {\n      options,\n      highlightOption,\n      toggleOptionsList,\n      inputValue,\n      selectedValues\n    } = this.state;\n    const { disablePreSelectedValues } = this.props;\n    if (e.keyCode === 8 && !inputValue && !disablePreSelectedValues && selectedValues.length) {\n      this.onRemoveSelectedItem(selectedValues.length - 1);\n    }\n    if (!options.length) {\n      return;\n    }\n    if (e.keyCode === 38) {\n      if (highlightOption > 0) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption - 1\n        }));\n      } else {\n        this.setState({ highlightOption: options.length - 1 });\n      }\n    } else if (e.keyCode === 40) {\n      if (highlightOption < options.length - 1) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption + 1\n        }));\n      } else {\n        this.setState({ highlightOption: 0 });\n      }\n    } else if (e.key === \"Enter\" && options.length && toggleOptionsList) {\n      if (highlightOption === -1) {\n        return;\n      }\n      this.onSelectItem(options[highlightOption]);\n    }\n    // TODO: Instead of scrollIntoView need to find better soln for scroll the dropwdown container.\n    // setTimeout(() => {\n    //   const element = document.querySelector(\"ul.optionContainer .highlight\");\n    //   if (element) {\n    //     element.scrollIntoView();\n    //   }\n    // });\n  }\n\n  onRemoveSelectedItem(item) {\n\t\tlet { selectedValues, index = 0 } = this.state;\n\t\tconst { onRemove, showCheckbox, displayValue, isObject } = this.props;\n    if (isObject) {\n      index = selectedValues.findIndex(\n        i => i[displayValue] === item[displayValue]\n      );\n    } else {\n      index = selectedValues.indexOf(item);\n    }\n\t\tselectedValues.splice(index, 1);\n\t\tonRemove(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSelectItem(item) {\n    const { selectedValues } = this.state;\n    const { selectionLimit, onSelect, singleSelect, showCheckbox } = this.props;\n    if (!this.state.keepSearchTerm){\n      this.setState({\n        inputValue: ''\n      });\n    }\n    if (singleSelect) {\n      this.onSingleSelect(item);\n      onSelect([item], item);\n      return;\n    }\n    if (this.isSelectedValue(item)) {\n      this.onRemoveSelectedItem(item);\n      return;\n    }\n    if (selectionLimit == selectedValues.length) {\n      return;\n    }\n\t\tselectedValues.push(item);\n\t\tonSelect(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      } else {\n        this.filterOptionsByInput();\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSingleSelect(item) {\n    this.setState({ selectedValues: [item], toggleOptionsList: false });\n  }\n\n  isSelectedValue(item) {\n    const { isObject, displayValue } = this.props;\n    const { selectedValues } = this.state;\n    if (isObject) {\n      return (\n        selectedValues.filter(i => i[displayValue] === item[displayValue])\n          .length > 0\n      );\n    }\n    return selectedValues.filter(i => i === item).length > 0;\n  }\n\n  renderOptionList() {\n    const { groupBy, style, emptyRecordMsg, loading, loadingMessage = 'loading...' } = this.props;\n    const { options } = this.state;\n    if (loading) {\n      return (\n        <ul className={`optionContainer`} style={style['optionContainer']}>\n          {typeof loadingMessage === 'string' && <span style={style['loadingMessage']} className={`notFound`}>{loadingMessage}</span>}\n          {typeof loadingMessage !== 'string' && loadingMessage}\n        </ul>\n      );\n    }\n    return (\n      <ul className={`optionContainer`} style={style['optionContainer']}>\n        {options.length === 0 && <span style={style['notFound']} className={`notFound`}>{emptyRecordMsg}</span>}\n        {!groupBy ? this.renderNormalOption() : this.renderGroupByOptions()}\n      </ul>\n    );\n  }\n\n  renderGroupByOptions() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { groupedObject } = this.state;\n    return Object.keys(groupedObject).map(obj => {\n\t\t\treturn (\n\t\t\t\t<React.Fragment key={obj}>\n\t\t\t\t\t<li className=\"groupHeading\" style={style['groupHeading']}>{obj}</li>\n\t\t\t\t\t{groupedObject[obj].map((option, i) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={`option${i}`}\n\t\t\t\t\t\t\tstyle={style['option']}\n              className={`\n               groupChildEle ${this.fadeOutSelection(option) && 'disableSelection'}\n                ${this.isDisablePreSelectedValues(option) && 'disableSelection'} option\n              `}\n\t\t\t\t\t\t\tonClick={() => this.onSelectItem(option)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{showCheckbox && !singleSelect && (\n                  <input\n                    type=\"checkbox\"\n                    className={'checkbox'}\n                    readOnly\n                    checked={this.isSelectedValue(option)}\n                  />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{isObject ? option[displayValue] : (option || '').toString()}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t});\n  }\n\n  renderNormalOption() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { highlightOption } = this.state;\n    return this.state.options.map((option, i) => (\n          <li\n            key={`option${i}`}\n            style={style['option']}\n            className={`\n              ${highlightOption === i ? `highlightOption highlight` : \"\"} \n              ${this.fadeOutSelection(option) && 'disableSelection'} \n              ${this.isDisablePreSelectedValues(option) && 'disableSelection'} option\n            `}\n            onClick={() => this.onSelectItem(option)}\n          >\n            {showCheckbox && !singleSelect && (\n              <input\n                type=\"checkbox\"\n                readOnly\n                className={`checkbox`}\n                checked={this.isSelectedValue(option)}\n              />\n            )}\n            {isObject ? option[displayValue] : (option || '').toString()}\n          </li>\n    ));\n  }\n\n  renderSelectedList() {\n    const { isObject = false, displayValue, style, singleSelect, customCloseIcon } = this.props;\n    const { selectedValues, closeIconType } = this.state;\n    return selectedValues.map((value, index) => (\n      <span className={`chip  ${singleSelect && 'singleChip'} ${this.isDisablePreSelectedValues(value) && 'disableSelection'}`} key={index} style={style['chips']}>\n        {!isObject ? (value || '').toString() : value[displayValue]}\n        {!this.isDisablePreSelectedValues(value) && (!customCloseIcon ? <img\n          className=\"icon_cancel closeIcon\"\n          src={closeIconType}\n          onClick={() => this.onRemoveSelectedItem(value)}\n        /> : <i className=\"custom-close\" onClick={() => this.onRemoveSelectedItem(value)}>{customCloseIcon}</i>)}\n      </span>\n    ));\n  }\n\n  isDisablePreSelectedValues(value) {\n    const { isObject, disablePreSelectedValues, displayValue } = this.props;\n    const { preSelectedValues } = this.state;\n    if (!disablePreSelectedValues || !preSelectedValues.length) {\n      return false;\n    }\n    if (isObject) {\n      return (\n        preSelectedValues.filter(i => i[displayValue] === value[displayValue])\n          .length > 0\n      );\n    }\n    return preSelectedValues.filter(i => i === value).length > 0;\n  }\n\n  fadeOutSelection(item) {\n    const { selectionLimit, showCheckbox, singleSelect } = this.props;\n    if (singleSelect) {\n      return;\n    }\n    const { selectedValues } = this.state;\n    if (selectionLimit == -1) {\n      return false;\n    }\n    if (selectionLimit != selectedValues.length) {\n      return false;\n    }\n    if (selectionLimit == selectedValues.length) {\n      if (!showCheckbox) {\n        return true;\n      } else {\n        if (this.isSelectedValue(item)) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  toggelOptionList() {\n    this.setState({\n      toggleOptionsList: !this.state.toggleOptionsList,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0\n    });\n  }\n\n  onFocus(){\n    if (this.state.toggleOptionsList) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    } else {\n      this.toggelOptionList();\n    }\n  }\n\n  onBlur(){\n    // @ts-ignore\n    this.optionTimeout = setTimeout(this.toggelOptionList, 250);\n  }\n\n  isVisible(elem) {\n    return !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length )\n  }\n\n  hideOnClickOutside() {\n    const element = document.getElementsByClassName('multiselect-container')[0];\n    const outsideClickListener = event => {\n        if (element && !element.contains(event.target) && this.isVisible(element)) {\n          this.toggelOptionList();\n        }\n    }\n    document.addEventListener('click', outsideClickListener)\n  }\n\n  renderMultiselectContainer() {\n    const { inputValue, toggleOptionsList, selectedValues } = this.state;\n    const { placeholder, style, singleSelect, id, hidePlaceholder, disable, showArrow} = this.props;\n    return (\n      <div className={`multiselect-container multiSelectContainer ${disable ? `disable_ms` : ''}`} id={id || 'multiselectContainerReact'} style={style['multiselectContainer']}>\n        <div className={`search-wrapper searchWrapper ${singleSelect ? 'singleSelect' : ''}`} \n          ref={this.searchWrapper} style={style['searchBox']} \n          onClick={singleSelect ? this.toggelOptionList : () => {}}\n        >\n          {this.renderSelectedList()}\n          <input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tref={this.searchBox}\n            className=\"searchBox\"\n            id={`${id || 'search'}_input`}\n            onChange={this.onChange}\n            value={inputValue}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            placeholder={((singleSelect && selectedValues.length) || (hidePlaceholder && selectedValues.length)) ? '' : placeholder}\n            onKeyDown={this.onArrowKeyNavigation}\n            style={style['inputField']}\n            autoComplete=\"off\"\n            disabled={singleSelect || disable}\n          />\n          {(singleSelect || showArrow) && <img\n            src={DownArrow}\n            className={`icon_cancel icon_down_dir`}\n          />}\n        </div>\n        <div\n          className={`optionListContainer ${\n            toggleOptionsList ? 'displayBlock' : 'displayNone'\n          }`}\n        >\n          {this.renderOptionList()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return this.renderMultiselectContainer();\n  }\n}\n\nMultiselect.defaultProps = {\n  options: [],\n  disablePreSelectedValues: false,\n  selectedValues: [],\n  isObject: true,\n  displayValue: \"model\",\n  showCheckbox: false,\n  selectionLimit: -1,\n  placeholder: \"Select\",\n\tgroupBy: \"\",\n\tstyle: {},\n\temptyRecordMsg: \"No Options Available\",\n\tonSelect: () => {},\n  onRemove: () => {},\n  closeIcon: 'circle2',\n  singleSelect: false,\n  caseSensitiveSearch: false,\n  id: '',\n  closeOnSelect: true,\n  avoidHighlightFirstOption: false,\n  hidePlaceholder: false,\n  showArrow: false,\n  keepSearchTerm: false,\n  customCloseIcon: ''\n};\n"],"sourceRoot":""}