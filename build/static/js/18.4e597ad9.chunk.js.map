{"version":3,"sources":["redux/data/actions.js","views/base/tables/TableUser.js","contants/contants.js","views/Common/TextFieldGroup.js"],"names":["onSaveID","id","type","SAVE_ID_SALE","payload","headers","Headers","auth","localStorage","getItem","append","Users","props","getUserSale","sale_id","a","company_id","state","setState","isLoading","JSON","parse","bodyCustomer","condition","Company_Id","Sale_Id","axios","baseURL","Constants","BASE_URL","url","LIST_CUSTOMER","method","data","res","pagination","dataApi","active","map","val","Status","totalActive","getUserSale_ByMonth","month","GET_USER_SALE_BY_MONTH","arrTemp","arrCount_User_Per","getArrTemp","i","some","item","Phone","count","countType","GET_COEFFICIENT_PER_SALE","idSale","resCal","coefficient","calculator","push","length","getUserSale_ByMonth_forSale","getAllData","resAll","arrCount_All_User","CALCULATOR_ALL_USER_OF_SALE","resCal_all","pagination_all","getData","role","bodyUser","GET_SHOP","GET_SALE","console","log","openDelete","modalDelete","delete","key","activePage","page","itemsCount","limit","modalCom","viewingUser","communities","updated","action","Email","Address","Name","Gender","Role_Id","UserName","Password","Code","dataCompany","currentCompany","dataSale","currentSale","dataRole","currentRole","arrPagination","indexPage","arrPagination_All","indexPage_All","see_detail","arrMonth","arrMonthWithDefault","hidden","nameSale","dataAll","hidden_all","isSale","token","Authorization","this","j","temparray","arrTotal","slice","arr","phone","filter","id_sale","d","toLocaleUpperCase","includes","getCompanyData","getSaleData","getRoleData","alert","body","ADD_USER","is_success","message","UPDATE_USER","DELETE_USER","fetchData","fetch","global","then","users","json","result","total","catch","LIST_COMPANY","resCompany","undefined","LIST_COMPANY_WITH_ID","currentC","LIST_SALE","resSale","LIST_SALE_WITH_ID","LIST_ROLE","resRole","LIST_ROLE_WITH_ID","e","target","name","value","tableUserSale_forSale","getDataUser_ForSale","className","color","height","width","class","style","styles","tags","searchInput","onChange","searchKey","placeholder","outline","floatRight","size","onClick","toggleModal","backgroundColor","check","custom","selected","responsive","wa10","wh12","wh15","sale_times","w5_10","w5","colSpan","row","Date","Create_Date","toLocaleDateString","toLocaleTimeString","mgl5","openUpdate","tableUserSale","_id","float","marginRight","padding","ws12","isOpen","field","label","readOnly","flexLabel","htmlFor","flexOption","addUser","updateUser","disabled","toggle","Component","textAlign","textDecoration","marginTop","spinner","center","tbody","overflowY","success","danger","marginLeft","display","userActive","userPending","nagemonNameCol","image","borderRadius","marginBottom","connect","getData_AllAPI","TextFieldGroup","error","checkUserExists","classnames","onBlur","defaultProps"],"mappings":"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","file":"static/js/18.4e597ad9.chunk.js","sourcesContent":["import {\n  SAVE_ID_SALE\n} from '../actions.js'\n\nexport function onSaveID(id) {\n  return {\n    type: SAVE_ID_SALE,\n    payload: { id }\n  };\n}\n","import React, { Component } from 'react';\n\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Table, Button, Input,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n  Alert\n} from 'reactstrap';\n\nimport {\n  CLabel,\n  CSelect,\n  CContainer,\n  CRow,\n  CCol\n} from '@coreui/react'\n\nimport { connect } from 'react-redux';\nimport {\n  onSaveID\n} from '../../../redux/data/actions'\nimport 'moment-timezone';\nimport Constants from \"./../../../contants/contants\";\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\nimport axios from 'axios'\nimport LazyLoad from 'react-lazyload';\nimport ReactLoading from 'react-loading';\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      activePage: 1,\n      page: 1,\n      itemsCount: 0,\n      limit: 20,\n      totalActive: 0,\n      modalCom: false,\n      viewingUser: {},\n      communities: [],\n      updated: '',\n      dataApi: [],\n      action: 'new',\n      Email: '',\n      Address: '',\n      Name: '',\n      Phone: '',\n      Gender: 'Nam',\n      Company_Id: '',\n      Role_Id: '',\n      UserName: '',\n      Password: '',\n      Sale_Id: '',\n      Code: '',\n      Status: '',\n      modalDelete: false,\n      delete: null,\n      dataCompany: [],\n      currentCompany: '',\n      dataSale: [],\n      currentSale: '',\n      dataRole: [],\n      currentRole: '',\n      arrPagination: [],\n      indexPage: 0,\n      arrPagination_All: [],\n      indexPage_All: 0,\n      role: localStorage.getItem('role'),\n      company_id: localStorage.getItem('user'),\n      see_detail: true,\n      month: 0,\n      arrTemp: [],\n      arrMonth: [\n        \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\",\n      ],\n      arrMonthWithDefault: [\n        \"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\",\n      ],\n      isLoading: true,\n      hidden: false,\n      nameSale: '',\n      dataAll: [],\n      hidden_all: false,\n      isSale: false,\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` }\n    };\n  }\n  async componentDidMount() {\n    this.getData();\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden: false\n      })\n    } else {\n      this.setState({\n        hidden: true\n      })\n    }\n    this.setState({ arrPagination: arrTotal, data: arrTotal[this.state.indexPage] });\n  }\n\n  pagination_all(dataApi) {\n    var i, j, temparray, chunk = 5;\n    let arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden_all: false\n      })\n    } else {\n      this.setState({\n        hidden_all: true\n      })\n    }\n    this.setState({ arrPagination_All: arrTotal, dataAll: arrTotal[this.state.indexPage_All] });\n  }\n\n  getUserSale = async (sale_id) => {\n    const { company_id } = this.state;\n    this.setState({ isLoading: true });\n    var id = JSON.parse(company_id);\n\n    var bodyCustomer = {\n      condition: {\n        Company_Id: id.company_id,\n        Sale_Id: sale_id\n      }\n    }\n\n    var res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_CUSTOMER,\n      method: 'POST',\n      data: bodyCustomer\n    })\n\n    this.pagination(res.data.data);\n    this.setState({ dataApi: res.data.data });\n\n    let active = 0\n\n    res.data.data.map(val => {\n      if (val.Status == \"Actived\") {\n        active = active + 1\n      }\n    })\n\n    this.setState({ isLoading: false, totalActive: active });\n  }\n\n  countType(arr, phone) {\n    const count = arr.filter(data => data.Phone == phone);\n    return count.length;\n  }\n\n  getUserSale_ByMonth = async (sale_id, month) => {\n    const { company_id } = this.state;\n    this.setState({ isLoading: true });\n    var id = JSON.parse(company_id);\n\n    var bodyCustomer = {\n      \"month\": month,\n      \"company_id\": id.company_id,\n      \"sale_id\": sale_id\n    }\n\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.GET_USER_SALE_BY_MONTH,\n      method: 'POST',\n      data: bodyCustomer\n    })\n\n    this.setState({ dataApi: res.data.data, arrTemp: res.data.data });\n    let arrCount_User_Per = [];\n    var getArrTemp = this.state.arrTemp;\n    for (let i = 0; i < getArrTemp.length; i++) {\n      //check if exits in arr\n      if (!arrCount_User_Per.some(item => getArrTemp[i].Phone == item.Phone)) {\n        getArrTemp[i].count = this.countType(getArrTemp, getArrTemp[i].Phone);\n        const resCal = await axios({\n          baseURL: Constants.BASE_URL,\n          url: Constants.GET_COEFFICIENT_PER_SALE,\n          method: 'POST',\n          data: {\n            \"month\": month,\n            \"company_id\": id.company_id,\n            \"phone\": getArrTemp[i].Phone,\n            \"sale_id\": this.props.data.idSale\n          }\n        });\n        getArrTemp[i].coefficient = resCal.data.data.calculator;\n        arrCount_User_Per.push(getArrTemp[i])\n      }\n    }\n\n    this.pagination(arrCount_User_Per);\n    this.setState({ isLoading: false });\n  }\n\n  getUserSale_ByMonth_forSale = async (sale_id, month) => {\n    const { company_id } = this.state;\n    this.setState({ isLoading: true });\n    var id = JSON.parse(company_id);\n\n    var bodyCustomer = {\n      \"month\": month,\n      \"company_id\": id.company_id,\n      \"sale_id\": sale_id\n    }\n\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.GET_USER_SALE_BY_MONTH,\n      method: 'POST',\n      data: bodyCustomer\n    })\n\n    this.setState({ dataApi: res.data.data, arrTemp: res.data.data });\n    let arrCount_User_Per = [];\n    var getArrTemp = this.state.arrTemp;\n    for (let i = 0; i < getArrTemp.length; i++) {\n      //check if exits in arr\n      if (!arrCount_User_Per.some(item => getArrTemp[i].Phone == item.Phone)) {\n        getArrTemp[i].count = this.countType(getArrTemp, getArrTemp[i].Phone);\n        const resCal = await axios({\n          baseURL: Constants.BASE_URL,\n          url: Constants.GET_COEFFICIENT_PER_SALE,\n          method: 'POST',\n          data: {\n            \"month\": month,\n            \"company_id\": id.company_id,\n            \"phone\": getArrTemp[i].Phone,\n            \"sale_id\": sale_id\n          }\n        });\n        getArrTemp[i].coefficient = resCal.data.data.calculator;\n        arrCount_User_Per.push(getArrTemp[i])\n      }\n    }\n    this.pagination(arrCount_User_Per);\n    this.setState({ isLoading: false });\n  }\n\n  getAllData = async () => {\n    const { company_id } = this.state;\n    this.setState({ isLoading: true });\n    var id = JSON.parse(company_id);\n\n    var resAll = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_CUSTOMER,\n      method: 'POST',\n      data: {\n        condition: {\n          Company_Id: id.company_id,\n          Sale_Id: this.props.data.idSale\n        }\n      }\n    })\n\n    this.setState({ dataApi: resAll.data.data });\n\n    let arrCount_All_User = [];\n\n    for (let i = 0; i < resAll.data.data.length; i++) {\n      //check if exits in arr\n      if (!arrCount_All_User.some(item => resAll.data.data[i].Phone == item.Phone)) {\n        resAll.data.data[i].count = this.countType(resAll.data.data, resAll.data.data[i].Phone);\n\n        var resCal_all = await axios({\n          baseURL: Constants.BASE_URL,\n          url: Constants.CALCULATOR_ALL_USER_OF_SALE,\n          method: 'POST',\n          data: {\n            \"company_id\": id.company_id,\n            \"phone\": resAll.data.data[i].Phone,\n            \"sale_id\": this.props.data.idSale\n          }\n        });\n        resAll.data.data[i].coefficient = resCal_all.data.data.calculator;\n        arrCount_All_User.push(resAll.data.data[i])\n      }\n    }\n\n    this.pagination_all(arrCount_All_User);\n    this.setState({ isLoading: false });\n  }\n\n  getData = async () => {\n    const { company_id, role } = this.state;\n    this.setState({ isLoading: true });\n    var id = JSON.parse(company_id);\n\n    var bodyUser = {\n      company_id: id.company_id\n    }\n\n    var bodyCustomer = {\n      condition: {\n        Company_Id: id.company_id,\n        Sale_Id: id.sale_id\n      }\n    }\n    if (role == 'ADMIN') {\n      var res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.GET_SHOP,\n        method: 'GET'\n      });\n\n    } else if (role == 'SHOPMANAGER') {\n      var res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.GET_SALE,\n        method: 'POST',\n        data: bodyUser\n      });\n\n    } else if (role == 'SALES') {\n      var res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_CUSTOMER,\n        method: 'POST',\n        data: bodyCustomer\n      })\n    }\n\n    console.log(res.data.data)\n    this.pagination(res.data.data);\n    this.setState({ dataApi: res.data.data });\n\n    let active = 0\n\n    res.data.data.map(val => {\n      if (val.Status == \"Actived\") {\n        active = active + 1\n      }\n    })\n\n    this.setState({ isLoading: false, totalActive: active });\n  }\n\n  async tableUserSale(id_sale, nameSale) {\n    await this.getUserSale_ByMonth(id_sale, \"01\");\n    this.props.onSaveID(id_sale)\n    this.getAllData();\n    this.setState({ see_detail: false, nameSale: nameSale })\n  }\n\n  async tableUserSale_forSale(month) {\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n    await this.getUserSale_ByMonth_forSale(id.sale_id, month);\n  }\n\n  searchKey(key) {\n    const { indexPage } = this.state;\n    this.setState({ key: key })\n\n    if (key != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if (val.Phone.toLocaleUpperCase().includes(key.toLocaleUpperCase()) || val.Email.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n          d.push(val)\n        }\n      })\n      let active = 0\n\n      d.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: d, totalActive: active })\n    } else {\n      let active = 0\n\n      this.state.dataApi.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: this.state.arrPagination[indexPage], totalActive: active })\n    }\n  }\n\n  async toggleModal(key) {\n    await this.getCompanyData()\n    await this.getSaleData()\n    await this.getRoleData()\n    if (key == 'new') {\n      this.setState({\n        modalCom: !this.state.modalCom,\n        action: key,\n        Email: '',\n        Name: '',\n        Phone: '',\n        Gender: 'Nam',\n        Company_Id: '',\n        Role_Id: '',\n        UserName: '',\n        Password: '',\n        Sale_Id: '',\n        Code: ''\n      })\n    }\n  }\n\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n\n  async addUser() {\n    const { Email, Name, Phone, UserName, Code, Password, Gender, Role_Id, Company_Id, Sale_Id, Address } = this.state\n\n    if (Email == null || Email == ''\n      || Name == null || Name == ''\n      || Phone == null || Phone == ''\n      || UserName == null || UserName == ''\n      || Role_Id == null || Role_Id == ''\n      || Password == null || Password == '') {\n      alert(\"Please fill in all the requirements\");\n      return\n    }\n\n    const body = {\n      Email: Email,\n      Address: Address,\n      Name: Name,\n      Phone: Phone,\n      Gender: Gender,\n      Company_Id: Company_Id,\n      Role_Id: Role_Id,\n      UserName: UserName,\n      Password: Password,\n      Sale_Id: Sale_Id,\n      Code: Code\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.ADD_USER,\n      method: 'PUT',\n      data: body\n    });\n\n    if (res.data.is_success == true) {\n      this.getData();\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(res.data.message);\n      this.setState({ isLoading: false });\n    }\n  }\n\n  async openUpdate(item) {\n    await this.getCompanyData(item.Company_Id)\n    await this.getSaleData(item.Sale_Id)\n    await this.getRoleData(item.Role_Id)\n\n    this.setState({\n      modalCom: !this.state.modalCom,\n      action: \"update\",\n      Email: item.Email,\n      Address: item.Address,\n      Name: item.Name,\n      Phone: item.Phone,\n      Gender: item.Gender,\n      Company_Id: item.Company_Id,\n      Role_Id: item.Role_Id,\n      UserName: item.UserName,\n      Password: item.Password,\n      Sale_Id: item.Sale_Id,\n      Code: item.Code,\n      id: item['_id'],\n      Status: item.Status\n    })\n  }\n\n  async updateUser() {\n    const { Email, Name, Phone, UserName, Code, Password, Gender, Role_Id,\n      Company_Id, Sale_Id, Status, Address } = this.state\n\n    if (Email == null || Email == ''\n      || Name == null || Name == ''\n      || Phone == null || Phone == ''\n      || UserName == null || UserName == ''\n      || Password == null || Password == '') {\n      alert(\"Please fill in all the requirements\");\n      return\n    }\n\n    const body = {\n      Email: Email,\n      Address: Address,\n      Name: Name,\n      Phone: Phone,\n      Gender: Gender,\n      Company_Id: Company_Id,\n      Role_Id: Role_Id,\n      UserName: UserName,\n      Password: Password,\n      Sale_Id: Sale_Id,\n      Code: Code,\n      id: this.state.id,\n      Status: Status\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.UPDATE_USER,\n      method: 'POST',\n      data: body\n    });\n\n    if (res.data.is_success == true) {\n      this.getData();\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(res.data.message);\n      this.setState({ isLoading: false });\n    }\n  }\n\n  openDelete = (item) => {\n    this.setState({\n      modalDelete: !this.state.modalDelete,\n      delete: item\n    })\n  }\n\n  async delete() {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.DELETE_USER,\n      method: 'DELETE',\n      data: {\n        \"id\": this.state.delete['_id']\n      }\n    });\n\n    if (res.data.is_success == true) {\n      this.getData();\n      this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n    } else {\n      alert(res.data.message);\n      this.setState({ isLoading: false });\n    }\n\n  }\n\n  getUsers(page = 1) {\n    const limit = this.state.limit;\n    const key = this.state.key || '';\n    const fetchData = {\n      method: 'GET',\n      headers: headers\n    };\n    fetch(global.BASE_URL + '/admin/users?key=' + key + '&page=' + page + '&limit=' + limit, fetchData).then(users => {\n      users.json().then(result => {\n        this.setState({\n          data: result.data,\n          itemsCount: result.total,\n          activePage: page,\n          totalActive: result.totalActive,\n          updated: '',\n        });\n      })\n    }).catch(console.log);\n  }\n\n  async getCompanyData(id) {\n    const resCompany = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_COMPANY,\n      method: 'GET',\n    });\n\n    if (id != '' || id != undefined) {\n      const currentC = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_COMPANY_WITH_ID + id,\n        method: 'GET',\n      });\n      if (currentC.data.data != null || currentC.data.data != undefined) {\n        this.setState({ currentCompany: currentC.data.data.Name });\n      }\n    }\n    this.setState({ dataCompany: resCompany.data.data });\n  }\n\n  async getSaleData(id) {\n    const resSale = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_SALE,\n      method: 'GET',\n    });\n\n    if (id != '' || id != undefined) {\n      const currentSale = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_SALE_WITH_ID + id,\n        method: 'GET',\n      });\n      if (currentSale.data.data != null || currentSale.data.data != undefined) {\n        this.setState({ currentSale: currentSale.data.data.Name });\n      }\n    }\n    this.setState({ dataSale: resSale.data.data });\n  }\n\n  async getRoleData(id) {\n    const resRole = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_ROLE,\n      method: 'GET',\n      headers: this.state.token\n    });\n\n    if (id != '' || id != undefined) {\n      const currentRole = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_ROLE_WITH_ID + id,\n        method: 'GET',\n        headers: this.state.token\n      });\n      if (currentRole.data.data != null || currentRole.data.data != undefined) {\n        this.setState({ currentRole: currentRole.data.data.Name });\n      }\n    }\n    this.setState({ dataRole: resRole.data.data });\n  }\n\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  async getDataUser_ForSale(month) {\n    const { role } = this.state;\n    if (role == 'SALES') {\n      this.setState({ isSale: true, month: month })\n      await this.tableUserSale_forSale(month);\n    }\n  }\n\n  async check(e) {\n    if (e.target.value == \"00\") {\n      this.getData();\n      this.setState({ isSale: false })\n    } else {\n      await this.getDataUser_ForSale(e.target.value);\n      this.setState({ month: e.target.value })\n    }\n  }\n\n  render() {\n    const { data, key, dataCompany, role, hidden, dataAll, arrPagination_All, indexPage_All,\n      currentCompany, action, dataRole, currentRole, arrPagination, indexPage,\n      hidden_all, isSale } = this.state;\n\n    if (!this.state.isLoading) {\n      return (\n\n        <div>\n\n          <Card hidden={!this.state.see_detail}>\n            <CardHeader>\n              <div class=\"container\">\n                <div class=\"row\">\n                  <div class=\"col\">\n                    <i className=\"fa fa-align-justify\"></i> {\n                      role == 'ADMIN' ? \"SHOP LIST\" : role == 'SHOPMANAGER' ? 'SALE LIST' : 'USER LIST'\n                    } ( Page: {this.state.indexPage + 1} )\n                  </div>\n                  <div class=\"col\">\n                    <div style={styles.tags}>\n                      {\n                        role == 'SALES' ? \"\" :\n                          <div>\n                            <Input style={styles.searchInput} onChange={(e) => this.searchKey(e.target.value)} name=\"key\" value={key} placeholder=\"Search\" />\n                            <Button outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={async e => await this.toggleModal(\"new\")}>Add</Button>\n                          </div>\n                      }\n                    </div>\n                  </div>\n                  <div class=\"col\">\n                    {\n                      role == 'SALES' ? <div>\n                        <div>Choose Month</div>\n                        <CSelect style={{ width: '100%', backgroundColor: '#ffff99' }} onChange={async e => { await this.check(e) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                          {\n                            this.state.arrMonthWithDefault.map((item, i) => {\n                              if (item == \"00\") {\n                                return (\n                                  <option selected value={item}>Get All</option>\n                                );\n                              } else {\n                                if (item == this.state.month) {\n                                  return (\n                                    <option selected value={item}>{item}</option>\n                                  );\n                                } else {\n                                  return (\n                                    <option value={item}>{item}</option>\n                                  );\n                                }\n                              }\n                            })\n                          }\n                        </CSelect>\n                      </div> : \"\"\n                    }\n\n                  </div>\n                </div>\n              </div>\n\n              {/* <CRow>\n                <CCol lg=\"5\" sm=\"5\" md=\"5\" xs=\"12\">\n                  <div style={styles.tags}>\n                    {\n                      role == 'SALES' ? \"\" :\n                        <div>\n                          <Input style={styles.searchInput} onChange={(e) => this.searchKey(e.target.value)} name=\"key\" value={key} placeholder=\"Search\" />\n                          <Button outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={async e => await this.toggleModal(\"new\")}>Add</Button>\n                        </div>\n                    }\n                  </div>\n                </CCol>\n                <CCol lg=\"7\" sm=\"7\" md=\"7\" xs=\"12\">\n                  <div>Choose Month</div>\n                  <CSelect style={{ width: 300, float: 'left', backgroundColor: '#ffff99' }} onChange={async e => { await this.check(e) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                    {\n                      this.state.arrMonthWithDefault.map((item, i) => {\n                        if (item == \"00\") {\n                          return (\n                            <option selected value={item}>Get All</option>\n                          );\n                        } else {\n                          if (item == this.state.month) {\n                            return (\n                              <option selected value={item}>{item}</option>\n                            );\n                          } else {\n                            return (\n                              <option value={item}>{item}</option>\n                            );\n                          }\n                        }\n                      })\n                    }\n                  </CSelect>\n                </CCol>\n              </CRow> */}\n            </CardHeader>\n            <CardBody>\n              {\n                role == 'SALES' ? <Table responsive>\n                  <thead>\n                    <tr>\n                      <th style={styles.wa10}>No.</th>\n                      <th style={styles.wh12}>Name</th>\n                      <th style={styles.wh12}>Email</th>\n                      <th style={styles.wh15}>Phone</th>\n                      {\n                        isSale ? <th style={styles.sale_times}>Times</th> : \"\"\n                      }\n                      {\n                        isSale ? <th style={styles.sale_times}>Coeff</th> : \"\"\n                      }\n                      <th style={styles.wh12}>Gender</th>\n                      <th style={styles.wh12}>Date</th>\n                      <th style={styles.wh12}></th>\n                      <th style={isSale ? styles.w5_10 : styles.w5}>Action</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <td colSpan=\"10\" hidden={hidden} className=\"text-center\">No users in this month</td>\n                    {\n                      data != undefined ?\n                        data.map((item, i) => {\n                          return (\n                            <tr key={i} style={styles.row}>\n\n                              <td style={styles.wa10}>{i + 1}</td>\n                              <td style={styles.wh12}>{item.Name}</td>\n                              <td style={styles.wh12}>{item.Email}</td>\n                              <td style={styles.wh15}>{item.Phone}</td>\n                              {\n                                isSale ? <th style={styles.sale_times}>{item.count}</th> : \"\"\n                              }\n                              {\n                                isSale ? <th style={styles.sale_times}>{item.coefficient}</th> : \"\"\n                              }\n                              <td style={styles.wh12}>{item.Gender}</td>\n                              <td style={styles.wh12}>\n                                {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\n                              </td>\n                              <td style={styles.wh12}></td>\n                              <td style={isSale ? styles.w5_10 : styles.w5}>\n                                {/* <Button style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >Update</Button>{' '}\n                                <Button outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>Delete</Button>{' '} */}\n                                <Button outline color=\"primary\" size=\"sm\" onClick={async (e) => { }}>Detail</Button>\n                              </td>\n                            </tr>\n                          );\n                        }) : \"\"\n                    }\n                  </tbody>\n                </Table> : role == 'ADMIN' ?\n                  <Table responsive>\n                    <thead>\n                      <tr>\n                        <th style={styles.wa10}>No.</th>\n                        <th style={styles.wh12}>Username</th>\n                        <th style={styles.wh12}>Name</th>\n                        <th style={styles.wh15}>Email</th>\n                        <th style={styles.wh12}>Phone</th>\n                        <th style={styles.wh12}>Gender</th>\n                        <th style={styles.wh12}>Code</th>\n                        <th style={styles.w5}>Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i} style={styles.row}>\n                                <td style={styles.wa10}>{i + 1}</td>\n                                <td style={styles.wh12}>{item.UserName}</td>\n                                <td style={styles.wh12}>{item.Name}</td>\n                                <td style={styles.wh15}>{item.Email}</td>\n                                <td style={styles.wh12}>{item.Phone}</td>\n                                <td style={styles.wh12}>{item.Gender}</td>\n                                <td style={styles.wh12}>{item.Code}</td>\n                                <td style={styles.w5}>\n                                  <Button style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >Update</Button>{' '}\n                                  <Button outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>Delete</Button>{' '}\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </Table> :\n\n                  <Table responsive>\n                    <thead>\n                      <tr>\n                        <th style={styles.wa10}>No.</th>\n                        <th style={styles.wh12}>Name</th>\n                        <th style={styles.wh12}>Email</th>\n                        <th style={styles.wh15}>Phone</th>\n                        <th style={styles.wh12}>Gender</th>\n                        <th style={styles.wh12}>Company Id</th>\n                        <th style={styles.wh12}>Code</th>\n                        <th style={styles.w5}>Action</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i} style={styles.row}>\n                                <td style={styles.wa10}>{i + 1}</td>\n                                <td style={styles.wh12}>{item.UserName}</td>\n                                <td style={styles.wh12}>{item.Name}</td>\n                                <td style={styles.wh15}>{item.Email}</td>\n                                <td style={styles.wh12}>{item.Phone}</td>\n                                <td style={styles.wh12}>{item.Gender}</td>\n                                <td style={styles.wh12}>{item.Code}</td>\n                                <td style={styles.w5}>\n                                  <Button style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >Update</Button>{' '}\n                                  <Button outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>Delete</Button>{' '}\n                                  <Button outline color=\"primary\" size=\"sm\" onClick={async (e) => { await this.tableUserSale(item._id, item.Name); this.setState({ month: \"01\" }) }}>Detail</Button>\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </Table>\n\n              }\n            </CardBody>\n          </Card>\n          {\n            arrPagination.length == 1 ? \"\" :\n              <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                <tr style={styles.row}>\n                  {\n                    arrPagination.map((item, i) => {\n                      return (\n                        <td>\n                          <Button style={styles.pagination} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ data: arrPagination[i], indexPage: i }) }}>{i + 1}</Button>\n                        </td>\n                      );\n                    })\n                  }\n                </tr>\n              </div>\n          }\n          <div hidden={this.state.see_detail}>\n\n            <Card style={this.state.data == undefined ? { width: '97.8%' } : { width: '100%' }}>\n              <CardHeader>\n                <div class=\"container\">\n                  <div class=\"row\">\n                    <div class=\"col\">\n                      <i className=\"justify-content-center\"></i> LIST USER SALE OF SALE ON MONTH {this.state.nameSale} ( Page: {this.state.indexPage + 1})\n                    </div>\n                    <div class=\"col\">\n                      <CSelect className=\"mt-3\" style={{ width: 300, float: 'right', backgroundColor: '#ffff99' }} onChange={async e => { await this.getUserSale_ByMonth(this.props.data.idSale, e.target.value); this.setState({ month: e.target.value }) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                        {\n                          this.state.arrMonth.map((item, i) => {\n                            if (item == this.state.month) {\n                              return (\n                                <option selected value={item}>{item}</option>\n                              );\n                            } else {\n                              return (\n                                <option value={item}>{item}</option>\n                              );\n                            }\n\n                          })\n                        }\n                      </CSelect>\n                    </div>\n                  </div>\n                </div>\n              </CardHeader>\n              <CardBody>\n                {\n                  <Table responsive>\n                    <thead>\n                      <tr>\n                        <th style={styles.wa10}>No.</th>\n                        <th style={styles.ws12}>Name</th>\n                        <th style={styles.ws12}>Email</th>\n                        <th style={styles.ws12}>Phone</th>\n                        <th style={styles.ws12}>Gender</th>\n                        <th style={styles.ws12}>Time Invite</th>\n                        <th style={styles.ws12}>Coefficient</th>\n                        <th style={styles.ws12}>Date</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <td colSpan=\"8\" hidden={hidden} className=\"text-center\">No users in this month</td>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i} style={styles.row}>\n                                <td style={styles.wa10}>{i + 1}</td>\n                                <td style={styles.ws12}>{item.Name}</td>\n                                <td style={styles.ws12}>{item.Email}</td>\n                                <td style={styles.ws12}>{item.Phone}</td>\n                                <td style={styles.ws12}>{item.Gender}</td>\n                                <td style={styles.ws12}>{item.count}</td>\n                                <td style={styles.ws12}>{item.coefficient}</td>\n                                <td style={styles.ws12}>\n                                  {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </Table>\n                }\n              </CardBody>\n            </Card>\n            {\n              arrPagination.length == 1 ? \"\" :\n                <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                  <tr style={styles.row}>\n                    {\n                      arrPagination.map((item, i) => {\n                        return (\n                          <td>\n                            <Button style={styles.pagination} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ data: arrPagination[i], indexPage: i }) }}>{i + 1}</Button>\n                          </td>\n                        );\n                      })\n                    }\n                  </tr>\n                </div>\n            }\n\n            {/* dawdaefakwdhlkawjdkl */}\n            <center>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i>LIST USER SALE OF SALER ( Sale Name: {this.state.nameSale}, Page: {this.state.indexPage + 1})\n                </CardHeader>\n                <CardBody>\n                  {\n                    <Table responsive>\n                      <thead>\n                        <tr>\n                          <th style={styles.wa10}>No.</th>\n                          <th style={styles.ws12}>Name</th>\n                          <th style={styles.ws12}>Email</th>\n                          <th style={styles.wh15}>Phone</th>\n                          <th style={styles.ws12}>Gender</th>\n                          <th style={styles.ws12}>Time Invite</th>\n                          <th style={styles.ws12}>Coefficient</th>\n                          <th style={styles.ws12}>Date</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <td colSpan=\"8\" hidden={hidden_all} className=\"text-center\">No users in this month</td>\n                        {\n                          dataAll != undefined ?\n                            dataAll.map((item, i) => {\n                              return (\n                                <tr key={i} style={styles.row}>\n                                  <td style={styles.wa10}>{i + 1}</td>\n                                  <td style={styles.ws12}>{item.Name}</td>\n                                  <td style={styles.ws12}>{item.Email}</td>\n                                  <td style={styles.wh15}>{item.Phone}</td>\n                                  <td style={styles.ws12}>{item.Gender}</td>\n                                  <td style={styles.ws12}>{item.count}</td>\n                                  <td style={styles.ws12}>{item.coefficient}</td>\n                                  <td style={styles.ws12}>\n                                    {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\n                                  </td>\n                                </tr>\n                              );\n                            }) : \"\"\n                        }\n                      </tbody>\n                    </Table>\n                  }\n                </CardBody>\n              </Card>\n              {\n                arrPagination_All.length == 1 ? \"\" :\n                  <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                    <tr style={styles.row}>\n                      {\n                        arrPagination_All.map((item, i) => {\n                          return (\n                            <td>\n                              <Button style={styles.pagination} color={i == indexPage_All ? 'primary' : 'danger'} onClick={e => { this.setState({ dataAll: arrPagination_All[i], indexPage_All: i }) }}>{i + 1}</Button>\n                            </td>\n                          );\n                        })\n                      }\n                    </tr>\n                  </div>\n              }\n            </center>\n          </div>\n\n          <Modal isOpen={this.state.modalCom} className={this.props.className}>\n            <ModalHeader>{this.state.action == 'new' ? `Create` : `Update`}</ModalHeader>\n            <ModalBody>\n              <TextFieldGroup\n                field=\"Email\"\n                label=\"Email\"\n                value={this.state.Email}\n                placeholder={\"Email\"}\n                type={'email'}\n                onChange={e => this.onChange(\"Email\", e.target.value)}\n              // rows=\"5\"\n              />\n              <TextFieldGroup\n                field=\"Address\"\n                label=\"Address\"\n                value={this.state.Address}\n                placeholder={\"Email\"}\n                type={'email'}\n                onChange={e => this.onChange(\"Address\", e.target.value)}\n              // rows=\"5\"\n              />\n              <TextFieldGroup\n                field=\"Name\"\n                label=\"Name\"\n                value={this.state.Name}\n                placeholder={\"Name\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"Name\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"Password\"\n                label=\"Password\"\n                value={this.state.Password}\n                type={\"password\"}\n                placeholder={\"Password\"}\n                readOnly={action == 'new' ? false : true}\n                onChange={e => this.onChange(\"Password\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"Code\"\n                label=\"Code\"\n                placeholder={\"Code\"}\n                value={this.state.Code}\n                // error={errors.title}\n                onChange={e => this.onChange(\"Code\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"UserName\"\n                label=\"UserName\"\n                placeholder={\"Username\"}\n                value={this.state.UserName}\n                // error={errors.title}\n                onChange={e => this.onChange(\"UserName\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"Phone\"\n                label=\"Phone\"\n                value={this.state.Phone}\n                placeholder={\"Phone\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"Phone\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <div>\n                <label style={styles.flexLabel} htmlFor=\"tag\">Gender:    </label>\n                <select style={styles.flexOption} name=\"Gender\" onChange={e => this.onChange(\"Gender\", e.target.value)}>\n                  <option value={this.state.Gender}>{this.state.Gender == '' ? ` - - - - - - - - - - ` : this.state.Gender}</option>\n                  <option value={'Nam'}>Nam</option>\n                  <option value={'Nữ'}>Nữ</option>\n                </select>\n              </div>\n\n              <div>\n                <label style={styles.flexLabel} htmlFor=\"tag\">Company:    </label>\n                <select style={styles.flexOption} name=\"Company_Id\" onChange={e => this.onChange(\"Company_Id\", e.target.value)}>\n                  <option value={this.state.Company_Id}>-----</option>\n                  {\n                    dataCompany.map((item, i) => {\n                      if (item.Name == currentCompany) {\n                        return (\n                          <option selected value={item._id}>{item.Name}</option>\n                        );\n                      } else {\n                        return (\n                          <option value={item._id}>{item.Name}</option>\n                        );\n                      }\n                    })\n                  }\n                </select>\n              </div>\n\n              <div>\n                <label style={styles.flexLabel} htmlFor=\"tag\">Role:    </label>\n                <select style={styles.flexOption} name=\"Role_Id\" onChange={e => this.onChange(\"Role_Id\", e.target.value)}>\n                  <option value={this.state.Role_Id}>-----</option>\n                  {\n                    dataRole.map((item, i) => {\n                      if (item.Name == currentRole) {\n                        return (\n                          <option selected value={item._id}>{item.Name}</option>\n                        );\n                      } else {\n                        return (\n                          <option value={item._id}>{item.Name}</option>\n                        );\n                      }\n                    })\n                  }\n                </select>\n              </div>\n\n              {/* <div>\n                <label style={styles.flexLabel} htmlFor=\"tag\">Sale:    </label>\n                <select style={styles.flexOption} name=\"Sale_Id\" onChange={e => this.onChange(\"Sale_Id\", e.target.value)}>\n                  <option value={this.state.Sale_Id}>-----</option>\n                  {\n                    dataSale.map((item, i) => {\n                      if (item.Name == currentSale) {\n                        return (\n                          <option selected value={item._id}>{item.Name}</option>\n                        );\n                      } else {\n                        return (\n                          <option value={item._id}>{item.Name}</option>\n                        );\n                      }\n                    })\n                  }\n                </select>\n              </div> */}\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={e => { this.state.action === 'new' ? this.addUser() : this.updateUser() }} disabled={this.state.isLoading}>Save</Button>{' '}\n              <Button color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Cancel</Button>\n            </ModalFooter>\n          </Modal>\n\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Delete`}</ModalHeader>\n            <ModalBody>\n              <label htmlFor=\"tag\">{`Do you want to delete user \"${this.state.delete ? this.state.delete.Email : ''}\" ?`}</label>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Delete</Button>{' '}\n              <Button color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Cancel</Button>\n            </ModalFooter>\n          </Modal>\n        </div>\n      );\n    }\n    return (\n      <div className=\"d-flex justify-content-center\">\n        <ReactLoading type={\"balls\"} color={\"orange\"} height={'5%'} width={'5%'} />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"60px\"\n  },\n  sale_times: {\n    width: \"8%\",\n    float: \"left\",\n    height: \"60px\",\n    textAlign: 'center'\n  },\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: 300\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: \"right\",\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh12: {\n    width: \"11%\",\n    float: \"left\",\n    height: \"60px\",\n    textAlign: 'center'\n  },\n  ws12: {\n    width: \"13%\",\n    float: \"left\",\n    height: \"60px\",\n    textAlign: 'center'\n  },\n  wh15: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"60px\",\n    textAlign: 'center'\n  },\n  w5: {\n    width: \"22%\",\n    float: \"left\",\n    height: \"60px\"\n  },\n  w5_10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"60px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    marginLeft: '5px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\",\n    width: \"250px\",\n    marginTop: '10px'\n  },\n  searchInput: {\n    width: \"190px\",\n    display: 'inline-block',\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n  mgl5: {\n    marginBottom: '0px'\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.getData_AllAPI\n  }\n}\n\n\nexport default connect(mapStateToProps, { onSaveID })(Users);\n\n","export default {\n  \"BASE_URL\" : \"http://thanhvien.applamdep.com\",\n  //\"BASE_URL\" : \"http://localhost:3000\",\n  \"LIST_USER\" : \"/api/list-user\",\n  \"LIST_USER_WITH_ID\" : \"/api/list-user?id=\",\n  \"ADD_USER\" : \"/api/add-user\",\n  \"UPDATE_USER\" : \"/api/update-user\",\n  \"DELETE_USER\" : \"/api/delete-user\",\n  \"LOGIN_ADMIN\" : \"/api/login_admin\",\n  \"GET_SHOP\" : \"/api/get-shop\",\n  \"GET_SALE\" : \"/api/get-sale\",\n  \"GET_COEFFICIENT\" : \"/api/calculator-coefficient-user\",\n  \"GET_COEFFICIENT_PER_SALE\" : \"/api/calculator-coefficient-user-per-sale\",\n  \"GET_USER_SALE_BY_MONTH\" : \"/api/get-user-of-sale-by-month\",\n  \"CALCULATOR_ALL_USER_OF_COMPANY\" : \"/api/calculator-all-user-company\",\n  \"CALCULATOR_ALL_USER_OF_SALE\" : \"/api/calculator-all-user-of-sale\",\n\n  \"LIST_CUSTOMER\" : \"/api/list-customer\",\n  \"LIST_CUSTOMER_BY_MONTH\" : \"/api/get-user-sale-by-month\",\n\n  \"LIST_TYPEKEY\" : \"/api/list-typekey\",\n  \"LIST_TYPEKEY_WITH_ID\" : \"/api/list-typekey?id=\",\n  \"ADD_TYPEKEY\" : \"/api/add-typekey\",\n  \"UPDATE_TYPEKEY\" : \"/api/update-typekey\",\n  \"DELETE_TYPEKEY\" : \"/api/delete-typekey\",\n\n  \"LIST_ROLE\" : \"/api/list-role\",\n  \"LIST_ROLE_WITH_ID\" : \"/api/list-role?id=\",\n  \"ADD_ROLE\" : \"/api/add-role\",\n  \"UPDATE_ROLE\" : \"/api/update-role\",\n  \"DELETE_ROLE\" : \"/api/delete-role\",\n\n  \"LIST_SALELOG\" : \"/api/list-salelog\",\n  \"LIST_SALELOG_WITH_ID\" : \"/api/list-salelog?id=\",\n  \"ADD_SALELOG\" : \"/api/add-salelog\",\n  \"UPDATE_SALELOG\" : \"/api/update-salelog\",\n  \"DELETE_SALELOG\" : \"/api/delete-salelog\",\n\n  \"LIST_SALE\" : \"/api/list-sale\",\n  \"LIST_SALE_WITH_ID\" : \"/api/list-sale?id=\",\n  \"ADD_SALE\" : \"/api/add-sale\",\n  \"UPDATE_SALE\" : \"/api/update-sale\",\n  \"DELETE_SALE\" : \"/api/delete-sale\",\n\n  \"LIST_KEYORDER\" : \"/api/list-keyorder\",\n  \"LIST_KEYORDER_WITH_ID\" : \"/api/list-keyorder?id=\",\n  \"ADD_KEYORDER\" : \"/api/add-keyorder\",\n  \"UPDATE_KEYORDER\" : \"/api/update-keyorder\",\n  \"DELETE_KEYORDER\" : \"/api/delete-keyorder\",\n\n  \"LIST_KEY\" : \"/api/list-key\",\n  \"LIST_KEY_WITH_ID\" : \"/api/list-key?id=\",\n  \"ADD_KEY\" : \"/api/add-key\",\n  \"UPDATE_KEY\" : \"/api/update-key\",\n  \"DELETE_KEY\" : \"/api/delete-key\",\n\n  \"LIST_COMPANY\" : \"/api/list-company\",\n  \"LIST_COMPANY_WITH_ID\" : \"/api/list-company?id=\",\n  \"ADD_COMPANY\" : \"/api/add-company\",\n  \"UPDATE_COMPANY\" : \"/api/update-company\",\n  \"DELETE_COMPANY\" : \"/api/delete-company\",\n\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder }) => {\n  return (\n    <div className={classnames('form-group', { 'has-error': error })}>\n      <label className=\"control-label\">{label}</label>\n      <input\n        onChange={onChange}\n        onBlur={checkUserExists}\n        value={value}\n        type={type}\n        name={field}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        className=\"form-control\"\n      />\n    {error && <span className=\"help-block\">{error}</span>}\n    </div>  );\n}\n\nTextFieldGroup.propTypes = {\n  field: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checkUserExists: PropTypes.func\n}\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextFieldGroup;\n"],"sourceRoot":""}