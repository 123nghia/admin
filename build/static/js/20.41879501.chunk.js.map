{"version":3,"sources":["views/base/tables/Role.js","contants/contants.js","views/Common/TextFieldGroup.js"],"names":["headers","Headers","auth","localStorage","getItem","append","Users","props","getData","a","setState","isLoading","axios","baseURL","Constants","BASE_URL","url","LIST_ROLE","method","res","pagination","data","dataApi","active","map","val","Status","totalActive","openDelete","item","modalDelete","state","delete","key","activePage","page","itemsCount","limit","modalCom","viewingUser","communities","updated","action","Name","arrPagination","indexPage","this","i","j","temparray","arrTotal","length","slice","push","d","toLocaleUpperCase","includes","alert","body","ADD_ROLE","is_success","message","id","UPDATE_ROLE","DELETE_ROLE","fetchData","fetch","global","then","users","json","result","total","catch","console","log","e","target","name","value","getUsers","dataCompany","currentCompany","dataSale","currentSale","className","style","styles","success","danger","deleted","undefined","tags","searchInput","onChange","searchKey","placeholder","outline","color","floatRight","size","onClick","toggleModal","responsive","wa10","wh25","w5","row","Create_Date","mgl5","openUpdate","float","marginRight","padding","isOpen","field","label","flexLabel","htmlFor","flexOption","addRoles","updateUser","disabled","toggle","Email","Component","width","textDecoration","marginTop","spinner","center","textAlign","tbody","height","overflowY","marginLeft","display","userActive","userPending","nagemonNameCol","image","borderRadius","marginBottom","TextFieldGroup","error","type","checkUserExists","readOnly","classnames","onBlur","defaultProps"],"mappings":"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","file":"static/js/20.41879501.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n    Card,\n    CardBody,\n    CardHeader,\n    Col,\n    Row,\n    Table, Button, Input,\n    ModalHeader, ModalBody, ModalFooter, Modal,\n    Alert\n} from 'reactstrap';\nimport 'moment-timezone';\nimport Constants from \"./../../../contants/contants\";\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\nimport axios from 'axios'\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\nclass Users extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            key: '',\n            activePage: 1,\n            page: 1,\n            itemsCount: 0,\n            limit: 20,\n            totalActive: 0,\n            modalCom: false,\n            viewingUser: {},\n            communities: [],\n            updated: '',\n            dataApi: [],\n            action: 'new',\n            Name: '',\n            Status: '',\n            modalDelete: false,\n            delete: null,\n            arrPagination: [],\n            indexPage: 0\n        };\n    }\n    async componentDidMount() {\n        this.getData()\n    }\n\n    pagination(dataApi) {\n        var i, j, temparray, chunk = 5;\n        var arrTotal = [];\n        for (i = 0, j = dataApi.length; i < j; i += chunk) {\n            temparray = dataApi.slice(i, i + chunk);\n            arrTotal.push(temparray);\n        }\n        this.setState({ arrPagination: arrTotal, data: arrTotal[this.state.indexPage] });\n    }\n\n    getData = async () => {\n        this.setState({ isLoading: true });\n        const res = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.LIST_ROLE,\n            method: 'GET',\n        });\n        this.pagination(res.data.data);\n        this.setState({ dataApi: res.data.data });\n\n        let active = 0\n\n        res.data.data.map(val => {\n            if (val.Status == \"Actived\") {\n                active = active + 1\n            }\n        })\n\n        this.setState({ isLoading: false, totalActive: active });\n    }\n\n    searchKey(key) {\n        this.setState({ key: key })\n\n        if (key != '') {\n            let d = []\n            this.state.dataApi.map(val => {\n                if (val.Name.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n                    d.push(val)\n                }\n            })\n            let active = 0\n\n            d.map(val => {\n                if (val.Status == \"Actived\") {\n                    active = active + 1\n                }\n            })\n\n            this.setState({ data: d, totalActive: active })\n        } else {\n            let active = 0\n\n            this.state.dataApi.map(val => {\n                if (val.Status == \"Actived\") {\n                    active = active + 1\n                }\n            })\n\n            this.setState({ data: this.state.dataApi, totalActive: active })\n        }\n    }\n\n    async toggleModal(key) {\n        if (key == 'new') {\n            this.setState({\n                modalCom: !this.state.modalCom,\n                action: key,\n                Name: ''\n            })\n        }\n    }\n\n    onChange(key, val) {\n        this.setState({ [key]: val })\n    }\n\n    async addRoles() {\n        const { Name } = this.state\n\n        if (Name == null || Name == '') {\n            alert(\"Please fill in all the requirements\");\n            return\n        }\n\n        const body = {\n            Name: Name\n        }\n\n        this.setState({ isLoading: true });\n        const res = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.ADD_ROLE,\n            method: 'PUT',\n            data: body\n        });\n\n        if (res.data.is_success == true) {\n            this.getData();\n            this.setState({modalCom: !this.state.modalCom})\n        } else {\n            alert(res.data.message);\n            this.setState({ isLoading: false });\n        }\n    }\n\n    async openUpdate(item) {\n        this.setState({\n            modalCom: !this.state.modalCom,\n            action: \"update\",\n            Name: item.Name,\n            id: item['_id'],\n            Status: item.Status\n        })\n    }\n\n    async updateUser() {\n        const { Name, Status } = this.state\n\n        if (Name == null || Name == '') {\n            alert(\"Please fill in all the requirements\");\n            return\n        }\n\n        const body = {\n            Name: Name,\n            id: this.state.id,\n            Status: Status\n        }\n\n        this.setState({ isLoading: true });\n        const res = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.UPDATE_ROLE,\n            method: 'POST',\n            data: body\n        });\n\n        if (res.data.is_success == true) {\n            this.getData();\n            this.setState({modalCom: !this.state.modalCom})\n        } else {\n            alert(res.data.message);\n            this.setState({ isLoading: false });\n        }\n    }\n\n    openDelete = (item) => {\n        this.setState({\n            modalDelete: !this.state.modalDelete,\n            delete: item\n        })\n    }\n\n    async delete() {\n        this.setState({ isLoading: true });\n        const res = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.DELETE_ROLE,\n            method: 'DELETE',\n            data: {\n                \"id\": this.state.delete['_id']\n            }\n        });\n\n        if (res.data.is_success == true) {\n            this.getData();\n            this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n        } else {\n            alert(res.data.message);\n            this.setState({ isLoading: false });\n        }\n\n    }\n\n    getUsers(page = 1) {\n        const limit = this.state.limit;\n        const key = this.state.key || '';\n        const fetchData = {\n            method: 'GET',\n            headers: headers\n        };\n        fetch(global.BASE_URL + '/admin/users?key=' + key + '&page=' + page + '&limit=' + limit, fetchData).then(users => {\n            users.json().then(result => {\n                this.setState({\n                    data: result.data,\n                    itemsCount: result.total,\n                    activePage: page,\n                    totalActive: result.totalActive,\n                    updated: '',\n                });\n            })\n        }).catch(console.log);\n    }\n\n    inputChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    goSearch() {\n        this.getUsers();\n    }\n\n    render() {\n        const { data, key, viewingUser, communities, dataCompany,\n            currentCompany, dataSale, currentSale, action, arrPagination, indexPage } = this.state;\n        if (!this.state.isLoading) {\n            return (\n                <div className=\"animated fadeIn\">\n                    <Row>\n                        <Col>\n                            <p style={styles.success}>{this.state.updated}</p>\n                            <p style={styles.danger}>{this.state.deleted}</p>\n                            <Card>\n                                <CardHeader>\n                                    <i className=\"fa fa-align-justify\"></i> ROLE (Total: {this.state.data != undefined || this.state.data != null ?\n                                        this.state.data.length : 0}, Active: {this.state.totalActive}, Page: {this.state.indexPage + 1}))\n                                    <div style={styles.tags}>\n                                        <div>\n                                            <Input style={styles.searchInput} onChange={(e) => this.searchKey(e.target.value)} name=\"key\" value={key} placeholder=\"Search\" />\n                                            <Button outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={async e => await this.toggleModal(\"new\")}>Add</Button>\n                                        </div>\n                                    </div>\n                                </CardHeader>\n                                <CardBody>\n                                    <Table responsive>\n                                        <thead>\n                                            <tr>\n                                                <th style={styles.wa10}>No.</th>\n                                                <th style={styles.wh25}>Name</th>\n                                                <th style={styles.wh25}>Status</th>\n                                                <th style={styles.wh25}>Create Date</th>\n                                                <th style={styles.w5}>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                data != undefined ?\n                                                data.map((item, i) => {\n                                                    return (\n                                                        <tr key={i} style={styles.row}>\n                                                            <td style={styles.wa10}>{i + 1}</td>\n                                                            <td style={styles.wh25}>{item.Name}</td>\n                                                            <td style={styles.wh25}>{item.Status}</td>\n                                                            <td style={styles.wh25}>{item.Create_Date}</td>\n                                                            <td style={styles.w5}>\n                                                                <Button style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >Update</Button>{' '}\n                                                                <Button outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>Delete</Button>\n                                                            </td>\n                                                        </tr>\n                                                    );\n                                                }) : \"\"\n                                            }\n                                        </tbody>\n                                    </Table>\n                                </CardBody>\n                            </Card>\n                            {\n                                arrPagination.length == 1 ? \"\" :\n                                    <div style={{ float: 'right', marginRight: '10px', padding: '10px'  }}>\n                                        <tr style={styles.row}>\n                                            {\n                                                arrPagination.map((item, i) => {\n                                                    return (\n                                                        <td>\n                                                            <Button style={styles.pagination} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ data: arrPagination[i], indexPage: i }) }}>{i + 1}</Button>\n                                                        </td>\n                                                    );\n                                                })\n                                            }\n                                        </tr>\n                                    </div>\n                            }\n                        </Col>\n                    </Row>\n\n                    <Modal isOpen={this.state.modalCom} className={this.props.className}>\n                        <ModalHeader>{this.state.action == 'new' ? `Create` : `Update`}</ModalHeader>\n                        <ModalBody>\n                            <TextFieldGroup\n                                field=\"Name\"\n                                label=\"Name\"\n                                value={this.state.Name}\n                                placeholder={\"Name\"}\n                                // error={errors.title}\n                                onChange={e => this.onChange(\"Name\", e.target.value)}\n                            // rows=\"5\"\n                            />\n                            {\n                                action == 'new' ? \"\" : <div>\n                                    <label style={styles.flexLabel} htmlFor=\"tag\">Status:</label>\n                                    <select style={styles.flexOption} name=\"Status\" onChange={e => this.onChange(\"Status\", e.target.value)}>\n                                        <option value={this.state.Status}>{this.state.Status == '' ? ` - - - - - - - - - - ` : this.state.Status}</option>\n                                        <option value={'Actived'}>Actived</option>\n                                        <option value={'Locked'}>Locked</option>\n                                        <option value={'Deactived'}>Deactived</option>\n                                    </select>\n                                </div>\n                            }\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"primary\" onClick={e => { this.state.action === 'new' ? this.addRoles() : this.updateUser() }} disabled={this.state.isLoading}>Save</Button>{' '}\n                            <Button color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Cancel</Button>\n                        </ModalFooter>\n                    </Modal>\n\n                    <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n                        <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Delete`}</ModalHeader>\n                        <ModalBody>\n                            <label htmlFor=\"tag\">{`Do you want to delete user \"${this.state.delete ? this.state.delete.Email : ''}\" ?`}</label>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Delete</Button>{' '}\n                            <Button color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Cancel</Button>\n                        </ModalFooter>\n                    </Modal>\n                </div>\n            );\n        }\n        return (\n            <div id=\"page-loading\">\n                <div className=\"three-balls\">\n                    <div className=\"ball ball1\"></div>\n                    <div className=\"ball ball2\"></div>\n                    <div className=\"ball ball3\"></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    pagination: {\n        marginRight: '5px'\n    },\n    flexLabel: {\n        width: 100\n    },\n    flexOption: {\n        width: 300\n    },\n    a: {\n        textDecoration: 'none'\n    },\n    floatRight: {\n        float: \"right\",\n        marginTop: '3px'\n    },\n    spinner: {\n        width: \"30px\"\n    },\n    center: {\n        textAlign: \"center\"\n    },\n    tbody: {\n        height: \"380px\",\n        overflowY: \"auto\"\n    },\n    wh25: {\n        width: \"25%\",\n        float: \"left\",\n        height: \"80px\"\n    },\n    w5: {\n        width: \"15%\",\n        float: \"left\",\n        height: \"80px\"\n    },\n    wa10: {\n        width: \"5%\",\n        float: \"left\",\n        height: \"80px\"\n    },\n    row: {\n        float: \"left\",\n        width: \"100%\"\n    },\n    success: {\n        color: 'green'\n    },\n    danger: {\n        color: 'red'\n    },\n    mgl5: {\n        marginLeft: '5px'\n    },\n    tags: {\n        float: \"right\",\n        marginRight: \"5px\",\n        width: \"250px\"\n    },\n    searchInput: {\n        width: \"190px\",\n        display: 'inline-block',\n    },\n    userActive: {\n        color: 'green'\n    },\n    userPending: {\n        color: 'red'\n    },\n    nagemonNameCol: {\n        width: '328px'\n    },\n    image: {\n        width: '100px',\n        height: '100px',\n        borderRadius: '99999px'\n    },\n    mgl5: {\n        marginBottom: '0px'\n    }\n}\n\nexport default Users;\n","export default {\n  \"BASE_URL\" : \"http://thanhvien.applamdep.com\",\n  //\"BASE_URL\" : \"http://localhost:3000\",\n  \"LIST_USER\" : \"/api/list-user\",\n  \"LIST_USER_WITH_ID\" : \"/api/list-user?id=\",\n  \"ADD_USER\" : \"/api/add-user\",\n  \"UPDATE_USER\" : \"/api/update-user\",\n  \"DELETE_USER\" : \"/api/delete-user\",\n  \"LOGIN_ADMIN\" : \"/api/login_admin\",\n  \"GET_SHOP\" : \"/api/get-shop\",\n  \"GET_SALE\" : \"/api/get-sale\",\n  \"GET_COEFFICIENT\" : \"/api/calculator-coefficient-user\",\n\n  \"LIST_CUSTOMER\" : \"/api/list-customer\",\n  \"LIST_CUSTOMER_BY_MONTH\" : \"/api/get-user-sale-by-month\",\n\n  \"LIST_TYPEKEY\" : \"/api/list-typekey\",\n  \"LIST_TYPEKEY_WITH_ID\" : \"/api/list-typekey?id=\",\n  \"ADD_TYPEKEY\" : \"/api/add-typekey\",\n  \"UPDATE_TYPEKEY\" : \"/api/update-typekey\",\n  \"DELETE_TYPEKEY\" : \"/api/delete-typekey\",\n\n  \"LIST_ROLE\" : \"/api/list-role\",\n  \"LIST_ROLE_WITH_ID\" : \"/api/list-role?id=\",\n  \"ADD_ROLE\" : \"/api/add-role\",\n  \"UPDATE_ROLE\" : \"/api/update-role\",\n  \"DELETE_ROLE\" : \"/api/delete-role\",\n\n  \"LIST_SALELOG\" : \"/api/list-salelog\",\n  \"LIST_SALELOG_WITH_ID\" : \"/api/list-salelog?id=\",\n  \"ADD_SALELOG\" : \"/api/add-salelog\",\n  \"UPDATE_SALELOG\" : \"/api/update-salelog\",\n  \"DELETE_SALELOG\" : \"/api/delete-salelog\",\n\n  \"LIST_SALE\" : \"/api/list-sale\",\n  \"LIST_SALE_WITH_ID\" : \"/api/list-sale?id=\",\n  \"ADD_SALE\" : \"/api/add-sale\",\n  \"UPDATE_SALE\" : \"/api/update-sale\",\n  \"DELETE_SALE\" : \"/api/delete-sale\",\n\n  \"LIST_KEYORDER\" : \"/api/list-keyorder\",\n  \"LIST_KEYORDER_WITH_ID\" : \"/api/list-keyorder?id=\",\n  \"ADD_KEYORDER\" : \"/api/add-keyorder\",\n  \"UPDATE_KEYORDER\" : \"/api/update-keyorder\",\n  \"DELETE_KEYORDER\" : \"/api/delete-keyorder\",\n\n  \"LIST_KEY\" : \"/api/list-key\",\n  \"LIST_KEY_WITH_ID\" : \"/api/list-key?id=\",\n  \"ADD_KEY\" : \"/api/add-key\",\n  \"UPDATE_KEY\" : \"/api/update-key\",\n  \"DELETE_KEY\" : \"/api/delete-key\",\n\n  \"LIST_COMPANY\" : \"/api/list-company\",\n  \"LIST_COMPANY_WITH_ID\" : \"/api/list-company?id=\",\n  \"ADD_COMPANY\" : \"/api/add-company\",\n  \"UPDATE_COMPANY\" : \"/api/update-company\",\n  \"DELETE_COMPANY\" : \"/api/delete-company\",\n\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder }) => {\n  return (\n    <div className={classnames('form-group', { 'has-error': error })}>\n      <label className=\"control-label\">{label}</label>\n      <input\n        onChange={onChange}\n        onBlur={checkUserExists}\n        value={value}\n        type={type}\n        name={field}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        className=\"form-control\"\n      />\n    {error && <span className=\"help-block\">{error}</span>}\n    </div>  );\n}\n\nTextFieldGroup.propTypes = {\n  field: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checkUserExists: PropTypes.func\n}\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextFieldGroup;\n"],"sourceRoot":""}