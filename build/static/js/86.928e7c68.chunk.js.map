{"version":3,"sources":["views/game/configWeb/BannerAia.js","views/game/configWeb/GameConfig.js","views/game/configWeb/Content.js","views/game/configWeb.js","views/Common/TextFieldGroup.js"],"names":["BannerAia","setStateByName","name","value","props","onChangeImage","e","name_link","name_show","this","SaveAllConfigWeb","class","Button","variant","color","onClick","TextFieldGroup","field","label","type","onChange","target","alt","style","width","height","src","imageBannerDesktop","hrefImageBannerDesktop","placeholder","className","imageBannerMobile","hrefImageBannerMobile","Component","Seo","getTimeConver","datetime","moment","format","FormGroup","Label","for","Input","id","fromDate","todate","fromtime","totime","skinNumber","statusGame","poupintro","pupupSuccess","popupfail","headers","Headers","auth","localStorage","getItem","append","ConfigWeb","a","baseUrlapi","Constants","BASE_URL","url","newComany_id","state","company_id","Output_newComany_id","axios","post","gameType","typeGame","then","res","Swal","fire","title","timer","setState","tabNameConfig","_id","icon","IoLogoBuffer","JSON","parse","i","tabcontent","tablinks","document","getElementsByClassName","length","classList","add","remove","replace","animation","getDataConfigWeb","ToggleViewConfigWeb","get","params","data","idUpdate","console","log","isLoading","css","override","size","loading","speedMultiplier","List","sx","maxWidth","bgcolor","component","aria-labelledby","map","item","ListItemButton","pl","ListItemIcon","ListItemText","fontSize","primary","error","checkUserExists","readOnly","classnames","onBlur","defaultProps"],"mappings":"6ZAIqBA,E,4MAIjBC,eAAiB,SAACC,EAAMC,GACpB,EAAKC,MAAMH,eAAeC,EAAMC,I,EAEpCE,cAAc,SAACC,EAAGJ,EAAMK,EAAWC,GAC/B,EAAKJ,MAAMC,cAAcC,EAAGJ,EAAMK,EAAWC,I,sDAPjD,SAAiBL,GACbM,KAAKL,MAAMM,iBAAiBP,K,oBASlC,WAAU,IAAD,OAEP,OACE,qCACE,qBAAKQ,MAAM,cAAX,SACE,cAACC,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNC,QAAS,kBAAM,EAAKL,iBAAiB,WAHvC,2CAQF,sBAAKC,MAAM,OAAX,UACE,gDACA,cAACK,EAAA,EAAD,CACEC,MAAM,QACNC,MAAM,mBACNC,KAAM,OACNC,SAAU,SAACd,GAAD,OAAO,EAAKD,cAClBC,EACA,qBACA,0BACA,4BAEJS,QAAS,SAACT,GAAOA,EAAEe,OAAOlB,MAAQ,KAAK,EAAKF,eAAe,0BAA2B,OAGxF,qBAAKU,MAAM,cAAX,SACE,qBACEW,IAAI,GACJC,MAAO,CAAEC,MAAO,SAChBC,OAAO,OACPC,IAAKjB,KAAKL,MAAMuB,uBAGpB,cAACX,EAAA,EAAD,CACEC,MAAM,yBACNC,MAAM,gCACNf,MAAOM,KAAKL,MAAMwB,uBAClBC,YAAY,GACZV,KAAM,OACNW,UAAU,OACVV,SAAU,SAACd,GACP,EAAKL,eAAe,yBAA0BK,EAAEe,OAAOlB,aAK/D,uBACA,sBAAKQ,MAAM,OAAX,UACE,+CACA,cAACK,EAAA,EAAD,CACEC,MAAM,QACNC,MAAM,mBACNC,KAAM,OACNC,SAAU,SAACd,GACT,EAAKD,cACHC,EACA,oBACA,yBACA,2BAGJS,QAAS,SAACT,GAAOA,EAAEe,OAAOlB,MAAQ,KAAK,EAAKF,eAAe,yBAA0B,OAEvF,qBAAKU,MAAM,cAAX,SACE,qBACEW,IAAI,GACJC,MAAO,CAAEC,MAAO,SAChBC,OAAO,OACPC,IAAKjB,KAAKL,MAAM2B,sBAGpB,cAACf,EAAA,EAAD,CACEC,MAAM,wBACNC,MAAM,gCACNf,MAAOM,KAAKL,MAAM4B,sBAClBH,YAAY,GACZV,KAAM,OACNW,UAAU,OACVV,SAAU,SAACd,GACT,EAAKL,eAAe,wBAAyBK,EAAEe,OAAOlB,oB,GA7F7B8B,a,+CCGlBC,G,mNAInBjC,eAAiB,SAACC,EAAMC,GACtB,EAAKC,MAAMH,eAAeC,EAAMC,I,EAElCE,cAAc,SAACC,EAAGJ,EAAMK,EAAWC,GACjC,EAAKJ,MAAMC,cAAcC,EAAGJ,EAAMK,EAAWC,I,EAEjD2B,cAAgB,SAACC,GACf,OAAc,MAAXA,EACY,GACNC,IAAOD,GAAUE,OAAO,e,sDAZjC,WACE7B,KAAKL,MAAMM,qB,oBAeb,WAAU,IAAD,OAEP,OACE,qCACE,qBAAKoB,UAAU,cAAf,SACE,cAAClB,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNC,QAAS,kBAAM,EAAKL,oBAHtB,2CAQF,eAAC6B,EAAA,EAAD,WACJ,cAACC,EAAA,EAAD,CAAOC,IAAI,cAAX,6BAGA,cAACC,EAAA,EAAD,CACEC,GAAG,WACHzC,KAAK,WACLC,MAAOM,KAAK0B,cAAc1B,KAAKL,MAAMwC,UACrCf,YAAY,mBACZV,KAAK,OACLC,SAAU,SAACd,GACT,EAAKL,eAAgB,WAAYK,EAAEe,OAAOlB,aAIhD,eAACoC,EAAA,EAAD,WACA,cAACC,EAAA,EAAD,CAAOC,IAAI,UAAX,8BAGE,cAACC,EAAA,EAAD,CACEC,GAAG,SACHzC,KAAK,SACL2B,YAAY,mBACZV,KAAK,OACLhB,MAAOM,KAAK0B,cAAc1B,KAAKL,MAAMyC,QACrCzB,SAAU,SAACd,GACT,EAAKL,eAAgB,SAAUK,EAAEe,OAAOlB,aAI5C,eAACoC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,WAAX,8BAGA,cAACC,EAAA,EAAD,CACEC,GAAG,WACHzC,KAAK,WACL2B,YAAY,mBACZV,KAAK,OACLhB,MAAOM,KAAKL,MAAM0C,SAClB1B,SAAU,SAACd,GACT,EAAKL,eAAgB,WAAYK,EAAEe,OAAOlB,aAI9C,eAACoC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,gCAGA,cAACE,EAAA,EAAD,CACEC,GAAG,SACHzC,KAAK,SACL2B,YAAY,mBACZV,KAAK,OACLhB,MAAOM,KAAKL,MAAM2C,OAClB3B,SAAU,SAACd,GACT,EAAKL,eAAgB,SAAUK,EAAEe,OAAOlB,aAO9C,eAACoC,EAAA,EAAD,WACF,cAACC,EAAA,EAAD,mDAGA,cAACE,EAAA,EAAD,CACExC,KAAM,aACN2B,YAAY,wCACZV,KAAK,SACLhB,MAAOM,KAAKL,MAAM4C,WAClB5B,SAAU,SAACd,GACT,EAAKL,eAAgB,aAAcK,EAAEe,OAAOlB,aAOlD,eAACoC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAOC,IAAI,gBAAX,oBAGA,eAACC,EAAA,EAAD,CACEC,GAAG,gBACHzC,KAAK,aACLC,MAAOM,KAAKL,MAAM6C,WAClB7B,SAAU,SAACd,GACT,EAAKL,eAAgB,aAAcK,EAAEe,OAAOlB,QAE9CgB,KAAK,SAPP,UASE,wBAAQhB,MAAQ,IAAhB,sBAGA,wBAAQA,MAAO,IAAf,mC,GA9H2B8B,cCDZC,E,4MAInBjC,eAAiB,SAACC,EAAMC,GACtB,EAAKC,MAAMH,eAAeC,EAAMC,I,EAElCE,cAAc,SAACC,EAAGJ,EAAMK,EAAWC,GACjC,EAAKJ,MAAMC,cAAcC,EAAGJ,EAAMK,EAAWC,I,sDAP/C,WACEC,KAAKL,MAAMM,qB,oBAQb,WAAU,IAAD,OACP,OACE,qCACE,qBAAKoB,UAAU,cAAf,SACE,cAAClB,EAAA,EAAD,CACEC,QAAQ,YACRC,MAAM,UACNC,QAAS,kBAAM,EAAKL,oBAHtB,2CAQF,cAACM,EAAA,EAAD,CACIC,MAAM,YACNC,MAAM,6BACNf,MAAOM,KAAKL,MAAM8C,UAClBrB,YAAa,GACbT,SAAU,SAACd,GACT,EAAKL,eAAgB,YAAaK,EAAEe,OAAOlB,UAGjD,cAACa,EAAA,EAAD,CACIC,MAAM,eACNC,MAAM,yDACNf,MAAOM,KAAKL,MAAM+C,aAClBtB,YAAa,GACbT,SAAU,SAACd,GACT,EAAKL,eAAgB,eAAgBK,EAAEe,OAAOlB,UAGpD,cAACa,EAAA,EAAD,CACIC,MAAM,YACNC,MAAM,iEACNf,MAAOM,KAAKL,MAAMgD,UAClBvB,YAAa,GACbT,SAAU,SAACd,GACT,EAAKL,eAAgB,YAAaK,EAAEe,OAAOlB,iB,GA9CxB8B,a,6CCa7BoB,EAAU,IAAIC,QACZC,EAAOC,aAAaC,QAAQ,QAClCJ,EAAQK,OAAO,gBAAiB,UAAYH,GAC5CF,EAAQK,OAAO,eAAgB,oB,IACzBC,E,kDACJ,WAAYvD,GAAQ,IAAD,8BACjB,cAAMA,IAwHRM,iBAzHmB,sBAyHA,kCAAAkD,EAAA,6DAEbC,EAAaC,IAAUC,SACvBC,EAAMH,EAAa,mBACjBI,EAAe,EAAKC,MAAMC,WAG9BC,EADEH,GAGoB,KATP,SAWXI,IACLC,KAAKN,EAAK,CACDO,SAAU,IACVJ,WAAYC,EACZlB,UAAW,EAAKgB,MAAMhB,UACtBC,aAAc,EAAKe,MAAMf,aACzBC,UAAW,EAAKc,MAAMd,UACtBR,SAAU,EAAKsB,MAAMtB,SACrBC,OAAQ,EAAKqB,MAAMrB,OACnBC,SAAU,EAAKoB,MAAMpB,SACrBC,OAAQ,EAAKmB,MAAMnB,OACnBC,WAAY,EAAKkB,MAAMlB,WACvBC,WAAY,EAAKiB,MAAMjB,WACvBuB,SAAU,MAEnBC,MAAK,SAACC,GACEC,IAAKC,KAAK,CACTC,MAAO,gCACPC,MAAO,SA7BA,2CAzHA,EA4JnB7E,eAAiB,SAACC,EAAMC,GACtB,EAAK4E,SAAL,eAAiB7E,EAAOC,KA3JxB,EAAK+D,MAAQ,CACXc,cAAe,CACb,CACEC,IAAK,KACL/E,KAAM,8BACNgF,KAAM,cAAC,IAAD,CAAY3D,MAAO,CAAEC,MAAO,QAASC,OAAQ,YAErD,CACEwD,IAAK,IACL/E,KAAM,yCACNgF,KAAM,cAAC,IAAD,CAAY3D,MAAO,CAAEC,MAAO,QAASC,OAAQ,YAGrD,CACEwD,IAAK,IACL/E,KAAM,cACNgF,KAAM,cAAC,IAAD,CAAa3D,MAAO,CAAEC,MAAO,QAASC,OAAQ,YAEtD,CACEwD,IAAK,IACL/E,KAAM,qBACNgF,KACE,cAAC,IAAD,CACE3D,MAAO,CAAEC,MAAO,QAASC,OAAQ,YAIvC,CACEwD,IAAK,IACL/E,KAAM,wBACNgF,KAAM,cAACC,EAAA,aAAD,CAAc5D,MAAO,CAAEC,MAAO,QAASC,OAAQ,aAGzD0C,WAAYiB,KAAKC,MAAM7B,aAAaC,QAAQ,SAASU,WACjDiB,KAAKC,MAAM7B,aAAaC,QAAQ,SAASU,WACzC,KACJjB,UAAW,GACXC,aAAc,GACdC,UAAW,GACXR,SAAU,GACVC,OAAQ,GACRC,SAAU,GACVC,OAAQ,GACRC,WAAY,GACZC,WAAY,IA9CG,E,uDAkDnB,SAAoBN,GAClB,IAAI2C,EAAGC,EAAYC,EACnBD,EAAaE,SAASC,uBAAuB,cAC7CF,EAAWC,SAASC,uBAAuB,YAC3C,IAAQV,EAAkBvE,KAAKyD,MAAvBc,cACR,IAAKM,EAAI,EAAGA,EAAIN,EAAcW,OAAQL,IAChCN,EAAcM,GAAGL,MAAQtC,EAC3B6C,EAASF,GAAGM,UAAUC,IAAI,0BAE1BL,EAASF,GAAGM,UAAUE,OAAO,0BAGjC,IAAKR,EAAI,EAAGA,EAAIC,EAAWI,OAAQL,IAC7BC,EAAWD,GAAG3C,GAAGoD,QAAQ,aAAc,MAAQpD,GACjD4C,EAAWD,GAAGM,UAAUC,IAAI,eAC5BN,EAAWD,GAAG/D,MAAMyE,UAAY,2BAEhCT,EAAWD,GAAGM,UAAUE,OAAO,eAC/BP,EAAWD,GAAG/D,MAAMyE,UAAY,U,sEAKtC,sBAAApC,EAAA,sEACUnD,KAAKwF,mBADf,OAEIxF,KAAKyF,oBAAoB,KAF7B,gD,2HAKA,yCAAAtC,EAAA,6DACMC,EAAaC,IAAUC,SACvBC,EAAMH,EAAa,oBACjBI,EAAexD,KAAKyD,MAAMC,WAG9BC,EADEH,GAGoB,KAR1B,SAUQI,IACH8B,IAAInC,EAAK,CACRoC,OAAQ,CACN7B,SAAU,IAEVJ,WAAYC,KAGfK,MAAK,SAACC,GAEL,IAAI2B,EAAO3B,EAAI2B,KAAKA,KAEjB,EAAKtB,SACN,CACEuB,SAAUD,EAAKpB,IACf/B,UAAWmD,EAAKnD,UAChBC,aAAckD,EAAKlD,aACnBC,UAAWiD,EAAKjD,UAChBR,SAAUyD,EAAKzD,SACfC,OAAQwD,EAAKxD,OACbC,SAAUuD,EAAKvD,SACfC,OAAQsD,EAAKtD,OACbC,WAAYqD,EAAKrD,WACjBC,WAAYoD,EAAKpD,aAEnB,WAEEsD,QAAQC,IAAI,EAAKtC,aArC3B,gD,0EAkFA,WAAU,IAAD,OACP,OAAKzD,KAAKyD,MAAMuC,UA4Fd,qBAAK3E,UAAU,gBAAf,SACE,cAAC,IAAD,CACE4E,IAAKC,EACLC,KAAM,GACN9F,MAAO,UACP+F,QAASpG,KAAKyD,MAAMuC,UACpBK,gBAAiB,QAhGnB,qBAAKhF,UAAU,kBAAf,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,MAAf,SACE,cAACiF,EAAA,EAAD,CACEC,GAAI,CACFxF,MAAO,OACPyF,SAAU,IACVC,QAAS,oBAEXC,UAAU,MACVC,kBAAgB,wBAPlB,SASG3G,KAAKyD,MAAMc,cACRvE,KAAKyD,MAAMc,cAAcqC,KAAI,SAACC,EAAMhC,GAClC,OACE,eAACiC,EAAA,EAAD,CAEEzF,UACQ,IAANwD,EACI,mCACA,YAENvE,QAAS,kBAAM,EAAKmF,oBAAoBoB,EAAKrC,MAC7C+B,GAAI,CAAEQ,GAAI,GARZ,UAUE,cAACC,EAAA,EAAD,UAAeH,EAAKpC,OACpB,cAACwC,EAAA,EAAD,CACE5F,UAAU,kBACVP,MAAO,CACLoG,SAAU,kBACV7G,MAAO,oBAET8G,QAASN,EAAKpH,SAhBXoH,EAAKrC,QAqBhB,SAGR,sBAAKnD,UAAU,cAAf,UACE,qBAAKa,GAAG,cAAcb,UAAU,aAAhC,SACE,cAAC,EAAD,CACEpB,iBAAkBD,KAAKC,iBACvBT,eAAgBQ,KAAKR,eAErBkD,aAAc1C,KAAKyD,MAAMf,aACzBD,UAAWzC,KAAKyD,MAAMhB,UACtBE,UAAW3C,KAAKyD,MAAMd,UACtBR,SAAUnC,KAAKyD,MAAMtB,SACrBC,OAAQpC,KAAKyD,MAAMrB,OACnBC,SAAUrC,KAAKyD,MAAMpB,SACrBC,OAAQtC,KAAKyD,MAAMnB,OACnBC,WAAYvC,KAAKyD,MAAMlB,WACvBC,WAAYxC,KAAKyD,MAAMjB,eAG3B,qBAAKN,GAAG,cAAcb,UAAU,aAAhC,SACE,cAAC,EAAD,CACEpB,iBAAkBD,KAAKC,iBACvBT,eAAgBQ,KAAKR,eAErB0B,mBAAoBlB,KAAKyD,MAAMvC,mBAC/BC,uBAAwBnB,KAAKyD,MAAMtC,uBACnCG,kBAAmBtB,KAAKyD,MAAMnC,kBAC9BC,sBAAuBvB,KAAKyD,MAAMlC,0BAGtC,qBAAKW,GAAG,cAAcb,UAAU,cAAhC,SACE,cAAC,EAAD,CACEpB,iBAAkBD,KAAKC,iBACvBT,eAAgBQ,KAAKR,eAErBkD,aAAc1C,KAAKyD,MAAMf,aACzBD,UAAWzC,KAAKyD,MAAMhB,UACtBE,UAAW3C,KAAKyD,MAAMd,UACtBR,SAAUnC,KAAKyD,MAAMtB,SACrBC,OAAQpC,KAAKyD,MAAMrB,OACnBC,SAAUrC,KAAKyD,MAAMpB,SACrBC,OAAQtC,KAAKyD,MAAMnB,OACnBC,WAAYvC,KAAKyD,MAAMlB,WACvBC,WAAYxC,KAAKyD,MAAMjB,2B,GArPjBhB,aA2QlB0E,EAAWD,cAAH,wFAMC/C,a,iCCxSf,mCAIM3C,EAAiB,SAAC,GAAqG,IAAnGC,EAAkG,EAAlGA,MAAOd,EAA2F,EAA3FA,MAAOe,EAAoF,EAApFA,MAAO2G,EAA6E,EAA7EA,MAAO1G,EAAsE,EAAtEA,KAAMC,EAAgE,EAAhEA,SAAU0G,EAAsD,EAAtDA,gBAAiBC,EAAqC,EAArCA,SAAUlG,EAA2B,EAA3BA,YAAad,EAAc,EAAdA,QAC5G,OACE,sBAAKe,UAAWkG,IAAW,aAAc,CAAE,YAAaH,IAAxD,UACE,uBAAO/F,UAAU,gBAAjB,SAAkCZ,IAClC,uBACEE,SAAUA,EACVL,QAASA,EACTkH,OAAQH,EACR3H,MAAOA,EACPgB,KAAMA,EACNjB,KAAMe,EACNY,YAAaA,EACbkG,SAAUA,EACVjG,UAAU,iBAEb+F,GAAS,sBAAM/F,UAAU,aAAhB,SAA8B+F,QAc5C7G,EAAekH,aAAe,CAC5B/G,KAAM,QAGOH","file":"static/js/86.928e7c68.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\r\n\r\nexport default class BannerAia extends Component {\r\n    SaveAllConfigWeb(value) {\r\n        this.props.SaveAllConfigWeb(value);\r\n    }\r\n    setStateByName = (name, value) => {\r\n        this.props.setStateByName(name, value);\r\n      };\r\n    onChangeImage=(e, name, name_link, name_show) =>{\r\n        this.props.onChangeImage(e, name, name_link, name_show);\r\n    }\r\n\r\n  render() {\r\n      \r\n    return (\r\n      <>\r\n        <div class=\"text-center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={() => this.SaveAllConfigWeb(\"banner\")}\r\n          >\r\n            Lưu thay đổi\r\n          </Button>\r\n        </div>\r\n        <div class=\"mt-3\">\r\n          <h1>Banner Desktop</h1>\r\n          <TextFieldGroup\r\n            field=\"image\"\r\n            label=\"Hình ảnh\"\r\n            type={\"file\"}\r\n            onChange={(e) => this.onChangeImage(\r\n                e,\r\n                \"imageBannerDesktop\",\r\n                \"imageBannerDesktop_link\",\r\n                \"imageBannerDesktop_show\"\r\n              )}\r\n            onClick={(e) => {e.target.value = null;this.setStateByName(\"imageBannerDesktop_show\", \"\")}} \r\n   \r\n          />\r\n          <div class=\"text-center\">\r\n            <img\r\n              alt=\"\"\r\n              style={{ width: \"400px\" }}\r\n              height=\"auto\"\r\n              src={this.props.imageBannerDesktop}\r\n            />\r\n          </div>\r\n          <TextFieldGroup\r\n            field=\"hrefImageBannerDesktop\"\r\n            label=\"Đường dẫn\"\r\n            value={this.props.hrefImageBannerDesktop}\r\n            placeholder=\"\"\r\n            type={\"text\"}\r\n            className=\"mt-3\"\r\n            onChange={(e) => {\r\n                this.setStateByName(\"hrefImageBannerDesktop\", e.target.value);\r\n              }}\r\n            \r\n          />\r\n        </div>\r\n        <hr />\r\n        <div class=\"mt-3\">\r\n          <h1>Banner Mobile</h1>\r\n          <TextFieldGroup\r\n            field=\"image\"\r\n            label=\"Hình ảnh\"\r\n            type={\"file\"}\r\n            onChange={(e) => {\r\n              this.onChangeImage(\r\n                e,\r\n                \"imageBannerMobile\",\r\n                \"imageBannerMobile_link\",\r\n                \"imageBannerMobile_show\"\r\n              );\r\n            }}\r\n            onClick={(e) => {e.target.value = null;this.setStateByName(\"imageBannerMobile_show\", \"\")}} \r\n          />\r\n          <div class=\"text-center\">\r\n            <img\r\n              alt=\"\"\r\n              style={{ width: \"400px\" }}\r\n              height=\"auto\"\r\n              src={this.props.imageBannerMobile}\r\n            />\r\n          </div>\r\n          <TextFieldGroup\r\n            field=\"hrefImageBannerMobile\"\r\n            label=\"Đường dẫn\"\r\n            value={this.props.hrefImageBannerMobile}\r\n            placeholder=\"\"\r\n            type={\"text\"}\r\n            className=\"mt-3\"\r\n            onChange={(e) => {\r\n              this.setStateByName(\"hrefImageBannerMobile\", e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport moment from 'moment'\r\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\r\nimport { Button, FormGroup, Label,Input  } from \"reactstrap\";\r\nimport {\r\n    CTextarea,\r\n  } from \"@coreui/react\";\r\nexport default class Seo extends Component {\r\n  SaveAllConfigWeb() {\r\n    this.props.SaveAllConfigWeb();\r\n  }\r\n  setStateByName = (name, value) => {\r\n    this.props.setStateByName(name, value);\r\n  };\r\n  onChangeImage=(e, name, name_link, name_show) =>{\r\n    this.props.onChangeImage(e, name, name_link, name_show);\r\n}\r\ngetTimeConver = (datetime) => {\r\n  if(datetime ==null )\r\n          return '';\r\n   return  moment(datetime).format('YYYY-MM-DD');\r\n\r\n}\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"text-center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={() => this.SaveAllConfigWeb()}\r\n          >\r\n            Lưu thay đổi\r\n          </Button>\r\n        </div>\r\n        <FormGroup>\r\n    <Label for=\"exampleDate\">\r\n     Từ ngày\r\n    </Label>\r\n    <Input\r\n      id=\"fromDate\"\r\n      name=\"fromDate\"\r\n      value={this.getTimeConver(this.props.fromDate)}\r\n      placeholder=\"date placeholder\"\r\n      type=\"date\"\r\n      onChange={(e) => {\r\n        this.setStateByName( \"fromDate\", e.target.value );\r\n      }}\r\n    />\r\n  </FormGroup>\r\n  <FormGroup>\r\n  <Label for=\"datetio\">\r\n     Tới ngày\r\n    </Label>\r\n    <Input\r\n      id=\"todate\"\r\n      name=\"todate\"\r\n      placeholder=\"Tới ngày\"\r\n      type=\"date\"\r\n      value={this.getTimeConver(this.props.todate)}\r\n      onChange={(e) => {\r\n        this.setStateByName( \"todate\", e.target.value );\r\n      }}\r\n    />\r\n  </FormGroup>\r\n    <FormGroup>\r\n      <Label for=\"fromtime\">\r\n        Từ giờ\r\n      </Label>\r\n      <Input\r\n        id=\"fromtime\"\r\n        name=\"fromtime\"\r\n        placeholder=\"time placeholder\"\r\n        type=\"time\"\r\n        value={this.props.fromtime}\r\n        onChange={(e) => {\r\n          this.setStateByName( \"fromtime\", e.target.value );\r\n        }}\r\n      />\r\n    </FormGroup>\r\n      <FormGroup>\r\n        <Label>\r\n          tới giờ\r\n        </Label>\r\n        <Input\r\n          id=\"totime\"\r\n          name=\"totime\"\r\n          placeholder=\"time placeholder\"\r\n          type=\"time\"\r\n          value={this.props.totime}\r\n          onChange={(e) => {\r\n            this.setStateByName( \"totime\", e.target.value );\r\n          }}\r\n        />\r\n      </FormGroup>\r\n   \r\n\r\n          \r\n      <FormGroup>\r\n    <Label >\r\n      Độ tuổi tham gia game\r\n    </Label>\r\n    <Input\r\n      name =\"skinNumber\"\r\n      placeholder=\"Độ tuổi thamg gia game\"\r\n      type=\"number\"\r\n      value={this.props.skinNumber}\r\n      onChange={(e) => {\r\n        this.setStateByName( \"skinNumber\", e.target.value );\r\n      }}\r\n    />\r\n  </FormGroup>\r\n     \r\n\r\n\r\n  <FormGroup>\r\n    <Label for=\"exampleSelect\">\r\n      Select\r\n    </Label>\r\n    <Input\r\n      id=\"exampleSelect\"\r\n      name=\"statusGame\"\r\n      value={this.props.statusGame}\r\n      onChange={(e) => {\r\n        this.setStateByName( \"statusGame\", e.target.value );\r\n      }}\r\n      type=\"select\"\r\n    >\r\n      <option value = \"0\" >\r\n         Bật\r\n      </option>\r\n      <option value =\"1\">\r\n        Tắt\r\n      </option>\r\n     \r\n    </Input>\r\n  </FormGroup>\r\n        </>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\r\nimport { Button } from \"reactstrap\";\r\nimport {\r\n    CTextarea,\r\n  } from \"@coreui/react\";\r\nexport default class Seo extends Component {\r\n  SaveAllConfigWeb() {\r\n    this.props.SaveAllConfigWeb();\r\n  }\r\n  setStateByName = (name, value) => {\r\n    this.props.setStateByName(name, value);\r\n  };\r\n  onChangeImage=(e, name, name_link, name_show) =>{\r\n    this.props.onChangeImage(e, name, name_link, name_show);\r\n}\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"text-center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={() => this.SaveAllConfigWeb()}\r\n          >\r\n            Lưu thay đổi\r\n          </Button>\r\n        </div>\r\n        <TextFieldGroup\r\n            field=\"poupintro\"\r\n            label=\"Poup giới thiệu:\"\r\n            value={this.props.poupintro}\r\n            placeholder={\"\"}\r\n            onChange={(e) => {\r\n              this.setStateByName( \"poupintro\", e.target.value );\r\n            }}\r\n        />\r\n        <TextFieldGroup\r\n            field=\"pupupSuccess\"\r\n            label=\"Câu thông  báo khi trúng thưởng:\"\r\n            value={this.props.pupupSuccess}\r\n            placeholder={\"\"}\r\n            onChange={(e) => {\r\n              this.setStateByName( \"pupupSuccess\", e.target.value );\r\n            }}\r\n        />\r\n        <TextFieldGroup\r\n            field=\"introduce\"\r\n            label=\"Câu thông báo khi không trúng thưởng:\"\r\n            value={this.props.popupfail}\r\n            placeholder={\"\"}\r\n            onChange={(e) => {\r\n              this.setStateByName( \"popupfail\", e.target.value );\r\n            }}\r\n        />  \r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Constants from \"./../../contants/contants\";\r\nimport axios from \"axios\";\r\nimport { css } from \"@emotion/react\";\r\nimport DotLoader from \"react-spinners/DotLoader\";\r\nimport { IoLogoBuffer } from \"@react-icons/all-files/io/IoLogoBuffer\";\r\nimport BannerAia from \"./configWeb/BannerAia\";\r\nimport Logo from \"./configWeb/GameConfig\";\r\nimport Seo from \"./configWeb/Content\";\r\nimport { BiSlideshow } from \"react-icons/bi\";\r\nimport { MdOutlinePermDataSetting } from \"react-icons/md\";\r\nimport { BsChatDots } from \"react-icons/bs\";\r\n\r\nimport Swal from 'sweetalert2';\r\nlet headers = new Headers();\r\nconst auth = localStorage.getItem(\"auth\");\r\nheaders.append(\"Authorization\", \"Bearer \" + auth);\r\nheaders.append(\"Content-Type\", \"application/json\");\r\nclass ConfigWeb extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tabNameConfig: [\r\n        {\r\n          _id: \"10\",\r\n          name: \"Thông tin tổng quan\",\r\n          icon: <BsChatDots style={{ width: \"24px \", height: \"24px \" }} />,\r\n        },\r\n        {\r\n          _id: \"5\",\r\n          name: \"Danh sách trúng thưởng\",\r\n          icon: <BsChatDots style={{ width: \"24px \", height: \"24px \" }} />,\r\n        },\r\n\r\n        {\r\n          _id: \"9\",\r\n          name: \"Banner game\",\r\n          icon: <BiSlideshow style={{ width: \"24px \", height: \"24px \" }} />,\r\n        },\r\n        {\r\n          _id: \"3\",\r\n          name: \"Nội dung game\",\r\n          icon: (\r\n            <MdOutlinePermDataSetting\r\n              style={{ width: \"24px \", height: \"24px \" }}\r\n            />\r\n          ),\r\n        },\r\n        {\r\n          _id: \"4\",\r\n          name: \"Cấu hình game\",\r\n          icon: <IoLogoBuffer style={{ width: \"24px \", height: \"24px \" }} />,\r\n        },\r\n      ],\r\n      company_id: JSON.parse(localStorage.getItem(\"user\")).company_id\r\n        ? JSON.parse(localStorage.getItem(\"user\")).company_id\r\n        : null,\r\n      poupintro: \"\",\r\n      pupupSuccess: \"\",\r\n      popupfail: \"\",\r\n      fromDate: \"\",\r\n      todate: \"\",\r\n      fromtime: \"\",\r\n      totime: \"\",\r\n      skinNumber: \"\",\r\n      statusGame: \"\",\r\n    };\r\n  }\r\n\r\n  ToggleViewConfigWeb(id) {\r\n    var i, tabcontent, tablinks;\r\n    tabcontent = document.getElementsByClassName(\"tabcontent\");\r\n    tablinks = document.getElementsByClassName(\"tablinks\");\r\n    const { tabNameConfig } = this.state;\r\n    for (i = 0; i < tabNameConfig.length; i++) {\r\n      if (tabNameConfig[i]._id === id) {\r\n        tablinks[i].classList.add(\"tabcontent-left-active\");\r\n      } else {\r\n        tablinks[i].classList.remove(\"tabcontent-left-active\");\r\n      }\r\n    }\r\n    for (i = 0; i < tabcontent.length; i++) {\r\n      if (tabcontent[i].id.replace(\"tabcontent\", \"\") === id) {\r\n        tabcontent[i].classList.add(\"defaultOpen\");\r\n        tabcontent[i].style.animation = \"hideOpa 1s ease-in-out\";\r\n      } else {\r\n        tabcontent[i].classList.remove(\"defaultOpen\");\r\n        tabcontent[i].style.animation = \"none\";\r\n      }\r\n    }\r\n  }\r\n \r\n  async componentDidMount() {\r\n      await this.getDataConfigWeb();\r\n      this.ToggleViewConfigWeb(\"9\");\r\n  }\r\n\r\n  async getDataConfigWeb() {\r\n    var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + \"/api/game/getInfo\";\r\n    const newComany_id = this.state.company_id;\r\n    let Output_newComany_id;\r\n    if (newComany_id) {\r\n      Output_newComany_id = newComany_id;\r\n    } else {\r\n      Output_newComany_id = \"-1\";\r\n    }\r\n    await axios\r\n      .get(url, {\r\n        params: {\r\n          gameType: \"1\",\r\n\r\n          company_id: Output_newComany_id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        \r\n        var data = res.data.data;\r\n        \r\n           this.setState(\r\n          {\r\n            idUpdate: data._id,\r\n            poupintro: data.poupintro,\r\n            pupupSuccess: data.pupupSuccess,\r\n            popupfail: data.popupfail,\r\n            fromDate: data.fromDate,\r\n            todate: data.todate,\r\n            fromtime: data.fromtime,\r\n            totime: data.totime,\r\n            skinNumber: data.skinNumber,\r\n            statusGame: data.statusGame\r\n          },\r\n          () => {\r\n\r\n            console.log(this.state);\r\n          }\r\n        );\r\n      });\r\n  }\r\n\r\n  SaveAllConfigWeb = async () => {\r\n\r\n    var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + \"/api/game/update\";\r\n    const newComany_id = this.state.company_id;\r\n    let Output_newComany_id;\r\n    if (newComany_id) {\r\n      Output_newComany_id = newComany_id;\r\n    } else {\r\n      Output_newComany_id = \"-1\";\r\n    }\r\n    await axios\r\n    .post(url, {\r\n              gameType: \"1\",\r\n              company_id: Output_newComany_id,\r\n              poupintro: this.state.poupintro,\r\n              pupupSuccess: this.state.pupupSuccess,\r\n              popupfail: this.state.popupfail,\r\n              fromDate: this.state.fromDate,\r\n              todate: this.state.todate, \r\n              fromtime: this.state.fromtime,\r\n              totime: this.state.totime, \r\n              skinNumber: this.state.skinNumber,\r\n              statusGame: this.state.statusGame,\r\n              typeGame: \"1\"\r\n    })\r\n    .then((res) => {\r\n             Swal.fire({\r\n              title: 'thao tác thành công!',\r\n              timer: 3000,    \r\n            });\r\n    });\r\n \r\n  };\r\n\r\n  setStateByName = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.isLoading) {\r\n      return (\r\n        <div className=\"animated fadeIn\">\r\n          <div className=\"flex-tabs\">\r\n            <div className=\"tab\">\r\n              <List\r\n                sx={{\r\n                  width: \"100%\",\r\n                  maxWidth: 360,\r\n                  bgcolor: \"background.paper\",\r\n                }}\r\n                component=\"nav\"\r\n                aria-labelledby=\"nested-list-subheader\"\r\n              >\r\n                {this.state.tabNameConfig\r\n                  ? this.state.tabNameConfig.map((item, i) => {\r\n                      return (\r\n                        <ListItemButton\r\n                          key={item._id}\r\n                          className={\r\n                            i === 0\r\n                              ? \" tablinks tabcontent-left-active\"\r\n                              : \" tablinks\"\r\n                          }\r\n                          onClick={() => this.ToggleViewConfigWeb(item._id)}\r\n                          sx={{ pl: 4 }}\r\n                        >\r\n                          <ListItemIcon>{item.icon}</ListItemIcon>\r\n                          <ListItemText\r\n                            className=\"tabcontent-left\"\r\n                            style={{\r\n                              fontSize: \"14px !important\",\r\n                              color: \"rgb(52, 71, 103)\",\r\n                            }}\r\n                            primary={item.name}\r\n                          />\r\n                        </ListItemButton>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </List>\r\n            </div>\r\n            <div className=\"tabcontents\">\r\n              <div id=\"tabcontent3\" className=\"tabcontent\">\r\n                <Seo\r\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\r\n                  setStateByName={this.setStateByName}\r\n         \r\n                  pupupSuccess={this.state.pupupSuccess}\r\n                  poupintro={this.state.poupintro}\r\n                  popupfail={this.state.popupfail}\r\n                  fromDate={this.state.fromDate}\r\n                  todate={this.state.todate}\r\n                  fromtime={this.state.fromtime}\r\n                  totime={this.state.totime}\r\n                  skinNumber={this.state.skinNumber}\r\n                  statusGame={this.state.statusGame}\r\n                />\r\n              </div>\r\n              <div id=\"tabcontent9\" className=\"tabcontent\">\r\n                <BannerAia\r\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\r\n                  setStateByName={this.setStateByName}\r\n                 \r\n                  imageBannerDesktop={this.state.imageBannerDesktop}\r\n                  hrefImageBannerDesktop={this.state.hrefImageBannerDesktop}\r\n                  imageBannerMobile={this.state.imageBannerMobile}\r\n                  hrefImageBannerMobile={this.state.hrefImageBannerMobile}\r\n                />\r\n              </div>\r\n              <div id=\"tabcontent4\" className=\"tabcontent \">\r\n                <Logo\r\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\r\n                  setStateByName={this.setStateByName}\r\n              \r\n                  pupupSuccess={this.state.pupupSuccess}\r\n                  poupintro={this.state.poupintro}\r\n                  popupfail={this.state.popupfail}\r\n                  fromDate={this.state.fromDate}\r\n                  todate={this.state.todate}\r\n                  fromtime={this.state.fromtime}\r\n                  totime={this.state.totime}\r\n                  skinNumber={this.state.skinNumber}\r\n                  statusGame={this.state.statusGame}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"sweet-loading\">\r\n        <DotLoader\r\n          css={override}\r\n          size={50}\r\n          color={\"#123abc\"}\r\n          loading={this.state.isLoading}\r\n          speedMultiplier={1.5}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nexport default ConfigWeb;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder, onClick }) => {\r\n  return (\r\n    <div className={classnames('form-group', { 'has-error': error })}>\r\n      <label className=\"control-label\">{label}</label>\r\n      <input\r\n        onChange={onChange}\r\n        onClick={onClick}\r\n        onBlur={checkUserExists}\r\n        value={value}\r\n        type={type}\r\n        name={field}\r\n        placeholder={placeholder}\r\n        readOnly={readOnly}\r\n        className=\"form-control\"\r\n      />\r\n    {error && <span className=\"help-block\">{error}</span>}\r\n    </div>  );\r\n}\r\n\r\nTextFieldGroup.propTypes = {\r\n  field: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  checkUserExists: PropTypes.func\r\n}\r\n\r\nTextFieldGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n\r\nexport default TextFieldGroup;\r\n"],"sourceRoot":""}