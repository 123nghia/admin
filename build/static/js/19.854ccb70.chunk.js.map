{"version":3,"sources":["contants/contants.js","functions/callAPI.js","views/Common/TextFieldGroup.js","views/base/tables/Order.js"],"names":["axios","require","default","defaults","baseURL","constants","BASE_URL","connect","a","url","data","token","type","options","headers","get","is_success","post","put","delete","del","TextFieldGroup","field","value","label","error","onChange","checkUserExists","readOnly","placeholder","onClick","className","classnames","onBlur","name","defaultProps","Headers","auth","localStorage","getItem","append","Order","props","getData","setState","isLoading","API_CONNECT","Constants","LIST_ORDER","res","val","pagination","dataApi","onDetail","id","modalCom","state","LIST_ORDER_DETAIL","dataDetail","list_product","key","hidden","action","modalDelete","arrPagination","indexPage","Authorization","this","i","j","temparray","arrTotal","length","slice","push","d","map","toLocaleUpperCase","includes","e","name_action","target","searchKey","css","override","size","color","loading","speedMultiplier","ble","colSpan","undefined","item","user_id","_id","total","Date","create_at","toLocaleDateString","toLocaleTimeString","style","styles","mgl5","outline","detail_id","float","count","v","isOpen","image","src","width","height","brand_id","category_id","price","Component","marginRight","flexLabel","flexOption","textDecoration","floatRight","marginTop","spinner","center","textAlign","tbody","overflowY","wh25","w5","wa10","row","success","danger","margin","tags","searchInput","display","userActive","userPending","nagemonNameCol","borderRadius"],"mappings":"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","file":"static/js/19.854ccb70.chunk.js","sourcesContent":["export default {\n  \"BASE_URL\" : \"https://api.thulamua.com\",\n  //\"BASE_URL\" : \"http://localhost:3008\",\n  \"LOGIN\" : \"/api/login\",\n  \"LIST_USER\": \"/api/list_user\",\n  \"ADD_USER\":\"/api/add_user\",\n  \"UPDATE_USER\":\"/api/update_user\",\n  \"DELETE_USER\":\"/api/delete_user\",\n  \"UPLOAD_AVATAR\": \"/api/upload_avatar\",\n\n  \"LIST_CATEGORY\": \"/api/list_category\",\n  \"ADD_CATEGORY\": \"/api/add_category\",\n  \"UPDATE_CATEGORY\": \"/api/update_category\",\n  \"DELETE_CATEGORY\": \"/api/delete_category\",\n  \"UPLOAD_CATEGORY\": \"/api/upload_category\",\n\n  \"LIST_BRAND\": \"/api/list_brand\",\n  \"ADD_BRAND\": \"/api/add_brand\",\n  \"UPDATE_BRAND\": \"/api/update_brand\",\n  \"DELETE_BRAND\": \"/api/delete_brand\",\n  \"UPLOAD_BRAND\": \"/api/upload_brand\",\n\n  \"LIST_PRODUCT\": \"/api/list_product\",\n  \"LIST_PRODUCT_CATEGORY\": \"/api/list_product_category\",\n  \"ADD_PRODUCT\": \"/api/add_product\",\n  \"UPDATE_PRODUCT\": \"/api/update_product\",\n  \"DELETE_PRODUCT\": \"/api/delete_product\",\n  \"UPLOAD_PRODUCT\": \"/api/upload_product\",\n  \"UPLOAD_PRODUCT_MULTIPLE\": \"/api/upload_product_multiple\",\n\n  \"LIST_ORDER\": \"/api/list_order\",\n  \"LIST_ORDER_DETAIL\": \"/api/list_order_detail\",\n  \"LIST_ORDER_BY_USER\": \"/api/list_order_by_user\",\n  \"ADD_ORDER\": \"/api/add_order\",\n\n  \"LIST_DEAL\": \"/api/list_deal\",\n  \"ADD_DEAL\": \"/api/add_deal\",\n  \"UPDATE_DEAL\": \"/api/update_deal\",\n  \"DELETE_DEAL\": \"/api/delete_deal\",\n  \"UPLOAD_DEAL\": \"/api/upload_deal\",\n\n  \"LIST_COUNT_ORDER\": \"/api/list_count_order\",\n\n  \"LIST_BANNER\": \"/api/get_banner\",\n  \"GET_BANNER_BY_ID\": \"/api/get_banner_by_id\",\n  \"ADD_BANNER\": \"/api/add_banners\",\n  \"UPADTE_BANNER\": \"/api/update_banner\",\n  \"DELETE_BANNER\": \"/api/delete_banner\",\n  \"UPLOAD_BANNER\": \"/api/upload_banner\"\n};\n","import constants from './../contants/contants'\n\nconst axios = require('axios').default;\naxios.defaults.baseURL = constants.BASE_URL;\n\nconst connect = async function (url = \"\", data = {}, token = \"\", type) {\n  let options = {};\n  // console.log(\"Token: \", token)\n  if (token) {\n    options = {\n      headers: token\n    };\n  }\n  try {\n    switch (type) {\n      case \"GET\":\n        let get = await axios.get(url, data, options);\n        if (get.is_success == false) {\n          return null;\n        }\n        return get.data;\n      case \"POST\":\n        let post = await axios.post(url, data, options);\n        if (post.is_success == false) {\n          return null;\n        }\n        return post.data;\n      case \"PUT\":\n        let put = await axios.put(url, data, options);\n        if (put.is_success == false) {\n          return null;\n        }\n        return put.data;\n      case \"DELETE\":\n        let del = await axios.delete(url, data, options);\n        if (del.is_success == false) {\n          return null;\n        }\n        return del.data;\n    }\n\n  } catch (reason) {\n    return reason;\n  }\n\n\n}\n\nexport default connect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder, onClick }) => {\n  return (\n    <div className={classnames('form-group', { 'has-error': error })}>\n      <label className=\"control-label\">{label}</label>\n      <input\n        onChange={onChange}\n        onClick={onClick}\n        onBlur={checkUserExists}\n        value={value}\n        type={type}\n        name={field}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        className=\"form-control\"\n      />\n    {error && <span className=\"help-block\">{error}</span>}\n    </div>  );\n}\n\nTextFieldGroup.propTypes = {\n  field: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checkUserExists: PropTypes.func\n}\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextFieldGroup;\n","import React, { Component } from 'react';\nimport CIcon from '@coreui/icons-react'\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Input,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n} from 'reactstrap';\n\nimport {\n  CButton,\n  CRow,\n  CCol\n} from '@coreui/react'\n\nimport API_CONNECT from \"../../../functions/callAPI\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport 'moment-timezone';\nimport Constants from \"../../../contants/contants\";\nimport TextFieldGroup from \"../../Common/TextFieldGroup\";\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\n\nclass Order extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      modalCom: false,\n      dataApi: [],\n      hidden: false,\n      action: 'new',\n      modalDelete: false,\n      delete: null,\n      arrPagination: [],\n      indexPage: 0,\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      type: localStorage.getItem('type'),\n      isLoading: false,\n      dataDetail: []\n    };\n  }\n  async componentDidMount() {\n    this.getData()\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden: false\n      })\n    } else {\n      this.setState({\n        hidden: true\n      })\n    }\n\n    this.setState({ arrPagination: arrTotal, data: arrTotal[0] });\n  }\n\n  getData = async () => {\n    this.setState({ isLoading: true });\n    var res = await API_CONNECT(\n      Constants.LIST_ORDER, {}, \"\", \"POST\")\n\n    let val = res.data;\n    this.pagination(val);\n    this.setState({ dataApi: val, isLoading: false })\n  }\n\n  searchKey() {\n    const { indexPage, key } = this.state;\n\n    if (key != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if (val.name.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n\n      this.setState({ data: d })\n    } else {\n      this.setState({ data: this.state.arrPagination[indexPage] })\n    }\n  }\n\n  actionSearch(e, name_action) {\n    this.setState({\n      [name_action]: e.target.value\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  resetSearch() {\n    this.setState({\n      key: ''\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  onDetail = async (id) => {\n    this.setState({ modalCom: !this.state.modalCom })\n    var res = await API_CONNECT(Constants.LIST_ORDER_DETAIL, { id: id }, \"\", \"POST\")\n\n    this.setState({ dataDetail: res.data.list_product })\n  }\n\n  render() {\n    const { data, arrPagination, dataDetail } = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Danh sách danh mục\n                </CardHeader>\n                <CardBody>\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        <th className=\"text-center\">Tên người dùng</th>\n                        <th className=\"text-center\">Mã đơn hàng</th>\n                        <th className=\"text-center\">Tổng</th>\n                        <th className=\"text-center\">Tạo ngày</th>\n                        <th className=\"text-center\">#</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <td colSpan=\"10\" hidden={this.state.hidden} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                <td className=\"text-center\">{item.user_id.name}</td>\n                                <td className=\"text-center\">{item._id}</td>\n                                <td className=\"text-center\">{item.total}</td>\n                                <td className=\"text-center\">\n                                  {(new Date(item.create_at)).toLocaleDateString() + ' ' + (new Date(item.create_at)).toLocaleTimeString()}\n                                </td>\n                                <td className=\"text-center\">\n                                  <CButton style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => {\n                                    await this.onDetail(item.detail_id)\n                                  }} >\n                                    Chi tiết\n                                  </CButton>{' '}\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n                </CardBody>\n              </Card>\n              <div style={{ float: 'right' }}>\n                <Pagination count={arrPagination.length} color=\"primary\" onChange={(e, v) => {\n                  this.setState({ data: arrPagination[v - 1], indexPage: v - 1 })\n                }} />\n              </div>\n            </Col>\n          </Row>\n\n          <Modal size=\"xl\" isOpen={this.state.modalCom} className={this.props.className}>\n            <ModalHeader>Thông tin đơn hàng</ModalHeader>\n            <ModalBody>\n              <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th className=\"text-center\">STT.</th>\n                    <th className=\"text-center\">Tên sản phẩm</th>\n                    <th className=\"text-center\">Hình ảnh</th>\n                    <th className=\"text-center\">Thương hiệu</th>\n                    <th className=\"text-center\">Danh mục</th>\n                    <th className=\"text-center\">Giá</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <td colSpan=\"10\" hidden={this.state.hidden} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                  {\n                    dataDetail != undefined ?\n                      dataDetail.map((item, i) => {\n                        return (\n                          <tr key={i}>\n                            <td className=\"text-center\">{i + 1}</td>\n                            <td className=\"text-center\">{item.name}</td>\n                            <td className=\"text-center\">\n                              {\n                                item.image == \"\" || item.image == null ?\n                                  <img src={\"https://www.chanchao.com.tw/VietnamPrintPack/images/default.jpg\"} width={\"60px\"} height={\"60px\"} /> :\n                                  <img src={`${Constants.BASE_URL}/public/image_product/${item.image}`} width={\"80px\"} height={\"60px\"} />\n                              }\n                            </td>\n                            <td className=\"text-center\">{item.brand_id.name}</td>\n                            <td className=\"text-center\">{item.category_id.name}</td>\n                            <td className=\"text-center\">{item.price}</td>\n                          </tr>\n                        );\n                      }) : \"\"\n                  }\n                </tbody>\n              </table>\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"secondary\" onClick={e => {\n                this.setState({ modalCom: !this.state.modalCom })\n              }}>Cancel</CButton>\n            </ModalFooter>\n          </Modal>\n        </div>\n      );\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst styles = {\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: 300\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: \"right\",\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh25: {\n    width: \"25%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  w5: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    margin: '5px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\"\n  },\n  searchInput: {\n    width: \"190px\",\n    display: 'inline-block',\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n}\n\nexport default Order;\n"],"sourceRoot":""}