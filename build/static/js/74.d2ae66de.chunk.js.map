{"version":3,"sources":["views/base/tables/ListCustomer.js","views/Common/TextFieldGroup.js","redux/data/actions.js"],"names":["headers","Headers","auth","localStorage","getItem","append","Users","props","getUserSale","sale_id","a","company_id","state","setState","isLoading","id","JSON","parse","bodyCustomer","condition","Company_Id","Sale_Id","axios","baseURL","Constants","BASE_URL","url","LIST_CUSTOMER","method","data","token","res","pagination","dataApi","active","map","val","Status","totalActive","getAllData","resAll","arrCount_All_User","i","length","getSaleDataOfUser","Address","NameSale","Name","push","hidden_all","pagination_all","getData","role","bodyUser","GET_SHOP","GET_SALE","key","keyName","keyEmail","keyPhone","keyGender","keyStatus","activePage","page","itemsCount","limit","modalCom","viewingUser","communities","updated","action","Email","Phone","Gender","Role_Id","UserName","Password","Code","modalDelete","delete","dataCompany","currentCompany","dataSale","currentSale","dataRole","currentRole","arrPagination","indexPage","arrPagination_All","indexPage_All","see_detail","month","arrTemp","arrMonth","arrMonthWithDefault","hidden","nameSale","dataAll","isSale","Authorization","arrAllUser","this","arr","to","window","location","hash","href","GET_SEEDER","onSaveSeed","history","j","temparray","arrTotal","slice","phone","filter","DATA_SALE","console","log","LIST_ROLE","resRole","undefined","LIST_ROLE_WITH_ID","e","target","name","value","tableUserSale_forSale","getDataUser_ForSale","status","d","toLocaleUpperCase","includes","name_action","searchKey","className","type","color","height","width","style","styles","tags","sm","lg","searchInput","onChange","actionSearch","placeholder","flexOption","custom","item","marginTop","size","onClick","resetSearch","colSpan","getBadge","Date","Create_Date","toLocaleDateString","toLocaleTimeString","float","marginRight","padding","row","isOpen","field","label","readOnly","flexLabel","htmlFor","selected","_id","toggle","disabled","Component","wa10","sale_times","textAlign","margin","textDecoration","floatRight","spinner","center","tbody","overflowY","wh12","ws12","wh15","w5","w5_10","success","danger","mgl5","marginLeft","display","userActive","userPending","nagemonNameCol","image","borderRadius","connect","getData_AllAPI","onSaveID","TextFieldGroup","error","checkUserExists","classnames","onBlur","defaultProps","SAVE_ID_SALE","payload","seed","SAVE_SEED"],"mappings":"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","file":"static/js/74.d2ae66de.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Button, Input,\r\n  ModalHeader, ModalBody, ModalFooter, Modal,\r\n} from 'reactstrap';\r\n\r\nimport {\r\n  CSelect,\r\n  CRow,\r\n  CCol,\r\n  CBadge\r\n} from '@coreui/react'\r\n\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  onSaveID,\r\n  onSaveSeed\r\n} from '../../../redux/data/actions'\r\nimport 'moment-timezone';\r\nimport Constants from \"./../../../contants/contants\";\r\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\r\nimport axios from 'axios'\r\nimport ReactLoading from 'react-loading';\r\n\r\nlet headers = new Headers();\r\nconst auth = localStorage.getItem('auth');\r\nheaders.append('Authorization', 'Bearer ' + auth);\r\nheaders.append('Content-Type', 'application/json');\r\n\r\nclass Users extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      key: '',\r\n      keyName: '',\r\n      keyEmail: '',\r\n      keyPhone: '',\r\n      keyGender: '',\r\n      keyStatus: '',\r\n      activePage: 1,\r\n      page: 1,\r\n      itemsCount: 0,\r\n      limit: 20,\r\n      totalActive: 0,\r\n      modalCom: false,\r\n      viewingUser: {},\r\n      communities: [],\r\n      updated: '',\r\n      dataApi: [],\r\n      action: 'new',\r\n      Email: '',\r\n      Address: '',\r\n      Name: '',\r\n      Phone: '',\r\n      Gender: 'Nam',\r\n      Company_Id: '',\r\n      Role_Id: '',\r\n      UserName: '',\r\n      Password: '',\r\n      Sale_Id: '',\r\n      Code: '',\r\n      Status: '',\r\n      modalDelete: false,\r\n      delete: null,\r\n      dataCompany: [],\r\n      currentCompany: '',\r\n      dataSale: [],\r\n      currentSale: '',\r\n      dataRole: [],\r\n      currentRole: '',\r\n      arrPagination: [],\r\n      indexPage: 0,\r\n      arrPagination_All: [],\r\n      indexPage_All: 0,\r\n      role: localStorage.getItem('role'),\r\n      company_id: localStorage.getItem('user'),\r\n      see_detail: true,\r\n      month: 0,\r\n      arrTemp: [],\r\n      arrMonth: [\r\n        \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\",\r\n      ],\r\n      arrMonthWithDefault: [\r\n        \"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\",\r\n      ],\r\n      isLoading: true,\r\n      hidden: false,\r\n      nameSale: '',\r\n      dataAll: [],\r\n      hidden_all: false,\r\n      isSale: false,\r\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\r\n      arrAllUser: []\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    this.getAllData();\r\n    let arr = JSON.parse(localStorage.getItem('url'));\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (\"#\" + arr[i].to == window.location.hash) {\r\n        if (arr[i].hidden == true) {\r\n          window.location.href = '#/'\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  async getSeeder() {\r\n    const res = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.GET_SEEDER,\r\n      method: 'POST',\r\n      data: {\r\n        \"email\": \"ktpm489@gmail.com\"\r\n      }\r\n    })\r\n    this.props.onSaveSeed(res.data.data);\r\n    this.props.history.push('/history')\r\n  }\r\n\r\n  pagination(dataApi) {\r\n    var i, j, temparray, chunk = 5;\r\n    var arrTotal = [];\r\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\r\n      temparray = dataApi.slice(i, i + chunk);\r\n      arrTotal.push(temparray);\r\n    }\r\n    if (arrTotal.length == 0) {\r\n      this.setState({\r\n        hidden: false\r\n      })\r\n    } else {\r\n      this.setState({\r\n        hidden: true\r\n      })\r\n    }\r\n    this.setState({ arrPagination: arrTotal, data: arrTotal[this.state.indexPage] });\r\n  }\r\n\r\n  pagination_all(dataApi) {\r\n    var i, j, temparray, chunk = 5;\r\n    let arrTotal = [];\r\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\r\n      temparray = dataApi.slice(i, i + chunk);\r\n      arrTotal.push(temparray);\r\n    }\r\n    if (arrTotal.length == 0) {\r\n      this.setState({\r\n        hidden_all: false\r\n      })\r\n    } else {\r\n      this.setState({\r\n        hidden_all: true\r\n      })\r\n    }\r\n    this.setState({ arrPagination_All: arrTotal, dataAll: arrTotal[this.state.indexPage_All] });\r\n  }\r\n\r\n  getUserSale = async (sale_id) => {\r\n    const { company_id } = this.state;\r\n    this.setState({ isLoading: true });\r\n    var id = JSON.parse(company_id);\r\n\r\n    var bodyCustomer = {\r\n      condition: {\r\n        Company_Id: id.company_id,\r\n        Sale_Id: sale_id\r\n      }\r\n    }\r\n\r\n    var res = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.LIST_CUSTOMER,\r\n      method: 'POST',\r\n      data: bodyCustomer,\r\n      headers: this.state.token\r\n    })\r\n\r\n    this.pagination(res.data.data);\r\n    this.setState({ dataApi: res.data.data });\r\n\r\n    let active = 0\r\n\r\n    res.data.data.map(val => {\r\n      if (val.Status == \"Actived\") {\r\n        active = active + 1\r\n      }\r\n    })\r\n\r\n    this.setState({ isLoading: false, totalActive: active });\r\n  }\r\n\r\n  countType(arr, phone) {\r\n    const count = arr.filter(data => data.Phone == phone);\r\n    return count.length;\r\n  }\r\n\r\n  getAllData = async () => {\r\n    const { company_id } = this.state;\r\n    this.setState({ isLoading: true });\r\n\r\n    var resAll = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.LIST_CUSTOMER,\r\n      method: 'POST',\r\n      headers: this.state.token\r\n    })\r\n\r\n    let arrCount_All_User = [];\r\n\r\n    // this.getSaleDataOfUser()\r\n\r\n    for (let i = 0; i < resAll.data.data.length; i++) {\r\n      //check if exits in arr\r\n      //if (!arrCount_All_User.some(item => resAll.data.data[i].Name == item.Name)) {\r\n      var data = await this.getSaleDataOfUser(resAll.data.data[i].Sale_Id);\r\n      resAll.data.data[i].Address = data.Address;\r\n      resAll.data.data[i].NameSale = data.Name;\r\n      arrCount_All_User.push(resAll.data.data[i])\r\n      //}\r\n    }\r\n    // console.log(arrCount_All_User)\r\n    if (arrCount_All_User.length == 0) {\r\n      this.setState({\r\n        hidden_all: false\r\n      })\r\n    } else {\r\n      this.setState({\r\n        hidden_all: true\r\n      })\r\n    }\r\n\r\n    this.setState({ dataApi: arrCount_All_User });\r\n\r\n    this.pagination_all(arrCount_All_User);\r\n    this.setState({ isLoading: false });\r\n  }\r\n\r\n  getData = async () => {\r\n    const { company_id, role } = this.state;\r\n    this.setState({ isLoading: true });\r\n    var id = JSON.parse(company_id);\r\n\r\n    var bodyUser = {\r\n      company_id: id.company_id\r\n    }\r\n\r\n    var bodyCustomer = {\r\n      condition: {\r\n        Company_Id: id.company_id,\r\n        Sale_Id: id.sale_id\r\n      }\r\n    }\r\n    if (role == 'ADMIN' || role == 'ADMINSALE') {\r\n      var res = await axios({\r\n        baseURL: Constants.BASE_URL,\r\n        url: Constants.GET_SHOP,\r\n        method: 'POST',\r\n        headers: this.state.token\r\n      });\r\n\r\n    } else if (role == 'SHOPMANAGER') {\r\n      var res = await axios({\r\n        baseURL: Constants.BASE_URL,\r\n        url: Constants.GET_SALE,\r\n        method: 'POST',\r\n        data: bodyUser,\r\n        headers: this.state.token\r\n      });\r\n\r\n    } else if (role == 'SALES') {\r\n      var res = await axios({\r\n        baseURL: Constants.BASE_URL,\r\n        url: Constants.LIST_CUSTOMER,\r\n        method: 'POST',\r\n        data: bodyCustomer,\r\n        headers: this.state.token\r\n      })\r\n    }\r\n\r\n    this.pagination(res.data.data);\r\n    this.setState({ dataApi: res.data.data });\r\n\r\n    let active = 0\r\n\r\n    res.data.data.map(val => {\r\n      if (val.Status == \"Actived\") {\r\n        active = active + 1\r\n      }\r\n    })\r\n\r\n    this.setState({ isLoading: false, totalActive: active });\r\n  }\r\n\r\n  async getSaleDataOfUser(sale_id) {\r\n    let res = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.DATA_SALE,\r\n      method: 'POST',\r\n      data: {\r\n        sale_id: sale_id\r\n      }\r\n    });\r\n    console.log(res.data.data[0])\r\n    return { Address: res.data.data[0].Address, Name: res.data.data[0].Name } ;\r\n\r\n  }\r\n\r\n  async getRoleData(id) {\r\n    const resRole = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.LIST_ROLE,\r\n      method: 'GET',\r\n      headers: this.state.token\r\n    });\r\n\r\n    if (id != '' || id != undefined) {\r\n      const currentRole = await axios({\r\n        baseURL: Constants.BASE_URL,\r\n        url: Constants.LIST_ROLE_WITH_ID + id,\r\n        method: 'GET',\r\n        headers: this.state.token\r\n      });\r\n      if (currentRole.data.data != null || currentRole.data.data != undefined) {\r\n        this.setState({ currentRole: currentRole.data.data.Name });\r\n      }\r\n    }\r\n    this.setState({ dataRole: resRole.data.data });\r\n  }\r\n\r\n  inputChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  async getDataUser_ForSale(month) {\r\n    const { role } = this.state;\r\n    if (role == 'SALES') {\r\n      this.setState({ isSale: true, month: month })\r\n      await this.tableUserSale_forSale(month);\r\n    }\r\n  }\r\n\r\n  async check(e) {\r\n    if (e.target.value == \"00\") {\r\n      this.getData();\r\n      this.setState({ isSale: false })\r\n    } else {\r\n      await this.getDataUser_ForSale(e.target.value);\r\n      this.setState({ month: e.target.value })\r\n    }\r\n  }\r\n\r\n  getBadge(status) {\r\n    switch (status) {\r\n      case 'Actived': return 'success'\r\n      case 'Inactive': return 'secondary'\r\n      case 'Locked': return 'warning'\r\n      case 'Deactived': return 'danger'\r\n      default: return 'primary'\r\n    }\r\n  }\r\n\r\n  searchKey() {\r\n    const { indexPage_All, key, keyStatus } = this.state;\r\n\r\n    if (key != '' || keyStatus != '') {\r\n      let d = []\r\n      this.state.dataApi.map(val => {\r\n        if ((val.Name.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\r\n          val.Email.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\r\n          val.Phone.toLocaleUpperCase().includes(key.toLocaleUpperCase())) &&\r\n          val.Status.toLocaleUpperCase().includes(keyStatus.toLocaleUpperCase())) {\r\n          d.push(val)\r\n        }\r\n      })\r\n      let active = 0\r\n\r\n      d.map(val => {\r\n        if (val.Status == \"Actived\") {\r\n          active = active + 1\r\n        }\r\n      })\r\n\r\n      this.setState({ dataAll: d, totalActive: active })\r\n    } else {\r\n      let active = 0\r\n\r\n      this.state.dataApi.map(val => {\r\n        if (val.Status == \"Actived\") {\r\n          active = active + 1\r\n        }\r\n      })\r\n\r\n      this.setState({ dataAll: this.state.arrPagination_All[indexPage_All], totalActive: active })\r\n    }\r\n  }\r\n\r\n\r\n  actionSearch(e, name_action) {\r\n    this.setState({\r\n      [name_action]: e.target.value\r\n    }, () => {\r\n      this.searchKey();\r\n    });\r\n  }\r\n\r\n  resetSearch() {\r\n    this.setState({\r\n      keyName: '',\r\n      keyEmail: '',\r\n      keyPhone: '',\r\n      keyGender: '',\r\n      keyStatus: ''\r\n    }, () => {\r\n      this.searchKey();\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { key, dataCompany, dataAll, arrPagination_All, indexPage_All,\r\n      currentCompany, action, dataRole, currentRole, hidden_all } = this.state;\r\n\r\n    if (!this.state.isLoading) {\r\n      return (\r\n        <div>\r\n          <Card>\r\n            <CardHeader>\r\n\r\n              Danh sách khách hàng ( Page: {this.state.indexPage + 1} )\r\n\r\n              <div style={styles.tags}>\r\n                <CRow>\r\n                  <CCol sm=\"6\" lg=\"12\">\r\n                    <CRow>\r\n                      <CCol sm=\"6\" lg=\"4\">\r\n                        <div>\r\n                          <Input style={styles.searchInput} onChange={(e) => {\r\n                            this.actionSearch(e, \"key\");\r\n                          }} name=\"key\" value={key} placeholder=\"Từ khóa\" />\r\n                        </div>\r\n                      </CCol>\r\n                      <CCol sm=\"6\" lg=\"4\">\r\n                        <CSelect style={styles.flexOption} onChange={e => {\r\n\r\n                          this.actionSearch(e, \"keyStatus\");\r\n\r\n                        }} custom>\r\n                          {\r\n                            ['Actived', 'Deactived', 'Locked'].map((item, i) => {\r\n                              return (\r\n                                <option value={item}>{item}</option>\r\n                              );\r\n                            })\r\n                          }\r\n                        </CSelect>\r\n                      </CCol>\r\n                      <CCol sm=\"6\" lg=\"4\">\r\n                        <Button color=\"primary\" style={{ width: '100%', marginTop: 5 }} size=\"sm\" onClick={e => { this.resetSearch() }}>Làm mới tìm kiếm</Button>\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CCol>\r\n                  <CCol sm=\"6\" lg=\"12\">\r\n                    {/* <Button outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={e => this.toggleModal(\"new\")}>Thêm mới</Button> */}\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </CardHeader>\r\n            <CardBody>\r\n              {\r\n                <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                  <thead className=\"thead-light\">\r\n                    <tr>\r\n                      <th className=\"text-center\">STT.</th>\r\n                      <th className=\"text-center\">Tên</th>\r\n                      <th className=\"text-center\">Tên Sale</th>\r\n                      <th className=\"text-center\">Địa chỉ shop</th>\r\n                      <th className=\"text-center\">Email</th>\r\n                      <th className=\"text-center\">Số điện thoại</th>\r\n                      <th className=\"text-center\">Giới tính</th>\r\n                      <th className=\"text-center\">Trạng thái</th>\r\n                      <th className=\"text-center\">Ngày tạo</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    <td colSpan=\"8\" hidden={hidden_all} className=\"text-center\">Không tìm thấy dữ liệu</td>\r\n                    {\r\n                      dataAll != undefined ?\r\n                        dataAll.map((item, i) => {\r\n                          return (\r\n                            <tr key={i}>\r\n                              <td className=\"text-center\">{i + 1}</td>\r\n                              <td className=\"text-center\">{item.Name}</td>\r\n                              <td className=\"text-center\">{item.NameSale}</td>\r\n                              <td className=\"text-center\">{item.Address}</td>\r\n                              <td className=\"text-center\">{item.Email}</td>\r\n                              <td className=\"text-center\">{item.Phone}</td>\r\n                              <td className=\"text-center\">{item.Gender}</td>\r\n                              <td className=\"text-center\">\r\n                                <CBadge color={this.getBadge(item.Status)}>\r\n                                  {item.Status}\r\n                                </CBadge>\r\n                              </td>\r\n                              <td className=\"text-center\">\r\n                                {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\r\n                              </td>\r\n                            </tr>\r\n                          );\r\n                        }) : \"\"\r\n                    }\r\n                  </tbody>\r\n                </table>\r\n              }\r\n            </CardBody>\r\n          </Card>\r\n          {\r\n            arrPagination_All.length == 1 ? \"\" :\r\n              <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\r\n                <tr style={styles.row}>\r\n                  {\r\n                    arrPagination_All.map((item, i) => {\r\n                      return (\r\n                        <td>\r\n                          <Button style={styles.pagination} color={i == indexPage_All ? 'primary' : 'danger'} onClick={e => { this.setState({ dataAll: arrPagination_All[i], indexPage_All: i }) }}>{i + 1}</Button>\r\n                        </td>\r\n                      );\r\n                    })\r\n                  }\r\n                </tr>\r\n              </div>\r\n          }\r\n\r\n          <Modal isOpen={this.state.modalCom} className={this.props.className}>\r\n            <ModalHeader>{this.state.action == 'new' ? `Tạo mới` : `Cập nhật`}</ModalHeader>\r\n            <ModalBody>\r\n              <TextFieldGroup\r\n                field=\"Email\"\r\n                label=\"Email\"\r\n                value={this.state.Email}\r\n                placeholder={\"Email\"}\r\n                type={'email'}\r\n                onChange={e => this.onChange(\"Email\", e.target.value)}\r\n              // rows=\"5\"\r\n              />\r\n              <TextFieldGroup\r\n                field=\"Address\"\r\n                label=\"Address\"\r\n                value={this.state.Address}\r\n                placeholder={\"Email\"}\r\n                type={'email'}\r\n                onChange={e => this.onChange(\"Address\", e.target.value)}\r\n              // rows=\"5\"\r\n              />\r\n              <TextFieldGroup\r\n                field=\"Name\"\r\n                label=\"Name\"\r\n                value={this.state.Name}\r\n                placeholder={\"Name\"}\r\n                // error={errors.title}\r\n                onChange={e => this.onChange(\"Name\", e.target.value)}\r\n              // rows=\"5\"\r\n              />\r\n\r\n              <TextFieldGroup\r\n                field=\"Password\"\r\n                label=\"Password\"\r\n                value={this.state.Password}\r\n                type={\"password\"}\r\n                placeholder={\"Password\"}\r\n                readOnly={action == 'new' ? false : true}\r\n                onChange={e => this.onChange(\"Password\", e.target.value)}\r\n              // rows=\"5\"\r\n              />\r\n\r\n              <TextFieldGroup\r\n                field=\"Code\"\r\n                label=\"Code\"\r\n                placeholder={\"Code\"}\r\n                value={this.state.Code}\r\n                // error={errors.title}\r\n                onChange={e => this.onChange(\"Code\", e.target.value)}\r\n              // rows=\"5\"\r\n              />\r\n\r\n              <TextFieldGroup\r\n                field=\"UserName\"\r\n                label=\"UserName\"\r\n                placeholder={\"Username\"}\r\n                value={this.state.UserName}\r\n                // error={errors.title}\r\n                onChange={e => this.onChange(\"UserName\", e.target.value)}\r\n              // rows=\"5\"\r\n              />\r\n\r\n              <TextFieldGroup\r\n                field=\"Phone\"\r\n                label=\"Phone\"\r\n                value={this.state.Phone}\r\n                placeholder={\"Phone\"}\r\n                // error={errors.title}\r\n                onChange={e => this.onChange(\"Phone\", e.target.value)}\r\n              // rows=\"5\"\r\n              />\r\n\r\n              <div>\r\n                <label style={styles.flexLabel} htmlFor=\"tag\">Gender:    </label>\r\n                <select style={styles.flexOption} name=\"Gender\" onChange={e => this.onChange(\"Gender\", e.target.value)}>\r\n                  <option value={this.state.Gender}>{this.state.Gender == '' ? ` - - - - - - - - - - ` : this.state.Gender}</option>\r\n                  <option value={'Nam'}>Nam</option>\r\n                  <option value={'Nữ'}>Nữ</option>\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label style={styles.flexLabel} htmlFor=\"tag\">Company:    </label>\r\n                <select style={styles.flexOption} name=\"Company_Id\" onChange={e => this.onChange(\"Company_Id\", e.target.value)}>\r\n                  <option value={this.state.Company_Id}>-----</option>\r\n                  {\r\n                    dataCompany.map((item, i) => {\r\n                      if (item.Name == currentCompany) {\r\n                        return (\r\n                          <option selected value={item._id}>{item.Name}</option>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <option value={item._id}>{item.Name}</option>\r\n                        );\r\n                      }\r\n                    })\r\n                  }\r\n                </select>\r\n              </div>\r\n\r\n              <div>\r\n                <label style={styles.flexLabel} htmlFor=\"tag\">Role:    </label>\r\n                <select style={styles.flexOption} name=\"Role_Id\" onChange={e => this.onChange(\"Role_Id\", e.target.value)}>\r\n                  <option value={this.state.Role_Id}>-----</option>\r\n                  {\r\n                    dataRole.map((item, i) => {\r\n                      if (item.Name == currentRole) {\r\n                        return (\r\n                          <option selected value={item._id}>{item.Name}</option>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <option value={item._id}>{item.Name}</option>\r\n                        );\r\n                      }\r\n                    })\r\n                  }\r\n                </select>\r\n              </div>\r\n\r\n              {/* <div>\r\n                <label style={styles.flexLabel} htmlFor=\"tag\">Sale:    </label>\r\n                <select style={styles.flexOption} name=\"Sale_Id\" onChange={e => this.onChange(\"Sale_Id\", e.target.value)}>\r\n                  <option value={this.state.Sale_Id}>-----</option>\r\n                  {\r\n                    dataSale.map((item, i) => {\r\n                      if (item.Name == currentSale) {\r\n                        return (\r\n                          <option selected value={item._id}>{item.Name}</option>\r\n                        );\r\n                      } else {\r\n                        return (\r\n                          <option value={item._id}>{item.Name}</option>\r\n                        );\r\n                      }\r\n                    })\r\n                  }\r\n                </select>\r\n              </div> */}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n\r\n            </ModalFooter>\r\n          </Modal>\r\n\r\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\r\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Xoá`}</ModalHeader>\r\n            <ModalBody>\r\n              <label htmlFor=\"tag\">{`Do you want to delete user \"${this.state.delete ? this.state.delete.Email : ''}\" ?`}</label>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Xoá</Button>{' '}\r\n              <Button color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Đóng</Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"d-flex justify-content-center\">\r\n        <ReactLoading type={\"balls\"} color={\"orange\"} height={'5%'} width={'5%'} />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  wa10: {\r\n    width: \"5%\",\r\n    float: \"left\",\r\n    height: \"60px\"\r\n  },\r\n  sale_times: {\r\n    width: \"8%\",\r\n    float: \"left\",\r\n    height: \"60px\",\r\n    textAlign: 'center'\r\n  },\r\n  pagination: {\r\n    marginRight: '5px'\r\n  },\r\n  flexLabel: {\r\n    width: 100\r\n  },\r\n  flexOption: {\r\n    width: 160,\r\n    margin: '1px'\r\n  },\r\n  a: {\r\n    textDecoration: 'none'\r\n  },\r\n  floatRight: {\r\n    float: \"right\",\r\n    marginTop: '3px'\r\n  },\r\n  spinner: {\r\n    width: \"30px\"\r\n  },\r\n  center: {\r\n    textAlign: \"center\"\r\n  },\r\n  tbody: {\r\n    height: \"380px\",\r\n    overflowY: \"auto\"\r\n  },\r\n  wh12: {\r\n    width: \"11%\",\r\n    float: \"left\",\r\n    height: \"60px\",\r\n    textAlign: 'center'\r\n  },\r\n  ws12: {\r\n    width: \"13%\",\r\n    float: \"left\",\r\n    height: \"60px\",\r\n    textAlign: 'center'\r\n  },\r\n  wh15: {\r\n    width: \"15%\",\r\n    float: \"left\",\r\n    height: \"60px\",\r\n    textAlign: 'center'\r\n  },\r\n  w5: {\r\n    width: \"22%\",\r\n    float: \"left\",\r\n    height: \"60px\"\r\n  },\r\n  w5_10: {\r\n    width: \"5%\",\r\n    float: \"left\",\r\n    height: \"60px\"\r\n  },\r\n  row: {\r\n    float: \"left\",\r\n    width: \"100%\"\r\n  },\r\n  success: {\r\n    color: 'green'\r\n  },\r\n  danger: {\r\n    color: 'red'\r\n  },\r\n  mgl5: {\r\n    marginLeft: '5px'\r\n  },\r\n  tags: {\r\n    float: \"right\",\r\n    marginRight: \"5px\"\r\n  },\r\n  searchInput: {\r\n    width: \"160px\",\r\n    display: 'inline-block',\r\n    margin: '1px'\r\n  },\r\n  userActive: {\r\n    color: 'green'\r\n  },\r\n  userPending: {\r\n    color: 'red'\r\n  },\r\n  nagemonNameCol: {\r\n    width: '328px'\r\n  },\r\n  image: {\r\n    width: '100px',\r\n    height: '100px',\r\n    borderRadius: '99999px'\r\n  },\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    data: state.getData_AllAPI\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps, { onSaveID, onSaveSeed })(Users);\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder, onClick }) => {\r\n  return (\r\n    <div className={classnames('form-group', { 'has-error': error })}>\r\n      <label className=\"control-label\">{label}</label>\r\n      <input\r\n        onChange={onChange}\r\n        onClick={onClick}\r\n        onBlur={checkUserExists}\r\n        value={value}\r\n        type={type}\r\n        name={field}\r\n        placeholder={placeholder}\r\n        readOnly={readOnly}\r\n        className=\"form-control\"\r\n      />\r\n    {error && <span className=\"help-block\">{error}</span>}\r\n    </div>  );\r\n}\r\n\r\nTextFieldGroup.propTypes = {\r\n  field: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  checkUserExists: PropTypes.func\r\n}\r\n\r\nTextFieldGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n\r\nexport default TextFieldGroup;\r\n","import {\r\n  SAVE_ID_SALE,\r\n  SAVE_SEED\r\n} from '../actions.js'\r\n\r\nexport function onSaveID(id) {\r\n  return {\r\n    type: SAVE_ID_SALE,\r\n    payload: { id }\r\n  };\r\n}\r\n\r\nexport function onSaveSeed(seed) {\r\n  return {\r\n    type: SAVE_SEED,\r\n    payload: { seed }\r\n  };\r\n}\r\n"],"sourceRoot":""}