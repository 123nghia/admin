{"version":3,"sources":["views/base/tables/Link.js","views/Common/TextFieldGroup.js"],"names":["headers","Headers","auth","localStorage","getItem","append","PackageSale","props","getData","a","state","company_id","role","id","JSON","parse","setState","isLoading","axios","baseURL","Constants","BASE_URL","url","LIST_LINK","method","res","data","condition","pagination","dataApi","active","map","val","Status","totalActive","openDelete","item","modalDelete","delete","key","activePage","page","itemsCount","limit","modalCom","viewingUser","communities","updated","action","Company_Id","link_shop","link_shopee","link_lazada","link_tiki","dataCompany","currentCompany","arrPagination","indexPage","this","i","j","temparray","arrTotal","length","slice","push","d","toLocaleUpperCase","includes","getCompanyData","alert","body","ADD_LINK","is_success","message","UPDATE_LINK","DELETE_LINK","fetchData","fetch","global","then","users","json","result","total","catch","console","log","pageNumber","getUsers","modal","image","isActive","errors","position","e","target","name","value","LIST_COMPANY","resCompany","undefined","LIST_COMPANY_WITH_ID","currentC","Name","className","style","styles","success","danger","deleted","tags","searchInput","onChange","searchKey","placeholder","outline","color","floatRight","size","onClick","toggleModal","openUpdate","float","marginRight","padding","row","isOpen","field","label","flexLabel","htmlFor","flexOption","selected","_id","addPackageSale","updatePackageSale","disabled","toggle","Email","Component","datePicker","marginBottom","width","textDecoration","marginTop","spinner","center","textAlign","tbody","height","overflowY","wa10","wh16","wh15","w5","mgl5","marginLeft","display","userActive","userPending","nagemonNameCol","borderRadius","TextFieldGroup","error","type","checkUserExists","readOnly","classnames","onBlur","defaultProps"],"mappings":"ubAgBIA,EAAU,IAAIC,QACZC,EAAOC,aAAaC,QAAQ,QAClCJ,EAAQK,OAAO,gBAAiB,UAAYH,GAC5CF,EAAQK,OAAO,eAAgB,oB,IACzBC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IA6CRC,QA9CmB,sBA8CT,sCAAAC,EAAA,2DACqB,EAAKC,MAA1BC,EADA,EACAA,WAAYC,EADZ,EACYA,KAChBC,EAAKC,KAAKC,MAAMJ,GAEpB,EAAKK,SAAS,CAAEC,WAAW,IACf,SAARL,GAA2B,aAARA,EALf,gCAMUM,IAAM,CACpBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUG,UACfC,OAAQ,SATJ,OAMFC,EANE,+CAYUP,IAAM,CACpBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUG,UACfC,OAAQ,OACRE,KAAM,CACJC,UAAW,CACT,WAAcd,EAAGF,eAlBjB,QAYFc,EAZE,eAwBR,EAAKG,WAAWH,EAAIC,KAAKA,MACzB,EAAKV,SAAS,CAAEa,QAASJ,EAAIC,KAAKA,OAE9BI,EAAS,EAEbL,EAAIC,KAAKA,KAAKK,KAAI,SAAAC,GACE,WAAdA,EAAIC,SACNH,GAAkB,MAItB,EAAKd,SAAS,CAAEC,WAAW,EAAOiB,YAAaJ,IAnCvC,4CA9CS,EA4NnBK,WAAa,SAACC,GACZ,EAAKpB,SAAS,CACZqB,aAAc,EAAK3B,MAAM2B,YACzBC,OAAQF,KA7NV,EAAK1B,MAAQ,CACXgB,KAAM,GACNa,IAAK,GACLC,WAAY,EACZC,KAAM,EACNC,WAAY,EACZC,MAAO,GACPT,YAAa,EACbU,UAAU,EACVC,YAAa,GACbC,YAAa,GACbC,QAAS,GACTlB,QAAS,GACTmB,OAAQ,MACRC,WAAY,GACZC,UAAW,GACXC,YAAa,GACbC,YAAa,GACbC,UAAW,GACXpB,OAAQ,UACRI,aAAa,EACbC,OAAQ,KACRgB,YAAa,GACbC,eAAgB,GAChBC,cAAe,GACfC,UAAW,EACX9C,WAAYR,aAAaC,QAAQ,QACjCQ,KAAMT,aAAaC,QAAQ,SA7BZ,E,4FAgCnB,sBAAAK,EAAA,sDACEiD,KAAKlD,UADP,gD,8EAIA,SAAWqB,GACT,IAAI8B,EAAGC,EAAGC,EACNC,EAAW,GACf,IAAKH,EAAI,EAAGC,EAAI/B,EAAQkC,OAAQJ,EAAIC,EAAGD,GAFV,EAG3BE,EAAYhC,EAAQmC,MAAML,EAAGA,EAHF,GAI3BG,EAASG,KAAKJ,GAEhBH,KAAK1C,SAAS,CAAEwC,cAAeM,EAAUpC,KAAMoC,EAASJ,KAAKhD,MAAM+C,e,uBAyCrE,SAAUlB,GAGR,GAFAmB,KAAK1C,SAAS,CAAEuB,IAAKA,IAEV,IAAPA,EAAW,CACb,IAAI2B,EAAI,GACRR,KAAKhD,MAAMmB,QAAQE,KAAI,SAAAC,GACjBA,EAAIkB,UAAUiB,oBAAoBC,SAAS7B,EAAI4B,sBACjDD,EAAED,KAAKjC,MAGX,IAAIF,EAAS,EAEboC,EAAEnC,KAAI,SAAAC,GACc,WAAdA,EAAIC,SACNH,GAAkB,MAItB4B,KAAK1C,SAAS,CAAEU,KAAMwC,EAAGhC,YAAaJ,QACjC,CACL,IAAIA,EAAS,EAEb4B,KAAKhD,MAAMmB,QAAQE,KAAI,SAAAC,GACH,WAAdA,EAAIC,SACNH,GAAkB,MAItB4B,KAAK1C,SAAS,CAAEU,KAAMgC,KAAKhD,MAAMmB,QAASK,YAAaJ,O,gEAI3D,WAAkBS,GAAlB,SAAA9B,EAAA,sEACQiD,KAAKW,iBADb,OAEa,OAAP9B,GACFmB,KAAK1C,SAAS,CACZ4B,UAAWc,KAAKhD,MAAMkC,SACtBI,OAAQT,EACRU,WAAY,GACZC,UAAW,GACXC,YAAa,GACbC,YAAa,GACbC,UAAW,KAVjB,gD,6EAeA,SAASd,EAAKP,GACZ0B,KAAK1C,SAAL,eAAiBuB,EAAMP,M,mEAGzB,0CAAAvB,EAAA,2DACyEiD,KAAKhD,MAApEuC,EADV,EACUA,WAAYC,EADtB,EACsBA,UAAWC,EADjC,EACiCA,YAAaC,EAD9C,EAC8CA,YAAaC,EAD3D,EAC2DA,UAExC,MAAbH,GAAkC,IAAbA,EAH3B,uBAIIoB,MAAM,yEAJV,iCAQQC,EAAO,CACXtB,WAAYA,EACZC,UAAWA,EACXC,YAAaA,EACbC,YAAaA,EACbC,UAAWA,GAGbK,KAAK1C,SAAS,CAAEC,WAAW,IAhB7B,SAiBoBC,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUoD,SACfhD,OAAQ,MACRE,KAAM6C,IArBV,OAwB6B,IAPrB9C,EAjBR,QAwBUC,KAAK+C,YACXf,KAAKlD,UACLkD,KAAK1C,SAAS,CAAE4B,UAAWc,KAAKhD,MAAMkC,aAEtC0B,MAAM7C,EAAIC,KAAKgD,SACfhB,KAAK1C,SAAS,CAAEC,WAAW,KA7B/B,iD,qHAiCA,WAAiBmB,GAAjB,SAAA3B,EAAA,sEACQiD,KAAKW,eAAejC,EAAKa,YADjC,OAEES,KAAK1C,SAAS,CACZ4B,UAAWc,KAAKhD,MAAMkC,SACtBI,OAAQ,SACRC,WAAYb,EAAKa,WACjBC,UAAWd,EAAKc,UAChBE,YAAahB,EAAKgB,YAClBD,YAAaf,EAAKe,YAClBE,UAAWjB,EAAKiB,UAChBxC,GAAIuB,EAAI,IACRH,OAAQG,EAAKH,SAXjB,gD,6HAeA,kDAAAxB,EAAA,2DACmGiD,KAAKhD,MAA9FuC,EADV,EACUA,WAAYC,EADtB,EACsBA,UAAWC,EADjC,EACiCA,YAAaC,EAD9C,EAC8CA,YAAaC,EAD3D,EAC2DA,UAAWpB,EADtE,EACsEA,OAAQtB,EAD9E,EAC8EA,WAAYC,EAD1F,EAC0FA,KAEpFC,EAAKC,KAAKC,MAAMJ,GAEH,MAAbuC,GAAkC,IAAbA,EAL3B,uBAMIoB,MAAM,yEANV,iCAUQC,EAAO,CACXtB,WAAoB,SAARrC,GAA2B,aAARA,EAAsBqC,EAAapC,EAAGF,WACrEuC,UAAWA,EACXC,YAAaA,EACbC,YAAaA,EACbC,UAAWA,EACXxC,GAAI6C,KAAKhD,MAAMG,GACfoB,OAAQA,GAGVyB,KAAK1C,SAAS,CAAEC,WAAW,IApB7B,SAqBoBC,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUuD,YACfnD,OAAQ,OACRE,KAAM6C,IAzBV,OA4B6B,IAPrB9C,EArBR,QA4BUC,KAAK+C,YACXf,KAAKlD,UACLkD,KAAK1C,SAAS,CAAE4B,UAAWc,KAAKhD,MAAMkC,aAEtC0B,MAAM7C,EAAIC,KAAKgD,SACfhB,KAAK1C,SAAS,CAAEC,WAAW,KAjC/B,iD,iHA4CA,4BAAAR,EAAA,6DACEiD,KAAK1C,SAAS,CAAEC,WAAW,IAD7B,SAEoBC,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUwD,YACfpD,OAAQ,SACRE,KAAM,CACJ,GAAMgC,KAAKhD,MAAM4B,OAAX,OAPZ,OAW6B,IATrBb,EAFR,QAWUC,KAAK+C,YACXf,KAAKlD,UACLkD,KAAK1C,SAAS,CAAEqB,aAAcqB,KAAKhD,MAAM2B,YAAaC,OAAQ,SAE9DgC,MAAM7C,EAAIC,KAAKgD,SACfhB,KAAK1C,SAAS,CAAEC,WAAW,KAhB/B,gD,4EAqBA,WAAoB,IAAD,OAAVwB,EAAU,uDAAH,EACRE,EAAQe,KAAKhD,MAAMiC,MACnBJ,EAAMmB,KAAKhD,MAAM6B,KAAO,GACxBsC,EAAY,CAChBrD,OAAQ,MACRxB,QAASA,GAEX8E,MAAMC,EAAO1D,SAAW,oBAAsBkB,EAAM,SAAWE,EAAO,UAAYE,EAAOkC,GAAWG,MAAK,SAAAC,GACvGA,EAAMC,OAAOF,MAAK,SAAAG,GAChB,EAAKnE,SAAS,CACZU,KAAMyD,EAAOzD,KACbgB,WAAYyC,EAAOC,MACnB5C,WAAYC,EACZP,YAAaiD,EAAOjD,YACpBa,QAAS,WAGZsC,MAAMC,QAAQC,O,qEAEnB,WAAuBC,GAAvB,SAAA/E,EAAA,sDACEiD,KAAK+B,SAASD,GADhB,gD,2EAGA,WAAqB,IAAdxC,EAAa,uDAAJ,GACdU,KAAK1C,SAAS,CACZ0E,OAAQhC,KAAKhD,MAAMgF,MACnBC,MAAO,GACPrE,IAAK,GACLsE,UAAU,EACV3E,WAAW,EACX4E,OAAQ,GACR7C,SACA8C,SAAU,EACVpE,KAAM,GACNqB,QAAS,O,yBAGb,SAAYgD,GACVrC,KAAK1C,SAAL,eAAiB+E,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,mEAG5C,WAAqBrF,GAArB,iBAAAJ,EAAA,sEAC2BS,IAAM,CAC7BC,QAASC,IAAUC,SACnBC,IAAKF,IAAU+E,aACf3E,OAAQ,SAJZ,UACQ4E,EADR,OAOY,IAANvF,QAAkBwF,GAANxF,EAPlB,gCAQ2BK,IAAM,CAC3BC,QAASC,IAAUC,SACnBC,IAAKF,IAAUkF,qBAAuBzF,EACtCW,OAAQ,SAXd,OAa8B,OALpB+E,EARV,QAaiB7E,KAAKA,WAAsC2E,GAAtBE,EAAS7E,KAAKA,MAC9CgC,KAAK1C,SAAS,CAAEuC,eAAgBgD,EAAS7E,KAAKA,KAAK8E,OAdzD,OAkBE9C,KAAK1C,SAAS,CAAEsC,YAAa8C,EAAW1E,KAAKA,OAlB/C,gD,2EAqBA,WAAU,IAAD,OACP,EACqDgC,KAAKhD,MADlDgB,EAAR,EAAQA,KAAMa,EAAd,EAAcA,IAAKe,EAAnB,EAAmBA,YACjBC,EADF,EACEA,eAAgBC,EADlB,EACkBA,cAAeC,EADjC,EACiCA,UAAW7C,EAD5C,EAC4CA,KAC5C,OAAK8C,KAAKhD,MAAMO,UAqLd,qBAAKJ,GAAG,eAAR,SACE,sBAAK4F,UAAU,cAAf,UACE,qBAAKA,UAAU,eACf,qBAAKA,UAAU,eACf,qBAAKA,UAAU,oBAvLjB,sBAAKA,UAAU,kBAAf,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,mBAAGC,MAAOC,EAAOC,QAAjB,SAA2BlD,KAAKhD,MAAMqC,UACtC,mBAAG2D,MAAOC,EAAOE,OAAjB,SAA0BnD,KAAKhD,MAAMoG,UACrC,eAAC,IAAD,WACE,eAAC,IAAD,WACE,oBAAGL,UAAU,sBAAb,wCAA6EJ,GAAnB3C,KAAKhD,MAAMgB,MAAwC,MAAnBgC,KAAKhD,MAAMgB,KACnGgC,KAAKhD,MAAMgB,KAAKqC,OAAS,EAD3B,aACwCL,KAAKhD,MAAMwB,YADnD,WACwEwB,KAAKhD,MAAM+C,UAAY,EAD/F,OAEA,qBAAKiD,MAAOC,EAAOI,KAAnB,SACE,gCACE,cAAC,IAAD,CAAOL,MAAOC,EAAOK,YAAaC,SAAU,SAAClB,GAAD,OAAO,EAAKmB,UAAUnB,EAAEC,OAAOE,QAAQD,KAAK,MAAMC,MAAO3D,EAAK4E,YAAY,WAE5G,SAARvG,GAA2B,aAARA,EACjB,cAAC,IAAD,CAAQwG,SAAO,EAACC,MAAM,UAAUX,MAAOC,EAAOW,WAAYC,KAAK,KAAKC,QAAS,SAAAzB,GAAC,OAAI,EAAK0B,YAAY,QAAnG,iBAEY,WAMtB,cAAC,IAAD,UACE,wBAAOhB,UAAU,mDAAjB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,oBAAIA,UAAU,cAAd,wBACA,oBAAIA,UAAU,cAAd,uBACA,oBAAIA,UAAU,cAAd,yBACA,oBAAIA,UAAU,cAAd,yBACA,oBAAIA,UAAU,cAAd,uBACA,oBAAIA,UAAU,cAAd,yBAGJ,qCAEYJ,GAAR3E,EACEA,EAAKK,KAAI,SAACK,EAAMuB,GACd,OACE,+BACE,oBAAI8C,UAAU,cAAd,SAA6BrE,EAAKa,aAClC,oBAAIwD,UAAU,cAAd,SAA6BrE,EAAKc,YAClC,oBAAIuD,UAAU,cAAd,SAA6BrE,EAAKe,cAClC,oBAAIsD,UAAU,cAAd,SAA6BrE,EAAKgB,cAClC,oBAAIqD,UAAU,cAAd,SAA6BrE,EAAKiB,YAClC,qBAAIoD,UAAU,cAAd,UACE,cAAC,IAAD,CAAQW,SAAO,EAACC,MAAM,UAAUE,KAAK,KAAKC,QAAS,SAACzB,GAAD,OAAO,EAAK2B,WAAWtF,IAA1E,gCAAoG,IAE1F,SAARxB,GAA2B,aAARA,EACjB,cAAC,IAAD,CAAQwG,SAAO,EAACC,MAAM,SAASE,KAAK,KAAKC,QAAS,SAACzB,GAAQ,EAAK5D,WAAWC,IAA3E,oBAEY,QAZXuB,MAiBR,aAOS,GAAxBH,EAAcO,OAAc,GAC1B,qBAAK2C,MAAO,CAAEiB,MAAO,QAASC,YAAa,OAAQC,QAAS,QAA5D,SACE,oBAAInB,MAAOC,EAAOmB,IAAlB,SAEItE,EAAczB,KAAI,SAACK,EAAMuB,GACvB,OACE,6BACE,cAAC,IAAD,CAAQ+C,MAAOC,EAAO/E,WAAYyF,MAAO1D,GAAKF,EAAY,UAAY,SAAU+D,QAAS,SAAAzB,GAAO,EAAK/E,SAAS,CAAEU,KAAM8B,EAAcG,GAAIF,UAAWE,KAAnJ,SAA4JA,EAAI,kBAWpL,eAAC,IAAD,CAAOoE,OAAQrE,KAAKhD,MAAMkC,SAAU6D,UAAW/C,KAAKnD,MAAMkG,UAA1D,UACE,cAAC,IAAD,UAAmC,OAArB/C,KAAKhD,MAAMsC,OAAX,2CACd,eAAC,IAAD,WACE,cAAC,IAAD,CACEgF,MAAM,YACNC,MAAM,YACN/B,MAAOxC,KAAKhD,MAAMwC,UAClBiE,YAAa,YAEbF,SAAU,SAAAlB,GAAC,OAAI,EAAKkB,SAAS,YAAalB,EAAEC,OAAOE,UAIrD,cAAC,IAAD,CACE8B,MAAM,cACNC,MAAM,cACN/B,MAAOxC,KAAKhD,MAAMyC,YAClBgE,YAAa,cAEbF,SAAU,SAAAlB,GAAC,OAAI,EAAKkB,SAAS,cAAelB,EAAEC,OAAOE,UAIvD,cAAC,IAAD,CACE8B,MAAM,cACNC,MAAM,cACN/B,MAAOxC,KAAKhD,MAAM0C,YAClB+D,YAAa,cAEbF,SAAU,SAAAlB,GAAC,OAAI,EAAKkB,SAAS,cAAelB,EAAEC,OAAOE,UAIvD,cAAC,IAAD,CACE8B,MAAM,YACNC,MAAM,YACN/B,MAAOxC,KAAKhD,MAAM2C,UAClB8D,YAAa,YAEbF,SAAU,SAAAlB,GAAC,OAAI,EAAKkB,SAAS,YAAalB,EAAEC,OAAOE,UAgB3C,SAARtF,GAA2B,aAARA,EACjB,gCACE,uBAAO8F,MAAOC,EAAOuB,UAAWC,QAAQ,MAAxC,0BACA,yBAAQzB,MAAOC,EAAOyB,WAAYnC,KAAK,aAAagB,SAAU,SAAAlB,GAAC,OAAI,EAAKkB,SAAS,aAAclB,EAAEC,OAAOE,QAAxG,UACE,wBAAQA,MAAOxC,KAAKhD,MAAMuC,WAA1B,mBAEEK,EAAYvB,KAAI,SAACK,EAAMuB,GACrB,OAAIvB,EAAKoE,MAAQjD,EAEb,wBAAQ8E,UAAQ,EAACnC,MAAO9D,EAAKkG,IAA7B,SAAmClG,EAAKoE,OAIxC,wBAAQN,MAAO9D,EAAKkG,IAApB,SAA0BlG,EAAKoE,gBAMlC,MAIf,eAAC,IAAD,WACE,cAAC,IAAD,CAAQa,MAAM,UAAUG,QAAS,SAAAzB,GAA6B,QAAtB,EAAKrF,MAAMsC,OAAmB,EAAKuF,iBAAmB,EAAKC,qBAAuBC,SAAU/E,KAAKhD,MAAMO,UAA/I,sBAAuK,IACvK,cAAC,IAAD,CAAQoG,MAAM,YAAYG,QAAS,SAAAzB,GAAC,OAAI,EAAK0B,YAAY,QAAzD,gCAIJ,eAAC,IAAD,CAAOM,OAAQrE,KAAKhD,MAAM2B,YAAaqG,OAAQ,SAAA3C,GAAC,OAAI,EAAK/E,SAAS,CAAEqB,aAAc,EAAK3B,MAAM2B,YAAaC,OAAQ,QAASmE,UAAW/C,KAAKnD,MAAMkG,UAAjJ,UACE,cAAC,IAAD,CAAaiC,OAAQ,SAAA3C,GAAC,OAAI,EAAK/E,SAAS,CAAEqB,aAAc,EAAK3B,MAAM2B,YAAaC,OAAQ,QAAxF,oBACA,cAAC,IAAD,UACE,uBAAO6F,QAAQ,MAAf,+CAAqDzE,KAAKhD,MAAM4B,OAASoB,KAAKhD,MAAM4B,OAAOqG,MAAQ,GAAnG,WAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAQtB,MAAM,UAAUG,QAAS,SAAAzB,GAAC,OAAI,EAAKzD,UAAUmG,SAAU/E,KAAKhD,MAAMO,UAA1E,oBAAkG,IAClG,cAAC,IAAD,CAAQoG,MAAM,YAAYG,QAAS,SAAAzB,GAAC,OAAI,EAAK/E,SAAS,CAAEqB,aAAc,EAAK3B,MAAM2B,YAAaC,OAAQ,QAAtG,uC,GAveYsG,aAyfpBjC,EAAS,CACbkC,WAAY,CACVC,aAAc,IAEhBZ,UAAW,CACTa,MAAO,KAETX,WAAY,CACVW,MAAO,KAETtI,EAAG,CACDuI,eAAgB,QAElB1B,WAAY,CACVK,MAAO,QACPsB,UAAW,OAEbC,QAAS,CACPH,MAAO,QAETI,OAAQ,CACNC,UAAW,UAEbC,MAAO,CACLC,OAAQ,QACRC,UAAW,QAEbC,KAAM,CACJT,MAAO,KACPpB,MAAO,OACP2B,OAAQ,QAEVG,KAAM,CACJV,MAAO,MACPpB,MAAO,OACP2B,OAAQ,QAEVI,KAAM,CACJX,MAAO,MACPpB,MAAO,OACP2B,OAAQ,QAEVK,GAAI,CACFZ,MAAO,MACPpB,MAAO,OACP2B,OAAQ,QAEVxB,IAAK,CACHH,MAAO,OACPoB,MAAO,QAETnC,QAAS,CACPS,MAAO,SAETR,OAAQ,CACNQ,MAAO,OAETuC,KAAM,CACJC,WAAY,OAEd9C,KAAM,CACJY,MAAO,QACPC,YAAa,MACbmB,MAAO,SAET/B,YAAa,CACX+B,MAAO,QACPe,QAAS,gBAEXC,WAAY,CACV1C,MAAO,SAET2C,YAAa,CACX3C,MAAO,OAET4C,eAAgB,CACdlB,MAAO,SAETpD,MAAO,CACLoD,MAAO,QACPO,OAAQ,QACRY,aAAc,YAIH5J,a,oDClmBf,mCAIM6J,EAAiB,SAAC,GAAqG,IAAnGnC,EAAkG,EAAlGA,MAAO9B,EAA2F,EAA3FA,MAAO+B,EAAoF,EAApFA,MAAOmC,EAA6E,EAA7EA,MAAOC,EAAsE,EAAtEA,KAAMpD,EAAgE,EAAhEA,SAAUqD,EAAsD,EAAtDA,gBAAiBC,EAAqC,EAArCA,SAAUpD,EAA2B,EAA3BA,YAAaK,EAAc,EAAdA,QAC5G,OACE,sBAAKf,UAAW+D,IAAW,aAAc,CAAE,YAAaJ,IAAxD,UACE,uBAAO3D,UAAU,gBAAjB,SAAkCwB,IAClC,uBACEhB,SAAUA,EACVO,QAASA,EACTiD,OAAQH,EACRpE,MAAOA,EACPmE,KAAMA,EACNpE,KAAM+B,EACNb,YAAaA,EACboD,SAAUA,EACV9D,UAAU,iBAEb2D,GAAS,sBAAM3D,UAAU,aAAhB,SAA8B2D,QAc5CD,EAAeO,aAAe,CAC5BL,KAAM,QAGOF","file":"static/js/85.fa1171f1.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n  Button, Input,\r\n  ModalHeader, ModalBody, ModalFooter, Modal,\r\n} from 'reactstrap';\r\nimport 'moment-timezone';\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Constants from \"./../../../contants/contants\";\r\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\r\nimport axios from 'axios'\r\nlet headers = new Headers();\r\nconst auth = localStorage.getItem('auth');\r\nheaders.append('Authorization', 'Bearer ' + auth);\r\nheaders.append('Content-Type', 'application/json');\r\nclass PackageSale extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      key: '',\r\n      activePage: 1,\r\n      page: 1,\r\n      itemsCount: 0,\r\n      limit: 20,\r\n      totalActive: 0,\r\n      modalCom: false,\r\n      viewingUser: {},\r\n      communities: [],\r\n      updated: '',\r\n      dataApi: [],\r\n      action: 'new',\r\n      Company_Id: \"\",\r\n      link_shop: \"\",\r\n      link_shopee: \"\",\r\n      link_lazada: \"\",\r\n      link_tiki: \"\",\r\n      Status: \"Actived\",\r\n      modalDelete: false,\r\n      delete: null,\r\n      dataCompany: [],\r\n      currentCompany: '',\r\n      arrPagination: [],\r\n      indexPage: 0,\r\n      company_id: localStorage.getItem('user'),\r\n      role: localStorage.getItem('role')\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    this.getData()\r\n  }\r\n\r\n  pagination(dataApi) {\r\n    var i, j, temparray, chunk = 5;\r\n    var arrTotal = [];\r\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\r\n      temparray = dataApi.slice(i, i + chunk);\r\n      arrTotal.push(temparray);\r\n    }\r\n    this.setState({ arrPagination: arrTotal, data: arrTotal[this.state.indexPage] });\r\n  }\r\n\r\n  getData = async () => {\r\n    const { company_id, role } = this.state;\r\n    var id = JSON.parse(company_id);\r\n\r\n    this.setState({ isLoading: true });\r\n    if (role == 'ADMIN' || role == 'ADMINSALE') {\r\n      var res = await axios({\r\n        baseURL: Constants.BASE_URL,\r\n        url: Constants.LIST_LINK,\r\n        method: 'POST'\r\n      });\r\n    } else {\r\n      var res = await axios({\r\n        baseURL: Constants.BASE_URL,\r\n        url: Constants.LIST_LINK,\r\n        method: 'POST',\r\n        data: {\r\n          condition: {\r\n            \"Company_Id\": id.company_id\r\n          }\r\n        }\r\n      });\r\n    }\r\n\r\n    this.pagination(res.data.data);\r\n    this.setState({ dataApi: res.data.data });\r\n\r\n    let active = 0\r\n\r\n    res.data.data.map(val => {\r\n      if (val.Status == \"Actived\") {\r\n        active = active + 1\r\n      }\r\n    })\r\n\r\n    this.setState({ isLoading: false, totalActive: active });\r\n  }\r\n\r\n  searchKey(key) {\r\n    this.setState({ key: key })\r\n\r\n    if (key != '') {\r\n      let d = []\r\n      this.state.dataApi.map(val => {\r\n        if (val.link_shop.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\r\n          d.push(val)\r\n        }\r\n      })\r\n      let active = 0\r\n\r\n      d.map(val => {\r\n        if (val.Status == \"Actived\") {\r\n          active = active + 1\r\n        }\r\n      })\r\n\r\n      this.setState({ data: d, totalActive: active })\r\n    } else {\r\n      let active = 0\r\n\r\n      this.state.dataApi.map(val => {\r\n        if (val.Status == \"Actived\") {\r\n          active = active + 1\r\n        }\r\n      })\r\n\r\n      this.setState({ data: this.state.dataApi, totalActive: active })\r\n    }\r\n  }\r\n\r\n  async toggleModal(key) {\r\n    await this.getCompanyData()\r\n    if (key == 'new') {\r\n      this.setState({\r\n        modalCom: !this.state.modalCom,\r\n        action: key,\r\n        Company_Id: \"\",\r\n        link_shop: \"\",\r\n        link_shopee: \"\",\r\n        link_lazada: \"\",\r\n        link_tiki: \"\",\r\n      })\r\n    }\r\n  }\r\n\r\n  onChange(key, val) {\r\n    this.setState({ [key]: val })\r\n  }\r\n\r\n  async addPackageSale() {\r\n    const { Company_Id, link_shop, link_shopee, link_lazada, link_tiki } = this.state\r\n\r\n    if (link_shop == null || link_shop == '') {\r\n      alert(\"Vui lòng nhập đầy đủ trường !!!\");\r\n      return\r\n    }\r\n\r\n    const body = {\r\n      Company_Id: Company_Id,\r\n      link_shop: link_shop,\r\n      link_shopee: link_shopee,\r\n      link_lazada: link_lazada,\r\n      link_tiki: link_tiki,\r\n    }\r\n\r\n    this.setState({ isLoading: true });\r\n    const res = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.ADD_LINK,\r\n      method: 'PUT',\r\n      data: body\r\n    });\r\n\r\n    if (res.data.is_success == true) {\r\n      this.getData();\r\n      this.setState({ modalCom: !this.state.modalCom })\r\n    } else {\r\n      alert(res.data.message);\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  async openUpdate(item) {\r\n    await this.getCompanyData(item.Company_Id)\r\n    this.setState({\r\n      modalCom: !this.state.modalCom,\r\n      action: \"update\",\r\n      Company_Id: item.Company_Id,\r\n      link_shop: item.link_shop,\r\n      link_lazada: item.link_lazada,\r\n      link_shopee: item.link_shopee,\r\n      link_tiki: item.link_tiki,\r\n      id: item['_id'],\r\n      Status: item.Status\r\n    })\r\n  }\r\n\r\n  async updatePackageSale() {\r\n    const { Company_Id, link_shop, link_shopee, link_lazada, link_tiki, Status, company_id, role } = this.state\r\n\r\n    var id = JSON.parse(company_id);\r\n\r\n    if (link_shop == null || link_shop == '') {\r\n      alert(\"Vui lòng nhập đầy đủ trường !!!\");\r\n      return\r\n    }\r\n\r\n    const body = {\r\n      Company_Id: role == 'ADMIN' || role == 'ADMINSALE' ? Company_Id : id.company_id,\r\n      link_shop: link_shop,\r\n      link_shopee: link_shopee,\r\n      link_lazada: link_lazada,\r\n      link_tiki: link_tiki,\r\n      id: this.state.id,\r\n      Status: Status\r\n    }\r\n\r\n    this.setState({ isLoading: true });\r\n    const res = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.UPDATE_LINK,\r\n      method: 'POST',\r\n      data: body\r\n    });\r\n\r\n    if (res.data.is_success == true) {\r\n      this.getData();\r\n      this.setState({ modalCom: !this.state.modalCom })\r\n    } else {\r\n      alert(res.data.message);\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  openDelete = (item) => {\r\n    this.setState({\r\n      modalDelete: !this.state.modalDelete,\r\n      delete: item\r\n    })\r\n  }\r\n\r\n  async delete() {\r\n    this.setState({ isLoading: true });\r\n    const res = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.DELETE_LINK,\r\n      method: 'DELETE',\r\n      data: {\r\n        \"id\": this.state.delete['_id']\r\n      }\r\n    });\r\n\r\n    if (res.data.is_success == true) {\r\n      this.getData();\r\n      this.setState({ modalDelete: !this.state.modalDelete, delete: null })\r\n    } else {\r\n      alert(res.data.message);\r\n      this.setState({ isLoading: false });\r\n    }\r\n\r\n  }\r\n\r\n  getUsers(page = 1) {\r\n    const limit = this.state.limit;\r\n    const key = this.state.key || '';\r\n    const fetchData = {\r\n      method: 'GET',\r\n      headers: headers\r\n    };\r\n    fetch(global.BASE_URL + '/admin/users?key=' + key + '&page=' + page + '&limit=' + limit, fetchData).then(users => {\r\n      users.json().then(result => {\r\n        this.setState({\r\n          data: result.data,\r\n          itemsCount: result.total,\r\n          activePage: page,\r\n          totalActive: result.totalActive,\r\n          updated: '',\r\n        });\r\n      })\r\n    }).catch(console.log);\r\n  }\r\n  async handlePageChange(pageNumber) {\r\n    this.getUsers(pageNumber);\r\n  }\r\n  toggle(action = '') {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      image: '',\r\n      url: '',\r\n      isActive: false,\r\n      isLoading: false,\r\n      errors: {},\r\n      action,\r\n      position: 1,\r\n      data: [],\r\n      updated: '',\r\n    });\r\n  }\r\n  inputChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  async getCompanyData(id) {\r\n    const resCompany = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.LIST_COMPANY,\r\n      method: 'POST',\r\n    });\r\n\r\n    if (id != '' || id != undefined) {\r\n      const currentC = await axios({\r\n        baseURL: Constants.BASE_URL,\r\n        url: Constants.LIST_COMPANY_WITH_ID + id,\r\n        method: 'POST',\r\n      });\r\n      if (currentC.data.data != null || currentC.data.data != undefined) {\r\n        this.setState({ currentCompany: currentC.data.data.Name });\r\n      }\r\n    }\r\n\r\n    this.setState({ dataCompany: resCompany.data.data });\r\n  }\r\n\r\n  render() {\r\n    const { data, key, dataCompany,\r\n      currentCompany, arrPagination, indexPage, role } = this.state;\r\n    if (!this.state.isLoading) {\r\n      return (\r\n        <div className=\"animated fadeIn\">\r\n          <Row>\r\n            <Col>\r\n              <p style={styles.success}>{this.state.updated}</p>\r\n              <p style={styles.danger}>{this.state.deleted}</p>\r\n              <Card>\r\n                <CardHeader>\r\n                  <i className=\"fa fa-align-justify\"> LINK MANAGER (Total: {this.state.data != undefined || this.state.data != null ?\r\n                    this.state.data.length : 0}, Active: {this.state.totalActive}, Page: {this.state.indexPage + 1})</i>\r\n                  <div style={styles.tags}>\r\n                    <div>\r\n                      <Input style={styles.searchInput} onChange={(e) => this.searchKey(e.target.value)} name=\"key\" value={key} placeholder=\"Search\" />\r\n                      {\r\n                        role == 'ADMIN' || role == 'ADMINSALE' ?\r\n                          <Button outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={e => this.toggleModal(\"new\")}>\r\n                            Add\r\n                          </Button> : \"\"\r\n                      }\r\n\r\n                    </div>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                    <thead className=\"thead-light\">\r\n                      <tr>\r\n                        <th className=\"text-center\">Company ID</th>\r\n                        <th className=\"text-center\">Link Shop</th>\r\n                        <th className=\"text-center\">Link Shopee</th>\r\n                        <th className=\"text-center\">Link Lazada</th>\r\n                        <th className=\"text-center\">Link Tiki</th>\r\n                        <th className=\"text-center\">Action</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      {\r\n                        data != undefined ?\r\n                          data.map((item, i) => {\r\n                            return (\r\n                              <tr key={i}>\r\n                                <td className=\"text-center\">{item.Company_Id}</td>\r\n                                <td className=\"text-center\">{item.link_shop}</td>\r\n                                <td className=\"text-center\">{item.link_shopee}</td>\r\n                                <td className=\"text-center\">{item.link_lazada}</td>\r\n                                <td className=\"text-center\">{item.link_tiki}</td>\r\n                                <td className=\"text-center\">\r\n                                  <Button outline color=\"primary\" size=\"sm\" onClick={(e) => this.openUpdate(item)} >Cập nhật</Button>{' '}\r\n                                  {\r\n                                    role == 'ADMIN' || role == 'ADMINSALE' ?\r\n                                      <Button outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>\r\n                                        Delete\r\n                                      </Button> : \"\"\r\n                                  }\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          }) : \"\"\r\n                      }\r\n                    </tbody>\r\n                  </table>\r\n                </CardBody>\r\n              </Card>\r\n              {\r\n                arrPagination.length == 1 ? \"\" :\r\n                  <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\r\n                    <tr style={styles.row}>\r\n                      {\r\n                        arrPagination.map((item, i) => {\r\n                          return (\r\n                            <td>\r\n                              <Button style={styles.pagination} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ data: arrPagination[i], indexPage: i }) }}>{i + 1}</Button>\r\n                            </td>\r\n                          );\r\n                        })\r\n                      }\r\n                    </tr>\r\n                  </div>\r\n              }\r\n            </Col>\r\n          </Row>\r\n\r\n          <Modal isOpen={this.state.modalCom} className={this.props.className}>\r\n            <ModalHeader>{this.state.action == 'new' ? `Tạo mới` : `Cập nhật`}</ModalHeader>\r\n            <ModalBody>\r\n              <TextFieldGroup\r\n                field=\"link_shop\"\r\n                label=\"Link shop\"\r\n                value={this.state.link_shop}\r\n                placeholder={\"Link Shop\"}\r\n                // error={errors.title}\r\n                onChange={e => this.onChange(\"link_shop\", e.target.value)}\r\n              // rows=\"5\"\r\n              />\r\n\r\n              <TextFieldGroup\r\n                field=\"link_shopee\"\r\n                label=\"Link Shopee\"\r\n                value={this.state.link_shopee}\r\n                placeholder={\"Link Shopee\"}\r\n                // error={errors.title}\r\n                onChange={e => this.onChange(\"link_shopee\", e.target.value)}\r\n              // rows=\"5\"\r\n              />\r\n\r\n              <TextFieldGroup\r\n                field=\"link_lazada\"\r\n                label=\"Link Lazada\"\r\n                value={this.state.link_lazada}\r\n                placeholder={\"Link Lazada\"}\r\n                // error={errors.title}\r\n                onChange={e => this.onChange(\"link_lazada\", e.target.value)}\r\n              // rows=\"5\"\r\n              />\r\n\r\n              <TextFieldGroup\r\n                field=\"link_tiki\"\r\n                label=\"Link Tiki\"\r\n                value={this.state.link_tiki}\r\n                placeholder={\"Link Tiki\"}\r\n                // error={errors.title}\r\n                onChange={e => this.onChange(\"link_tiki\", e.target.value)}\r\n              // rows=\"5\"\r\n              />\r\n\r\n              {/* {\r\n                action == 'new' ? \"\" : <div>\r\n                  <label style={styles.flexLabel} htmlFor=\"tag\">Trạng thái:</label>\r\n                  <select style={styles.flexOption} name=\"Status\" onChange={e => this.onChange(\"Status\", e.target.value)}>\r\n                    <option value={this.state.Status}>{this.state.Status == '' ? ` - - - - - - - - - - ` : this.state.Status}</option>\r\n                    <option value={'Actived'}>Actived</option>\r\n                    <option value={'Locked'}>Locked</option>\r\n                    <option value={'Deactived'}>Deactived</option>\r\n                  </select>\r\n                </div>\r\n              } */}\r\n              {\r\n                role == 'ADMIN' || role == 'ADMINSALE' ?\r\n                  <div>\r\n                    <label style={styles.flexLabel} htmlFor=\"tag\">Company:    </label>\r\n                    <select style={styles.flexOption} name=\"Company_Id\" onChange={e => this.onChange(\"Company_Id\", e.target.value)}>\r\n                      <option value={this.state.Company_Id}>-----</option>\r\n                      {\r\n                        dataCompany.map((item, i) => {\r\n                          if (item.Name == currentCompany) {\r\n                            return (\r\n                              <option selected value={item._id}>{item.Name}</option>\r\n                            );\r\n                          } else {\r\n                            return (\r\n                              <option value={item._id}>{item.Name}</option>\r\n                            );\r\n                          }\r\n                        })\r\n                      }\r\n                    </select>\r\n                  </div> : \"\"\r\n              }\r\n\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" onClick={e => { this.state.action === 'new' ? this.addPackageSale() : this.updatePackageSale() }} disabled={this.state.isLoading}>Lưu</Button>{' '}\r\n              <Button color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Đóng</Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n\r\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\r\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Xoá`}</ModalHeader>\r\n            <ModalBody>\r\n              <label htmlFor=\"tag\">{`Do you want to delete user \"${this.state.delete ? this.state.delete.Email : ''}\" ?`}</label>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Xoá</Button>{' '}\r\n              <Button color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Đóng</Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div id=\"page-loading\">\r\n        <div className=\"three-balls\">\r\n          <div className=\"ball ball1\"></div>\r\n          <div className=\"ball ball2\"></div>\r\n          <div className=\"ball ball3\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  datePicker: {\r\n    marginBottom: 20\r\n  },\r\n  flexLabel: {\r\n    width: 100\r\n  },\r\n  flexOption: {\r\n    width: 300\r\n  },\r\n  a: {\r\n    textDecoration: 'none'\r\n  },\r\n  floatRight: {\r\n    float: \"right\",\r\n    marginTop: '3px'\r\n  },\r\n  spinner: {\r\n    width: \"30px\"\r\n  },\r\n  center: {\r\n    textAlign: \"center\"\r\n  },\r\n  tbody: {\r\n    height: \"380px\",\r\n    overflowY: \"auto\"\r\n  },\r\n  wa10: {\r\n    width: \"5%\",\r\n    float: \"left\",\r\n    height: \"80px\"\r\n  },\r\n  wh16: {\r\n    width: \"17%\",\r\n    float: \"left\",\r\n    height: \"80px\"\r\n  },\r\n  wh15: {\r\n    width: \"20%\",\r\n    float: \"left\",\r\n    height: \"80px\"\r\n  },\r\n  w5: {\r\n    width: \"20%\",\r\n    float: \"left\",\r\n    height: \"80px\"\r\n  },\r\n  row: {\r\n    float: \"left\",\r\n    width: \"100%\"\r\n  },\r\n  success: {\r\n    color: 'green'\r\n  },\r\n  danger: {\r\n    color: 'red'\r\n  },\r\n  mgl5: {\r\n    marginLeft: '5px'\r\n  },\r\n  tags: {\r\n    float: \"right\",\r\n    marginRight: \"5px\",\r\n    width: \"250px\"\r\n  },\r\n  searchInput: {\r\n    width: \"190px\",\r\n    display: 'inline-block',\r\n  },\r\n  userActive: {\r\n    color: 'green'\r\n  },\r\n  userPending: {\r\n    color: 'red'\r\n  },\r\n  nagemonNameCol: {\r\n    width: '328px'\r\n  },\r\n  image: {\r\n    width: '100px',\r\n    height: '100px',\r\n    borderRadius: '99999px'\r\n  },\r\n}\r\n\r\nexport default PackageSale;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder, onClick }) => {\r\n  return (\r\n    <div className={classnames('form-group', { 'has-error': error })}>\r\n      <label className=\"control-label\">{label}</label>\r\n      <input\r\n        onChange={onChange}\r\n        onClick={onClick}\r\n        onBlur={checkUserExists}\r\n        value={value}\r\n        type={type}\r\n        name={field}\r\n        placeholder={placeholder}\r\n        readOnly={readOnly}\r\n        className=\"form-control\"\r\n      />\r\n    {error && <span className=\"help-block\">{error}</span>}\r\n    </div>  );\r\n}\r\n\r\nTextFieldGroup.propTypes = {\r\n  field: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  checkUserExists: PropTypes.func\r\n}\r\n\r\nTextFieldGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n\r\nexport default TextFieldGroup;\r\n"],"sourceRoot":""}