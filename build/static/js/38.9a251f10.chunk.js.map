{"version":3,"sources":["views/DashBoard/ShopManager.js","views/DashBoard/SaleManager.js","views/DashBoard/AdminManager.js","views/DashBoard/Dashboard.js","contants/contants.js"],"names":["headers","Headers","auth","localStorage","getItem","append","ShopManager","props","state","month","dataUserSale","dataUserSale_Original","arrPagination","indexPage","dataStatistical","arrPaginationStatistical","indexPageStatistical","company_id","dataApi","arrTemp","hidden","hidden_all","arrAllUser","arrSale","token","Authorization","isLoading","a","this","setState","getListSale","getCustomer","getCustomerByMonth","getDataForCharts","arr","phone","filter","data","Phone","length","i","j","temparray","arrTotal","slice","push","arrTotal_Statistical","axios","baseURL","Constants","BASE_URL","url","GET_SALE","method","res","value","Sale_Id","_id","id","JSON","parse","LIST_CUSTOMER","console","log","pagination","COMPANY_CHART","bodyUser","LIST_CUSTOMER_BY_MONTH","pagination_statistical","className","css","override","size","color","loading","speedMultiplier","row","xs","sm","md","lg","htmlFor","onChange","e","chooseSale","target","custom","map","item","Name","colSpan","undefined","Email","Gender","count","Number","coefficient","toFixed","Date","Create_Date","toLocaleDateString","toLocaleTimeString","style","float","marginRight","padding","width","Button","onClick","backgroundColor","datasets","label","labels","options","tooltips","enabled","name","Component","sale_id","SALE_CHART","GET_USER_SALE_BY_MONTH","ls","AdminManager","ADMIN_CHART","LIST_CUSTOMER_BY_MONTH_ADMIN","Dashboard","SaleManager"],"mappings":"mWAyBIA,EAAU,IAAIC,QACZC,EAAOC,aAAaC,QAAQ,QAClCJ,EAAQK,OAAO,gBAAiB,UAAYH,GAC5CF,EAAQK,OAAO,eAAgB,oB,MACzBC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,EACPC,aAAc,GACdC,sBAAuB,GACvBC,cAAe,GACfC,UAAW,EACXC,gBAAiB,GACjBC,yBAA0B,GAC1BC,qBAAsB,EACtBC,WAAYd,aAAaC,QAAQ,QACjCc,QAAS,GACTC,QAAS,GACTC,QAAQ,EACRC,YAAY,EACZC,WAAY,GACZC,QAAS,GACTC,MAAO,CAAEC,cAAc,UAAD,OAAYtB,aAAaC,QAAQ,WACvDsB,WAAW,GAnBI,E,4FAuBnB,sBAAAC,EAAA,6DACEC,KAAKC,SAAS,CAAEH,WAAW,IAD7B,SAEQE,KAAKE,cAFb,uBAGQF,KAAKG,cAHb,uBAIQH,KAAKI,mBAAmB,MAJhC,uBAKQJ,KAAKK,mBALb,gD,6EAQA,SAAUC,EAAKC,GAEb,OADcD,EAAIE,QAAO,SAAAC,GAAI,OAAIA,EAAKC,OAASH,KAClCI,S,wBAGf,SAAWrB,GACT,IAAIsB,EAAGC,EAAGC,EACNC,EAAW,GACf,IAAKH,EAAI,EAAGC,EAAIvB,EAAQqB,OAAQC,EAAIC,EAAGD,GAFV,EAG3BE,EAAYxB,EAAQ0B,MAAMJ,EAAGA,EAHF,GAI3BG,EAASE,KAAKH,GAEhBd,KAAKC,SAAS,CAAEjB,cAAe+B,EAAUjC,aAAciC,EAASf,KAAKpB,MAAMK,WAAYF,sBAAuBgC,EAASf,KAAKpB,MAAMK,e,oCAGpI,SAAuBK,GACrB,IAAIsB,EAAGC,EAAGC,EACNI,EAAuB,GAC3B,IAAKN,EAAI,EAAGC,EAAIvB,EAAQqB,OAAQC,EAAIC,EAAGD,GAFV,EAG3BE,EAAYxB,EAAQ0B,MAAMJ,EAAGA,EAHF,GAI3BM,EAAqBD,KAAKH,GAE5Bd,KAAKC,SAAS,CAAEd,yBAA0B+B,EAAsBhC,gBAAiBgC,EAAqBlB,KAAKpB,MAAMQ,0B,gEAGnH,8BAAAW,EAAA,sEACoBoB,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUG,SACfC,OAAQ,OACRrD,QAAS4B,KAAKpB,MAAMgB,QALxB,OACQ8B,EADR,OAOMjB,EAAOiB,EAAIjB,KAAKA,KAEpBT,KAAKC,SAAS,CAAEN,QAASc,IAT3B,gD,qHAYA,WAAiBkB,GAAjB,mBAAA5B,EAAA,sDAGE,IAFQhB,EAA0BiB,KAAKpB,MAA/BG,sBACFQ,EAAU,GACPqB,EAAI,EAAGA,EAAI7B,EAAsB4B,OAAQC,IAC5C7B,EAAsB6B,GAAGgB,QAAQC,KAAOF,GAC1CpC,EAAQ0B,KAAKlC,EAAsB6B,IALzC,GASe,IAATe,EATN,gCAUU3B,KAAKG,cAVf,6BAY0B,GAAlBZ,EAAQoB,OACVX,KAAKC,SAAS,CAAEnB,aAAcS,EAASE,YAAY,EAAOK,WAAW,IAErEE,KAAKC,SAAS,CAAEnB,aAAcS,EAASE,YAAY,EAAMK,WAAW,IAf1E,gD,uHAoBA,kCAAAC,EAAA,6DAEUV,EAAeW,KAAKpB,MAApBS,WACJyC,EAAKC,KAAKC,MAAM3C,GAHtB,SAKoB8B,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUY,cACfR,OAAQ,OACRhB,KAAM,CACJ,UAAa,CACX,WAAcqB,EAAGzC,aAGrBjB,QAAS4B,KAAKpB,MAAMgB,QAdxB,OAKQ8B,EALR,OAiBMjB,EAAOiB,EAAIjB,KAAKA,KAEpByB,QAAQC,IAAI1B,GACZT,KAAKC,SAAS,CAAEX,QAASmB,IAEzBT,KAAKoC,WAAW3B,GAtBlB,gD,2HA0BA,gCAAAV,EAAA,6DACUV,EAAeW,KAAKpB,MAApBS,WACJyC,EAAKC,KAAKC,MAAM3C,GAFtB,SAuBoB8B,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUgB,cACfZ,OAAQ,OACRhB,KAAM,CACJpB,WAAYyC,EAAGzC,cA5BrB,OAuBQqC,EAvBR,OAgCE1B,KAAKC,SAAS,CAAEP,WAAYgC,EAAIjB,KAAKA,KAAMX,WAAW,IAhCxD,gD,6HAmCA,WAAyBjB,GAAzB,uBAAAkB,EAAA,yDACUV,EAAeW,KAAKpB,MAApBS,WACJyC,EAAKC,KAAKC,MAAM3C,GAChBiD,EAAW,CACbjD,WAAYyC,EAAGzC,WACfR,MAAOA,GAGI,GAATA,EARN,gCASUmB,KAAKG,cATf,+CAWsBgB,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUkB,uBACfd,OAAQ,OACRhB,KAAM6B,IAfZ,QAWUZ,EAXV,OAmBuB,IADfjB,EAAOiB,EAAIjB,KAAKA,MACXE,OACPX,KAAKC,SAAS,CAAET,QAAQ,IAExBQ,KAAKC,SAAS,CAAET,QAAQ,IAE1BQ,KAAKC,SAAS,CAAEX,QAASmB,EAAMlB,QAASkB,EAAMX,WAAW,IAEzDE,KAAKwC,uBAAuB/B,GA1BhC,iD,2EA8BA,WAAU,IAAD,OACP,EACsET,KAAKpB,MADnEE,EAAR,EAAQA,aAAcU,EAAtB,EAAsBA,OAAQR,EAA9B,EAA8BA,cAAeC,EAA7C,EAA6CA,UAAWQ,EAAxD,EAAwDA,WAAYE,EAApE,EAAoEA,QAClET,EADF,EACEA,gBAAiBC,EADnB,EACmBA,yBAA0BC,EAD7C,EAC6CA,qBAC7C,OAAKY,KAAKpB,MAAMkB,UAsMd,qBAAK2C,UAAU,gBAAf,SACE,cAAC,IAAD,CAAWC,IAAKC,EAAUC,KAAM,GAAIC,MAAO,UAAWC,QAAS9C,KAAKpB,MAAMkB,UAAWiD,gBAAiB,QArMtG,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAYC,KAAG,EAAf,UACE,cAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAhC,SACE,cAAC,IAAD,CAAQC,QAAQ,WAAhB,sEAEF,eAAC,IAAD,CAAMJ,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAhC,UACE,cAAC,IAAD,iCACA,eAAC,IAAD,CAASE,SAAU,SAAAC,GAAO,EAAKC,WAAWD,EAAEE,OAAO9B,QAAU+B,QAAM,EAAnE,UACE,wBAAQ/B,MAAO,GAAf,8BAEEhC,EAAQgE,KAAI,SAACC,EAAMhD,GACjB,OACE,wBAAQe,MAAOiC,EAAK/B,IAApB,SAA0B+B,EAAKC,qBAQ7C,eAAC,IAAD,WACE,wBAAOpB,UAAU,yDAAjB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,+CACA,oBAAIA,UAAU,cAAd,+BACA,oBAAIA,UAAU,cAAd,4CACA,oBAAIA,UAAU,cAAd,6BACA,oBAAIA,UAAU,cAAd,mDAGJ,kCACE,oBAAIqB,QAAQ,IAAItE,OAAQC,EAAYgD,UAAU,cAA9C,mDAEkBsB,GAAhBjF,EACEA,EAAa6E,KAAI,SAACC,EAAMhD,GACtB,OACE,+BACE,oBAAI6B,UAAU,cAAd,SAA6B7B,EAAI,IACjC,oBAAI6B,UAAU,cAAd,SAA6BmB,EAAKC,OAClC,oBAAIpB,UAAU,cAAd,SAA6BmB,EAAKI,QAClC,oBAAIvB,UAAU,cAAd,SAA6BmB,EAAKlD,QAClC,oBAAI+B,UAAU,cAAd,SAA6BmB,EAAKK,SAClC,oBAAIxB,UAAU,cAAd,SAA6BmB,EAAKM,QAClC,oBAAIzB,UAAU,cAAd,SAA6B0B,OAAOP,EAAKQ,aAAaC,QAAQ,KAC9D,oBAAI5B,UAAU,cAAd,SACI,IAAI6B,KAAKV,EAAKW,aAAcC,qBAAuB,IAAO,IAAIF,KAAKV,EAAKW,aAAcE,yBATnF7D,MAaR,SAKa,GAAxB5B,EAAc2B,OAAc,GAC1B,qBAAK+D,MAAO,CAAEC,MAAO,QAASC,YAAa,OAAQC,QAAS,QAA5D,SACE,oBAAIH,MAAO,CAAEC,MAAO,OAAQG,MAAO,QAAnC,SAEI9F,EAAc2E,KAAI,SAACC,EAAMhD,GACvB,OACE,6BACE,cAACmE,EAAA,EAAD,CAAQL,MAAO,CAAEE,YAAa,OAAS/B,MAAOjC,GAAK3B,EAAY,UAAY,SAAU+F,QAAS,SAAAzB,GAAO,EAAKtD,SAAS,CAAEnB,aAAcE,EAAc4B,GAAI3B,UAAW2B,EAAG7B,sBAAuBC,EAAc4B,MAAxM,SAAkNA,EAAI,aAQtO,uBAGA,eAAC,IAAD,WACE,cAAC,IAAD,CAAMqC,GAAG,KAAKC,GAAG,IAAjB,SACE,eAAC,IAAD,CAAO+B,gBAAgB,MAAvB,UACE,cAAC,IAAD,sHAGA,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,SAAU,CACR,CACEC,MAAO,sFACPF,gBAAiB,UACjBxE,KAAMT,KAAKpB,MAAMc,aAGrB0F,OAAO,SACPC,QAAS,CACPC,SAAU,CACRC,SAAS,aAOrB,cAAC,IAAD,CAAMtC,GAAG,KAAKC,GAAG,IAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAYF,KAAG,EAAf,UACE,cAAC,IAAD,CAAMC,GAAG,KAAKE,GAAG,IAAjB,SACE,cAAC,IAAD,CAAQE,QAAQ,WAAhB,qDAEF,cAAC,IAAD,CAAMJ,GAAG,KAAKE,GAAG,IAAjB,SACE,qBAAKuB,MAAO,CAAEC,MAAO,QAASG,MAAO,SAArC,SACE,eAAC,IAAD,CAASxB,SAAQ,uCAAE,WAAMC,GAAN,SAAAxD,EAAA,sEAAmB,EAAKK,mBAAmBmD,EAAEE,OAAO9B,OAApD,2CAAF,sDAAgE+B,QAAM,EAACd,KAAK,KAAK4C,KAAK,WAAW1D,GAAG,WAArH,UACE,wBAAQH,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,4BAMV,eAAC,IAAD,WACE,wBAAOc,UAAU,yDAAjB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,+CACA,oBAAIA,UAAU,cAAd,+BACA,oBAAIA,UAAU,cAAd,4CACA,oBAAIA,UAAU,cAAd,kCAGJ,kCACE,oBAAIqB,QAAQ,IAAItE,OAAQA,EAAQiD,UAAU,cAA1C,4DAEqBsB,GAAnB7E,EACEA,EAAgByE,KAAI,SAACC,EAAMhD,GACzB,OACE,+BACE,oBAAI6B,UAAU,cAAd,SAA6BmB,EAAKC,OAClC,oBAAIpB,UAAU,cAAd,SAA6BmB,EAAKI,QAClC,oBAAIvB,UAAU,cAAd,SAA6BmB,EAAKlD,QAClC,oBAAI+B,UAAU,cAAd,SAA6BmB,EAAKK,SAClC,oBAAIxB,UAAU,cAAd,SAA6BmB,EAAKM,QAClC,oBAAIzB,UAAU,cAAd,SAA6B0B,OAAOP,EAAKQ,aAAaC,QAAQ,OANvDzD,MASR,SAMwB,GAAnCzB,EAAyBwB,OAAc,GACrC,qBAAK+D,MAAO,CAAEC,MAAO,QAASC,YAAa,OAAQC,QAAS,QAA5D,SACE,oBAAIH,MAAO,CAAEC,MAAO,OAAQG,MAAO,QAAnC,SAEI3F,EAAyBwE,KAAI,SAACC,EAAMhD,GAClC,OACE,6BACE,cAACmE,EAAA,EAAD,CAAQL,MAAO,CAAEE,YAAa,OAAS/B,MAAOjC,GAAKxB,EAAuB,UAAY,SAAU4F,QAAS,SAAAzB,GACvG,EAAKtD,SAAS,CAAEf,gBAAiBC,EAAyByB,GAAIxB,qBAAsBwB,KADtF,SAEIA,EAAI,sC,GAtWtB6E,aAoYpB9C,EAAWD,cAAH,wFAMChE,IC9YXN,EAAU,IAAIC,QACZC,EAAOC,aAAaC,QAAQ,QAClCJ,EAAQK,OAAO,gBAAiB,UAAYH,GAC5CF,EAAQK,OAAO,eAAgB,oB,MACzBC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,EACPC,aAAc,GACdE,cAAe,GACfC,UAAW,EACXC,gBAAiB,GACjBC,yBAA0B,GAC1BC,qBAAsB,EACtBC,WAAYd,aAAaC,QAAQ,QACjCc,QAAS,GACTC,QAAS,GACTC,QAAQ,EACRC,YAAY,EACZC,WAAY,GACZE,MAAO,CAAEC,cAAc,UAAD,OAAYtB,aAAaC,QAAQ,YAhBxC,E,4FAoBnB,sBAAAuB,EAAA,6DACEC,KAAKC,SAAS,CAAEH,WAAW,IAD7B,SAEQE,KAAKG,cAFb,uBAGQH,KAAKI,mBAAmB,MAHhC,uBAIQJ,KAAKK,mBAJb,gD,6EAQA,SAAUC,EAAKC,GAEb,OADcD,EAAIE,QAAO,SAAAC,GAAI,OAAIA,EAAKC,OAASH,KAClCI,S,wBAGf,SAAWrB,GACT,IAAIsB,EAAGC,EAAGC,EACNC,EAAW,GACf,IAAKH,EAAI,EAAGC,EAAIvB,EAAQqB,OAAQC,EAAIC,EAAGD,GAFV,EAG3BE,EAAYxB,EAAQ0B,MAAMJ,EAAGA,EAHF,GAI3BG,EAASE,KAAKH,GAGhBoB,QAAQC,IAAIpB,GACZf,KAAKC,SAAS,CAAEjB,cAAe+B,EAAUjC,aAAciC,EAASf,KAAKpB,MAAMK,e,oCAG7E,SAAuBK,GACrB,IAAIsB,EAAGC,EAAGC,EACNI,EAAuB,GAC3B,IAAKN,EAAI,EAAGC,EAAIvB,EAAQqB,OAAQC,EAAIC,EAAGD,GAFV,EAG3BE,EAAYxB,EAAQ0B,MAAMJ,EAAGA,EAHF,GAI3BM,EAAqBD,KAAKH,GAE5Bd,KAAKC,SAAS,CAAEd,yBAA0B+B,EAAsBhC,gBAAiBgC,EAAqBlB,KAAKpB,MAAMQ,0B,gEAGnH,kCAAAW,EAAA,6DAEUV,EAAeW,KAAKpB,MAApBS,WACJyC,EAAKC,KAAKC,MAAM3C,GAHtB,SAKoB8B,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUY,cACfR,OAAQ,OACRhB,KAAM,CACJ,UAAa,CACX,WAAcqB,EAAGzC,WACjB,QAAWyC,EAAG4D,UAGlBtH,QAAS4B,KAAKpB,MAAMgB,QAfxB,OAKQ8B,EALR,OAkBMjB,EAAOiB,EAAIjB,KAAKA,KAEpBT,KAAKC,SAAS,CAAEX,QAASmB,IAEN,GAAfA,EAAKE,OACPX,KAAKC,SAAS,CAAER,YAAY,EAAOK,WAAW,IAE9CE,KAAKC,SAAS,CAAER,YAAY,EAAMK,WAAW,IAE/CE,KAAKoC,WAAW3B,GA3BlB,gD,2HA+BA,gCAAAV,EAAA,6DACUV,EAAeW,KAAKpB,MAApBS,WACJyC,EAAKC,KAAKC,MAAM3C,GAFtB,SAwBoB8B,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUsE,WACflE,OAAQ,OACRhB,KAAM,CACJpB,WAAYyC,EAAGzC,WACfqG,QAAS5D,EAAG4D,WA9BlB,OAwBQhE,EAxBR,OAkCEQ,QAAQC,IAAIL,EAAG4D,SACf1F,KAAKC,SAAS,CAAEP,WAAYgC,EAAIjB,KAAKA,KAAMX,WAAW,IAnCxD,gD,6HAsCA,WAAyBjB,GAAzB,uBAAAkB,EAAA,yDACUV,EAAeW,KAAKpB,MAApBS,WACJyC,EAAKC,KAAKC,MAAM3C,GAChBiD,EAAW,CACbjD,WAAYyC,EAAGzC,WACfR,MAAOA,EACP6G,QAAS5D,EAAG4D,SAGD,GAAT7G,EATN,gCAUUmB,KAAKG,cAVf,+CAYsBgB,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUuE,uBACfnE,OAAQ,OACRhB,KAAM6B,IAhBZ,QAYUZ,EAZV,OAqBuB,IAFfjB,EAAOiB,EAAIjB,KAAKA,MAEXE,OACPX,KAAKC,SAAS,CAAET,QAAQ,IAExBQ,KAAKC,SAAS,CAAET,QAAQ,IAE1BQ,KAAKC,SAAS,CAAEX,QAASmB,EAAMlB,QAASkB,EAAMX,WAAW,IAEzDE,KAAKwC,uBAAuB/B,GA5BhC,iD,2EAgCA,WAAU,IAAD,OACP,EACsET,KAAKpB,MADnEE,EAAR,EAAQA,aAAcU,EAAtB,EAAsBA,OAAQR,EAA9B,EAA8BA,cAAeC,EAA7C,EAA6CA,UAAWQ,EAAxD,EAAwDA,WACtDP,EADF,EACEA,gBAAiBC,EADnB,EACmBA,yBAA0BC,EAD7C,EAC6CA,qBAC7C,OAAKY,KAAKpB,MAAMkB,UAyLd,qBAAK2C,UAAU,gBAAf,SACE,cAAC,IAAD,CAAWC,IAAKC,EAAUC,KAAM,GAAIC,MAAO,UAAWC,QAAS9C,KAAKpB,MAAMkB,UAAWiD,gBAAiB,QAxLtG,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAYC,KAAG,EAAf,UACE,cAAC,IAAD,CAAMG,GAAG,IAAT,SACE,cAAC,IAAD,CAAQE,QAAQ,WAAhB,sEAEF,cAAC,IAAD,CAAMJ,GAAG,KAAKE,GAAG,WAKrB,eAAC,IAAD,WACE,wBAAOV,UAAU,yDAAjB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,oBAAIA,UAAU,cAAd,iBACA,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,+CACA,oBAAIA,UAAU,cAAd,+BACA,oBAAIA,UAAU,cAAd,4CACA,oBAAIA,UAAU,cAAd,6BACA,oBAAIA,UAAU,cAAd,mDAGJ,kCACE,oBAAIqB,QAAQ,IAAItE,OAAQC,EAAYgD,UAAU,cAA9C,wEAEkBsB,GAAhBjF,EACEA,EAAa6E,KAAI,SAACC,EAAMhD,GACtB,OACE,+BACE,oBAAI6B,UAAU,cAAd,SAA6B7B,EAAI,IACjC,oBAAI6B,UAAU,cAAd,SAA6BmB,EAAKC,OAClC,oBAAIpB,UAAU,cAAd,SAA6BmB,EAAKI,QAClC,oBAAIvB,UAAU,cAAd,SAA6BmB,EAAKlD,QAClC,oBAAI+B,UAAU,cAAd,SAA6BmB,EAAKK,SAClC,oBAAIxB,UAAU,cAAd,SAA6BmB,EAAKM,QAClC,oBAAIzB,UAAU,cAAd,SAA6B0B,OAAOP,EAAKQ,aAAaC,QAAQ,KAC9D,oBAAI5B,UAAU,cAAd,SACI,IAAI6B,KAAKV,EAAKW,aAAcC,qBAAuB,IAAO,IAAIF,KAAKV,EAAKW,aAAcE,yBATnF7D,MAaR,SAKb,gCAE4B,GAAxB5B,EAAc2B,OAAc,GAC1B,qBAAK+D,MAAO,CAAEC,MAAO,QAASC,YAAa,OAAQC,QAAS,QAA5D,SACE,oBAAIH,MAAO,CAAEC,MAAO,OAAQG,MAAO,QAAnC,SAEI9F,EAAc2E,KAAI,SAACC,EAAMhD,GACvB,OACE,6BACE,cAACmE,EAAA,EAAD,CAAQL,MAAO,CAAEE,YAAa,OAAS/B,MAAOjC,GAAK3B,EAAY,UAAY,SAAU+F,QAAS,SAAAzB,GAAO,EAAKtD,SAAS,CAAEnB,aAAcE,EAAc4B,GAAI3B,UAAW2B,KAAhK,SAAyKA,EAAI,eAS/L,uBAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAMqC,GAAG,KAAKC,GAAG,IAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,sHAGA,cAAC,IAAD,UACE,cAAC,IAAD,CACEgC,SAAU,CACR,CACEC,MAAO,sFACPF,gBAAiB,UACjBxE,KAAMT,KAAKpB,MAAMc,aAGrB0F,OAAO,SACPC,QAAS,CACPC,SAAU,CACRC,SAAS,aAOrB,cAAC,IAAD,CAAMtC,GAAG,KAAKC,GAAG,IAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAYF,KAAG,EAAf,UACE,cAAC,IAAD,CAAMC,GAAG,KAAKE,GAAG,IAAI0C,GAAG,KAAxB,SACE,cAAC,IAAD,CAAQxC,QAAQ,WAAhB,gEAEF,cAAC,IAAD,CAAMJ,GAAG,KAAKE,GAAG,IAAI0C,GAAG,KAAxB,SACE,qBAAKnB,MAAO,CAAEC,MAAO,QAASG,MAAO,SAArC,SACE,eAAC,IAAD,CAASxB,SAAQ,uCAAE,WAAMC,GAAN,SAAAxD,EAAA,sEAAmB,EAAKK,mBAAmBmD,EAAEE,OAAO9B,OAApD,2CAAF,sDAAgE+B,QAAM,EAACd,KAAK,KAAK4C,KAAK,WAAW1D,GAAG,WAArH,UACE,wBAAQH,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,4BAMV,eAAC,IAAD,WACE,wBAAOc,UAAU,yDAAjB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,+CACA,oBAAIA,UAAU,cAAd,+BACA,oBAAIA,UAAU,cAAd,4CACA,oBAAIA,UAAU,cAAd,kCAGJ,kCACE,oBAAIqB,QAAQ,IAAItE,OAAQA,EAAQiD,UAAU,cAA1C,+EAEqBsB,GAAnB7E,EACEA,EAAgByE,KAAI,SAACC,EAAMhD,GACzB,OACE,+BACE,oBAAI6B,UAAU,cAAd,SAA6BmB,EAAKC,OAClC,oBAAIpB,UAAU,cAAd,SAA6BmB,EAAKI,QAClC,oBAAIvB,UAAU,cAAd,SAA6BmB,EAAKlD,QAClC,oBAAI+B,UAAU,cAAd,SAA6BmB,EAAKK,SAClC,oBAAIxB,UAAU,cAAd,SAA6BmB,EAAKM,QAClC,oBAAIzB,UAAU,cAAd,SAA6B0B,OAAOP,EAAKQ,aAAaC,QAAQ,OANvDzD,MASR,SAMwB,GAAnCzB,EAAyBwB,OAAc,GACrC,qBAAK+D,MAAO,CAAEC,MAAO,QAASC,YAAa,OAAQC,QAAS,QAA5D,SACE,oBAAIH,MAAO,CAAEC,MAAO,OAAQG,MAAO,QAAnC,SAEI3F,EAAyBwE,KAAI,SAACC,EAAMhD,GAClC,OACE,6BACE,cAACmE,EAAA,EAAD,CAAQL,MAAO,CAAEE,YAAa,OAAS/B,MAAOjC,GAAKxB,EAAuB,UAAY,SAAU4F,QAAS,SAAAzB,GAAO,EAAKtD,SAAS,CAAEf,gBAAiBC,EAAyByB,GAAIxB,qBAAsBwB,KAApM,SAA6MA,EAAI,sC,GArU/N6E,aAgWpB9C,EAAWD,cAAH,wFAMChE,IC5WXN,EAAU,IAAIC,QACZC,EAAOC,aAAaC,QAAQ,QAClCJ,EAAQK,OAAO,gBAAiB,UAAYH,GAC5CF,EAAQK,OAAO,eAAgB,oB,IACzBqH,E,kDACJ,WAAYnH,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,EACPC,aAAc,GACdC,sBAAuB,GACvBC,cAAe,GACfC,UAAW,EACXC,gBAAiB,GACjBC,yBAA0B,GAC1BC,qBAAsB,EACtBC,WAAYd,aAAaC,QAAQ,QACjCc,QAAS,GACTC,QAAS,GACTC,QAAQ,EACRC,YAAY,EACZC,WAAY,GACZC,QAAS,GACTC,MAAO,CAAEC,cAAc,UAAD,OAAYtB,aAAaC,QAAQ,WACvDsB,WAAW,GAnBI,E,4FAuBnB,sBAAAC,EAAA,6DACEC,KAAKC,SAAS,CAAEH,WAAW,IAD7B,SAEQE,KAAKE,cAFb,uBAGQF,KAAKG,cAHb,uBAIQH,KAAKI,mBAAmB,MAJhC,uBAKQJ,KAAKK,mBALb,gD,6EAQA,SAAUC,EAAKC,GAEb,OADcD,EAAIE,QAAO,SAAAC,GAAI,OAAIA,EAAKC,OAASH,KAClCI,S,wBAGf,SAAWrB,GACT,IAAIsB,EAAGC,EAAGC,EACNC,EAAW,GACf,IAAKH,EAAI,EAAGC,EAAIvB,EAAQqB,OAAQC,EAAIC,EAAGD,GAFV,EAG3BE,EAAYxB,EAAQ0B,MAAMJ,EAAGA,EAHF,GAI3BG,EAASE,KAAKH,GAEhBd,KAAKC,SAAS,CAAEjB,cAAe+B,EAAUjC,aAAciC,EAASf,KAAKpB,MAAMK,WAAYF,sBAAuBgC,EAASf,KAAKpB,MAAMK,e,oCAGpI,SAAuBK,GACrB,IAAIsB,EAAGC,EAAGC,EACNI,EAAuB,GAC3B,IAAKN,EAAI,EAAGC,EAAIvB,EAAQqB,OAAQC,EAAIC,EAAGD,GAFV,EAG3BE,EAAYxB,EAAQ0B,MAAMJ,EAAGA,EAHF,GAI3BM,EAAqBD,KAAKH,GAE5Bd,KAAKC,SAAS,CAAEd,yBAA0B+B,EAAsBhC,gBAAiBgC,EAAqBlB,KAAKpB,MAAMQ,0B,gEAGnH,8BAAAW,EAAA,sEACoBoB,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUG,SACfC,OAAQ,OACRrD,QAAS4B,KAAKpB,MAAMgB,QALxB,OACQ8B,EADR,OAOMjB,EAAOiB,EAAIjB,KAAKA,KAEpBT,KAAKC,SAAS,CAAEN,QAASc,IAT3B,gD,qHAYA,WAAiBkB,GAAjB,mBAAA5B,EAAA,sDAGE,IAFQhB,EAA0BiB,KAAKpB,MAA/BG,sBACFQ,EAAU,GACPqB,EAAI,EAAGA,EAAI7B,EAAsB4B,OAAQC,IAC5C7B,EAAsB6B,GAAGgB,QAAQC,KAAOF,GAC1CpC,EAAQ0B,KAAKlC,EAAsB6B,IALzC,GASe,IAATe,EATN,gCAUU3B,KAAKG,cAVf,6BAY0B,GAAlBZ,EAAQoB,OACVX,KAAKC,SAAS,CAAEnB,aAAcS,EAASE,YAAY,EAAOK,WAAW,IAErEE,KAAKC,SAAS,CAAEnB,aAAcS,EAASE,YAAY,EAAMK,WAAW,IAf1E,gD,uHAoBA,gCAAAC,EAAA,6DAEUV,EAAeW,KAAKpB,MAApBS,WACC0C,KAAKC,MAAM3C,GAHtB,SAKoB8B,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUY,cACfR,OAAQ,OACRrD,QAAS4B,KAAKpB,MAAMgB,QATxB,OAKQ8B,EALR,OAYMjB,EAAOiB,EAAIjB,KAAKA,KAEpByB,QAAQC,IAAI1B,GACZT,KAAKC,SAAS,CAAEX,QAASmB,EAAMX,WAAW,IAE1CE,KAAKoC,WAAW3B,GAjBlB,gD,2HAqBA,4BAAAV,EAAA,sEAqBoBoB,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAU0E,YACftE,OAAQ,SAxBZ,OAqBQC,EArBR,OA2BE1B,KAAKC,SAAS,CAAEP,WAAYgC,EAAIjB,KAAKA,KAAMX,WAAW,IA3BxD,gD,6HA8BA,WAAyBjB,GAAzB,qBAAAkB,EAAA,yDACUV,EAAeW,KAAKpB,MAApBS,WACC0C,KAAKC,MAAM3C,GAChBiD,EAAW,CACbzD,MAAOA,GAGI,GAATA,EAPN,gCAQUmB,KAAKG,cARf,+CAUsBgB,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAU2E,6BACfvE,OAAQ,OACRhB,KAAM6B,IAdZ,QAUUZ,EAVV,OAkBuB,IADfjB,EAAOiB,EAAIjB,KAAKA,MACXE,OACPX,KAAKC,SAAS,CAAET,QAAQ,IAExBQ,KAAKC,SAAS,CAAET,QAAQ,IAE1BQ,KAAKC,SAAS,CAAEX,QAASmB,EAAMlB,QAASkB,EAAMX,WAAW,IAEzDE,KAAKwC,uBAAuB/B,GAzBhC,iD,2EA6BA,WAAU,IAAD,OACP,EACsET,KAAKpB,MADnEE,EAAR,EAAQA,aAAcU,EAAtB,EAAsBA,OAAQR,EAA9B,EAA8BA,cAAeC,EAA7C,EAA6CA,UAAWQ,EAAxD,EAAwDA,WAAYE,EAApE,EAAoEA,QAClET,EADF,EACEA,gBAAiBC,EADnB,EACmBA,yBAA0BC,EAD7C,EAC6CA,qBAC7C,OAAKY,KAAKpB,MAAMkB,UAoMd,qBAAK2C,UAAU,gBAAf,SACE,cAAC,IAAD,CAAWC,IAAKC,EAAUC,KAAM,GAAIC,MAAO,UAAWC,QAAS9C,KAAKpB,MAAMkB,UAAWiD,gBAAiB,QAnMtG,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAYC,KAAG,EAAf,UACE,cAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAhC,SACE,cAAC,IAAD,CAAQC,QAAQ,WAAhB,sEAEF,eAAC,IAAD,CAAMJ,GAAG,KAAKC,GAAG,KAAKC,GAAG,IAAIC,GAAG,IAAhC,UACE,cAAC,IAAD,iCACA,eAAC,IAAD,CAASE,SAAU,SAAAC,GAAO,EAAKC,WAAWD,EAAEE,OAAO9B,QAAU+B,QAAM,EAAnE,UACE,wBAAQ/B,MAAO,GAAf,8BAEEhC,EAAQgE,KAAI,SAACC,EAAMhD,GACjB,OACE,wBAAQe,MAAOiC,EAAK/B,IAApB,SAA0B+B,EAAKC,qBAQ7C,eAAC,IAAD,WACE,wBAAOpB,UAAU,yDAAjB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,+CACA,oBAAIA,UAAU,cAAd,+BACA,oBAAIA,UAAU,cAAd,4CACA,oBAAIA,UAAU,cAAd,6BACA,oBAAIA,UAAU,cAAd,mDAGJ,kCACE,oBAAIqB,QAAQ,IAAItE,OAAQC,EAAYgD,UAAU,cAA9C,mDAEkBsB,GAAhBjF,EACEA,EAAa6E,KAAI,SAACC,EAAMhD,GACtB,OACE,+BACE,oBAAI6B,UAAU,cAAd,SAA6B7B,EAAI,IACjC,oBAAI6B,UAAU,cAAd,SAA6BmB,EAAKC,OAClC,oBAAIpB,UAAU,cAAd,SAA6BmB,EAAKI,QAClC,oBAAIvB,UAAU,cAAd,SAA6BmB,EAAKlD,QAClC,oBAAI+B,UAAU,cAAd,SAA6BmB,EAAKK,SAClC,oBAAIxB,UAAU,cAAd,SAA6BmB,EAAKM,QAClC,oBAAIzB,UAAU,cAAd,SAA6B0B,OAAOP,EAAKQ,aAAaC,QAAQ,KAC9D,oBAAI5B,UAAU,cAAd,SACI,IAAI6B,KAAKV,EAAKW,aAAcC,qBAAuB,IAAO,IAAIF,KAAKV,EAAKW,aAAcE,yBATnF7D,MAaR,SAKa,GAAxB5B,EAAc2B,OAAc,GAC1B,qBAAK+D,MAAO,CAAEC,MAAO,QAASC,YAAa,OAAQC,QAAS,QAA5D,SACE,oBAAIH,MAAO,CAAEC,MAAO,OAAQG,MAAO,QAAnC,SAEI9F,EAAc2E,KAAI,SAACC,EAAMhD,GACvB,OACE,6BACE,cAACmE,EAAA,EAAD,CAAQL,MAAO,CAAEE,YAAa,OAAS/B,MAAOjC,GAAK3B,EAAY,UAAY,SAAU+F,QAAS,SAAAzB,GAAO,EAAKtD,SAAS,CAAEnB,aAAcE,EAAc4B,GAAI7B,sBAAuBC,EAAc4B,GAAI3B,UAAW2B,KAAzM,SAAkNA,EAAI,aAQtO,uBAGA,eAAC,IAAD,WACE,cAAC,IAAD,CAAMqC,GAAG,KAAKC,GAAG,IAAjB,SACE,eAAC,IAAD,CAAO+B,gBAAgB,MAAvB,UACE,cAAC,IAAD,sHAGA,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,SAAU,CACR,CACEC,MAAO,sFACPF,gBAAiB,UACjBxE,KAAMT,KAAKpB,MAAMc,aAGrB0F,OAAO,SACPC,QAAS,CACPC,SAAU,CACRC,SAAS,aAOrB,cAAC,IAAD,CAAMtC,GAAG,KAAKC,GAAG,IAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAYF,KAAG,EAAf,UACE,cAAC,IAAD,CAAMC,GAAG,KAAKE,GAAG,IAAjB,SACE,cAAC,IAAD,CAAQE,QAAQ,WAAhB,qDAEF,cAAC,IAAD,CAAMJ,GAAG,KAAKE,GAAG,IAAjB,SACE,qBAAKuB,MAAO,CAAEC,MAAO,QAASG,MAAO,SAArC,SACE,eAAC,IAAD,CAASxB,SAAQ,uCAAE,WAAMC,GAAN,SAAAxD,EAAA,sEAAmB,EAAKK,mBAAmBmD,EAAEE,OAAO9B,OAApD,2CAAF,sDAAgE+B,QAAM,EAACd,KAAK,KAAK4C,KAAK,WAAW1D,GAAG,WAArH,UACE,wBAAQH,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,4BAMV,eAAC,IAAD,WACE,wBAAOc,UAAU,yDAAjB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,+CACA,oBAAIA,UAAU,cAAd,+BACA,oBAAIA,UAAU,cAAd,4CACA,oBAAIA,UAAU,cAAd,kCAGJ,kCACE,oBAAIqB,QAAQ,IAAItE,OAAQA,EAAQiD,UAAU,cAA1C,4DAEqBsB,GAAnB7E,EACEA,EAAgByE,KAAI,SAACC,EAAMhD,GACzB,OACE,+BACE,oBAAI6B,UAAU,cAAd,SAA6BmB,EAAKC,OAClC,oBAAIpB,UAAU,cAAd,SAA6BmB,EAAKI,QAClC,oBAAIvB,UAAU,cAAd,SAA6BmB,EAAKlD,QAClC,oBAAI+B,UAAU,cAAd,SAA6BmB,EAAKK,SAClC,oBAAIxB,UAAU,cAAd,SAA6BmB,EAAKM,QAClC,oBAAIzB,UAAU,cAAd,SAA6B0B,OAAOP,EAAKQ,aAAaC,QAAQ,OANvDzD,MASR,SAMwB,GAAnCzB,EAAyBwB,OAAc,GACrC,qBAAK+D,MAAO,CAAEC,MAAO,QAASC,YAAa,OAAQC,QAAS,QAA5D,SACE,oBAAIH,MAAO,CAAEC,MAAO,OAAQG,MAAO,QAAnC,SAEI3F,EAAyBwE,KAAI,SAACC,EAAMhD,GAClC,OACE,6BACE,cAACmE,EAAA,EAAD,CAAQL,MAAO,CAAEE,YAAa,OAAS/B,MAAOjC,GAAKxB,EAAuB,UAAY,SAAU4F,QAAS,SAAAzB,GAAO,EAAKtD,SAAS,CAAEf,gBAAiBC,EAAyByB,GAAIxB,qBAAsBwB,KAApM,SAA6MA,EAAI,sC,GAzV9N6E,aAuXrB9C,EAAWD,cAAH,wFAKCoD,IChZX1H,EAAU,IAAIC,QACZC,EAAOC,aAAaC,QAAQ,QAClCJ,EAAQK,OAAO,gBAAiB,UAAYH,GAC5CF,EAAQK,OAAO,eAAgB,oB,IACzBwH,E,4JAEJ,WACE,OACE,8BAEoC,SAAhC1H,aAAaC,QAAQ,QAAqB,cAAC0H,EAAD,IACR,WAAhC3H,aAAaC,QAAQ,QAAuB,cAAC,EAAD,KAC1CD,aAAaC,QAAQ,QAAqB,cAAC,EAAD,W,GARhCiH,aAeTQ,a,iCC1BA,KACb,SAAa,gCAEb,UAAc,iBACd,kBAAsB,qBACtB,SAAa,gBACb,YAAgB,mBAChB,YAAgB,mBAChB,YAAgB,mBAChB,SAAa,gBACb,SAAa,gBACb,gBAAoB,mCACpB,yBAA6B,4CAC7B,uBAA2B,iCAC3B,+BAAmC,mCACnC,4BAAgC,mCAChC,WAAe,gBACf,cAAiB,qBACjB,eAAkB,qBAElB,cAAkB,qBAClB,uBAA2B,8BAE3B,6BAAiC,+BAEjC,aAAiB,oBACjB,qBAAyB,wBACzB,YAAgB,mBAChB,eAAmB,sBACnB,eAAmB,sBAEnB,cAAkB,qBAClB,sBAA0B,yBAC1B,aAAiB,oBACjB,gBAAoB,uBACpB,gBAAoB,uBAEpB,WAAe,kBACf,UAAc,iBACd,oBAAwB,2BAExB,iBAAqB,wBACrB,gBAAoB,uBAEpB,eAAmB,qBACnB,uBAA2B,sCAC3B,uBAA2B,8BAE3B,kBAAsB,wBACtB,iBAAqB,uBAErB,UAAc,iBACd,kBAAsB,qBACtB,SAAa,gBACb,YAAgB,mBAChB,YAAgB,mBAEhB,aAAiB,oBACjB,qBAAyB,wBACzB,YAAgB,mBAChB,eAAmB,sBACnB,eAAmB,sBAEnB,UAAc,qBACd,UAAc,iBACd,kBAAsB,qBACtB,SAAa,gBACb,YAAgB,mBAChB,YAAgB,mBAEhB,cAAkB,qBAClB,sBAA0B,yBAC1B,aAAiB,oBACjB,gBAAoB,uBACpB,gBAAoB,uBAEpB,SAAa,gBACb,iBAAqB,oBACrB,QAAY,eACZ,WAAe,kBACf,WAAe,kBAEf,aAAiB,oBACjB,qBAAyB,wBACzB,YAAgB,mBAChB,eAAmB,sBACnB,eAAmB,sBACnB,aAAiB,wBAEjB,UAAc,iBACd,kBAAsB,qBACtB,SAAa,gBACb,YAAgB,mBAChB,YAAgB,mBAChB,iBAAmB,kBAEnB,mBAAsB,0BACtB,kBAAqB,yBACrB,qBAAwB,4BACxB,oBAAuB,2BAEvB,oBAAuB,2BACvB,mBAAsB,0BACtB,sBAAyB,6BACzB,sBAAyB,6BACzB,aAAgB,0BAEhB,sBAAyB,6BACzB,qBAAwB,4BACxB,wBAA2B,+BAC3B,wBAA2B,+BAC3B,eAAkB,4BAElB,YAAe,mBACf,cAAiB,qBACjB,WAAc","file":"static/js/38.9a251f10.chunk.js","sourcesContent":["import React, { lazy, Component } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CFormGroup,\n  CLabel,\n  CSelect, CCardGroup\n} from '@coreui/react'\n\nimport {\n  CChartBar,\n} from '@coreui/react-chartjs'\n\nimport {\n  Button\n} from 'reactstrap';\nimport axios from 'axios'\nimport Constants from \"./../../contants/contants\";\n\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\n\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\nclass ShopManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      month: 0,\n      dataUserSale: [],\n      dataUserSale_Original: [],\n      arrPagination: [],\n      indexPage: 0,\n      dataStatistical: [],\n      arrPaginationStatistical: [],\n      indexPageStatistical: 0,\n      company_id: localStorage.getItem('user'),\n      dataApi: [],\n      arrTemp: [],\n      hidden: true,\n      hidden_all: true,\n      arrAllUser: [],\n      arrSale: [],\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      isLoading: false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    await this.getListSale();\n    await this.getCustomer();\n    await this.getCustomerByMonth(\"01\");\n    await this.getDataForCharts();\n  }\n\n  countType(arr, phone) {\n    const count = arr.filter(data => data.Phone == phone);\n    return count.length;\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n    this.setState({ arrPagination: arrTotal, dataUserSale: arrTotal[this.state.indexPage], dataUserSale_Original: arrTotal[this.state.indexPage] });\n  }\n\n  pagination_statistical(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal_Statistical = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal_Statistical.push(temparray);\n    }\n    this.setState({ arrPaginationStatistical: arrTotal_Statistical, dataStatistical: arrTotal_Statistical[this.state.indexPageStatistical] });\n  }\n\n  async getListSale() {\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.GET_SALE,\n      method: 'POST',\n      headers: this.state.token\n    })\n    let data = res.data.data;\n\n    this.setState({ arrSale: data })\n  }\n\n  async chooseSale(value) {\n    const { dataUserSale_Original } = this.state;\n    const arrTemp = []\n    for (let i = 0; i < dataUserSale_Original.length; i++) {\n      if (dataUserSale_Original[i].Sale_Id._id == value) {\n        arrTemp.push(dataUserSale_Original[i])\n      }\n    }\n\n    if (value == \"\") {\n      await this.getCustomer();\n    } else {\n      if (arrTemp.length == 0) {\n        this.setState({ dataUserSale: arrTemp, hidden_all: false, isLoading: false })\n      } else {\n        this.setState({ dataUserSale: arrTemp, hidden_all: true, isLoading: false })\n      }\n    }\n  }\n\n  async getCustomer() {\n\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_CUSTOMER,\n      method: 'POST',\n      data: {\n        \"condition\": {\n          \"Company_Id\": id.company_id\n        }\n      },\n      headers: this.state.token\n    });\n\n    let data = res.data.data\n\n    console.log(data)\n    this.setState({ dataApi: data });\n\n    this.pagination(data);\n\n  }\n\n  async getDataForCharts() {\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n    // let arrMonth = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"]\n    // let arrTemp = [];\n    // for (let i = 0; i < arrMonth.length; i++) {\n    //   const res = await axios({\n    //     baseURL: Constants.BASE_URL,\n    //     url: Constants.LIST_CUSTOMER_BY_MONTH,\n    //     method: 'POST',\n    //     data: {\n    //       company_id: id.company_id,\n    //       month: arrMonth[i]\n    //     }\n    //   });\n\n    //   let data = res.data.data\n\n\n    //   arrTemp.push(data.length)\n\n    // }\n\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.COMPANY_CHART,\n      method: 'POST',\n      data: {\n        company_id: id.company_id\n      }\n    });\n\n    this.setState({ arrAllUser: res.data.data, isLoading: false })\n  }\n\n  async getCustomerByMonth(month) {\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n    var bodyUser = {\n      company_id: id.company_id,\n      month: month\n    }\n\n    if (month == 0) {\n      await this.getCustomer();\n    } else {\n      const res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_CUSTOMER_BY_MONTH,\n        method: 'POST',\n        data: bodyUser\n      });\n\n      let data = res.data.data\n      if (data.length == 0) {\n        this.setState({ hidden: false })\n      } else {\n        this.setState({ hidden: true })\n      }\n      this.setState({ dataApi: data, arrTemp: data, isLoading: false });\n\n      this.pagination_statistical(data);\n    }\n  }\n\n  render() {\n    const { dataUserSale, hidden, arrPagination, indexPage, hidden_all, arrSale,\n      dataStatistical, arrPaginationStatistical, indexPageStatistical } = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <CRow>\n          <CCol>\n            <CCard>\n              <CCardHeader>\n                <CFormGroup row>\n                  <CCol xs=\"12\" sm=\"12\" md=\"3\" lg=\"3\">\n                    <CLabel htmlFor=\"selectSm\">Thống kê tổng số lượt user</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" sm=\"12\" md=\"9\" lg=\"9\">\n                    <CLabel>Lọc theo Sale</CLabel>\n                    <CSelect onChange={e => { this.chooseSale(e.target.value) }} custom>\n                      <option value={\"\"}>----------------</option>\n                      {\n                        arrSale.map((item, i) => {\n                          return (\n                            <option value={item._id}>{item.Name}</option>\n                          );\n                        })\n                      }\n                    </CSelect>\n                  </CCol>\n                </CFormGroup>\n              </CCardHeader>\n              <CCardBody>\n                <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th className=\"text-center\">STT.</th>\n                      <th className=\"text-center\">Tên</th>\n                      <th className=\"text-center\">Email</th>\n                      <th className=\"text-center\">Số điện thoại</th>\n                      <th className=\"text-center\">Giới tính</th>\n                      <th className=\"text-center\">Số lần đến</th>\n                      <th className=\"text-center\">Hệ số</th>\n                      <th className=\"text-center\">Lần cuối đến</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <td colSpan=\"9\" hidden={hidden_all} className=\"text-center\">Không có dữ liệu</td>\n                    {\n                      dataUserSale != undefined ?\n                        dataUserSale.map((item, i) => {\n                          return (\n                            <tr key={i}>\n                              <td className=\"text-center\">{i + 1}</td>\n                              <td className=\"text-center\">{item.Name}</td>\n                              <td className=\"text-center\">{item.Email}</td>\n                              <td className=\"text-center\">{item.Phone}</td>\n                              <td className=\"text-center\">{item.Gender}</td>\n                              <td className=\"text-center\">{item.count}</td>\n                              <td className=\"text-center\">{Number(item.coefficient).toFixed(2)}</td>\n                              <td className=\"text-center\">\n                                {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\n                              </td>\n                            </tr>\n                          );\n                        }) : \"\"\n                    }\n                  </tbody>\n                </table>\n                {\n                  arrPagination.length == 1 ? \"\" :\n                    <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                      <tr style={{ float: \"left\", width: \"100%\" }}>\n                        {\n                          arrPagination.map((item, i) => {\n                            return (\n                              <td>\n                                <Button style={{ marginRight: '5px' }} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ dataUserSale: arrPagination[i], indexPage: i, dataUserSale_Original: arrPagination[i] }) }}>{i + 1}</Button>\n                              </td>\n                            );\n                          })\n                        }\n                      </tr>\n                    </div>\n                }\n                <br />\n\n\n                <CRow>\n                  <CCol xs=\"12\" sm=\"5\">\n                    <CCard backgroundColor=\"red\">\n                      <CCardHeader>\n                        Biểu đồ thể hiện lượt người dùng qua từng tháng\n                      </CCardHeader>\n                      <CCardBody>\n                        <CChartBar\n                          datasets={[\n                            {\n                              label: 'Tổng người lượt người dùng của tháng ',\n                              backgroundColor: '#0008ff',\n                              data: this.state.arrAllUser\n                            }\n                          ]}\n                          labels=\"months\"\n                          options={{\n                            tooltips: {\n                              enabled: true\n                            }\n                          }}\n                        />\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                  <CCol xs=\"12\" sm=\"7\">\n                    <CCard>\n                      <CCardHeader>\n                        <CFormGroup row>\n                          <CCol xs=\"12\" md=\"8\">\n                            <CLabel htmlFor=\"selectSm\">Người dùng theo tháng</CLabel>\n                          </CCol>\n                          <CCol xs=\"12\" md=\"4\">\n                            <div style={{ float: \"right\", width: \"250px\" }}>\n                              <CSelect onChange={async e => { await this.getCustomerByMonth(e.target.value) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                                <option value=\"01\">01</option>\n                                <option value=\"02\">02</option>\n                                <option value=\"03\">03</option>\n                                <option value=\"04\">04</option>\n                                <option value=\"05\">05</option>\n                                <option value=\"06\">06</option>\n                                <option value=\"07\">07</option>\n                                <option value=\"08\">08</option>\n                                <option value=\"09\">09</option>\n                                <option value=\"10\">10</option>\n                                <option value=\"11\">11</option>\n                                <option value=\"12\">12</option>\n                              </CSelect>\n                            </div>\n                          </CCol>\n                        </CFormGroup>\n                      </CCardHeader>\n                      <CCardBody>\n                        <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                          <thead className=\"thead-light\">\n                            <tr>\n                              <th className=\"text-center\">Tên</th>\n                              <th className=\"text-center\">Email</th>\n                              <th className=\"text-center\">Số điện thoại</th>\n                              <th className=\"text-center\">Giới tính</th>\n                              <th className=\"text-center\">Số lần đến</th>\n                              <th className=\"text-center\">Hệ số</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <td colSpan=\"7\" hidden={hidden} className=\"text-center\">Không có user trong tháng này</td>\n                            {\n                              dataStatistical != undefined ?\n                                dataStatistical.map((item, i) => {\n                                  return (\n                                    <tr key={i}>\n                                      <td className=\"text-center\">{item.Name}</td>\n                                      <td className=\"text-center\">{item.Email}</td>\n                                      <td className=\"text-center\">{item.Phone}</td>\n                                      <td className=\"text-center\">{item.Gender}</td>\n                                      <td className=\"text-center\">{item.count}</td>\n                                      <td className=\"text-center\">{Number(item.coefficient).toFixed(2)}</td>\n                                    </tr>\n                                  );\n                                }) : \"\"\n                            }\n                          </tbody>\n                        </table>\n\n                        {\n                          arrPaginationStatistical.length == 1 ? \"\" :\n                            <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                              <tr style={{ float: \"left\", width: \"100%\" }}>\n                                {\n                                  arrPaginationStatistical.map((item, i) => {\n                                    return (\n                                      <td>\n                                        <Button style={{ marginRight: '5px' }} color={i == indexPageStatistical ? 'primary' : 'danger'} onClick={e => {\n                                          this.setState({ dataStatistical: arrPaginationStatistical[i], indexPageStatistical: i })\n                                        }}>{i + 1}</Button>\n                                      </td>\n                                    );\n                                  })\n                                }\n                              </tr>\n                            </div>\n                        }\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                </CRow>\n\n\n\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n\n      )\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nexport default ShopManager\n","import React, { lazy, Component } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CFormGroup,\n  CLabel,\n  CSelect, CCardGroup\n} from '@coreui/react'\n\nimport {\n  CChartBar,\n} from '@coreui/react-chartjs'\n\nimport {\n  Button\n} from 'reactstrap';\nimport axios from 'axios'\nimport Constants from \"./../../contants/contants\";\n\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\n\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\nclass ShopManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      month: 0,\n      dataUserSale: [],\n      arrPagination: [],\n      indexPage: 0,\n      dataStatistical: [],\n      arrPaginationStatistical: [],\n      indexPageStatistical: 0,\n      company_id: localStorage.getItem('user'),\n      dataApi: [],\n      arrTemp: [],\n      hidden: true,\n      hidden_all: true,\n      arrAllUser: [],\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    await this.getCustomer();\n    await this.getCustomerByMonth(\"01\");\n    await this.getDataForCharts();\n\n  }\n\n  countType(arr, phone) {\n    const count = arr.filter(data => data.Phone == phone);\n    return count.length;\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n\n    console.log(arrTotal)\n    this.setState({ arrPagination: arrTotal, dataUserSale: arrTotal[this.state.indexPage] });\n  }\n\n  pagination_statistical(dataApi) {\n    var i, j, temparray, chunk = 2;\n    var arrTotal_Statistical = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal_Statistical.push(temparray);\n    }\n    this.setState({ arrPaginationStatistical: arrTotal_Statistical, dataStatistical: arrTotal_Statistical[this.state.indexPageStatistical] });\n  }\n\n  async getCustomer() {\n\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_CUSTOMER,\n      method: 'POST',\n      data: {\n        \"condition\": {\n          \"Company_Id\": id.company_id,\n          \"Sale_Id\": id.sale_id\n        }\n      },\n      headers: this.state.token\n    });\n\n    let data = res.data.data\n\n    this.setState({ dataApi: data });\n\n    if (data.length == 0) {\n      this.setState({ hidden_all: false, isLoading: false })\n    } else {\n      this.setState({ hidden_all: true, isLoading: false })\n    }\n    this.pagination(data);\n\n  }\n\n  async getDataForCharts() {\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n    // let arrMonth = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"]\n    // let arrTemp = [];\n    // for (let i = 0; i < arrMonth.length; i++) {\n    //   const res = await axios({\n    //     baseURL: Constants.BASE_URL,\n    //     url: Constants.GET_USER_SALE_BY_MONTH,\n    //     method: 'POST',\n    //     data: {\n    //       company_id: id.company_id,\n    //       month: arrMonth[i],\n    //       sale_id: id.sale_id\n    //     }\n    //   });\n    //   let data = res.data.data\n\n\n\n    //   arrTemp.push(data.length)\n\n    // }\n\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.SALE_CHART,\n      method: 'POST',\n      data: {\n        company_id: id.company_id,\n        sale_id: id.sale_id\n      }\n    });\n\n    console.log(id.sale_id)\n    this.setState({ arrAllUser: res.data.data, isLoading: false })\n  }\n\n  async getCustomerByMonth(month) {\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n    var bodyUser = {\n      company_id: id.company_id,\n      month: month,\n      sale_id: id.sale_id\n    }\n\n    if (month == 0) {\n      await this.getCustomer();\n    } else {\n      const res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.GET_USER_SALE_BY_MONTH,\n        method: 'POST',\n        data: bodyUser\n      });\n\n      let data = res.data.data\n\n      if (data.length == 0) {\n        this.setState({ hidden: false })\n      } else {\n        this.setState({ hidden: true })\n      }\n      this.setState({ dataApi: data, arrTemp: data, isLoading: false });\n\n      this.pagination_statistical(data);\n    }\n  }\n\n  render() {\n    const { dataUserSale, hidden, arrPagination, indexPage, hidden_all,\n      dataStatistical, arrPaginationStatistical, indexPageStatistical } = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <CRow>\n          <CCol>\n            <CCard>\n              <CCardHeader>\n                <CFormGroup row>\n                  <CCol md=\"3\">\n                    <CLabel htmlFor=\"selectSm\">Thống kê tổng số lượt user</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" md=\"9\">\n                    {/*  */}\n                  </CCol>\n                </CFormGroup>\n              </CCardHeader>\n              <CCardBody>\n                <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th className=\"text-center\">No.</th>\n                      <th className=\"text-center\">Tên</th>\n                      <th className=\"text-center\">Email</th>\n                      <th className=\"text-center\">Số điện thoại</th>\n                      <th className=\"text-center\">Giới tính</th>\n                      <th className=\"text-center\">Số lần đến</th>\n                      <th className=\"text-center\">Hệ số</th>\n                      <th className=\"text-center\">Lần cuối đến</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <td colSpan=\"9\" hidden={hidden_all} className=\"text-center\">Không có người dùng trong tháng</td>\n                    {\n                      dataUserSale != undefined ?\n                        dataUserSale.map((item, i) => {\n                          return (\n                            <tr key={i}>\n                              <td className=\"text-center\">{i + 1}</td>\n                              <td className=\"text-center\">{item.Name}</td>\n                              <td className=\"text-center\">{item.Email}</td>\n                              <td className=\"text-center\">{item.Phone}</td>\n                              <td className=\"text-center\">{item.Gender}</td>\n                              <td className=\"text-center\">{item.count}</td>\n                              <td className=\"text-center\">{Number(item.coefficient).toFixed(2)}</td>\n                              <td className=\"text-center\">\n                                {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\n                              </td>\n                            </tr>\n                          );\n                        }) : \"\"\n                    }\n                  </tbody>\n\n                </table>\n                <tfoot>\n                  {\n                    arrPagination.length == 1 ? \"\" :\n                      <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                        <tr style={{ float: \"left\", width: \"100%\" }}>\n                          {\n                            arrPagination.map((item, i) => {\n                              return (\n                                <td>\n                                  <Button style={{ marginRight: '5px' }} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ dataUserSale: arrPagination[i], indexPage: i }) }}>{i + 1}</Button>\n                                </td>\n                              );\n                            })\n                          }\n                        </tr>\n                      </div>\n                  }\n                </tfoot>\n                <br />\n\n                <CRow>\n                  <CCol xs=\"12\" sm=\"5\">\n                    <CCard>\n                      <CCardHeader>\n                        Biểu đồ thể hiện lượt người dùng qua từng tháng\n                      </CCardHeader>\n                      <CCardBody>\n                        <CChartBar\n                          datasets={[\n                            {\n                              label: 'Tổng người lượt người dùng của tháng ',\n                              backgroundColor: '#0008ff',\n                              data: this.state.arrAllUser\n                            }\n                          ]}\n                          labels=\"months\"\n                          options={{\n                            tooltips: {\n                              enabled: true\n                            }\n                          }}\n                        />\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                  <CCol xs=\"12\" sm=\"7\">\n                    <CCard>\n                      <CCardHeader>\n                        <CFormGroup row>\n                          <CCol xs=\"12\" md=\"7\" ls=\"12\">\n                            <CLabel htmlFor=\"selectSm\">Người dùng trong từng tháng</CLabel>\n                          </CCol>\n                          <CCol xs=\"12\" md=\"5\" ls=\"12\">\n                            <div style={{ float: \"right\", width: \"250px\" }}>\n                              <CSelect onChange={async e => { await this.getCustomerByMonth(e.target.value) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                                <option value=\"01\">01</option>\n                                <option value=\"02\">02</option>\n                                <option value=\"03\">03</option>\n                                <option value=\"04\">04</option>\n                                <option value=\"05\">05</option>\n                                <option value=\"06\">06</option>\n                                <option value=\"07\">07</option>\n                                <option value=\"08\">08</option>\n                                <option value=\"09\">09</option>\n                                <option value=\"10\">10</option>\n                                <option value=\"11\">11</option>\n                                <option value=\"12\">12</option>\n                              </CSelect>\n                            </div>\n                          </CCol>\n                        </CFormGroup>\n                      </CCardHeader>\n                      <CCardBody>\n                        <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                          <thead className=\"thead-light\">\n                            <tr>\n                              <th className=\"text-center\">Tên</th>\n                              <th className=\"text-center\">Email</th>\n                              <th className=\"text-center\">Số điện thoại</th>\n                              <th className=\"text-center\">Giới tính</th>\n                              <th className=\"text-center\">Số lần đến</th>\n                              <th className=\"text-center\">Hệ số</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <td colSpan=\"7\" hidden={hidden} className=\"text-center\">Không có người dùng nào trong tháng</td>\n                            {\n                              dataStatistical != undefined ?\n                                dataStatistical.map((item, i) => {\n                                  return (\n                                    <tr key={i}>\n                                      <td className=\"text-center\">{item.Name}</td>\n                                      <td className=\"text-center\">{item.Email}</td>\n                                      <td className=\"text-center\">{item.Phone}</td>\n                                      <td className=\"text-center\">{item.Gender}</td>\n                                      <td className=\"text-center\">{item.count}</td>\n                                      <td className=\"text-center\">{Number(item.coefficient).toFixed(2)}</td>\n                                    </tr>\n                                  );\n                                }) : \"\"\n                            }\n                          </tbody>\n                        </table>\n\n                        {\n                          arrPaginationStatistical.length == 1 ? \"\" :\n                            <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                              <tr style={{ float: \"left\", width: \"100%\" }}>\n                                {\n                                  arrPaginationStatistical.map((item, i) => {\n                                    return (\n                                      <td>\n                                        <Button style={{ marginRight: '5px' }} color={i == indexPageStatistical ? 'primary' : 'danger'} onClick={e => { this.setState({ dataStatistical: arrPaginationStatistical[i], indexPageStatistical: i }) }}>{i + 1}</Button>\n                                      </td>\n                                    );\n                                  })\n                                }\n                              </tr>\n                            </div>\n                        }\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                </CRow>\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n\n      )\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nexport default ShopManager\n","import React, { lazy, Component } from 'react'\nimport {\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CRow,\n  CFormGroup,\n  CLabel,\n  CSelect, CCardGroup\n} from '@coreui/react'\n\nimport {\n  CChartBar,\n} from '@coreui/react-chartjs'\n\nimport {\n  Button\n} from 'reactstrap';\nimport axios from 'axios'\nimport Constants from \"./../../contants/contants\";\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\nclass AdminManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      month: 0,\n      dataUserSale: [],\n      dataUserSale_Original: [],\n      arrPagination: [],\n      indexPage: 0,\n      dataStatistical: [],\n      arrPaginationStatistical: [],\n      indexPageStatistical: 0,\n      company_id: localStorage.getItem('user'),\n      dataApi: [],\n      arrTemp: [],\n      hidden: true,\n      hidden_all: true,\n      arrAllUser: [],\n      arrSale: [],\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      isLoading: false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    await this.getListSale();\n    await this.getCustomer();\n    await this.getCustomerByMonth(\"01\");\n    await this.getDataForCharts();\n  }\n\n  countType(arr, phone) {\n    const count = arr.filter(data => data.Phone == phone);\n    return count.length;\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n    this.setState({ arrPagination: arrTotal, dataUserSale: arrTotal[this.state.indexPage], dataUserSale_Original: arrTotal[this.state.indexPage] });\n  }\n\n  pagination_statistical(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal_Statistical = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal_Statistical.push(temparray);\n    }\n    this.setState({ arrPaginationStatistical: arrTotal_Statistical, dataStatistical: arrTotal_Statistical[this.state.indexPageStatistical] });\n  }\n\n  async getListSale() {\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.GET_SALE,\n      method: 'POST',\n      headers: this.state.token\n    })\n    let data = res.data.data;\n\n    this.setState({ arrSale: data })\n  }\n\n  async chooseSale(value) {\n    const { dataUserSale_Original } = this.state;\n    const arrTemp = []\n    for (let i = 0; i < dataUserSale_Original.length; i++) {\n      if (dataUserSale_Original[i].Sale_Id._id == value) {\n        arrTemp.push(dataUserSale_Original[i])\n      }\n    }\n\n    if (value == \"\") {\n      await this.getCustomer();\n    } else {\n      if (arrTemp.length == 0) {\n        this.setState({ dataUserSale: arrTemp, hidden_all: false, isLoading: false })\n      } else {\n        this.setState({ dataUserSale: arrTemp, hidden_all: true, isLoading: false })\n      }\n    }\n  }\n\n  async getCustomer() {\n\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_CUSTOMER,\n      method: 'POST',\n      headers: this.state.token\n    });\n\n    let data = res.data.data\n\n    console.log(data)\n    this.setState({ dataApi: data, isLoading: false });\n\n    this.pagination(data);\n\n  }\n\n  async getDataForCharts() {\n    // const { company_id } = this.state;\n    // var id = JSON.parse(company_id);\n    // let arrMonth = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"]\n    // let arrTemp = [];\n    // for (let i = 0; i < arrMonth.length; i++) {\n    //   const res = await axios({\n    //     baseURL: Constants.BASE_URL,\n    //     url: Constants.LIST_CUSTOMER_BY_MONTH_ADMIN,\n    //     method: 'POST',\n    //     data: {\n    //       month: arrMonth[i]\n    //     }\n    //   });\n\n    //   let data = res.data.data\n\n\n    //   arrTemp.push(data.length)\n    // }\n\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.ADMIN_CHART,\n      method: 'POST',\n    });\n\n    this.setState({ arrAllUser: res.data.data, isLoading: false })\n  }\n\n  async getCustomerByMonth(month) {\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n    var bodyUser = {\n      month: month\n    }\n\n    if (month == 0) {\n      await this.getCustomer();\n    } else {\n      const res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_CUSTOMER_BY_MONTH_ADMIN,\n        method: 'POST',\n        data: bodyUser\n      });\n\n      let data = res.data.data\n      if (data.length == 0) {\n        this.setState({ hidden: false })\n      } else {\n        this.setState({ hidden: true })\n      }\n      this.setState({ dataApi: data, arrTemp: data, isLoading: false });\n\n      this.pagination_statistical(data);\n    }\n  }\n\n  render() {\n    const { dataUserSale, hidden, arrPagination, indexPage, hidden_all, arrSale,\n      dataStatistical, arrPaginationStatistical, indexPageStatistical } = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <CRow>\n          <CCol>\n            <CCard>\n              <CCardHeader>\n                <CFormGroup row>\n                  <CCol xs=\"12\" sm=\"12\" md=\"3\" lg=\"3\">\n                    <CLabel htmlFor=\"selectSm\">Thống kê tổng số lượt user</CLabel>\n                  </CCol>\n                  <CCol xs=\"12\" sm=\"12\" md=\"9\" lg=\"9\">\n                    <CLabel>Lọc theo Sale</CLabel>\n                    <CSelect onChange={e => { this.chooseSale(e.target.value) }} custom>\n                      <option value={\"\"}>----------------</option>\n                      {\n                        arrSale.map((item, i) => {\n                          return (\n                            <option value={item._id}>{item.Name}</option>\n                          );\n                        })\n                      }\n                    </CSelect>\n                  </CCol>\n                </CFormGroup>\n              </CCardHeader>\n              <CCardBody>\n                <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th className=\"text-center\">STT.</th>\n                      <th className=\"text-center\">Tên</th>\n                      <th className=\"text-center\">Email</th>\n                      <th className=\"text-center\">Số điện thoại</th>\n                      <th className=\"text-center\">Giới tính</th>\n                      <th className=\"text-center\">Số lần đến</th>\n                      <th className=\"text-center\">Hệ số</th>\n                      <th className=\"text-center\">Lần cuối đến</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <td colSpan=\"9\" hidden={hidden_all} className=\"text-center\">Không có dữ liệu</td>\n                    {\n                      dataUserSale != undefined ?\n                        dataUserSale.map((item, i) => {\n                          return (\n                            <tr key={i}>\n                              <td className=\"text-center\">{i + 1}</td>\n                              <td className=\"text-center\">{item.Name}</td>\n                              <td className=\"text-center\">{item.Email}</td>\n                              <td className=\"text-center\">{item.Phone}</td>\n                              <td className=\"text-center\">{item.Gender}</td>\n                              <td className=\"text-center\">{item.count}</td>\n                              <td className=\"text-center\">{Number(item.coefficient).toFixed(2)}</td>\n                              <td className=\"text-center\">\n                                {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\n                              </td>\n                            </tr>\n                          );\n                        }) : \"\"\n                    }\n                  </tbody>\n                </table>\n                {\n                  arrPagination.length == 1 ? \"\" :\n                    <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                      <tr style={{ float: \"left\", width: \"100%\" }}>\n                        {\n                          arrPagination.map((item, i) => {\n                            return (\n                              <td>\n                                <Button style={{ marginRight: '5px' }} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ dataUserSale: arrPagination[i], dataUserSale_Original: arrPagination[i], indexPage: i }) }}>{i + 1}</Button>\n                              </td>\n                            );\n                          })\n                        }\n                      </tr>\n                    </div>\n                }\n                <br />\n\n\n                <CRow>\n                  <CCol xs=\"12\" sm=\"5\">\n                    <CCard backgroundColor=\"red\">\n                      <CCardHeader>\n                        Biểu đồ thể hiện lượt người dùng qua từng tháng\n                      </CCardHeader>\n                      <CCardBody>\n                        <CChartBar\n                          datasets={[\n                            {\n                              label: 'Tổng người lượt người dùng của tháng ',\n                              backgroundColor: '#0008ff',\n                              data: this.state.arrAllUser\n                            }\n                          ]}\n                          labels=\"months\"\n                          options={{\n                            tooltips: {\n                              enabled: true\n                            }\n                          }}\n                        />\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                  <CCol xs=\"12\" sm=\"7\">\n                    <CCard>\n                      <CCardHeader>\n                        <CFormGroup row>\n                          <CCol xs=\"12\" md=\"8\">\n                            <CLabel htmlFor=\"selectSm\">Người dùng theo tháng</CLabel>\n                          </CCol>\n                          <CCol xs=\"12\" md=\"4\">\n                            <div style={{ float: \"right\", width: \"250px\" }}>\n                              <CSelect onChange={async e => { await this.getCustomerByMonth(e.target.value) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                                <option value=\"01\">01</option>\n                                <option value=\"02\">02</option>\n                                <option value=\"03\">03</option>\n                                <option value=\"04\">04</option>\n                                <option value=\"05\">05</option>\n                                <option value=\"06\">06</option>\n                                <option value=\"07\">07</option>\n                                <option value=\"08\">08</option>\n                                <option value=\"09\">09</option>\n                                <option value=\"10\">10</option>\n                                <option value=\"11\">11</option>\n                                <option value=\"12\">12</option>\n                              </CSelect>\n                            </div>\n                          </CCol>\n                        </CFormGroup>\n                      </CCardHeader>\n                      <CCardBody>\n                        <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                          <thead className=\"thead-light\">\n                            <tr>\n                              <th className=\"text-center\">Tên</th>\n                              <th className=\"text-center\">Email</th>\n                              <th className=\"text-center\">Số điện thoại</th>\n                              <th className=\"text-center\">Giới tính</th>\n                              <th className=\"text-center\">Số lần đến</th>\n                              <th className=\"text-center\">Hệ số</th>\n                            </tr>\n                          </thead>\n                          <tbody>\n                            <td colSpan=\"7\" hidden={hidden} className=\"text-center\">Không có user trong tháng này</td>\n                            {\n                              dataStatistical != undefined ?\n                                dataStatistical.map((item, i) => {\n                                  return (\n                                    <tr key={i}>\n                                      <td className=\"text-center\">{item.Name}</td>\n                                      <td className=\"text-center\">{item.Email}</td>\n                                      <td className=\"text-center\">{item.Phone}</td>\n                                      <td className=\"text-center\">{item.Gender}</td>\n                                      <td className=\"text-center\">{item.count}</td>\n                                      <td className=\"text-center\">{Number(item.coefficient).toFixed(2)}</td>\n                                    </tr>\n                                  );\n                                }) : \"\"\n                            }\n                          </tbody>\n                        </table>\n\n                        {\n                          arrPaginationStatistical.length == 1 ? \"\" :\n                            <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                              <tr style={{ float: \"left\", width: \"100%\" }}>\n                                {\n                                  arrPaginationStatistical.map((item, i) => {\n                                    return (\n                                      <td>\n                                        <Button style={{ marginRight: '5px' }} color={i == indexPageStatistical ? 'primary' : 'danger'} onClick={e => { this.setState({ dataStatistical: arrPaginationStatistical[i], indexPageStatistical: i }) }}>{i + 1}</Button>\n                                      </td>\n                                    );\n                                  })\n                                }\n                              </tr>\n                            </div>\n                        }\n                      </CCardBody>\n                    </CCard>\n                  </CCol>\n                </CRow>\n\n\n\n              </CCardBody>\n            </CCard>\n          </CCol>\n        </CRow>\n\n      )\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\nexport default AdminManager\n","import React, { lazy, Component } from 'react'\n\nimport ShopManager from './ShopManager'\nimport SaleManager from './SaleManager'\nimport AdminManager from './AdminManager'\n\n\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\nclass Dashboard extends Component {\n\n  render() {\n    return (\n      <div>\n        {\n          localStorage.getItem('role') == 'SALES' ? <SaleManager /> :\n            localStorage.getItem('role') == 'COMPANY' ? <ShopManager /> :\n              localStorage.getItem('role') == 'ADMIN' ? <AdminManager /> : <AdminManager />\n        }\n      </div>\n    )\n  }\n}\n\nexport default Dashboard\n","export default {\n  \"BASE_URL\" : \"https://admin-api.tikitech.vn\",\n  //\"BASE_URL\" : \"http://localhost:3006\",\n  \"LIST_USER\" : \"/api/list-user\",\n  \"LIST_USER_WITH_ID\" : \"/api/list-user?id=\",\n  \"ADD_USER\" : \"/api/add-user\",\n  \"UPDATE_USER\" : \"/api/update-user\",\n  \"DELETE_USER\" : \"/api/delete-user\",\n  \"LOGIN_ADMIN\" : \"/api/login_admin\",\n  \"GET_SHOP\" : \"/api/get-shop\",\n  \"GET_SALE\" : \"/api/get-sale\",\n  \"GET_COEFFICIENT\" : \"/api/calculator-coefficient-user\",\n  \"GET_COEFFICIENT_PER_SALE\" : \"/api/calculator-coefficient-user-per-sale\",\n  \"GET_USER_SALE_BY_MONTH\" : \"/api/get-user-of-sale-by-month\",\n  \"CALCULATOR_ALL_USER_OF_COMPANY\" : \"/api/calculator-all-user-company\",\n  \"CALCULATOR_ALL_USER_OF_SALE\" : \"/api/calculator-all-user-of-sale\",\n  \"GET_SEEDER\" : \"/api/get-seed\",\n  \"GET_SALE_NAME\": \"/api/get-name-sale\",\n  \"GET_USER_BY_ID\": \"/api/get-user-byID\",\n\n  \"LIST_CUSTOMER\" : \"/api/list-customer\",\n  \"LIST_CUSTOMER_BY_MONTH\" : \"/api/get-user-sale-by-month\",\n\n  \"LIST_CUSTOMER_BY_MONTH_ADMIN\" : \"/api/get-user-by-month-admin\",\n\n  \"LIST_TYPEKEY\" : \"/api/list-typekey\",\n  \"LIST_TYPEKEY_WITH_ID\" : \"/api/list-typekey?id=\",\n  \"ADD_TYPEKEY\" : \"/api/add-typekey\",\n  \"UPDATE_TYPEKEY\" : \"/api/update-typekey\",\n  \"DELETE_TYPEKEY\" : \"/api/delete-typekey\",\n\n  \"LIST_HARDWARE\" : \"/api/list-hardware\",\n  \"LIST_HARDWARE_WITH_ID\" : \"/api/list-hardware?id=\",\n  \"ADD_HARDWARE\" : \"/api/add-hardware\",\n  \"UPDATE_HARDWARE\" : \"/api/update-hardware\",\n  \"DELETE_HARDWARE\" : \"/api/delete-hardware\",\n\n  \"LIST_ORDER\" : \"/api/list-order\",\n  \"ADD_ORDER\" : \"/api/add-order\",\n  \"UPDATE_STATUS_ORDER\" : \"/api/update-status-order\",\n\n  \"LIST_TRANSACTION\" : \"/api/list-transaction\",\n  \"ADD_TRANSACTION\" : \"/api/add-transaction\",\n\n  \"LIST_CHECK_OUT\" : \"/api/list-checkout\",\n  \"LIST_HARDWARE_CHECKOUT\" : \"/api/get-list-hardward-by-check-out\",\n  \"UPDATE_STATUS_CHECKOUT\" : \"/api/update-status-hardware\",\n\n  \"LIST_ORDER_DETAIL\" : \"/api/list-orderdetail\",\n  \"ADD_ORDER_DETAIL\" : \"/api/add-orderdetail\",\n\n  \"LIST_ROLE\" : \"/api/list-role\",\n  \"LIST_ROLE_WITH_ID\" : \"/api/list-role?id=\",\n  \"ADD_ROLE\" : \"/api/add-role\",\n  \"UPDATE_ROLE\" : \"/api/update-role\",\n  \"DELETE_ROLE\" : \"/api/delete-role\",\n\n  \"LIST_SALELOG\" : \"/api/list-salelog\",\n  \"LIST_SALELOG_WITH_ID\" : \"/api/list-salelog?id=\",\n  \"ADD_SALELOG\" : \"/api/add-salelog\",\n  \"UPDATE_SALELOG\" : \"/api/update-salelog\",\n  \"DELETE_SALELOG\" : \"/api/delete-salelog\",\n\n  \"DATA_SALE\" : \"/api/get-data-sale\",\n  \"LIST_SALE\" : \"/api/list-sale\",\n  \"LIST_SALE_WITH_ID\" : \"/api/list-sale?id=\",\n  \"ADD_SALE\" : \"/api/add-sale\",\n  \"UPDATE_SALE\" : \"/api/update-sale\",\n  \"DELETE_SALE\" : \"/api/delete-sale\",\n\n  \"LIST_KEYORDER\" : \"/api/list-keyorder\",\n  \"LIST_KEYORDER_WITH_ID\" : \"/api/list-keyorder?id=\",\n  \"ADD_KEYORDER\" : \"/api/add-keyorder\",\n  \"UPDATE_KEYORDER\" : \"/api/update-keyorder\",\n  \"DELETE_KEYORDER\" : \"/api/delete-keyorder\",\n\n  \"LIST_KEY\" : \"/api/list-key\",\n  \"LIST_KEY_WITH_ID\" : \"/api/list-key?id=\",\n  \"ADD_KEY\" : \"/api/add-key\",\n  \"UPDATE_KEY\" : \"/api/update-key\",\n  \"DELETE_KEY\" : \"/api/delete-key\",\n\n  \"LIST_COMPANY\" : \"/api/list-company\",\n  \"LIST_COMPANY_WITH_ID\" : \"/api/list-company?id=\",\n  \"ADD_COMPANY\" : \"/api/add-company\",\n  \"UPDATE_COMPANY\" : \"/api/update-company\",\n  \"DELETE_COMPANY\" : \"/api/delete-company\",\n  \"DATA_COMPANY\" : \"/api/get-data-company\",\n\n  \"LIST_LINK\" : \"/api/list-link\",\n  \"LIST_LINK_WITH_ID\" : \"/api/list-link?id=\",\n  \"ADD_LINK\" : \"/api/add-link\",\n  \"UPDATE_LINK\" : \"/api/update-link\",\n  \"DELETE_LINK\" : \"/api/delete-link\",\n  \"GET-LINK-BY-ID\" : \"/api/link-by-id\",\n\n  \"LIST_CHECKED_ORDER\": \"/api/list-order-checked\",\n  \"ADD_CHECKED_ORDER\": \"/api/add-order-checked\",\n  \"LIST_CHECKED_PRODUCT\": \"/api/list-product-checked\",\n  \"ADD_CHECKED_PRODUCT\": \"/api/add-product-checked\",\n\n  \"LIST_BRAND_HARDWARE\": \"/api/list-brand-hardward\",\n  \"ADD_BRAND_HARDWARE\": \"/api/add-brand-hardward\",\n  \"UPDATE_BRAND_HARDWARE\": \"/api/update-brand-hardward\",\n  \"DELETE_BRAND_HARDWARE\": \"/api/delete-brand-hardward\",\n  \"UPLOAD_BRAND\": \"/api/upload-image-brand\",\n\n  \"LIST_PRODUCT_HARDWARE\": \"/api/list-product-hardward\",\n  \"ADD_PRODUCT_HARDWARE\": \"/api/add-product-hardward\",\n  \"UPDATE_PRODUCT_HARDWARE\": \"/api/update-product-hardward\",\n  \"DELETE_PRODUCT_HARDWARE\": \"/api/delete-product-hardward\",\n  \"UPLOAD_PRODUCT\": \"/api/upload-image-product\",\n\n  \"ADMIN_CHART\": \"/api/admin-chart\",\n  \"COMPANY_CHART\": \"/api/company-chart\",\n  \"SALE_CHART\": \"/api/sale-chart\",\n\n};\n"],"sourceRoot":""}