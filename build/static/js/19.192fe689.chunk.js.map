{"version":3,"sources":["views/base/tables/Deal.js","contants/contants.js","functions/callAPI.js","views/Common/TextFieldGroup.js"],"names":["headers","Headers","auth","localStorage","getItem","append","Product","props","getData","a","setState","isLoading","API_CONNECT","Constants","LIST_DEAL","res","val","data","dataAdmin","pagination","dataApi","openDelete","item","modalDelete","state","id","_id","handleChangeCategory","e","i","arrCategory","arrAllProductOfAllCategory","arrAllProductChoosed","arrOptionCategory","arrChooseCategory","LIST_PRODUCT_CATEGORY","value","console","log","category_id","Array","found","find","element","push","handleUpdateCategory","arrUpdate","pushCategory","product","onRemoveCard","idCategory","splice","onCancelModal","modalCom","key","modalDetail","hidden","action","name","image","image_show","type","status","voucher","time_start","Date","time_finish","arrDetailBanner","delete","arrPagination","objectValueCategory","indexPage","token","Authorization","accordion","arrRemoveOnUpdate","this","j","temparray","arrTotal","length","slice","d","map","toLocaleUpperCase","includes","name_action","target","searchKey","files","reader","FileReader","readAsDataURL","onload","result","category","LIST_CATEGORY","res_category","arrTempOptionCategory","dataCategory","label","alert","form","FormData","UPLOAD_DEAL","body","ADD_DEAL","UPDATE_DEAL","DELETE_DEAL","title","color","md","lg","sm","xm","lx","block","active","variant","aria-pressed","onClick","style","maxHeight","overflowY","border","marginTop","borderRadius","margin","backgroundColor","height","size","float","isClearable","onChange","options","item_product","i_product","inline","custom","checked","product_id","index","findIndex","htmlFor","placeholder","disabled","marginBottom","total_deal","Number","src","BASE_URL","width","className","css","override","loading","speedMultiplier","styles","tags","searchInput","actionSearch","resetSearch","outline","floatRight","toggleModal","ble","colSpan","undefined","getBadge_Type","toLocaleDateString","mgl5","openUpdate","count","v","isOpen","field","onChangeImage","changeDealType","selected","datePicker","flexLabel","flexOption","date","renderAddForm","addDeal","updateProduct","toggle","show","items","fields","itemsPerPage","scopedSlots","brand_id","price","Component","marginRight","textDecoration","spinner","center","textAlign","tbody","wh25","w5","wa10","row","success","danger","display","userActive","userPending","nagemonNameCol","axios","require","default","defaults","baseURL","constants","connect","url","get","is_success","post","put","del","TextFieldGroup","error","checkUserExists","readOnly","classnames","onBlur","defaultProps"],"mappings":"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","file":"static/js/19.192fe689.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport CIcon from '@coreui/icons-react'\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Input,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n} from 'reactstrap';\n\nimport {\n  CButton,\n  CRow,\n  CCol,\n  CLabel,\n  CSelect,\n  CBadge,\n  CCard,\n  CCardHeader,\n  CCollapse,\n  CCardBody,\n  CDataTable,\n  CFormGroup,\n  CInputCheckbox,\n  CInput\n} from '@coreui/react'\n\nimport CreatableSelect from 'react-select/creatable';\nimport API_CONNECT from \"../../../functions/callAPI\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport 'moment-timezone';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Constants from \"../../../contants/contants\";\nimport TextFieldGroup from \"../../Common/TextFieldGroup\";\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport lodash from \"lodash\";\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      modalCom: false,\n      modalDetail: false,\n      dataApi: [],\n      hidden: false,\n      action: 'new',\n      name: \"\",\n      image: \"\",\n      image_show: \"\",\n      type: \"0\",\n      status: \"0\",\n      voucher: 0,\n      time_start: new Date(),\n      time_finish: new Date(),\n      arrDetailBanner: [],\n      modalDelete: false,\n      delete: null,\n      arrPagination: [],\n      arrOptionCategory: [],\n      objectValueCategory: {},\n      indexPage: 0,\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      isLoading: false,\n      accordion: 0,\n      arrCategory: [],\n      arrAllProductOfAllCategory: [],\n      arrAllProductChoosed: [],\n      arrChooseCategory: [],\n      arrUpdate: [],\n      arrRemoveOnUpdate: []\n    };\n  }\n  async componentDidMount() {\n    this.getData()\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden: false\n      })\n    } else {\n      this.setState({\n        hidden: true\n      })\n    }\n\n    this.setState({ arrPagination: arrTotal, data: arrTotal[0] });\n  }\n\n  getData = async () => {\n    this.setState({ isLoading: true });\n    var res = await API_CONNECT(\n      Constants.LIST_DEAL, {}, \"\", \"POST\")\n\n    let val = res.data.dataAdmin;\n    this.pagination(val);\n    this.setState({ dataApi: val, isLoading: false })\n  }\n\n  searchKey() {\n    const { indexPage, key } = this.state;\n\n    if (key != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if (val.name.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n\n      this.setState({ data: d })\n    } else {\n      this.setState({ data: this.state.arrPagination[indexPage] })\n    }\n  }\n\n  actionSearch(e, name_action) {\n    this.setState({\n      [name_action]: e.target.value\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  resetSearch() {\n    this.setState({\n      key: ''\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  onChangeImage(e) {\n    let files = e.target.files;\n    let reader = new FileReader();\n    this.setState({ image: files[0] })\n    reader.readAsDataURL(files[0])\n    reader.onload = (e) => {\n      this.setState({ image_show: e.target.result })\n    }\n  }\n\n  async toggleModal(key) {\n    const { modalCom, token, arrOptionCategory } = this.state;\n    if (key == 'new') {\n      this.setState({\n        modalCom: !modalCom,\n        action: key,\n        name: \"\",\n        category: [],\n        arrCategory: [],\n        image: \"\",\n        image_show: \"\",\n        type: \"0\",\n        status: \"0\",\n        voucher: 0,\n        time_finish: new Date(),\n        time_start: new Date(),\n        objectValueCategory: {},\n      }, async () => {\n        if (arrOptionCategory.length == 0) {\n\n          const res_category = await API_CONNECT(\n            Constants.LIST_CATEGORY, {}, token, \"POST\")\n\n          let arrTempOptionCategory = [];\n\n          let dataCategory = res_category.data;\n\n          for (let i = 0; i < dataCategory.length; i++) {\n            arrTempOptionCategory.push({\n              value: dataCategory[i]._id, label: dataCategory[i].name\n            })\n          }\n\n          this.setState({ arrOptionCategory: arrTempOptionCategory })\n        }\n      })\n    }\n  }\n\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n\n  async addDeal() {\n    const { name, image, type, status, voucher, arrCategory, arrAllProductChoosed, time_start, time_finish } = this.state;\n\n    if (arrCategory.length == 0) {\n      alert(`Chưa thiết lập banner !!!`);\n      return\n    }\n\n    for (let i = 0; i < arrCategory.length; i++) {\n      if (arrCategory[i].category_id == \"\" || arrAllProductChoosed[i].length == 0) {\n        alert(`Trong phần thiết lập banner, banner thứ ${i + 1} chưa chọn bất kì danh mục hoặc sản phẩm nào !!!`);\n        return\n      } else {\n        arrCategory[i].product = arrAllProductChoosed[i]\n      }\n    }\n\n    if (name == null || name == '' ||\n      image == null || image == '') {\n      alert(\"Hãy nhập đầy đủ dữ liệu !!!\");\n      return\n    }\n\n    const form = new FormData();\n    form.append(\"image\", image);\n\n    await API_CONNECT(Constants.UPLOAD_DEAL, form, \"\", \"POST\")\n\n    const body = {\n      name: name,\n      image: image.name,\n      category: arrCategory,\n      type: type,\n      status: status,\n      voucher: voucher,\n      time_start: time_start,\n      time_finish: time_finish\n    }\n\n    this.setState({ isLoading: true });\n    var res = await API_CONNECT(\n      Constants.ADD_DEAL, body, \"\", \"POST\")\n\n    if (res.status == 200) {\n\n      this.getData()\n\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(\"Thêm thất bại\");\n      this.setState({ isLoading: false });\n    }\n  }\n\n  changeDealType(e) {\n    this.setState({ type: e.target.value })\n  }\n\n  async openUpdate(item) {\n    const { token, arrOptionCategory, arrRemoveOnUpdate } = this.state;\n    for (let i = 0; i < arrRemoveOnUpdate.length; i++) {\n      item.category.push(arrRemoveOnUpdate[i])\n    }\n\n    this.setState({\n      arrRemoveOnUpdate: [],\n      modalCom: !this.state.modalCom,\n      action: \"update\",\n      name: item.name,\n      image: item.image,\n      image_show: \"\",\n      type: item.type,\n      time_start: item.time_start,\n      time_finish: item.time_finish,\n      status: item.status,\n      voucher: item.voucher,\n      id: item['_id']\n    }, async () => {\n      if (arrOptionCategory.length == 0) {\n        const res_category = await API_CONNECT(\n          Constants.LIST_CATEGORY, {}, token, \"POST\")\n\n        let arrTempOptionCategory = [];\n\n        let dataCategory = res_category.data;\n\n        for (let i = 0; i < dataCategory.length; i++) {\n          arrTempOptionCategory.push({\n            value: dataCategory[i]._id, label: dataCategory[i].name\n          })\n        }\n\n        this.setState({ arrOptionCategory: arrTempOptionCategory })\n      }\n    })\n  }\n\n  async updateProduct() {\n    const { name, image, type, status, voucher, time_start, time_finish, arrUpdate } = this.state\n    if (name == null || name == '' ||\n      image == null || image == '') {\n      alert(\"Hãy nhập đầy đủ dữ liệu !!!\");\n      return\n    }\n\n    const form = new FormData();\n    form.append(\"image\", image);\n\n    await API_CONNECT(Constants.UPLOAD_DEAL, form, \"\", \"POST\")\n\n    const body = {\n      name: name,\n      image: image.name,\n      type: type,\n      status: status,\n      voucher: voucher,\n      time_start: time_start,\n      time_finish: time_finish,\n      id: this.state.id,\n    }\n\n    this.setState({ isLoading: true });\n    var res = await API_CONNECT(\n      Constants.UPDATE_DEAL, body, \"\", \"POST\")\n\n    if (res.status == 200) {\n\n      this.getData()\n\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(\"Cập nhật thất bại\");\n      this.setState({ isLoading: false });\n    }\n  }\n\n  openDelete = (item) => {\n    this.setState({\n      modalDelete: !this.state.modalDelete,\n      id: item._id\n    })\n  }\n\n  async delete() {\n    this.setState({ isLoading: true });\n    var res = await API_CONNECT(\n      Constants.DELETE_DEAL, {\n      \"id\": this.state.id\n    }, \"\", \"POST\")\n\n    if (res.status == 200) {\n      this.getData()\n      this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n    } else {\n      alert(\"Xoá thất bại\");\n      this.setState({ isLoading: false });\n    }\n\n  }\n\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  getBadge_Type(type) {\n    switch (type) {\n      case '0': return { title: 'Ưu đãi mới nhất', color: \"primary\" }\n      case '1': return { title: 'Ưu đãi đang diễn ra', color: \"success\" }\n      case '2': return { title: 'Ưu đãi đã kết thúc', color: \"danger\" }\n      default: return 'Lỗi'\n    }\n  }\n\n  handleChangeCategory = async (e, i) => {\n    const { arrCategory, arrAllProductOfAllCategory, arrAllProductChoosed, arrOptionCategory, arrChooseCategory } = this.state;\n    let res = await API_CONNECT(\n      Constants.LIST_PRODUCT_CATEGORY, {\n      \"category_id\": e.value\n    }, \"\", \"POST\")\n\n    let data = res.data;\n    console.log(data)\n    console.log(e.value)\n    arrCategory[i].category_id = e.value;\n    arrAllProductOfAllCategory[i] = data\n    arrAllProductChoosed[i] = new Array()\n\n    const found = arrOptionCategory.find(element => element.value == e.value);\n    arrChooseCategory[i] = new Array();\n    arrChooseCategory[i].push(found)\n    this.setState({\n      arrCategory: arrCategory,\n      arrAllProductOfAllCategory: arrAllProductOfAllCategory,\n      arrAllProductChoosed: arrAllProductChoosed,\n      arrChooseCategory: arrChooseCategory\n    });\n  };\n\n  handleUpdateCategory = async (e, i) => {\n    const { arrUpdate, arrOptionCategory } = this.state;\n    console.log(arrUpdate[i]);\n    // console.log(e.value);\n    // console.log(arrOptionCategory.find(val => val.value == e.value));\n  }\n\n  pushCategory = () => {\n    const { arrCategory, arrAllProductOfAllCategory, arrAllProductChoosed, arrChooseCategory } = this.state;\n    arrCategory.push({\n      category_id: \"\",\n      product: []\n    })\n    arrAllProductOfAllCategory.push([])\n    arrAllProductChoosed.push([])\n    arrChooseCategory.push([])\n    this.setState({\n      arrCategory: arrCategory,\n      arrAllProductOfAllCategory: arrAllProductOfAllCategory,\n      arrAllProductChoosed: arrAllProductChoosed\n    });\n  };\n\n  onRemoveCard = (idCategory) => {\n    const { arrCategory, arrAllProductOfAllCategory, arrAllProductChoosed, arrChooseCategory } = this.state;\n\n    arrCategory.splice(idCategory, 1);\n    arrAllProductOfAllCategory.splice(idCategory, 1);\n    arrAllProductChoosed.splice(idCategory, 1);\n    arrChooseCategory.splice(idCategory, 1);\n\n    this.setState({\n      arrCategory: arrCategory,\n      arrAllProductOfAllCategory: arrAllProductOfAllCategory,\n      arrAllProductChoosed: arrAllProductChoosed,\n      arrChooseCategory: arrChooseCategory\n    })\n  }\n\n  onCancelModal = () => {\n    let { arrCategory, arrAllProductOfAllCategory, arrAllProductChoosed, arrChooseCategory, modalCom } = this.state;\n    arrCategory = new Array()\n    arrAllProductOfAllCategory = new Array()\n    arrAllProductChoosed = new Array()\n    arrChooseCategory = new Array()\n    this.setState({\n      modalCom: !modalCom,\n      arrCategory: arrCategory,\n      arrAllProductOfAllCategory: arrAllProductOfAllCategory,\n      arrAllProductChoosed: arrAllProductChoosed,\n      arrChooseCategory: arrChooseCategory\n    });\n  }\n\n  renderAddForm() {\n    const { arrCategory, arrChooseCategory, arrOptionCategory,\n      arrAllProductOfAllCategory, arrAllProductChoosed } = this.state;\n    return (\n      <div>\n        <CRow>\n          <CCol md=\"5\" lg=\"5\" sm=\"12\" xm=\"12\" lx=\"5\">\n            <h3>\n              <strong>Tạo dữ liệu cho banner</strong>\n            </h3>\n          </CCol>\n          <CCol md=\"7\" lg=\"7\" sm=\"12\" xm=\"12\" lx=\"7\">\n            <CButton block active variant=\"ghost\" color=\"success\" aria-pressed=\"true\"\n              onClick={() => { this.pushCategory() }}>\n              Thêm sản phẩm\n            </CButton>\n          </CCol>\n        </CRow>\n        <div style={{ maxHeight: 450, overflowY: 'scroll', border: '1px solid red', marginTop: 15, borderRadius: 5 }}>\n          {\n            arrCategory.map((item, i) => {\n              let idCategory = i;\n              return (\n                <Card style={{ margin: 20 }}>\n                  <CardHeader style={{ backgroundColor: '#339966', height: 50 }}>\n                    <CButton size=\"sm\" color=\"danger\" style={{ float: 'right' }} onClick={() => {\n                      this.onRemoveCard(idCategory)\n                    }}>X</CButton>\n                  </CardHeader>\n                  <CardBody>\n                    <CRow style={{ margin: 20 }}>\n                      <CCol md=\"3\" lg=\"3\" sm=\"12\" xm=\"12\" lx=\"3\">\n                        <CLabel>Chọn danh mục:</CLabel>\n                      </CCol>\n                      <CCol md=\"9\" lg=\"9\" sm=\"12\" xm=\"12\" lx=\"9\">\n                        <CreatableSelect\n                          isClearable\n                          value={arrChooseCategory[idCategory][0]}\n                          onChange={(e) => { this.handleChangeCategory(e, idCategory) }}\n                          options={arrOptionCategory}\n                        />\n                      </CCol>\n                    </CRow>\n                    {\n                      arrAllProductOfAllCategory[idCategory].length > 0 ?\n                        <Card>\n                          <CardHeader>\n                            Danh sách sản phẩm\n                          </CardHeader>\n                          <CardBody style={{ height: 250, overflowY: 'scroll' }}>\n                            <CRow>\n                              {\n                                arrAllProductOfAllCategory[idCategory].map((item_product, i_product) => {\n                                  return (\n                                    <CCol md=\"6\" lg=\"6\" sm=\"12\" xm=\"12\" lx=\"6\">\n                                      <CFormGroup variant=\"custom-checkbox\" inline>\n                                        <CInputCheckbox custom id={`${item_product._id}`}\n                                          onClick={(e) => {\n                                            if (e.target.checked) {\n                                              let data = arrAllProductOfAllCategory[idCategory][i_product]\n                                              arrAllProductChoosed[idCategory].push({\n                                                product_id: data._id\n                                              })\n\n                                              this.setState({ arrAllProductChoosed: arrAllProductChoosed })\n                                            } else {\n                                              let data = arrAllProductOfAllCategory[idCategory][i_product]\n                                              const findI = (element) => element.name == data.name;\n                                              const index = arrAllProductChoosed[idCategory].findIndex(findI)\n                                              arrAllProductChoosed[idCategory].splice(index, 1)\n\n                                              this.setState({ arrAllProductChoosed: arrAllProductChoosed })\n                                            }\n                                          }}\n                                        />\n                                        <CLabel variant=\"custom-checkbox\" htmlFor={item_product._id} style={{ margin: 10 }}>\n                                          <div><strong>Tên sp: </strong>{item_product.name}</div>\n                                          <CInput placeholder={\"Số lượng deal\"} disabled={\n                                            arrAllProductChoosed[idCategory].findIndex(val => val.product_id == item_product._id) > -1 ?\n                                              false : true\n                                          } type=\"number\" style={{ marginBottom: 3 }}\n                                            onChange={(e) => {\n                                              const index = arrAllProductChoosed[idCategory].findIndex(val => val.product_id == item_product._id);\n                                              arrAllProductChoosed[idCategory][index].total_deal = Number(e.target.value)\n                                              this.setState({ arrAllProductChoosed: arrAllProductChoosed })\n                                            }} />\n\n                                          <img src={`${Constants.BASE_URL}/public/image_product/${item_product.image}`} width={\"70px\"} height={\"90px\"} />\n\n                                        </CLabel>\n                                      </CFormGroup>\n                                    </CCol>\n                                  )\n                                })\n                              }\n                            </CRow>\n                          </CardBody>\n                        </Card> : \"\"\n                    }\n                  </CardBody>\n                </Card>\n              )\n            })\n          }\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { data, arrPagination, key, image, action, time_start, time_finish,\n      image_show, modalDetail, arrDetailBanner, accordion} = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Danh sách danh mục\n                  <div style={styles.tags}>\n                    <CRow>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CRow>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <div>\n                              <Input style={styles.searchInput} onChange={(e) => {\n                                this.actionSearch(e, \"key\");\n                              }} name=\"key\" value={key} placeholder=\"Từ khóa\" />\n                            </div>\n                          </CCol>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <CButton color=\"primary\" style={{ width: '100%', marginTop: 5 }} size=\"sm\" onClick={e => { this.resetSearch() }}>Làm mới tìm kiếm</CButton>\n                          </CCol>\n                        </CRow>\n                      </CCol>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CButton outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={e => this.toggleModal(\"new\")}>Thêm mới</CButton>\n                      </CCol>\n                    </CRow>\n                  </div>\n                </CardHeader>\n                <CardBody>\n\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        <th className=\"text-center\">Tên banner</th>\n                        <th className=\"text-center\">Hình ảnh</th>\n                        <th className=\"text-center\">Loại deal</th>\n                        {/* <th className=\"text-center\">Trạng thái</th> */}\n                        <th className=\"text-center\">Voucher</th>\n                        <th className=\"text-center\">Thời gian bắt đầu</th>\n                        <th className=\"text-center\">Thời gian kết thúc</th>\n                        <th className=\"text-center\">#</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <td colSpan=\"10\" hidden={this.state.hidden} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                <td className=\"text-center\">{item.name}</td>\n                                <td className=\"text-center\">\n                                  {\n                                    item.image == \"\" || item.image == null ?\n                                      <img src={\"https://www.chanchao.com.tw/VietnamPrintPack/images/default.jpg\"} width={\"60px\"} height={\"60px\"} /> :\n                                      <img src={`${Constants.BASE_URL}/public/image_deal/${item.image}`} width={\"80px\"} height={\"60px\"} />\n                                  }\n                                </td>\n                                <td className=\"text-center\">\n                                  <CBadge color={this.getBadge_Type(item.type).color}>\n                                    {this.getBadge_Type(item.type).title}\n                                  </CBadge>\n                                </td>\n                                {/* <td className=\"text-center\">{item.status}</td> */}\n                                <td className=\"text-center\">{item.voucher} %</td>\n                                <td className=\"text-center\">\n                                  {\n                                    (new Date(item.time_start)).toLocaleDateString()\n                                  }\n                                </td>\n                                <td className=\"text-center\">\n                                  {\n                                    (new Date(item.time_finish)).toLocaleDateString()\n                                  }\n                                </td>\n                                <td className=\"text-center\">\n                                  <CButton style={styles.mgl5} outline color=\"info\" size=\"sm\" onClick={async (e) => {\n                                    this.setState({ arrDetailBanner: item.category, modalDetail: !modalDetail })\n                                  }} >\n                                    <CIcon name=\"cil-magnifying-glass\" />\n                                  </CButton>\n                                  <CButton style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >\n                                    <CIcon name=\"cilPencil\" />\n                                  </CButton>\n                                  <CButton outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>\n                                    <CIcon name=\"cilTrash\" />\n                                  </CButton>\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n                </CardBody>\n              </Card>\n              <div style={{ float: 'right' }}>\n                <Pagination count={arrPagination.length} color=\"primary\" onChange={(e, v) => {\n                  this.setState({ data: arrPagination[v - 1], indexPage: v - 1 })\n                }} />\n              </div>\n            </Col>\n          </Row>\n\n          <Modal size=\"xl\" isOpen={this.state.modalCom} className={this.props.className}>\n            <ModalHeader>{this.state.action == 'new' ? `Tạo mới` : `Cập nhật`}</ModalHeader>\n            <ModalBody>\n              <CRow>\n                <CCol md=\"3\" lg=\"3\" sm=\"12\" xm=\"12\" lx=\"3\">\n                  <TextFieldGroup\n                    field=\"name\"\n                    label=\"Tên banner\"\n                    value={this.state.name}\n                    placeholder={\"Tên deal\"}\n                    // error={errors.title}\n                    onChange={e => this.onChange(\"name\", e.target.value)}\n                  // rows=\"5\"\n                  />\n\n                  <TextFieldGroup\n                    field=\"image\"\n                    label=\"Ảnh banner\"\n                    type={\"file\"}\n                    onChange={e => { this.onChangeImage(e) }}\n                    onClick={(e) => { e.target.value = null; this.setState({ image_show: \"\" }) }}\n                  />\n                  {\n                    image == \"\" || image == null ? \"\" :\n                      <img width=\"150\" height=\"100\" src={\n                        image_show == \"\" ?\n                          `${Constants.BASE_URL}/public/image_deal/${image}` : image_show} style={{ marginBottom: 20 }} />\n                  }\n\n                  <div style={{ width: \"100%\" }} className=\"mt-3\">\n                    <CLabel>Loại deal:</CLabel>\n                    {\n                      <CSelect onChange={async e => { this.changeDealType(e) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                        {\n                          [\"0\", \"1\", \"2\"].map((item, i) => {\n                            if (item == this.state.type) {\n                              return (\n                                <option selected key={i} value={item}>\n                                  {\n                                    item == \"0\" ?\n                                      \"Ưu đãi mới nhất\" : item == \"1\" ?\n                                        \"Đang diễn ra\" : \"Đã kết thúc\"\n                                  }\n                                </option>\n                              );\n                            } else {\n                              return (\n                                <option key={i} value={item}>\n                                  {\n                                    item == \"0\" ?\n                                      \"Ưu đãi mới nhất\" : item == \"1\" ?\n                                        \"Đang diễn ra\" : \"Đã kết thúc\"\n                                  }\n                                </option>\n                              );\n                            }\n                          })\n                        }\n                      </CSelect>\n                    }\n                  </div>\n\n                  <TextFieldGroup\n                    field=\"voucher\"\n                    label=\"Voucher\"\n                    value={this.state.voucher}\n                    placeholder={\"Voucher\"}\n                    // error={errors.title}\n                    onChange={e => this.onChange(\"voucher\", e.target.value)}\n                  // rows=\"5\"\n                  />\n\n\n                  <div style={styles.datePicker}>\n                    <label style={styles.flexLabel}>Ngày bắt đầu:</label>\n                    <DatePicker style={styles.flexOption} selected={new Date(time_start)} onChange={(date) => this.setState({ time_start: date })} />\n                  </div>\n\n                  <div style={styles.datePicker}>\n                    <label style={styles.flexLabel}>Ngày kết thúc:</label>\n                    <DatePicker style={styles.flexOption} selected={new Date(time_finish)} onChange={(date) => this.setState({ time_finish: date })} />\n                  </div>\n\n                </CCol>\n                <CCol md=\"9\" lg=\"9\" sm=\"12\" xm=\"12\" lx=\"9\">\n                  {\n                    action == \"new\" ?\n                      //Thêm mới banner\n                      this.renderAddForm() : \"\"\n                      //Cập nhập banner\n                      // <div>\n                      //   <CRow>\n                      //     <CCol md=\"5\" lg=\"5\" sm=\"12\" xm=\"12\" lx=\"5\">\n                      //       <h3>\n                      //         <strong>Thiết lập dữ liệu cho banner</strong>\n                      //       </h3>\n                      //     </CCol>\n                      //     <CCol md=\"7\" lg=\"7\" sm=\"12\" xm=\"12\" lx=\"7\">\n                      //       <CButton block active variant=\"ghost\" color=\"success\" aria-pressed=\"true\"\n                      //         onClick={() => { }}>\n                      //         Tạo thêm một danh mục mới\n                      //       </CButton>\n                      //     </CCol>\n                      //   </CRow>\n                      //   <div style={{ maxHeight: 500, overflowY: 'scroll', border: '1px solid red', marginTop: 15, borderRadius: 5 }}>\n                      //     {\n                      //       arrUpdate.map((item, i) => {\n                      //         return (\n                      //           <Card style={{ margin: 20 }}>\n                      //             <CardHeader style={{ backgroundColor: '#339966' }}>\n                      //               <CButton color=\"danger\" style={{ float: 'right' }} onClick={() => {\n                      //                 arrRemoveOnUpdate.push(arrUpdate[i])\n                      //                 arrUpdate.splice(i, 1);\n                      //                 this.setState({ arrUpdate: arrUpdate, arrRemoveOnUpdate: arrRemoveOnUpdate });\n                      //               }}>X</CButton>\n                      //             </CardHeader>\n                      //             <CardBody>\n                      //               <CRow style={{ margin: 20 }}>\n                      //                 <CCol md=\"3\" lg=\"3\" sm=\"12\" xm=\"12\" lx=\"3\">\n                      //                   <CLabel>Chọn danh mục cho banner:</CLabel>\n                      //                 </CCol>\n                      //                 <CCol md=\"9\" lg=\"9\" sm=\"12\" xm=\"12\" lx=\"9\">\n                      //                   <CreatableSelect\n                      //                     isClearable\n                      //                     value={arrOptionCategory.find(val => val.value == item.category_id)}\n                      //                     onChange={(e) => {\n                      //                       this.handleUpdateCategory(e, i)\n                      //                     }}\n                      //                     options={arrOptionCategory}\n                      //                   />\n                      //                 </CCol>\n                      //               </CRow>\n                      //               {\n                      //                 item.product.length > 0 ?\n                      //                   <Card>\n                      //                     <CardHeader>\n                      //                       Danh sách sản phẩm\n                      //                     </CardHeader>\n                      //                     <CardBody style={{ height: 250, overflowY: 'scroll' }}>\n                      //                       <CRow>\n                      //                         {\n                      //                           item.product.map((item_product, i_product) => {\n                      //                             return (\n                      //                               <CCol md=\"4\" lg=\"4\" sm=\"12\" xm=\"12\" lx=\"4\">\n                      //                                 <CFormGroup variant=\"custom-checkbox\" inline>\n                      //                                   <CInputCheckbox\n                      //                                     custom\n                      //                                     id={`${item_product._id}`}\n                      //                                     defaultChecked\n                      //                                     onClick={(e) => {\n                      //                                       if (e.target.checked) {\n\n                      //                                       } else {\n\n                      //                                       }\n                      //                                     }}\n                      //                                   />\n                      //                                   <CLabel variant=\"custom-checkbox\" htmlFor={item_product._id} style={{ margin: 10 }}>\n\n                      //                                     <div><strong>Tên sp: </strong>{item_product.name}</div>\n                      //                                     <CRow>\n                      //                                       <CCol md=\"5\" lg=\"5\" sm=\"12\" xm=\"12\" lx=\"5\">\n                      //                                         <strong>SL deal:</strong>\n                      //                                       </CCol>\n                      //                                       <CCol md=\"7\" lg=\"7\" sm=\"12\" xm=\"12\" lx=\"7\">\n                      //                                         <CInput placeholder={\"Số lượng deal\"} value={item_product.total_deal} disabled={true} type=\"number\" style={{ marginBottom: 3, maxWidth: 150 }}\n                      //                                           onChange={(e) => {\n\n                      //                                           }} />\n                      //                                       </CCol>\n                      //                                     </CRow>\n\n                      //                                     <img src={`${Constants.BASE_URL}/public/image_product/${item_product.image}`} width={\"70px\"} height={\"90px\"} />\n\n                      //                                   </CLabel>\n                      //                                 </CFormGroup>\n                      //                               </CCol>\n                      //                             )\n                      //                           })\n                      //                         }\n                      //                       </CRow>\n                      //                     </CardBody>\n                      //                   </Card> : \"\"\n                      //               }\n                      //             </CardBody>\n                      //           </Card>\n                      //         )\n                      //       })\n                      //     }\n                      //   </div>\n                      // </div>\n                  }\n\n                  <br />\n                </CCol>\n              </CRow>\n\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => { this.state.action === 'new' ? this.addDeal() : this.updateProduct() }} disabled={this.state.isLoading}>Lưu</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => { this.onCancelModal() }}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Delete`}</ModalHeader>\n            <ModalBody>\n              <label htmlFor=\"tag\">{`Xác nhận xóa !!!`}</label>\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Xoá</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n\n          <Modal isOpen={this.state.modalDetail} size=\"xl\" className={this.props.className}>\n            <ModalHeader>Chi tiết banner</ModalHeader>\n            <ModalBody style={{ height: 500, overflowY: 'scroll' }}>\n              {\n                arrDetailBanner.map((item, i) => {\n                  return (\n                    <CCard className=\"mb-0\" style={{ margin: 5 }} >\n                      <CCardHeader id=\"headingOne\">\n                        <CRow>\n                          <CCol sm=\"12\" lg=\"4\">\n                            <CButton block color=\"link\" className=\"text-left m-0 p-0\"\n                              onClick={() => { this.setState({ accordion: accordion == i ? null : i }) }}\n                            >\n                              <h5 className=\"m-0 p-0\">Danh mục {item.category_id.name}</h5>\n                            </CButton>\n                          </CCol>\n                          <CCol sm=\"12\" lg=\"8\">\n                            <img src={`${Constants.BASE_URL}/public/image_category/${item.category_id.image}`} width={\"300px\"} height={\"150px\"} />\n                          </CCol>\n                        </CRow>\n                      </CCardHeader>\n                      <CCollapse show={accordion == i}>\n                        <CCardBody>\n                          <CDataTable\n                            items={item.product}\n                            fields={['Tên sản phẩm', 'Hình ảnh', 'Thương hiệu', 'Số lượng Sale', 'Giá']}\n                            itemsPerPage={3}\n                            pagination\n                            size=\"sm\"\n                            scopedSlots={{\n                              'Tên sản phẩm': (item) => (\n                                <td>{item.name}</td>)\n                              , 'Hình ảnh': (item) => (\n                                <td>\n                                  {\n                                    <img src={item.image == \"\" || item.image == null ?\n                                      \"https://www.chanchao.com.tw/VietnamPrintPack/images/default.jpg\" :\n                                      `${Constants.BASE_URL}/public/image_product/${item.image}`} width={\"60px\"} height={\"40px\"} />\n                                  }\n                                </td>)\n                              , 'Thương hiệu': (item) => (\n                                <td>{item.brand_id.name}\n                                </td>)\n                              , 'Số lượng Sale': (item) => (\n                                <td>{item.total_deal}\n                                </td>)\n                              , 'Giá': (item) => (\n                                <td>{item.price}</td>)\n                            }}\n                          />\n                        </CCardBody>\n                      </CCollapse>\n                    </CCard>\n                  )\n                })\n              }\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"secondary\" onClick={e => this.setState({ modalDetail: !this.state.modalDetail })}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n        </div>\n      );\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst styles = {\n  datePicker: {\n    marginBottom: 20,\n    width: '100%'\n  },\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: '100%'\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: \"right\",\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh25: {\n    width: \"25%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  w5: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    margin: '2px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\"\n  },\n  searchInput: {\n    width: \"190px\",\n    display: 'inline-block',\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n}\n\nexport default Product;\n","export default {\n  \"BASE_URL\" : \"https://api.thulamua.com\",\n  //\"BASE_URL\" : \"http://localhost:3008\",\n  \"GHTK_URL\" : \"https://services.ghtklab.com\",\n  \"LOGIN\" : \"/api/login\",\n  \"LIST_USER\": \"/api/list_user\",\n  \"ADD_USER\":\"/api/add_user\",\n  \"UPDATE_USER\":\"/api/update_user\",\n  \"DELETE_USER\":\"/api/delete_user\",\n  \"UPLOAD_AVATAR\": \"/api/upload_avatar\",\n\n  \"LIST_CATEGORY\": \"/api/list_category\",\n  \"ADD_CATEGORY\": \"/api/add_category\",\n  \"UPDATE_CATEGORY\": \"/api/update_category\",\n  \"DELETE_CATEGORY\": \"/api/delete_category\",\n  \"UPLOAD_CATEGORY\": \"/api/upload_category\",\n\n  \"LIST_BRAND\": \"/api/list_brand\",\n  \"ADD_BRAND\": \"/api/add_brand\",\n  \"UPDATE_BRAND\": \"/api/update_brand\",\n  \"DELETE_BRAND\": \"/api/delete_brand\",\n  \"UPLOAD_BRAND\": \"/api/upload_brand\",\n\n  \"LIST_PRODUCT\": \"/api/list_product\",\n  \"LIST_PRODUCT_CATEGORY\": \"/api/list_product_category\",\n  \"ADD_PRODUCT\": \"/api/add_product\",\n  \"UPDATE_PRODUCT\": \"/api/update_product\",\n  \"DELETE_PRODUCT\": \"/api/delete_product\",\n  \"UPLOAD_PRODUCT\": \"/api/upload_product\",\n  \"UPLOAD_PRODUCT_MULTIPLE\": \"/api/upload_product_multiple\",\n\n  \"LIST_ORDER\": \"/api/list_order\",\n  \"LIST_ORDER_DETAIL\": \"/api/list_order_detail\",\n  \"LIST_ORDER_BY_USER\": \"/api/list_order_by_user\",\n  \"ADD_ORDER\": \"/api/add_order\",\n  \"PRINT_ORDER\": \"/api/print_order\",\n\n  \"LIST_DEAL\": \"/api/list_deal\",\n  \"ADD_DEAL\": \"/api/add_deal\",\n  \"UPDATE_DEAL\": \"/api/update_deal\",\n  \"DELETE_DEAL\": \"/api/delete_deal\",\n  \"UPLOAD_DEAL\": \"/api/upload_deal\",\n\n  \"LIST_COUNT_ORDER\": \"/api/list_count_order\",\n\n  \"LIST_BANNER\": \"/api/get_banner\",\n  \"GET_BANNER_BY_ID\": \"/api/get_banner_by_id\",\n  \"ADD_BANNER\": \"/api/add_banners\",\n  \"UPADTE_BANNER\": \"/api/update_banner\",\n  \"DELETE_BANNER\": \"/api/delete_banner\",\n  \"UPLOAD_BANNER\": \"/api/upload_banner\",\n\n  \"LIST_SEO_INFO\": \"/api/get_seo_info\",\n  \"ADD_SEO_INFO\": \"/api/add_seo_info\",\n  \"UPDATE_SEO_INFO\": \"/api/update_seo_info\",\n  \"DELETE_SEO_INFOR\": \"/api/delete_seo_info\",\n  \"UPLOAD_SEO_INFO\": \"/api/upload_seo_info\",\n\n  \"LIST_MULTI_IMAGE\": \"/api/get_multi_image\",\n  \"LIST_IMAGE_BY_PRODUCT\": \"/api/get_multi_image_by_product\",\n  \"ADD_MULTI_IMAGE\": \"/api/add_multi_image\",\n  \"UPDATE_MULTI_IMAGE\": \"/api/update_multi_image\",\n  \"UPLOAD_MULTI_IMAGE\": \"/api/upload_multi_image\"\n};\n","import constants from './../contants/contants'\n\nconst axios = require('axios').default;\naxios.defaults.baseURL = constants.BASE_URL;\n\nconst connect = async function (url = \"\", data = {}, token = \"\", type) {\n  let options = {};\n  // console.log(\"Token: \", token)\n  if (token) {\n    options = {\n      headers: token\n    };\n  }\n  try {\n    switch (type) {\n      case \"GET\":\n        let get = await axios.get(url, data, options);\n        if (get.is_success == false) {\n          return null;\n        }\n        return get.data;\n      case \"POST\":\n        let post = await axios.post(url, data, options);\n        if (post.is_success == false) {\n          return null;\n        }\n        return post.data;\n      case \"PUT\":\n        let put = await axios.put(url, data, options);\n        if (put.is_success == false) {\n          return null;\n        }\n        return put.data;\n      case \"DELETE\":\n        let del = await axios.delete(url, data, options);\n        if (del.is_success == false) {\n          return null;\n        }\n        return del.data;\n    }\n\n  } catch (reason) {\n    return reason;\n  }\n\n\n}\n\nexport default connect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder, onClick }) => {\n  return (\n    <div className={classnames('form-group', { 'has-error': error })}>\n      <label className=\"control-label\">{label}</label>\n      <input\n        onChange={onChange}\n        onClick={onClick}\n        onBlur={checkUserExists}\n        value={value}\n        type={type}\n        name={field}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        className=\"form-control\"\n      />\n    {error && <span className=\"help-block\">{error}</span>}\n    </div>  );\n}\n\nTextFieldGroup.propTypes = {\n  field: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checkUserExists: PropTypes.func\n}\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextFieldGroup;\n"],"sourceRoot":""}