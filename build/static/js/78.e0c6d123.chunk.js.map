{"version":3,"sources":["views/beauty/configWeb/BannerAia.js","views/beauty/configWeb/GameConfig.js","views/beauty/configWeb/Content.js","views/beauty/configWeb/gameUser.js","views/beauty/configBeauty.js","views/Common/TextFieldGroup.js","views/components/Iframe.js"],"names":["BannerAia","setStateByName","name","value","props","onChangeImage","e","name_link","name_show","this","SaveAllConfigWeb","class","Button","variant","color","onClick","TextFieldGroup","field","label","type","onChange","target","alt","style","width","height","src","imageBannerDesktop","hrefImageBannerDesktop","placeholder","className","imageBannerMobile","hrefImageBannerMobile","Component","Seo","getTimeConver","datetime","moment","format","FormGroup","Label","Input","score","scoreMax","GameUser","viewHistory","window","open","undefined","GameData","map","item","i","UserName","Phone","Image","ageGameReal","successGame","Date","Create_Date","toLocaleDateString","toLocaleTimeString","outline","_id","headers","Headers","auth","localStorage","getItem","append","ConfigWeb","valueLink","valueShow","files","reader","FileReader","setState","readAsDataURL","onload","result","change","a","baseUrlapi","Constants","BASE_URL","url","newComany_id","state","company_id","bodyRequest","axios","post","then","res","Swal","fire","title","timer","tabNameConfig","icon","IoLogoBuffer","JSON","parse","poupintro","pupupSuccess","popupfail","fromDate","todate","fromtime","totime","dataGame","id","tabcontent","tablinks","document","getElementsByClassName","length","classList","add","remove","replace","animation","getDataConfigWeb","ToggleViewConfigWeb","Output_newComany_id","get","params","data","console","log","dataGame1","isLoading","css","override","size","loading","speedMultiplier","List","sx","maxWidth","bgcolor","component","aria-labelledby","ListItemButton","pl","ListItemIcon","ListItemText","fontSize","primary","typeGetData","error","checkUserExists","readOnly","classnames","onBlur","defaultProps","Iframe","toggleView","link","closeModal","show","closeButton","display","position"],"mappings":"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","file":"static/js/78.e0c6d123.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\r\n\r\nexport default class BannerAia extends Component {\r\n  \r\n    SaveAllConfigWeb(value) {\r\n        this.props.SaveAllConfigWeb(value);\r\n    }\r\n    setStateByName = (name, value) => {\r\n        this.props.setStateByName(name, value);\r\n      };\r\n    onChangeImage=(e, name, name_link, name_show) =>{\r\n        this.props.onChangeImage(e, name, name_link, name_show);\r\n    }\r\n\r\n  render() {\r\n      \r\n    return (\r\n      <>\r\n        <div class=\"text-center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={() => this.SaveAllConfigWeb(\"banner\")}\r\n          >\r\n            Lưu thay đổi\r\n          </Button>\r\n        </div>\r\n        <div class=\"mt-3\">\r\n          <h1>Banner trên PC</h1>\r\n          <TextFieldGroup\r\n            field=\"image\"\r\n            label=\"Hình ảnh\"\r\n            type={\"file\"}\r\n            onChange={(e) => this.onChangeImage(\r\n                e,\r\n                \"imageBannerDesktop\",\r\n                \"imageBannerDesktop_link\",\r\n                \"imageBannerDesktop_show\"\r\n              )}\r\n            onClick={(e) => {e.target.value = null;this.setStateByName(\"imageBannerDesktop_show\", \"\")}} \r\n   \r\n          />\r\n          <div class=\"text-center\">\r\n            <img\r\n              alt=\"\"\r\n              style={{ width: \"400px\" }}\r\n              height=\"auto\"\r\n              src={this.props.imageBannerDesktop}\r\n            />\r\n          </div>\r\n          <TextFieldGroup\r\n            field=\"hrefImageBannerDesktop\"\r\n            label=\"Đường dẫn(Nếu có)\"\r\n            value={this.props.hrefImageBannerDesktop}\r\n            placeholder=\"\"\r\n            type={\"text\"}\r\n            className=\"mt-3\"\r\n            onChange={(e) => {\r\n                this.setStateByName(\"hrefImageBannerDesktop\", e.target.value);\r\n              }}\r\n            \r\n          />\r\n        </div>\r\n        <hr />\r\n        <div class=\"mt-3\">\r\n          <h1>Banner trên điện thoại</h1>\r\n          <TextFieldGroup\r\n            field=\"image\"\r\n            label=\"Hình ảnh\"\r\n            type={\"file\"}\r\n            onChange={(e) => {\r\n              this.onChangeImage(\r\n                e,\r\n                \"imageBannerMobile\",\r\n                \"imageBannerMobile_link\",\r\n                \"imageBannerMobile_show\"\r\n              );\r\n            }}\r\n            onClick={(e) => {e.target.value = null;this.setStateByName(\"imageBannerMobile_show\", \"\")}} \r\n          />\r\n          <div class=\"text-center\">\r\n            <img\r\n              alt=\"\"\r\n              style={{ width: \"400px\" }}\r\n              height=\"auto\"\r\n              src={this.props.imageBannerMobile}\r\n            />\r\n          </div>\r\n          <TextFieldGroup\r\n            field=\"hrefImageBannerMobile\"\r\n            label=\"Đường dẫn(Nếu có)\"\r\n            value={this.props.hrefImageBannerMobile}\r\n            placeholder=\"\"\r\n            type={\"text\"}\r\n            className=\"mt-3\"\r\n            onChange={(e) => {\r\n              this.setStateByName(\"hrefImageBannerMobile\", e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport moment from 'moment'\r\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\r\nimport { Button, FormGroup, Label,Input  } from \"reactstrap\";\r\nimport {\r\n    CTextarea,\r\n  } from \"@coreui/react\";\r\nexport default class Seo extends Component {\r\n  SaveAllConfigWeb() {\r\n    this.props.SaveAllConfigWeb();\r\n  }\r\n  setStateByName = (name, value) => {\r\n    this.props.setStateByName(name, value);\r\n  };\r\n  onChangeImage=(e, name, name_link, name_show) =>{\r\n    this.props.onChangeImage(e, name, name_link, name_show);\r\n}\r\ngetTimeConver = (datetime) => {\r\n  if(datetime ==null )\r\n          return '';\r\n   return  moment(datetime).format('YYYY-MM-DD');\r\n\r\n}\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"text-center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={() => this.SaveAllConfigWeb()}\r\n          >\r\n            Lưu thay đổi\r\n          </Button>\r\n        </div>\r\n\r\n          \r\n      <FormGroup>\r\n    <Label >\r\n      Điểm mỗi lượt soi\r\n    </Label>\r\n    <Input\r\n      name =\"score\"\r\n      placeholder=\"Điểm mỗi lượt soi\"\r\n      type=\"number\"\r\n      value={this.props.score}\r\n      onChange={(e) => {\r\n        this.setStateByName( \"score\", e.target.value );\r\n      }}\r\n    />\r\n  </FormGroup>\r\n     \r\n  <FormGroup>\r\n    <Label >\r\n      Điểm tối đa ( theo ngày)\r\n    </Label>\r\n    <Input\r\n      name =\"scoreMax\"\r\n      placeholder=\"Điểm tối đa ( theo ngày)\"\r\n      type=\"number\"\r\n      value={this.props.scoreMax}\r\n      onChange={(e) => {\r\n        this.setStateByName( \"scoreMax\", e.target.value );\r\n      }}\r\n    />\r\n  </FormGroup>\r\n\r\n\r\n        </>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\r\nimport { Button } from \"reactstrap\";\r\nimport {\r\n    CTextarea,\r\n  } from \"@coreui/react\";\r\nexport default class Seo extends Component {\r\n  SaveAllConfigWeb() {\r\n    this.props.SaveAllConfigWeb();\r\n  }\r\n  setStateByName = (name, value) => {\r\n    this.props.setStateByName(name, value);\r\n  };\r\n  onChangeImage=(e, name, name_link, name_show) =>{\r\n    this.props.onChangeImage(e, name, name_link, name_show);\r\n}\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"text-center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={() => this.SaveAllConfigWeb()}\r\n          >\r\n            Lưu thay đổi\r\n          </Button>\r\n        </div>\r\n        <TextFieldGroup\r\n            field=\"poupintro\"\r\n            label=\"Poup giới thiệu:\"\r\n            value={this.props.poupintro}\r\n            placeholder={\"\"}\r\n            onChange={(e) => {\r\n              this.setStateByName( \"poupintro\", e.target.value );\r\n            }}\r\n        />\r\n        <TextFieldGroup\r\n            field=\"pupupSuccess\"\r\n            label=\"Câu thông  báo khi trúng thưởng:\"\r\n            value={this.props.pupupSuccess}\r\n            placeholder={\"\"}\r\n            onChange={(e) => {\r\n              this.setStateByName( \"pupupSuccess\", e.target.value );\r\n            }}\r\n        />\r\n        <TextFieldGroup\r\n            field=\"introduce\"\r\n            label=\"Câu thông báo khi không trúng thưởng:\"\r\n            value={this.props.popupfail}\r\n            placeholder={\"\"}\r\n            onChange={(e) => {\r\n              this.setStateByName( \"popupfail\", e.target.value );\r\n            }}\r\n        />  \r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport TextFieldGroup from \"../../Common/TextFieldGroup\";\r\nimport { Button } from \"reactstrap\";\r\nimport IframeModal from '../../components/Iframe';\r\nimport CIcon from '@coreui/icons-react';\r\nimport {\r\n  CButton\r\n} from '@coreui/react'\r\nimport {\r\n    CTextarea,\r\n  } from \"@coreui/react\";\r\n  export default class GameUser extends Component {\r\n   \r\n  SaveAllConfigWeb() {\r\n    this.props.SaveAllConfigWeb();\r\n  }\r\n  setStateByName = (name, value) => {\r\n    this.props.setStateByName(name, value);\r\n  };\r\n  onChangeImage=(e, name, name_link, name_show) =>{\r\n    this.props.onChangeImage(e, name, name_link, name_show);\r\n}\r\n\r\n\r\nviewHistory = (e) => {\r\n\r\n  window.open(\"/#/lich-su-ca-nhan/\"+ e, \"_blank\");\r\n\r\n}\r\n  render() {\r\n    return (\r\n      <>\r\n      \r\n        <table  className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                  <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th className=\"text-center\">STT.</th>\r\n                            <th className=\"text-center\">Tên</th>\r\n                            <th className=\"text-center\">Số điện thoại</th>\r\n                            <th className=\"text-center\">Hình ảnh</th>\r\n                            <th className=\"text-center\">Thông tin kết quả</th>\r\n                            <th className=\"text-center\">Ngày than gia</th>\r\n                            <th className=\"text-center\">Thông tin</th>\r\n                        </tr>\r\n                  </thead>\r\n                  <tbody>\r\n           \r\n                   \r\n                    {\r\n                      this.props.GameData != undefined ?\r\n                      this.props.GameData.map((item, i) => {\r\n                      return (\r\n                             <tr key={i}>\r\n                              <td className=\"text-center\">{i+1}</td>\r\n                                   <td className=\"text-center\">{item.UserName}</td>\r\n                                   <td className=\"text-center\">{item.Phone}</td>\r\n                                   <td className=\"text-center\">\r\n                                         <img src={item.Image} style={{ width: '100px', height: 50 }} />\r\n                                   </td>\r\n                                   <td className=\"text-left\">\r\n                                    \r\n                                         <p>Loại game: <strong>Game tuổi da</strong>  </p>\r\n                                         <p>Độ tuổi trúng game:  <strong>26 </strong>  </p>\r\n                                         <p>Độ tuổi thực:  <strong>{ item.ageGameReal} </strong>  </p>\r\n\r\n                                         <p>Trúng thưởng:   <strong>{item.successGame? \"Trúng thưởng\": \"Không\" } </strong></p>\r\n                                    </td>\r\n                                   \r\n                                   <td className=\"text-center\">\r\n                                          <p>{(new Date(item.Create_Date)).toLocaleDateString()} </p> \r\n                                          \r\n                                          <p>{(new Date(item.Create_Date)).toLocaleTimeString()} </p>\r\n                                            \r\n                                    </td>\r\n\r\n                                    <td className=\"text-center\">\r\n                                      <CButton outline color=\"primary\" onClick={e => {\r\n                                      this.viewHistory(\r\n                                         item._id\r\n                                      )\r\n                                      }}\r\n                                \r\n                                ><CIcon name=\"cil-magnifying-glass\" /> Xem chi tiết</CButton>\r\n                                     </td>\r\n\r\n\r\n                              </tr>\r\n                          );\r\n                        }) : \"\"\r\n                    }\r\n                  </tbody>\r\n\r\n               \r\n        </table>\r\n      \r\n   \r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport List from \"@mui/material/List\";\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Constants from \"./../../contants/contants\";\r\nimport axios from \"axios\";\r\nimport { css } from \"@emotion/react\";\r\nimport DotLoader from \"react-spinners/DotLoader\";\r\nimport { IoLogoBuffer } from \"@react-icons/all-files/io/IoLogoBuffer\";\r\nimport BannerAia from \"./configWeb/BannerAia\";\r\nimport Logo from \"./configWeb/GameConfig\";\r\nimport Seo from \"./configWeb/Content\";\r\nimport DataGame from \"./configWeb/gameUser\";\r\nimport { BiSlideshow } from \"react-icons/bi\";\r\nimport { MdOutlinePermDataSetting } from \"react-icons/md\";\r\nimport { BsChatDots } from \"react-icons/bs\";\r\n\r\nimport Swal from 'sweetalert2';\r\nlet headers = new Headers();\r\nconst auth = localStorage.getItem(\"auth\");\r\nheaders.append(\"Authorization\", \"Bearer \" + auth);\r\nheaders.append(\"Content-Type\", \"application/json\");\r\nclass ConfigWeb extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      tabNameConfig: [\r\n       \r\n       \r\n\r\n      \r\n        {\r\n          _id: \"4\",\r\n          name: \"Cài đặt\",\r\n          icon: <IoLogoBuffer style={{ width: \"24px \", height: \"24px \" }} />,\r\n        },\r\n      ],\r\n      company_id: JSON.parse(localStorage.getItem(\"user\")).company_id\r\n        ? JSON.parse(localStorage.getItem(\"user\")).company_id\r\n        : null,\r\n      poupintro: \"\",\r\n      pupupSuccess: \"\",\r\n      popupfail: \"\",\r\n      fromDate: \"\",\r\n      todate: \"\",\r\n      fromtime: \"\",\r\n      totime: \"\",\r\n      scoreMax: \"\",\r\n      dataGame:  [],\r\n      score: \"\",\r\n    };\r\n  }\r\n\r\n  ToggleViewConfigWeb(id) {\r\n    var i, tabcontent, tablinks;\r\n    tabcontent = document.getElementsByClassName(\"tabcontent\");\r\n    tablinks = document.getElementsByClassName(\"tablinks\");\r\n    const { tabNameConfig } = this.state;\r\n    for (i = 0; i < tabNameConfig.length; i++) {\r\n      if (tabNameConfig[i]._id === id) {\r\n        tablinks[i].classList.add(\"tabcontent-left-active\");\r\n      } else {\r\n        tablinks[i].classList.remove(\"tabcontent-left-active\");\r\n      }\r\n    }\r\n    for (i = 0; i < tabcontent.length; i++) {\r\n      if (tabcontent[i].id.replace(\"tabcontent\", \"\") === id) {\r\n        tabcontent[i].classList.add(\"defaultOpen\");\r\n        tabcontent[i].style.animation = \"hideOpa 1s ease-in-out\";\r\n      } else {\r\n        tabcontent[i].classList.remove(\"defaultOpen\");\r\n        tabcontent[i].style.animation = \"none\";\r\n      }\r\n    }\r\n  }\r\n  onChangeImage = (e, value, valueLink, valueShow) => {\r\n    let files = e.target.files;\r\n    let reader = new FileReader();\r\n    this.setState({ [valueLink]: files[0] });\r\n    reader.readAsDataURL(files[0]);\r\n    reader.onload = (e) => {\r\n      this.setState({ [value]: e.target.result, [valueShow]: e.target.result });\r\n    };\r\n  };\r\n  async componentDidMount() {\r\n      await this.getDataConfigWeb();\r\n     \r\n      this.ToggleViewConfigWeb(\"4\");\r\n  }\r\n\r\n  async getDataConfigWeb() {\r\n    var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + \"/api/gameBeauty/getInfo\";\r\n    const newComany_id = this.state.company_id;\r\n    let Output_newComany_id;\r\n    if (newComany_id) {\r\n      Output_newComany_id = newComany_id;\r\n    } else {\r\n      Output_newComany_id = \"-1\";\r\n    }\r\n    await axios\r\n      .get(url, {\r\n        params: {\r\n\r\n          company_id: Output_newComany_id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        \r\n        var data = res.data.data;\r\n        console.log(data);\r\n        \r\n           this.setState(\r\n          {\r\n        \r\n            scoreMax: data.scoreMax,\r\n            score: data.score\r\n           \r\n          },\r\n          () => {\r\n\r\n            console.log(this.state);\r\n          }\r\n        );\r\n      });\r\n  }\r\n\r\n  async getDataGame1() {\r\n    var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + \"/api/get-game-data-11\";\r\n    const newComany_id = this.state.company_id;\r\n    let Output_newComany_id;\r\n    if (newComany_id) {\r\n      Output_newComany_id = newComany_id;\r\n    } else {\r\n      Output_newComany_id = \"-1\";\r\n    }\r\n    await axios\r\n      .get(url, {\r\n        params: {\r\n          company_id: Output_newComany_id,\r\n\r\n        },\r\n      })\r\n      .then((res) => {\r\n        \r\n         var data = res.data.data;\r\n          this.setState(\r\n          {\r\n            dataGame1 : data\r\n          },\r\n          () => {\r\n\r\n            \r\n          }\r\n        );\r\n      });\r\n  }\r\n  async getDataGame() {\r\n    var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + \"/api/get-game-data-1\";\r\n    const newComany_id = this.state.company_id;\r\n    let Output_newComany_id;\r\n    if (newComany_id) {\r\n      Output_newComany_id = newComany_id;\r\n    } else {\r\n      Output_newComany_id = \"-1\";\r\n    }\r\n    await axios\r\n      .get(url, {\r\n        params: {\r\n          company_id: Output_newComany_id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        \r\n         var data = res.data.data;\r\n          this.setState(\r\n          {\r\n            dataGame : data\r\n          },\r\n          () => {\r\n\r\n            console.log(data);\r\n          }\r\n        );\r\n      });\r\n  }\r\n\r\n  SaveAllConfigWeb = async (change) => {\r\n\r\n   \r\n\r\n    var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + \"/api/gameBeauty/update\";\r\n    const newComany_id = this.state.company_id;\r\n    let Output_newComany_id;\r\n    if (newComany_id) {\r\n      Output_newComany_id = newComany_id;\r\n    } else {\r\n      Output_newComany_id = \"-1\";\r\n    }\r\n    const bodyRequest = {\r\n    \r\n      company_id: Output_newComany_id,\r\n      \r\n      scoreMax: this.state.scoreMax,\r\n      score: this.state.score\r\n     \r\n\r\n\r\n};\r\n    \r\n\r\n    await axios\r\n    .post(url,bodyRequest )\r\n    .then((res) => {\r\n             Swal.fire({\r\n              title: 'thao tác thành công!',\r\n              timer: 3000,    \r\n            });\r\n    });\r\n \r\n  };\r\n\r\n  setStateByName = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.isLoading) {\r\n      return (\r\n        <div className=\"animated fadeIn\">\r\n          <div className=\"flex-tabs\">\r\n            <div className=\"tab\">\r\n              <List\r\n                sx={{\r\n                  width: \"100%\",\r\n                  maxWidth: 360,\r\n                  bgcolor: \"background.paper\",\r\n                }}\r\n                component=\"nav\"\r\n                aria-labelledby=\"nested-list-subheader\"\r\n              >\r\n                {this.state.tabNameConfig\r\n                  ? this.state.tabNameConfig.map((item, i) => {\r\n                      return (\r\n                        <ListItemButton\r\n                          key={item._id}\r\n                          className={\r\n                            i === 0\r\n                              ? \" tablinks tabcontent-left-active\"\r\n                              : \" tablinks\"\r\n                          }\r\n                          onClick={() => this.ToggleViewConfigWeb(item._id)}\r\n                          sx={{ pl: 4 }}\r\n                        >\r\n                          <ListItemIcon>{item.icon}</ListItemIcon>\r\n                          <ListItemText\r\n                            className=\"tabcontent-left\"\r\n                            style={{\r\n                              fontSize: \"14px !important\",\r\n                              color: \"rgb(52, 71, 103)\",\r\n                            }}\r\n                            primary={item.name}\r\n                          />\r\n                        </ListItemButton>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </List>\r\n            </div>\r\n            <div className=\"tabcontents\">\r\n              \r\n              \r\n\r\n              <div id=\"tabcontent12\" className=\"tabcontent\">\r\n                <DataGame\r\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\r\n                  setStateByName={this.setStateByName}\r\n                  GameData  = {this.state.dataGame}\r\n                  typeGetData = {0}\r\n                  pupupSuccess={this.state.pupupSuccess}\r\n                  poupintro={this.state.poupintro}\r\n                  popupfail={this.state.popupfail}\r\n                  fromDate={this.state.fromDate}\r\n                  todate={this.state.todate}\r\n                  fromtime={this.state.fromtime}\r\n                  totime={this.state.totime}\r\n                \r\n                  scoreMax={this.state.scoreMax}\r\n                  score={this.state.score}\r\n                />\r\n              </div>\r\n\r\n              <div id=\"tabcontent13\" className=\"tabcontent\">\r\n                <DataGame\r\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\r\n                  setStateByName={this.setStateByName}\r\n                  GameData  = {this.state.dataGame1}\r\n                  typeGetData = {1}\r\n                 \r\n                \r\n                  scoreMax={this.state.scoreMax}\r\n                  score={this.state.score}\r\n                />\r\n              </div>\r\n\r\n              <div id=\"tabcontent9\" className=\"tabcontent\">\r\n                <BannerAia\r\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\r\n                  setStateByName={this.setStateByName}\r\n                  onChangeImage = {this.onChangeImage}\r\n                  imageBannerDesktop={this.state.imageBannerDesktop}\r\n                  hrefImageBannerDesktop={this.state.hrefImageBannerDesktop}\r\n                  imageBannerMobile={this.state.imageBannerMobile}\r\n                  hrefImageBannerMobile={this.state.hrefImageBannerMobile}\r\n                />\r\n              </div>\r\n              <div id=\"tabcontent4\" className=\"tabcontent \">\r\n                <Logo\r\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\r\n                  setStateByName={this.setStateByName}\r\n              \r\n                  pupupSuccess={this.state.pupupSuccess}\r\n                  poupintro={this.state.poupintro}\r\n                  popupfail={this.state.popupfail}\r\n                  fromDate={this.state.fromDate}\r\n                  todate={this.state.todate}\r\n                  fromtime={this.state.fromtime}\r\n                  totime={this.state.totime}\r\n                  scoreMax={this.state.scoreMax}\r\n                  score={this.state.score}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"sweet-loading\">\r\n        <DotLoader\r\n          css={override}\r\n          size={50}\r\n          color={\"#123abc\"}\r\n          loading={this.state.isLoading}\r\n          speedMultiplier={1.5}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nexport default ConfigWeb;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder, onClick }) => {\r\n  return (\r\n    <div className={classnames('form-group', { 'has-error': error })}>\r\n      <label className=\"control-label\">{label}</label>\r\n      <input\r\n        onChange={onChange}\r\n        onClick={onClick}\r\n        onBlur={checkUserExists}\r\n        value={value}\r\n        type={type}\r\n        name={field}\r\n        placeholder={placeholder}\r\n        readOnly={readOnly}\r\n        className=\"form-control\"\r\n      />\r\n    {error && <span className=\"help-block\">{error}</span>}\r\n    </div>  );\r\n}\r\n\r\nTextFieldGroup.propTypes = {\r\n  field: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  checkUserExists: PropTypes.func\r\n}\r\n\r\nTextFieldGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n\r\nexport default TextFieldGroup;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Iframes from 'react-iframe'\r\n\r\nimport {\r\n  CButton,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n} from '@coreui/react'\r\n\r\nfunction Iframe({ toggleView, link, closeModal }) {\r\n\r\n  const handleClose = () => {\r\n    if (closeModal) {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CModal\r\n      show={toggleView}\r\n      size=\"xl\"\r\n    >\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>Chi tiết soi da</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        <Iframes url={link}\r\n          width=\"100%\"\r\n          height=\"500px\"\r\n          display=\"initial\"\r\n          position=\"relative\" />\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"secondary\" onClick={() => { handleClose() }}>Đóng</CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n  )\r\n}\r\n\r\nIframe.propTypes = {\r\n  link: PropTypes.string,\r\n  toggleView: PropTypes.bool\r\n}\r\n\r\nIframe.defaultProps = {\r\n  link: \"\",\r\n  toggleView: false\r\n};\r\n\r\nexport default Iframe\r\n\r\n"],"sourceRoot":""}