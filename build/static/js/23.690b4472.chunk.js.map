{"version":3,"sources":["views/base/tables/Account.js","contants/contants.js","functions/callAPI.js","views/Common/TextFieldGroup.js"],"names":["Account","props","getData","a","setState","isLoading","API_CONNECT","Constants","LIST_USER","res","val","data","pagination","dataApi","openDelete","item","modalDelete","state","id","_id","key","modalCom","hidden","action","name","email","avatar","image_show","phone","address","username","delete","arrPagination","indexPage","token","Authorization","localStorage","getItem","this","i","j","temparray","arrTotal","length","slice","push","d","map","toLocaleUpperCase","includes","e","name_action","target","value","searchKey","files","console","log","reader","FileReader","readAsDataURL","onload","result","alert","form","FormData","append","UPLOAD_AVATAR","body","UPDATE_USER","status","DELETE_USER","className","css","override","size","color","loading","speedMultiplier","style","styles","tags","sm","lg","searchInput","onChange","actionSearch","placeholder","width","marginTop","onClick","resetSearch","ble","colSpan","undefined","src","height","BASE_URL","mgl5","outline","openUpdate","float","count","v","isOpen","field","label","type","onChangeImage","marginBottom","addProduct","updataUser","disabled","toggle","htmlFor","Component","marginRight","flexLabel","flexOption","textDecoration","floatRight","spinner","center","textAlign","tbody","overflowY","wh25","w5","wa10","row","success","danger","margin","display","userActive","userPending","nagemonNameCol","image","borderRadius","axios","require","default","defaults","baseURL","constants","connect","url","options","headers","get","is_success","post","put","del","TextFieldGroup","error","checkUserExists","readOnly","classnames","onBlur","defaultProps"],"mappings":"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","file":"static/js/23.690b4472.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport CIcon from '@coreui/icons-react'\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Input,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n} from 'reactstrap';\n\nimport {\n  CButton,\n  CRow,\n  CCol,\n  CLabel\n} from '@coreui/react'\n\nimport CreatableSelect from 'react-select/creatable';\nimport API_CONNECT from \"../../../functions/callAPI\";\nimport Pagination from '@material-ui/lab/Pagination';\nimport 'moment-timezone';\nimport Constants from \"../../../contants/contants\";\nimport TextFieldGroup from \"../../Common/TextFieldGroup\";\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\n\nclass Account extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      modalCom: false,\n      dataApi: [],\n      hidden: false,\n      action: 'new',\n      name: \"\",\n      email: \"\",\n      avatar: \"\",\n      image_show: \"\",\n      phone: \"\",\n      address: \"\",\n      username: \"\",\n      modalDelete: false,\n      delete: null,\n      arrPagination: [],\n      indexPage: 0,\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      isLoading: false,\n    };\n  }\n  async componentDidMount() {\n    this.getData()\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden: false\n      })\n    } else {\n      this.setState({\n        hidden: true\n      })\n    }\n\n    this.setState({ arrPagination: arrTotal, data: arrTotal[0] });\n  }\n\n  getData = async () => {\n    this.setState({ isLoading: true });\n    var res = await API_CONNECT(\n      Constants.LIST_USER, {}, \"\", \"POST\")\n\n    let val = res.data;\n    this.pagination(val);\n    this.setState({ dataApi: val, isLoading: false })\n  }\n\n  searchKey() {\n    const { indexPage, key } = this.state;\n\n    if (key != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if (val.name.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n          val.username.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n          val.email.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n          val.phone.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n\n      this.setState({ data: d })\n    } else {\n      this.setState({ data: this.state.arrPagination[indexPage] })\n    }\n  }\n\n  actionSearch(e, name_action) {\n    this.setState({\n      [name_action]: e.target.value\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  resetSearch() {\n    this.setState({\n      key: ''\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  onChangeImage(e) {\n    let files = e.target.files;\n    console.log(files)\n    let reader = new FileReader();\n    this.setState({ avatar: files[0] })\n    reader.readAsDataURL(files[0])\n    reader.onload = (e) => {\n      this.setState({ image_show: e.target.result })\n    }\n  }\n\n  // async toggleModal(key) {\n  //   const { modalCom, token, arrOptionBrand, arrOptionCategory } = this.state;\n  //   if (key == 'new') {\n  //     this.setState({\n  //       modalCom: !modalCom,\n  //       action: key,\n  //       category_id: \"\",\n  //       brand_id: \"\",\n  //       name: \"\",\n  //       href: \"\",\n  //       image_show: \"\",\n  //       image: \"\",\n  //       price: \"\",\n  //     }, async () => {\n  //       if (arrOptionBrand.length == 0 || arrOptionCategory.length == 0) {\n\n  //         const res_brand = await API_CONNECT(\n  //           Constants.LIST_BRAND, {}, token, \"POST\")\n\n  //         const res_category = await API_CONNECT(\n  //           Constants.LIST_CATEGORY, {}, token, \"POST\")\n\n  //         let arrTempOptionBrand = [];\n  //         let arrTempOptionCategory = [];\n\n  //         let dataBrand = res_brand.data;\n  //         let dataCategory = res_category.data;\n\n  //         for (let i = 0; i < dataBrand.length; i++) {\n  //           arrTempOptionBrand.push({\n  //             value: dataBrand[i]._id, label: dataBrand[i].name\n  //           })\n  //         }\n\n  //         for (let i = 0; i < dataCategory.length; i++) {\n  //           arrTempOptionCategory.push({\n  //             value: dataCategory[i]._id, label: dataCategory[i].name\n  //           })\n  //         }\n\n  //         this.setState({ arrOptionBrand: arrTempOptionBrand, arrOptionCategory: arrTempOptionCategory })\n  //       }\n  //     })\n  //   }\n  // }\n\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n\n  // async addProduct() {\n\n  //   const { category_id, brand_id, name, href, image, price } = this.state\n  //   if (name == null || name == '' ||\n  //     image == null || image == '' ||\n  //     category_id == null || category_id == '' ||\n  //     brand_id == null || brand_id == '') {\n  //     alert(\"Hãy nhập đầy đủ dữ liệu !!!\");\n  //     return\n  //   }\n\n  //   const form = new FormData();\n  //   form.append(\"image\", image);\n\n  //   await API_CONNECT(Constants.UPLOAD_PRODUCT, form, \"\", \"POST\")\n\n  //   const body = {\n  //     category_id: category_id,\n  //     brand_id: brand_id,\n  //     name: name,\n  //     href: href,\n  //     image: image.name,\n  //     price: price\n  //   }\n\n  //   this.setState({ isLoading: true });\n  //   var res = await API_CONNECT(\n  //     Constants.ADD_PRODUCT, body, \"\", \"POST\")\n\n  //   if (res.status == 200) {\n\n  //     this.getData()\n\n  //     this.setState({ modalCom: !this.state.modalCom })\n  //   } else {\n  //     alert(\"Thêm thất bại\");\n  //     this.setState({ isLoading: false });\n  //   }\n  // }\n\n  async openUpdate(item) {\n    this.setState({\n      modalCom: !this.state.modalCom,\n      action: \"update\",\n      name: item.name,\n      email: item.email,\n      avatar: item.avatar,\n      image_show: \"\",\n      phone: item.phone,\n      address: item.address,\n      username: item.username,\n      id: item['_id']\n    })\n  }\n\n  async updataUser() {\n    const { name, email, avatar, phone, address, username } = this.state\n\n    if (name == null || name == '' ||\n      email == null || email == '') {\n      alert(\"Tên và email trống !!!\");\n      return\n    }\n\n    const form = new FormData();\n    form.append(\"image\", avatar);\n\n    await API_CONNECT(Constants.UPLOAD_AVATAR, form, \"\", \"POST\")\n\n    const body = {\n      name: name,\n      email: email,\n      avatar: avatar.name,\n      phone: phone,\n      address: address,\n      username: username,\n      id: this.state.id,\n    }\n\n    this.setState({ isLoading: true });\n    var res = await API_CONNECT(\n      Constants.UPDATE_USER, body, \"\", \"POST\")\n\n    if (res.status == 200) {\n\n      this.getData()\n\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(\"Cập nhật thất bại\");\n      this.setState({ isLoading: false });\n    }\n  }\n\n  openDelete = (item) => {\n    this.setState({\n      modalDelete: !this.state.modalDelete,\n      id: item._id\n    })\n  }\n\n  async delete() {\n    this.setState({ isLoading: true });\n    var res = await API_CONNECT(\n      Constants.DELETE_USER, {\n      \"id\": this.state.id\n    }, \"\", \"POST\")\n\n    if (res.status == 200) {\n      this.getData()\n      this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n    } else {\n      alert(\"Xoá thất bại\");\n      this.setState({ isLoading: false });\n    }\n\n  }\n\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  getBadge(status) {\n    switch (status) {\n      case 'Actived': return 'success'\n      case 'Inactive': return 'secondary'\n      case 'Locked': return 'warning'\n      case 'Deactived': return 'danger'\n      default: return 'primary'\n    }\n  }\n\n  render() {\n    const { data, arrPagination, key, avatar, image_show } = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Danh sách danh mục\n                  <div style={styles.tags}>\n                    <CRow>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CRow>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <div>\n                              <Input style={styles.searchInput} onChange={(e) => {\n                                this.actionSearch(e, \"key\");\n                              }} name=\"key\" value={key} placeholder=\"Từ khóa\" />\n                            </div>\n                          </CCol>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <CButton color=\"primary\" style={{ width: '100%', marginTop: 5 }} size=\"sm\" onClick={e => { this.resetSearch() }}>Làm mới tìm kiếm</CButton>\n                          </CCol>\n                        </CRow>\n                      </CCol>\n                      <CCol sm=\"12\" lg=\"12\">\n                        {/* <CButton outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={e => this.toggleModal(\"new\")}>Thêm mới</CButton> */}\n                      </CCol>\n                    </CRow>\n\n                  </div>\n                </CardHeader>\n                <CardBody>\n\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        <th className=\"text-center\">Tên</th>\n                        <th className=\"text-center\">Avatar</th>\n                        <th className=\"text-center\">Email</th>\n                        <th className=\"text-center\">Phone</th>\n                        <th className=\"text-center\">Address</th>\n                        <th className=\"text-center\">#</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <td colSpan=\"10\" hidden={this.state.hidden} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                <td className=\"text-center\">{item.name}</td>\n                                <td className=\"text-center\">\n                                  {\n                                    item.avatar == \"\" || item.avatar == null ?\n                                      <img src={\"https://www.chanchao.com.tw/VietnamPrintPack/images/default.jpg\"} width={\"60px\"} height={\"60px\"} /> :\n                                      <img src={`${Constants.BASE_URL}/public/image_avatar/${item.avatar}`} width={\"60px\"} height={\"60px\"}/>\n                                  }\n                                </td>\n                                <td className=\"text-center\">{item.email}</td>\n                                <td className=\"text-center\">{item.phone}</td>\n                                <td className=\"text-center\">{item.address}</td>\n                                <td className=\"text-center\">\n                                  <CButton style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >\n                                    <CIcon name=\"cilPencil\" />\n                                  </CButton>{' '}\n                                  <CButton outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>\n                                    <CIcon name=\"cilTrash\" />\n                                  </CButton>\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n                </CardBody>\n              </Card>\n              <div style={{ float: 'right' }}>\n                <Pagination count={arrPagination.length} color=\"primary\" onChange={(e, v) => {\n                  this.setState({ data: arrPagination[v - 1], indexPage: v - 1 })\n                }} />\n              </div>\n            </Col>\n          </Row>\n\n          <Modal size=\"lg\" isOpen={this.state.modalCom} className={this.props.className}>\n            <ModalHeader>{this.state.action == 'new' ? `Tạo mới` : `Cập nhật`}</ModalHeader>\n            <ModalBody>\n              <TextFieldGroup\n                field=\"name\"\n                label=\"Tên\"\n                value={this.state.name}\n                placeholder={\"Tên sản phẩm\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"name\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"avatar\"\n                label=\"Ảnh đại diện\"\n                type={\"file\"}\n                onChange={e => { this.onChangeImage(e) }}\n                onClick={(e) => { e.target.value = null; this.setState({ image_show: \"\" }) }}\n              />\n              {\n                avatar == \"\" ? \"\" :\n                  <img width=\"350\" height=\"300\" src={\n                    image_show == \"\" ?\n                      `${Constants.BASE_URL}/public/image_avatar/${avatar}` : image_show} style={{ marginBottom: 20 }} />\n              }\n\n              <TextFieldGroup\n                field=\"email\"\n                label=\"Email\"\n                value={this.state.email}\n                placeholder={\"Email\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"email\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"phone\"\n                label=\"Số điện thoại\"\n                value={this.state.phone}\n                placeholder={\"Số điện thoại\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"phone\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"address\"\n                label=\"Địa chỉ\"\n                value={this.state.address}\n                placeholder={\"Địa chỉ\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"address\", e.target.value)}\n              // rows=\"5\"\n              />\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => { this.state.action === 'new' ? this.addProduct() : this.updataUser() }} disabled={this.state.isLoading}>Lưu</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => { this.setState({ modalCom: !this.state.modalCom }) }}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Delete`}</ModalHeader>\n            <ModalBody>\n              <label htmlFor=\"tag\">{`Xác nhận xóa !!!`}</label>\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Delete</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n        </div>\n      );\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst styles = {\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: 300\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: \"right\",\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh25: {\n    width: \"25%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  w5: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    margin: '5px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\"\n  },\n  searchInput: {\n    width: \"190px\",\n    display: 'inline-block',\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n}\n\nexport default Account;\n","export default {\n  \"BASE_URL\" : \"https://api.thulamua.com\",\n  //\"BASE_URL\" : \"http://localhost:3008\",\n  \"GHTK_URL\" : \"https://services.ghtklab.com\",\n  \"LOGIN\" : \"/api/login\",\n  \"LIST_USER\": \"/api/list_user\",\n  \"ADD_USER\":\"/api/add_user\",\n  \"UPDATE_USER\":\"/api/update_user\",\n  \"DELETE_USER\":\"/api/delete_user\",\n  \"UPLOAD_AVATAR\": \"/api/upload_avatar\",\n\n  \"LIST_CATEGORY\": \"/api/list_category\",\n  \"ADD_CATEGORY\": \"/api/add_category\",\n  \"UPDATE_CATEGORY\": \"/api/update_category\",\n  \"DELETE_CATEGORY\": \"/api/delete_category\",\n  \"UPLOAD_CATEGORY\": \"/api/upload_category\",\n\n  \"LIST_BRAND\": \"/api/list_brand\",\n  \"ADD_BRAND\": \"/api/add_brand\",\n  \"UPDATE_BRAND\": \"/api/update_brand\",\n  \"DELETE_BRAND\": \"/api/delete_brand\",\n  \"UPLOAD_BRAND\": \"/api/upload_brand\",\n\n  \"LIST_PRODUCT\": \"/api/list_product\",\n  \"LIST_PRODUCT_CATEGORY\": \"/api/list_product_category\",\n  \"ADD_PRODUCT\": \"/api/add_product\",\n  \"UPDATE_PRODUCT\": \"/api/update_product\",\n  \"DELETE_PRODUCT\": \"/api/delete_product\",\n  \"UPLOAD_PRODUCT\": \"/api/upload_product\",\n  \"UPLOAD_PRODUCT_MULTIPLE\": \"/api/upload_product_multiple\",\n\n  \"LIST_ORDER\": \"/api/list_order\",\n  \"GET_DETAIL_TRANSPORT\": \"/api/get_detail_transport\",\n  \"GET_LIST_TRANSPORT\": \"/api/get_list_transport\",\n  \"LIST_ORDER_DETAIL\": \"/api/list_order_detail\",\n  \"LIST_ORDER_BY_USER\": \"/api/list_order_by_user\",\n  \"ADD_ORDER\": \"/api/add_order\",\n  \"PRINT_ORDER\": \"/api/print_order\",\n\n  \"LIST_DEAL\": \"/api/list_deal\",\n  \"ADD_DEAL\": \"/api/add_deal\",\n  \"UPDATE_DEAL\": \"/api/update_deal\",\n  \"DELETE_DEAL\": \"/api/delete_deal\",\n  \"UPLOAD_DEAL\": \"/api/upload_deal\",\n\n  \"LIST_COUNT_ORDER\": \"/api/list_count_order\",\n\n  \"LIST_BANNER\": \"/api/get_banner\",\n  \"GET_BANNER_BY_ID\": \"/api/get_banner_by_id\",\n  \"ADD_BANNER\": \"/api/add_banners\",\n  \"UPADTE_BANNER\": \"/api/update_banner\",\n  \"DELETE_BANNER\": \"/api/delete_banner\",\n  \"UPLOAD_BANNER\": \"/api/upload_banner\",\n\n  \"LIST_SEO_INFO\": \"/api/get_seo_info\",\n  \"GET_SEO_INFO_BY_PRODUCT\": \"/api/get_seo_info_by_product\",\n  \"ADD_SEO_INFO\": \"/api/add_seo_info\",\n  \"UPDATE_SEO_INFO\": \"/api/update_seo_info\",\n  \"DELETE_SEO_INFOR\": \"/api/delete_seo_info\",\n  \"UPLOAD_SEO_INFO\": \"/api/upload_seo_info\",\n\n  \"LIST_MULTI_IMAGE\": \"/api/get_multi_image\",\n  \"LIST_IMAGE_BY_PRODUCT\": \"/api/get_multi_image_by_product\",\n  \"ADD_MULTI_IMAGE\": \"/api/add_multi_image\",\n  \"UPDATE_MULTI_IMAGE\": \"/api/update_multi_image\",\n  \"UPLOAD_MULTI_IMAGE\": \"/api/upload_multi_image\",\n\n  \"LIST_SUGGEST_ITEM\": \"/itemSdk\",\n  \"LIST_SUGGEST_ITEM_COMPANY\": \"/itemSdk/\",\n  \"LIST_SUGGEST_ITEM_ADMIN\": \"/itemSdk/admin/\",\n  \"SEARCH_SUGGEST_ITEM_ADMIN\": \"/itemSdk/admin/search/\",\n  \"SEARCH_SUGGEST_ITEM_COMPANY\": \"/itemSdk/search/\",\n  \"ADD_SUGGEST_ITEM\": \"/itemSdk\",\n  \"UPDATE_SUGGEST_ITEM\": \"/itemSdk/\",\n  \"UPLOAD_IMAGE\": \"/itemSdk/upload_image\",\n  \"UPLOAD_IMAGE_MAKEUP\": \"/itemSdk/upload_image_makeup\",\n  \"UPLOAD_IMAGE_BRAND\": \"/itemSdk/upload_image_brand\",\n  \"DELETE_SUGGEST_ITEM\": \"/itemSdk/deleteItem\",\n  \"LIST_SDK\": \"/sdk\",\n\n  \"LIST_BRAND_MAKEUP\": \"/brands\",\n  \"LIST_BRAND_COMPANY_MAKEUP\": \"/brands/\",\n  \"ADD_BRAND_MAKEUP\": \"/add-brand\",\n  \"UPDATE_BRAND_MAKEUP\": \"/update-brand\",\n  \"DELETE_BRAND_MAKEUP\": \"/delete-brand\",\n\n  \"LIST_BRAND_PLUGIN\": \"/brand-plugin\",\n  \"LIST_BRAND_PLUGIN_COMPANY\": \"/brand-plugin/\",\n  \"ADD_BRAND_PLUGIN\": \"/add-brand-plugin\",\n  \"UPDATE_BRAND_PLUGIN\": \"/update-brand-plugin\",\n  \"DELETE_BRAND_PLUGIN\": \"/delete-brand-plugin\",\n\n  \"LIST_PRODUCT_MAKEUP\": \"/product\",\n  \"LIST_PRODUCT_HAIR_MAKEUP\": \"/product_hair\",\n  \"LIST_PRODUCT_COMPANY_MAKEUP\": \"/product/\",\n  \"LIST_PRODUCT_COMPANY_HAIR_MAKEUP\": \"/product_hair/\",\n  \"ADD_PRODUCT_MAKEUP\": \"/add-product\",\n  \"ADD_PRODUCT_HAIR_MAKEUP\": \"/add-product-hair\",\n  \"UPDATE_PRODUCT_MAKEUP\": \"/update-product\",\n  \"DELETE_PRODUCT_MAKEUP\": \"/delete-product\",\n\n  \"LIST_TYPE\": \"/types\",\n  \"LIST_TYPE_COMPANY\": \"/types/\",\n  \"ADD_TYPE\": \"/add-type\",\n  \"UPDATE_TYPE\": \"/update-type\",\n  \"DELETE_TYPE\": \"/delete-type\",\n\n  \"LIST_COLOR\": \"/colors\",\n  \"LIST_COLOR_COMPANY\": \"/colors/\",\n  \"LIST_COLOR_SELECT\": \"/color-select\",\n  \"ADD_COLOR\": \"/add-color\",\n  \"UPDATE_COLOR\": \"/update-color\",\n  \"DELETE_COLOR\": \"/delete-color\",\n\n  \"LIST_HISTORY_SKIN\": \"/api/get-history-skin\",\n  \"LIST_HISTORY_SKIN_BY_CONDITION\": \"/api/get-history-skin-by-condition\",\n  \"ADD_HISTORY_SKIN\": \"/api/add-history-skin\",\n\n\n  \"LIST_TYPE_PRODUCT\": \"/api/list-type-product\",\n  \"ADD_TYPE_PRODUCT\": \"/api/add-type-product\",\n  \"UPDATE_TYPE_PRODUCT\": \"/api/update-type-product\",\n  \"DELETE_TYPE_PRODUCT\": \"/api/delete-type-product\",\n\n\n  \"LIST_TYPE_SDK\": \"/api/list-type-sdk\",\n  \"ADD_TYPE_SDK\": \"/api/add-type-sdk\",\n  \"UPDATE_TYPE_SDK\": \"/api/update-type-sdk\",\n  \"DELETE_TYPE_SDK\": \"/api/delete-type-sdk\"\n};\n","import constants from './../contants/contants'\n\nconst axios = require('axios').default;\naxios.defaults.baseURL = constants.BASE_URL;\n\nconst connect = async function (url = \"\", data = {}, token = \"\", type) {\n  let options = {};\n  // console.log(\"Token: \", token)\n  if (token) {\n    options = {\n      headers: token\n    };\n  }\n  try {\n    switch (type) {\n      case \"GET\":\n        let get = await axios.get(url, data, options);\n        if (get.is_success == false) {\n          return null;\n        }\n        return get.data;\n      case \"POST\":\n        let post = await axios.post(url, data, options);\n        if (post.is_success == false) {\n          return null;\n        }\n        return post.data;\n      case \"PUT\":\n        let put = await axios.put(url, data, options);\n        if (put.is_success == false) {\n          return null;\n        }\n        return put.data;\n      case \"DELETE\":\n        let del = await axios.delete(url, data, options);\n        if (del.is_success == false) {\n          return null;\n        }\n        return del.data;\n    }\n\n  } catch (reason) {\n    return reason;\n  }\n\n\n}\n\nexport default connect;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder, onClick }) => {\n  return (\n    <div className={classnames('form-group', { 'has-error': error })}>\n      <label className=\"control-label\">{label}</label>\n      <input\n        onChange={onChange}\n        onClick={onClick}\n        onBlur={checkUserExists}\n        value={value}\n        type={type}\n        name={field}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        className=\"form-control\"\n      />\n    {error && <span className=\"help-block\">{error}</span>}\n    </div>  );\n}\n\nTextFieldGroup.propTypes = {\n  field: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checkUserExists: PropTypes.func\n}\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextFieldGroup;\n"],"sourceRoot":""}