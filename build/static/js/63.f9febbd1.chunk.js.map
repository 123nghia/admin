{"version":3,"sources":["views/base/tables/AI_Skin/PluginCustomerManager.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js"],"names":["headers","Headers","auth","localStorage","getItem","append","makeStyles","theme","root","marginTop","spacing","PluginCustomerManager","props","getData","a","setState","isLoading","axios","baseURL","Constants","BASE_URL","url","PLUGIN_LIST_COMPANY","method","res","val","data","pagination","dataApi","totalActive","getData_ByID","PLUGIN_LIST_COMPANY_BY_ID","state","token","openDelete","item","modalDelete","delete","getPackageName","package_id","PLUGIN_DATA_PACKAGE","resPackage","key","UserName","Password","keyStatus","activePage","page","itemsCount","limit","modalCom","viewingUser","communities","updated","action","Name","Email","Phone","Fax","Address","Website","Code","Slug","Status","arrPagination","indexPage","toggleView","company_name","current_package","arrTotalPackage","arrDetailPackage","phone_number","current_slug","type","province","current_province","Authorization","hidden","this","getProvince","arr","JSON","parse","i","length","window","location","hash","isHidden","href","j","temparray","arrTotal","slice","push","name","com_id","slug","getPackageData","Array_Feature","d","map","toLocaleUpperCase","includes","active","username","password","alert","body","PLUGIN_ADD_COMPANY","is_success","message","undefined","province_name","_id","id","split","add","splice","PLUGIN_UPDATE_COMPANY","PLUGIN_DELETE_COMPANY","company_id","arrTemp","LIST_PLUGIN_ORDER_FOR_ADMIN","result","Package_Id","Unit","Value","status","e","target","value","name_action","searchKey","keyEmail","keyPhone","keyFax","keyAddress","keyWebsite","keyCode","keyCompany","keyDateCreate","Date","unit","dateStart","dateEnd","Math","ceil","abs","ble","className","colSpan","Key","end","CalculatorDateLeft","results","css","override","size","color","loading","speedMultiplier","style","styles","success","danger","deleted","tags","sm","lg","searchInput","onChange","actionSearch","placeholder","flexOption","custom","width","onClick","resetSearch","Create_By","Create_Date","toLocaleDateString","getBadge","margin","outline","openUpdate","content","onView","float","count","v","show","onClose","closeButton","marginLeft","convertUnitToDate","Active_Date","End_Date","calDateLeft","now","getBadgeStatus","getStatus","renderDetailPackage","isOpen","field","label","flexLabel","htmlFor","selected","addCompany","updateCompany","disabled","toggleModal","toggle","Component","marginRight","textDecoration","floatRight","spinner","center","textAlign","tbody","height","overflowY","wh12","wh15","w5","wa10","row","mgl5","display","userActive","userPending","nagemonNameCol","image","borderRadius","marginBottom","stylesOrCreator","options","arguments","makeStylesWithoutDefault","_extends","defaultTheme"],"mappings":"4eAmCIA,EAAU,IAAIC,QACZC,EAAOC,aAAaC,QAAQ,QAClCJ,EAAQK,OAAO,gBAAiB,UAAYH,GAC5CF,EAAQK,OAAO,eAAgB,oBAEbC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJ,QAAS,CACPC,UAAWF,EAAMG,QAAQ,SAH/B,IAOMC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAuFRC,QAxFmB,sBAwFT,8BAAAC,EAAA,6DACR,EAAKC,SAAS,CAAEC,WAAW,IADnB,SAEUC,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUG,oBACfC,OAAQ,SALF,OAEFC,EAFE,OAOJC,EAAMD,EAAIE,KAAKA,KAEnB,EAAKC,WAAWF,GAChB,EAAKV,SAAS,CAAEa,QAASH,IAEZ,EAEb,EAAKV,SAAS,CAAEC,WAAW,EAAOa,YAFrB,IAZL,2CAxFS,EAyGnBC,aAzGmB,sBAyGJ,8BAAAhB,EAAA,6DACb,EAAKC,SAAS,CAAEC,WAAW,IADd,SAEKC,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUY,0BACfR,OAAQ,OACRvB,QAAS,EAAKgC,MAAMC,QANT,OAEPT,EAFO,OAQTC,EAAMD,EAAIE,KAAKA,KAEnB,EAAKC,WAAWF,GAChB,EAAKV,SAAS,CAAEa,QAASH,IAEZ,EAEb,EAAKV,SAAS,CAAEC,WAAW,EAAOa,YAFrB,IAbA,2CAzGI,EAiTnBK,WAAa,SAACC,GACZ,EAAKpB,SAAS,CACZqB,aAAc,EAAKJ,MAAMI,YACzBC,OAAQF,KApTO,EAqWnBG,eArWmB,uCAqWF,WAAOC,GAAP,eAAAzB,EAAA,sEACUG,IAAM,CAC7BC,QAASC,IAAUC,SACnBC,IAAKF,IAAUqB,oBACfjB,OAAQ,OACRG,KAAM,CACJa,WAAYA,KAND,cACTE,EADS,yBASRA,EAAWf,KAAKA,MATR,2CArWE,sDAEjB,EAAKM,MAAQ,CACXN,KAAM,GACNgB,IAAK,GACLC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,WAAY,EACZC,KAAM,EACNC,WAAY,EACZC,MAAO,GACPpB,YAAa,EACbqB,UAAU,EACVC,YAAa,GACbC,YAAa,GACbC,QAAS,GACTzB,QAAS,GACT0B,OAAQ,MACRC,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,IAAK,GACLC,QAAS,GACTC,QAAS,GACTC,KAAM,GACNC,KAAM,GACNC,OAAQ,GACR3B,aAAa,EACbC,OAAQ,KACR2B,cAAe,GACfC,UAAW,EACXC,YAAY,EACZC,aAAc,GACdC,gBAAiB,GACjBC,gBAAiB,GACjBC,iBAAkB,GAClBC,aAAc,GACdC,aAAc,GACdC,KAAMtE,aAAaC,QAAQ,QAC3BsE,SAAU,GACVC,iBAAkB,GAClB1C,MAAO,CAAE2C,cAAc,UAAD,OAAYzE,aAAaC,QAAQ,WACvDY,WAAW,EACX6D,QAAQ,GA5CO,E,4FA+CnB,8BAAA/D,EAAA,sDAWE,IAVuB,KAAnBgE,KAAK9C,MAAMyC,KACbK,KAAKjE,UAELiE,KAAKhD,eAGPgD,KAAKC,cAEDC,EAAMC,KAAKC,MAAM/E,aAAaC,QAAQ,QAEjC+E,EAAI,EAAGA,EAAIH,EAAII,OAAQD,IAC1BH,EAAIG,GAAG9D,KAAOgE,OAAOC,SAASC,MACT,GAAnBP,EAAIG,GAAGK,WACTH,OAAOC,SAASG,KAAO,MAd/B,gD,8EAoBA,SAAW7D,GACT,IAAIuD,EAAGO,EAAGC,EACNC,EAAW,GACf,IAAKT,EAAI,EAAGO,EAAI9D,EAAQwD,OAAQD,EAAIO,EAAGP,GAFV,EAG3BQ,EAAY/D,EAAQiE,MAAMV,EAAGA,EAHF,GAI3BS,EAASE,KAAKH,GAGO,GAAnBC,EAASR,OACXN,KAAK/D,SAAS,CACZ8D,QAAQ,IAGVC,KAAK/D,SAAS,CACZ8D,QAAQ,IAIZC,KAAK/D,SAAS,CAAEiD,cAAe4B,EAAUlE,KAAMkE,EAASd,KAAK9C,MAAMiC,e,2DAsCrE,WAAa8B,EAAMC,EAAQzB,EAAc0B,GAAzC,eAAAnF,EAAA,sEACmBgE,KAAKoB,eAAeF,GADvC,OACMtE,EADN,gBAGIoD,KAAK/D,SAAS,CACZmD,YAAaY,KAAK9C,MAAMkC,WAAYC,aAAc4B,EAAM3B,gBAAgC,GAAf1C,EAAK0D,OAAc,GAAK1D,EAAK,GAAG6B,KACzGe,iBAAiC,GAAf5C,EAAK0D,OAAc,GAAK1D,EAAK,GAAGyE,cAAe5B,aAAcA,EAAcC,aAAcyB,IALjH,oH,oFAYA,WACE,MAAsCnB,KAAK9C,MAAnCiC,EAAR,EAAQA,UAAWvB,EAAnB,EAAmBA,IAAKG,EAAxB,EAAwBA,UAGxB,GAAW,IAAPH,GAA0B,IAAbG,EAAiB,CAChC,IAAIuD,EAAI,GACRtB,KAAK9C,MAAMJ,QAAQyE,KAAI,SAAA5E,IAChBA,EAAI+B,MAAM8C,oBAAoBC,SAAS7D,EAAI4D,sBAC9C7E,EAAI8B,KAAK+C,oBAAoBC,SAAS7D,EAAI4D,sBAC1C7E,EAAIgC,MAAM6C,oBAAoBC,SAAS7D,EAAI4D,uBAC3C7E,EAAIsC,OAAOuC,oBAAoBC,SAAS1D,EAAUyD,sBAElDF,EAAEN,KAAKrE,MAGX,IAAI+E,EAAS,EAEbJ,EAAEC,KAAI,SAAA5E,GACc,WAAdA,EAAIsC,SACNyC,GAAkB,MAItB1B,KAAK/D,SAAS,CAAEW,KAAM0E,EAAGvE,YAAa2E,QACjC,CACL,IAAIA,EAAS,EAEb1B,KAAK9C,MAAMJ,QAAQyE,KAAI,SAAA5E,GACH,WAAdA,EAAIsC,SACNyC,GAAkB,MAItB1B,KAAK/D,SAAS,CAAEW,KAAMoD,KAAK9C,MAAMgC,cAAcC,GAAYpC,YAAa2E,O,yBAI5E,SAAY9D,GACC,OAAPA,GACFoC,KAAK/D,SAAS,CACZmC,UAAW4B,KAAK9C,MAAMkB,SACtBI,OAAQZ,EACRa,KAAM,GACNC,MAAO,GACPC,MAAO,GACPC,IAAK,GACLC,QAAS,GACTC,QAAS,GACTE,KAAM,GACND,KAAM,GACNE,OAAQ,GACR0C,SAAU,GACVC,SAAU,GACV/B,iBAAkBG,KAAK9C,MAAM0C,SAAS,O,sBAK5C,SAAShC,EAAKjB,GACZqD,KAAK/D,SAAL,eAAiB2B,EAAMjB,M,+DAGzB,sDAAAX,EAAA,2DAC0GgE,KAAK9C,MAArGwB,EADV,EACUA,MAAOD,EADjB,EACiBA,KAAME,EADvB,EACuBA,MAAOC,EAD9B,EAC8BA,IAAKC,EADnC,EACmCA,QAASC,EAD5C,EAC4CA,QAASC,EADrD,EACqDA,KAAMlB,EAD3D,EAC2DA,SAAUC,EADrE,EACqEA,SAAUkB,EAD/E,EAC+EA,KAAMa,EADrF,EACqFA,iBAEtE,MAATnB,GAA0B,IAATA,GACR,MAARD,GAAwB,IAARA,GACP,MAATE,GAA0B,IAATA,GACN,MAAXE,GAA8B,IAAXA,GACX,MAARG,GAAwB,IAARA,GACJ,MAAZnB,GAAgC,IAAZA,GACR,MAAZC,GAAgC,IAAZA,EAT3B,uBAUI+D,MAAM,2FAVV,iCAcQC,EAAO,CACXrD,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPC,IAAKA,EACLC,QAASA,EAAU,IAAMgB,EACzBb,KAAMA,EACNF,QAASA,EACTC,KAAMA,EACNlB,SAAUA,EACVC,SAAUA,GAGZkC,KAAK/D,SAAS,CAAEC,WAAW,IA3B7B,SA4BoBC,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAU0F,mBACftF,OAAQ,MACRG,KAAMkF,EACN5G,QAAS8E,KAAK9C,MAAMC,QAjCxB,OAoC6B,IARrBT,EA5BR,QAoCUE,KAAKoF,YACXhC,KAAKjE,UACLiE,KAAK/D,SAAS,CAAEmC,UAAW4B,KAAK9C,MAAMkB,aAEtCyD,MAAMnF,EAAIE,KAAKqF,SACfjC,KAAK/D,SAAS,CAAEC,WAAW,KAzC/B,iD,8EA6CA,SAAWmB,GACT2C,KAAK/D,SAAS,CACZmC,UAAW4B,KAAK9C,MAAMkB,SACtBI,OAAQ,SACRC,KAAMpB,EAAKoB,KACXC,MAAOrB,EAAKqB,MACZC,MAAOtB,EAAKsB,MACZC,IAAKvB,EAAKuB,IACVC,QAAyB,MAAhBxB,EAAKwB,cAAmCqD,GAAhB7E,EAAKwB,QAAuB,GAAKxB,EAAKwB,QAAQyB,OAAS,EAAIjD,EAAKwB,QAAU,KAAOmB,KAAK9C,MAAM0C,SAAS,GAAGuC,cAAgB9E,EAAKwB,QAC9JG,KAAM3B,EAAK2B,KACXF,QAASzB,EAAKyB,QACdC,KAAM1B,EAAK+E,IACXC,GAAIhF,EAAI,IACR4B,OAAQ5B,EAAK4B,OACbY,iBAAmC,MAAhBxC,EAAKwB,cAAmCqD,GAAhB7E,EAAKwB,QAAuB,GAAKxB,EAAKwB,QAAQyB,OAAS,EAAIN,KAAK9C,MAAM0C,SAAS,GAAGuC,cAC3H9E,EAAKwB,QAAQyD,MAAM,KAAKjF,EAAKwB,QAAQyD,MAAM,KAAKhC,OAAS,O,kEAI/D,oDAAAtE,EAAA,2DACwFgE,KAAK9C,MAAnFwB,EADV,EACUA,MAAOD,EADjB,EACiBA,KAAME,EADvB,EACuBA,MAAOC,EAD9B,EAC8BA,IAAKC,EADnC,EACmCA,QAASC,EAD5C,EAC4CA,QAASE,EADrD,EACqDA,KAAMC,EAD3D,EAC2DA,OAAQY,EADnE,EACmEA,iBAEpD,MAATnB,GAA0B,IAATA,GACR,MAARD,GAAwB,IAARA,GACP,MAATE,GAA0B,IAATA,GACT,MAARK,GAAwB,IAARA,GACL,MAAXH,GAA8B,IAAXA,EAP1B,uBAQIgD,MAAM,2FARV,iCAWMU,EAAM1D,EAAQyD,MAAM,MACpBE,OAAO3D,EAAQyD,MAAM,KAAKhC,OAAS,EAAG,GAEpCwB,EAAO,CACXrD,KAAMA,EACNC,MAAOA,EACPC,MAAOA,EACPC,IAAKA,EACLC,QAAS0D,EAAM,IAAM1C,EACrBf,QAASA,EACTE,KAAMA,EACND,KAAMiB,KAAK9C,MAAMmF,GACjBpD,OAAQA,EACRoD,GAAIrC,KAAK9C,MAAMmF,IAGjBrC,KAAK/D,SAAS,CAAEC,WAAW,IA3B7B,UA4BoBC,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUoG,sBACfhG,OAAQ,OACRG,KAAMkF,IAhCV,QAmC6B,IAPrBpF,EA5BR,QAmCUE,KAAKoF,YACXhC,KAAKjE,UACLiE,KAAK/D,SAAS,CAAEmC,UAAW4B,KAAK9C,MAAMkB,aAEtCyD,MAAMnF,EAAIE,KAAKqF,SACfjC,KAAK/D,SAAS,CAAEC,WAAW,KAxC/B,iD,iHAmDA,4BAAAF,EAAA,6DACEgE,KAAK/D,SAAS,CAAEC,WAAW,IAD7B,SAEoBC,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUqG,sBACfjG,OAAQ,SACRG,KAAM,CACJ,GAAMoD,KAAK9C,MAAMK,OAAX,OAPZ,OAW6B,IATrBb,EAFR,QAWUE,KAAKoF,YACXhC,KAAKjE,UACLiE,KAAK/D,SAAS,CAAEqB,aAAc0C,KAAK9C,MAAMI,YAAaC,OAAQ,SAE9DsE,MAAMnF,EAAIE,KAAKqF,SACfjC,KAAK/D,SAAS,CAAEC,WAAW,KAhB/B,gD,yHAqBA,WAAqByG,GAArB,uBAAA3G,EAAA,6DACM4G,EAAU,GADhB,SAE2BzG,IAAM,CAC7BC,QAASC,IAAUC,SACnBC,IAAKF,IAAUwG,4BACfpG,OAAQ,OACRG,KAAM,CACJ+F,WAAYA,KAPlB,OAEQhF,EAFR,OAUMhB,EAAMgB,EAAWf,KAAKA,KAAKkG,OAEtBzC,EAAI,EAZf,YAYkBA,EAAI1D,EAAI2D,QAZ1B,iCAaqBN,KAAKxC,eAAeb,EAAI0D,GAAG0C,YAbhD,OAaQnG,EAbR,OAcID,EAAI0D,GAAG5B,KAAO7B,EAAK6B,KACnB9B,EAAI0D,GAAG2C,KAAOpG,EAAKoG,KACnBrG,EAAI0D,GAAG4C,MAAQrG,EAAKqG,MACpBL,EAAQ5B,KAAKrE,EAAI0D,IAjBrB,QAYkCA,IAZlC,8BAoBEL,KAAK/D,SAAS,CAAEsD,gBAAiBqD,IApBnC,kBAqBSA,GArBT,iD,6EAoCA,SAASM,GACP,OAAQA,GACN,IAAK,UAAW,MAAO,UACvB,IAAK,WAAY,MAAO,YACxB,IAAK,SAAU,MAAO,UACtB,IAAK,YAAa,MAAO,SACzB,QAAS,MAAO,a,4BAIpB,SAAeA,GACb,OAAQA,GACN,IAAK,IAAK,MAAO,SACjB,IAAK,IAAK,MAAO,UACjB,QAAS,MAAO,a,uBAIpB,SAAUA,GACR,OAAQA,GACN,IAAK,IAAK,MAAO,sBACjB,IAAK,IAAK,MAAO,wBACjB,QAAS,MAAO,a,yBAIpB,SAAYC,GACVnD,KAAK/D,SAAL,eAAiBkH,EAAEC,OAAOnC,KAAOkC,EAAEC,OAAOC,U,0BAG5C,SAAaF,EAAGG,GAAc,IAAD,OAC3BtD,KAAK/D,SAAL,eACGqH,EAAcH,EAAEC,OAAOC,QACvB,WACD,EAAKE,iB,yBAIT,WAAe,IAAD,OACZvD,KAAK/D,SAAS,CACZ2B,IAAK,GACL4F,SAAU,GACVC,SAAU,GACVC,OAAQ,GACRC,WAAY,GACZC,WAAY,GACZC,QAAS,GACTC,WAAY,GACZC,cAAe,IAAIC,KACnBjG,UAAW,KACV,WACD,EAAKwF,iB,+BAIT,SAAkBU,GAChB,OAAQA,GACN,IAAK,IAAK,MAAO,UACjB,IAAK,IAAK,MAAO,WACjB,IAAK,IAAK,MAAO,c,gCAIrB,SAAmBC,EAAWC,GAC5B,OAAOC,KAAKC,KAAKD,KAAKE,IAAI,IAAIN,KAAKG,GAAW,IAAIH,KAAKE,IAAtC,S,iCAGnB,WAAuB,IAAD,OACpB,OACE,wBAAOK,KAAG,EAACC,UAAU,yDAArB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,sCACA,oBAAIA,UAAU,cAAd,gDAGJ,kCAE0C,GAAtCxE,KAAK9C,MAAMsC,iBAAiBc,OAC1B,oBAAImE,QAAQ,KAAK1E,QAAQ,EAAOyE,UAAU,cAA1C,yDACA,oBAAIC,QAAQ,KAAK1E,QAAQ,EAAMyE,UAAU,cAAzC,8DAK6BtC,GAA/BlC,KAAK9C,MAAMsC,kBAAuE,GAAtCQ,KAAK9C,MAAMsC,iBAAiBc,QAA8C,MAA/BN,KAAK9C,MAAMsC,iBAChGQ,KAAK9C,MAAMsC,iBAAiB+B,KAAI,SAAClE,EAAMgD,GACrC,OACE,+BACE,oBAAImE,UAAU,cAAd,SAA6BnE,EAAI,IACjC,oBAAImE,UAAU,cAAd,SAA6BnH,EAAKqH,MAClC,oBAAIF,UAAU,cAAd,SAA6BnH,EAAK4F,MAAQ,EAAK/F,MAAMwC,iBAH9CW,MAMR,W,yBAOjB,SAAYsE,EAAKjD,GACf,OAAO1B,KAAK4E,mBAAmB,IAAIZ,KAAKW,GAAM,IAAIX,KAAKtC,M,gEAGzD,4BAAA1F,EAAA,sEACoBG,IAAM,CACtBC,QAAS,4BACTG,IAAK,gBACLE,OAAQ,QAJZ,OACQC,EADR,OAOEsD,KAAK/D,SAAS,CAAE2D,SAAUlD,EAAIE,KAAKiI,UAPrC,gD,0EASA,WAAU,IAAD,OACP,EAA6I7E,KAAK9C,MAA1IN,EAAR,EAAQA,KAAMgB,EAAd,EAAcA,IAAKY,EAAnB,EAAmBA,OAAQU,EAA3B,EAA2BA,cAAeS,EAA1C,EAA0CA,KAAME,EAAhD,EAAgDA,iBAAkBN,EAAlE,EAAkEA,gBAAiBF,EAAnF,EAAmFA,aAAcC,EAAjG,EAAiGA,gBAAiBG,EAAlH,EAAkHA,aAAcG,EAAhI,EAAgIA,SAEhI,OAAKI,KAAK9C,MAAMhB,UAoYd,qBAAKsI,UAAU,gBAAf,SACE,cAAC,IAAD,CAAWM,IAAKC,EAAUC,KAAM,GAAIC,MAAO,UAAWC,QAASlF,KAAK9C,MAAMhB,UAAWiJ,gBAAiB,QAnYtG,sBAAKX,UAAU,kBAAf,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,mBAAGY,MAAOC,EAAOC,QAAjB,SAA2BtF,KAAK9C,MAAMqB,UACtC,mBAAG6G,MAAOC,EAAOE,OAAjB,SAA0BvF,KAAK9C,MAAMsI,UACrC,eAAC,IAAD,WACE,eAAC,IAAD,WACE,mBAAGhB,UAAU,wBADf,2BAEE,qBAAKY,MAAOC,EAAOI,KAAnB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,KAAjB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMD,GAAG,KAAKC,GAAG,IAAjB,SACE,8BACE,cAAC,IAAD,CAAOP,MAAOC,EAAOO,YAAaC,SAAU,SAAC1C,GAC3C,EAAK2C,aAAa3C,EAAG,QACpBlC,KAAK,MAAMoC,MAAOzF,EAAKmI,YAAY,wBAQ1C,cAAC,IAAD,CAAML,GAAG,KAAKC,GAAG,IAAjB,SACE,cAAC,IAAD,CAASP,MAAOC,EAAOW,WAAYH,SAAU,SAAA1C,GAE3C,EAAK2C,aAAa3C,EAAG,cAEpB8C,QAAM,EAJT,SAMI,CAAC,UAAW,YAAa,UAAU1E,KAAI,SAAClE,EAAMgD,GAC5C,OACE,wBAAQgD,MAAOhG,EAAf,SAAsBA,WAMhC,cAAC,IAAD,CAAMqI,GAAG,KAAKC,GAAG,IAAjB,SACE,cAAC,IAAD,CAASV,MAAM,UAAUG,MAAO,CAAEc,MAAO,OAAQvK,UAAW,GAAKqJ,KAAK,KAAKmB,QAAS,SAAAhD,GAAO,EAAKiD,eAAhG,4DAUZ,cAAC,IAAD,UACE,wBAAO7B,KAAG,EAACC,UAAU,yDAArB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,+BACA,oBAAIA,UAAU,cAAd,8BACA,oBAAIA,UAAU,cAAd,oCACA,oBAAIA,UAAU,cAAd,sCACA,oBAAIA,UAAU,cAAd,8BACA,oBAAIA,UAAU,cAAd,gCACA,oBAAIA,UAAU,cAAd,oBAIJ,kCACE,oBAAIC,QAAQ,KAAK1E,OAAQC,KAAK9C,MAAM6C,OAAQyE,UAAU,cAAtD,8DAEUtC,GAARtF,EACEA,EAAK2E,KAAI,SAAClE,EAAMgD,GACd,OACE,+BACE,oBAAImE,UAAU,cAAd,SAA6BnE,EAAI,IACjC,oBAAImE,UAAU,cAAd,SAA6BnH,EAAKoB,OAClC,qBAAI+F,UAAU,cAAd,UACE,8BAAMnH,EAAKqB,QACX,+CACA,8BAAMrB,EAAKsB,WAEb,oBAAI6F,UAAU,cAAd,SAA6BnH,EAAKwB,UAClC,oBAAI2F,UAAU,cAAd,SAA+C,MAAlBnH,EAAKgJ,UAAoB,QAAUhJ,EAAKgJ,UAAU5H,OAC/E,oBAAI+F,UAAU,cAAd,SACI,IAAIR,KAAK3G,EAAKiJ,aAAcC,uBAEhC,oBAAI/B,UAAU,cAAd,SACE,cAAC,IAAD,CAAQS,MAAO,EAAKuB,SAASnJ,EAAK4B,QAAlC,SACG5B,EAAK4B,WAGV,qBAAIuF,UAAU,cAAd,UAEE,cAAC,IAAD,CAASY,MAAO,CAAEqB,OAAQ,GAAKC,SAAO,EAACzB,MAAM,UAAUD,KAAK,KAAKmB,QAAS,SAAChD,GAAD,OAAO,EAAKwD,WAAWtJ,IAAjG,SACE,cAAC,IAAD,CAAO4D,KAAK,gBACH,IAED,KAARtB,EACE,cAAC,IAAD,CAASyF,MAAO,CAAEqB,OAAQ,GAAKC,SAAO,EAACzB,MAAM,SAASD,KAAK,KAAKmB,QAAS,SAAChD,GAAQ,EAAK/F,WAAWC,IAAlG,SACE,cAAC,IAAD,CAAO4D,KAAK,eACD,GAEhB,IACD,cAAC,KAAD,CAAU2F,QAAQ,0CAAlB,SACE,cAAC,IAAD,CAASxB,MAAO,CAAEqB,OAAQ,GAAKC,SAAO,EAACzB,MAAM,OAAOD,KAAK,KAAKmB,QAAO,uCAAE,WAAOhD,GAAP,SAAAnH,EAAA,sEAAqB,EAAK6K,OAAOxJ,EAAKoB,KAAMpB,EAAK+E,IAAK/E,EAAKsB,MAAOtB,EAAK2B,MAAvE,2CAAF,sDAArE,SACE,cAAC,IAAD,CAAOiC,KAAK,kCAhCXZ,MAsCR,cAOjB,qBAAK+E,MAAO,CAAE0B,MAAO,SAArB,SACE,cAAC,IAAD,CAAYC,MAAO7H,EAAcoB,OAAQ2E,MAAM,UAAUY,SAAU,SAAC1C,EAAG6D,GACrE,EAAK/K,SAAS,CAAEW,KAAMsC,EAAc8H,EAAI,GAAI7H,UAAW6H,EAAI,cAuBnE,eAAC,IAAD,CACEC,KAAMjH,KAAK9C,MAAMkC,WACjB8H,QAAS,WAAQ,EAAKjL,SAAS,CAAEmD,YAAa,EAAKlC,MAAMkC,cACzD4F,KAAK,KAHP,UAKE,eAAC,IAAD,CAAcmC,aAAW,EAAzB,UACE,eAAC,IAAD,0DAAqC9H,KACrC,eAAC,IAAD,CAAa+F,MAAO,CAAEgC,WAAY,IAAlC,gDAAwD3H,QAG1D,eAAC,IAAD,WACE,wBAAO8E,KAAG,EAACC,UAAU,yDAArB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,2BACA,oBAAIA,UAAU,cAAd,+BACA,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,uCACA,oBAAIA,UAAU,cAAd,uCACA,oBAAIA,UAAU,cAAd,8CACA,oBAAIA,UAAU,cAAd,gCACA,oBAAIA,UAAU,cAAd,oBAGJ,kCAEuB,GAAnBjF,EACE,oBAAIkF,QAAQ,KAAK1E,QAAQ,EAAOyE,UAAU,cAA1C,yDACA,oBAAIC,QAAQ,KAAK1E,QAAQ,EAAMyE,UAAU,cAAzC,8DAGiBtC,GAAnB3C,EACEA,EAAgBgC,KAAI,SAAClE,EAAMgD,GACzB,OACE,+BACE,oBAAImE,UAAU,cAAd,SAA6BnE,EAAI,IACjC,oBAAImE,UAAU,cAAd,SAA6BnH,EAAKoB,OAClC,qBAAI+F,UAAU,cAAd,UACGnH,EAAKgE,cAAcE,KAAI,SAAClE,EAAMgD,GAC7B,GAAIA,EAAI,EACN,OACE,8BAAK,mBAAGM,KAAMtD,EAAK4F,MAAOG,OAAO,SAA5B,SAA8C/F,EAAK4F,OAAT5C,QAKlDhD,EAAKgE,cAAcf,OAAS,GAAM,EAAI,GAAKjD,EAAKgE,cAAcf,OAAS,EAAI,eAGhF,oBAAIkE,UAAU,cAAd,mBAAgCnH,EAAK4F,MAArC,YAA8C,EAAKoE,kBAAkBhK,EAAK2F,SAC1E,oBAAIwB,UAAU,cAAd,SACkB,KAAfnH,EAAK4B,OAAgB,IAAI+E,KAAK3G,EAAKiK,aAAaf,qBAAuB,UAE1E,oBAAI/B,UAAU,cAAd,SACkB,KAAfnH,EAAK4B,OAAgB,IAAI+E,KAAK3G,EAAKkK,UAAUhB,qBAAuB,UAGtD,KAAflJ,EAAK4B,OAAgB,qBAAIuF,UAAU,cAAcY,MAC/C,EAAKoC,YAAYnK,EAAKkK,SAAUvD,KAAKyD,OAAS,GAAK,CAAExC,MAAO,SAC1D,EAAKuC,YAAYnK,EAAKkK,SAAUvD,KAAKyD,OAAS,GAAK,CAAExC,MAAO,UAAa,CAAEA,MAAO,OAFjE,UAKjB,EAAKuC,YAAYnK,EAAKkK,SAAUvD,KAAKyD,OALpB,uBAOb,oBAAIjD,UAAU,cAAd,mBAEV,oBAAIA,UAAU,cAAd,SACE,cAAC,IAAD,CAAQS,MAAO,EAAKyC,eAAerK,EAAK4B,QAAxC,SACG,EAAK0I,UAAUtK,EAAK4B,YAIzB,oBAAIuF,UAAU,cAAd,SACE,cAAC,IAAD,CAASkC,SAAO,EAACzB,MAAM,OAAOD,KAAK,KACjCmB,QAAO,uCAAE,WAAOhD,GAAP,SAAAnH,EAAA,sDACP,EAAKC,SAAS,CACZuD,iBAAkBnC,EAAKgE,cAAe/B,gBAAiBjC,EAAKoB,OAFvD,2CAAF,sDADT,SAME,cAAC,IAAD,CAAOwC,KAAK,+BA7CTZ,MAkDR,SAIb,uBACA,cAAC,IAAD,UACE,eAAC,IAAD,+CAAkCf,EAAlC,SAGAU,KAAK4H,yBAGT,cAAC,IAAD,UACE,cAAC,IAAD,CAAS3C,MAAM,YAAYkB,QAAS,WAAQ,EAAKlK,SAAS,CAAEmD,YAAa,EAAKlC,MAAMkC,cAApF,+BAIJ,eAAC,IAAD,CAAOyI,OAAQ7H,KAAK9C,MAAMkB,SAAUoG,UAAWxE,KAAKlE,MAAM0I,UAA1D,UACE,cAAC,IAAD,UAAmC,OAArBxE,KAAK9C,MAAMsB,OAAX,2CACd,eAAC,IAAD,WACE,cAAC,IAAD,CACEsJ,MAAM,QACNC,MAAM,QACN1E,MAAOrD,KAAK9C,MAAMwB,MAClBiB,KAAM,QACNoG,YAAa,OAEbF,SAAU,SAAA1C,GAAC,OAAI,EAAK0C,SAAS,QAAS1C,EAAEC,OAAOC,UAGjD,cAAC,IAAD,CACEyE,MAAM,OACNC,MAAM,oBACN1E,MAAOrD,KAAK9C,MAAMuB,KAClBsH,YAAa,oBAEbF,SAAU,SAAA1C,GAAC,OAAI,EAAK0C,SAAS,OAAQ1C,EAAEC,OAAOC,UAIhD,cAAC,IAAD,CACEyE,MAAM,WACNC,MAAM,kCACN1E,MAAOrD,KAAK9C,MAAMW,SAClBkI,YAAa,kCAEbF,SAAU,SAAA1C,GAAC,OAAI,EAAK0C,SAAS,WAAY1C,EAAEC,OAAOC,UAIpD,cAAC,IAAD,CACEyE,MAAM,WACNC,MAAM,qBACNpI,KAAM,WACN0D,MAAOrD,KAAK9C,MAAMY,SAClBiI,YAAa,qBAEbF,SAAU,SAAA1C,GAAC,OAAI,EAAK0C,SAAS,WAAY1C,EAAEC,OAAOC,UAIpD,cAAC,IAAD,CACEyE,MAAM,QACNC,MAAM,oCACN1E,MAAOrD,KAAK9C,MAAMyB,MAClBoH,YAAa,oCACbF,SAAU,SAAA1C,GAAC,OAAI,EAAK0C,SAAS,QAAS1C,EAAEC,OAAOC,UAIjD,cAAC,IAAD,CACEyE,MAAM,MACNC,MAAM,MACN1E,MAAOrD,KAAK9C,MAAM0B,IAClBmH,YAAa,MAEbF,SAAU,SAAA1C,GAAC,OAAI,EAAK0C,SAAS,MAAO1C,EAAEC,OAAOC,UAI/C,cAAC,IAAD,CACEyE,MAAM,UACNC,MAAM,yBACN1E,MAAOrD,KAAK9C,MAAM2B,QAClBkH,YAAa,yBAEbF,SAAU,SAAA1C,GAAC,OAAI,EAAK0C,SAAS,UAAW1C,EAAEC,OAAOC,UAInD,uBAAO+B,MAAOC,EAAO2C,UAAWC,QAAQ,MAAxC,yBACA,cAAC,IAAD,CAASpC,SAAQ,uCAAE,WAAM1C,GAAN,SAAAnH,EAAA,sDAAa,EAAKC,SAAS,CAAE4D,iBAAkBsD,EAAEC,OAAOC,QAAxD,2CAAF,sDAAsE4C,QAAM,EAACjB,KAAK,KAAK/D,KAAK,WAAWoB,GAAG,WAA3H,SAEIzC,EAAS2B,KAAI,SAAClE,EAAMgD,GAClB,OAAIhD,EAAK8E,eAAiBtC,EAEtB,wBAAQqI,UAAQ,EAAC7E,MAAOhG,EAAK8E,cAA7B,SAA6C9E,EAAK8E,gBAIlD,wBAAQkB,MAAOhG,EAAK8E,cAApB,SAAoC9E,EAAK8E,qBAOnD,cAAC,IAAD,CACE2F,MAAM,OACNC,MAAM,OACN1E,MAAOrD,KAAK9C,MAAM8B,KAClB+G,YAAa,OAEbF,SAAU,SAAA1C,GAAC,OAAI,EAAK0C,SAAS,OAAQ1C,EAAEC,OAAOC,UAIhD,cAAC,IAAD,CACEyE,MAAM,UACNC,MAAM,UACN1E,MAAOrD,KAAK9C,MAAM4B,QAClBiH,YAAa,UAEbF,SAAU,SAAA1C,GAAC,OAAI,EAAK0C,SAAS,UAAW1C,EAAEC,OAAOC,UAIvC,OAAV7E,EAAkB,GAAK,gCACrB,uBAAO4G,MAAOC,EAAO2C,UAAWC,QAAQ,MAAxC,wBACA,yBAAQ7C,MAAOC,EAAOW,WAAY/E,KAAK,SAAS4E,SAAU,SAAA1C,GAAC,OAAI,EAAK0C,SAAS,SAAU1C,EAAEC,OAAOC,QAAhG,UACE,wBAAQA,MAAOrD,KAAK9C,MAAM+B,OAA1B,SAAwD,IAArBe,KAAK9C,MAAM+B,OAAX,wBAAoDe,KAAK9C,MAAM+B,SAClG,wBAAQoE,MAAO,UAAf,qBACA,wBAAQA,MAAO,YAAf,gCAOR,eAAC,IAAD,WACE,cAAC,IAAD,CAAS4B,MAAM,UAAUkB,QAAS,SAAAhD,GAA6B,QAAtB,EAAKjG,MAAMsB,OAAmB,EAAK2J,aAAe,EAAKC,iBAAmBC,SAAUrI,KAAK9C,MAAMhB,UAAxI,sBAAiK,IACjK,cAAC,IAAD,CAAS+I,MAAM,YAAYkB,QAAS,SAAAhD,GAAC,OAAI,EAAKmF,YAAY,QAA1D,gCAIJ,eAAC,IAAD,CAAOT,OAAQ7H,KAAK9C,MAAMI,YAAaiL,OAAQ,SAAApF,GAAC,OAAI,EAAKlH,SAAS,CAAEqB,aAAc,EAAKJ,MAAMI,YAAaC,OAAQ,QAASiH,UAAWxE,KAAKlE,MAAM0I,UAAjJ,UACE,cAAC,IAAD,CAAa+D,OAAQ,SAAApF,GAAC,OAAI,EAAKlH,SAAS,CAAEqB,aAAc,EAAKJ,MAAMI,YAAaC,OAAQ,QAAxF,oBACA,cAAC,IAAD,UACE,uBAAO0K,QAAQ,MAAf,2CAEF,eAAC,IAAD,WACE,cAAC,IAAD,CAAShD,MAAM,UAAUkB,QAAS,SAAAhD,GAAC,OAAI,EAAK5F,UAAU8K,SAAUrI,KAAK9C,MAAMhB,UAA3E,oBAAuG,IACvG,cAAC,IAAD,CAAS+I,MAAM,YAAYkB,QAAS,SAAAhD,GAAC,OAAI,EAAKlH,SAAS,CAAEqB,aAAc,EAAKJ,MAAMI,YAAaC,OAAQ,QAAvG,uC,GAp2BsBiL,aAm3B9BzD,EAAWD,cAAH,wFAMRO,EAAM,aACVxI,WAAY,CACV4L,YAAa,OAEfT,UAAW,CACT9B,MAAO,KAETF,WAAY,CACVE,MAAO,IACPO,OAAQ,OAEVzK,EAAG,CACD0M,eAAgB,QAElBC,WAAY,CACV7B,MAAO,QACPnL,UAAW,OAEbiN,QAAS,CACP1C,MAAO,QAET2C,OAAQ,CACNC,UAAW,UAEbC,MAAO,CACLC,OAAQ,QACRC,UAAW,QAEbC,KAAM,CACJhD,MAAO,KACPY,MAAO,OACPkC,OAAQ,QAEVG,KAAM,CACJjD,MAAO,MACPY,MAAO,OACPkC,OAAQ,QAEVI,GAAI,CACFlD,MAAO,MACPY,MAAO,OACPkC,OAAQ,QAEVK,KAAM,CACJnD,MAAO,KACPY,MAAO,OACPkC,OAAQ,QAEVM,IAAK,CACHxC,MAAO,OACPZ,MAAO,QAETZ,QAAS,CACPL,MAAO,SAETM,OAAQ,CACNN,MAAO,OAETsE,KAAM,CACJnC,WAAY,OAEd3B,KAAM,CACJqB,MAAO,QACP2B,YAAa,OAEf7C,YAAa,CACXM,MAAO,QACPsD,QAAS,eACT/C,OAAQ,OAEVgD,WAAY,CACVxE,MAAO,SAETyE,YAAa,CACXzE,MAAO,OAET0E,eAAgB,CACdzD,MAAO,SAET0D,MAAO,CACL1D,MAAO,QACP8C,OAAQ,QACRa,aAAc,YAlFN,OAoFJ,CACJC,aAAc,QAIHjO,a,iCCjgCf,+BAWeL,IAPf,SAAoBuO,GAClB,IAAIC,EAAUC,UAAU3J,OAAS,QAAsB4B,IAAjB+H,UAAU,GAAmBA,UAAU,GAAK,GAClF,OAAOC,YAAyBH,EAAiBI,YAAS,CACxDC,aAAcA,KACbJ","file":"static/js/63.f9febbd1.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Input,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n} from 'reactstrap';\nimport CIcon from '@coreui/icons-react'\nimport {\n  CBadge,\n  CRow,\n  CCol,\n  CSelect,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n  CButton,\n  CTooltip\n} from '@coreui/react'\n\n\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport 'moment-timezone';\nimport Constants from \"./../../../../contants/contants\";\nimport TextFieldGroup from \"../../../../views/Common/TextFieldGroup\";\nimport axios from 'axios'\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\nclass PluginCustomerManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      UserName: \"\",\n      Password: \"\",\n      keyStatus: '',\n      activePage: 1,\n      page: 1,\n      itemsCount: 0,\n      limit: 20,\n      totalActive: 0,\n      modalCom: false,\n      viewingUser: {},\n      communities: [],\n      updated: '',\n      dataApi: [],\n      action: 'new',\n      Name: '',\n      Email: '',\n      Phone: '',\n      Fax: '',\n      Address: '',\n      Website: '',\n      Code: '',\n      Slug: '',\n      Status: '',\n      modalDelete: false,\n      delete: null,\n      arrPagination: [],\n      indexPage: 0,\n      toggleView: false,\n      company_name: '',\n      current_package: '',\n      arrTotalPackage: [],\n      arrDetailPackage: [],\n      phone_number: '',\n      current_slug: '',\n      type: localStorage.getItem('type'),\n      province: [],\n      current_province: '',\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      isLoading: false,\n      hidden: false\n    };\n  }\n  async componentDidMount() {\n    if (this.state.type == \"0\") {\n      this.getData();\n    } else {\n      this.getData_ByID();\n    }\n\n    this.getProvince();\n    // this.getCompanyData();\n    let arr = JSON.parse(localStorage.getItem('url'));\n\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].url == window.location.hash) {\n        if (arr[i].isHidden == true) {\n          window.location.href = '#/'\n        }\n      }\n    }\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden: false\n      })\n    } else {\n      this.setState({\n        hidden: true\n      })\n    }\n\n    this.setState({ arrPagination: arrTotal, data: arrTotal[this.state.indexPage] });\n  }\n\n  getData = async () => {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.PLUGIN_LIST_COMPANY,\n      method: 'POST',\n    });\n    let val = res.data.data;\n\n    this.pagination(val);\n    this.setState({ dataApi: val });\n\n    let active = 0\n\n    this.setState({ isLoading: false, totalActive: active });\n  }\n\n  getData_ByID = async () => {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.PLUGIN_LIST_COMPANY_BY_ID,\n      method: 'POST',\n      headers: this.state.token\n    });\n    let val = res.data.data;\n\n    this.pagination(val);\n    this.setState({ dataApi: val });\n\n    let active = 0\n\n    this.setState({ isLoading: false, totalActive: active });\n  }\n\n  async onView(name, com_id, phone_number, slug) {\n    let data = await this.getPackageData(com_id)\n    try {\n      this.setState({\n        toggleView: !this.state.toggleView, company_name: name, current_package: data.length == 0 ? '' : data[0].Name,\n        arrDetailPackage: data.length == 0 ? [] : data[0].Array_Feature, phone_number: phone_number, current_slug: slug\n      })\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  searchKey() {\n    const { indexPage, key, keyStatus } = this.state;\n    // this.setState({ key: key })\n\n    if (key != '' || keyStatus != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if ((val.Email.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n          val.Name.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n          val.Phone.toLocaleUpperCase().includes(key.toLocaleUpperCase())) &&\n          val.Status.toLocaleUpperCase().includes(keyStatus.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n      let active = 0\n\n      d.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: d, totalActive: active })\n    } else {\n      let active = 0\n\n      this.state.dataApi.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: this.state.arrPagination[indexPage], totalActive: active })\n    }\n  }\n\n  toggleModal(key) {\n    if (key == 'new') {\n      this.setState({\n        modalCom: !this.state.modalCom,\n        action: key,\n        Name: '',\n        Email: '',\n        Phone: '',\n        Fax: '',\n        Address: '',\n        Website: '',\n        Slug: '',\n        Code: '',\n        Status: '',\n        username: '',\n        password: '',\n        current_province: this.state.province[0]\n      })\n    }\n  }\n\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n\n  async addCompany() {\n    const { Email, Name, Phone, Fax, Address, Website, Code, UserName, Password, Slug, current_province } = this.state\n\n    if (Email == null || Email == ''\n      || Name == null || Name == ''\n      || Phone == null || Phone == ''\n      || Address == null || Address == ''\n      || Slug == null || Slug == ''\n      || UserName == null || UserName == ''\n      || Password == null || Password == '') {\n      alert(\"Vui lòng nhập đầy đủ trường dữ liệu !!!\");\n      return\n    }\n\n    const body = {\n      Name: Name,\n      Email: Email,\n      Phone: Phone,\n      Fax: Fax,\n      Address: Address + \",\" + current_province,\n      Slug: Slug,\n      Website: Website,\n      Code: Code,\n      UserName: UserName,\n      Password: Password\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.PLUGIN_ADD_COMPANY,\n      method: 'PUT',\n      data: body,\n      headers: this.state.token\n    });\n\n    if (res.data.is_success == true) {\n      this.getData();\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(res.data.message);\n      this.setState({ isLoading: false });\n    }\n  }\n\n  openUpdate(item) {\n    this.setState({\n      modalCom: !this.state.modalCom,\n      action: \"update\",\n      Name: item.Name,\n      Email: item.Email,\n      Phone: item.Phone,\n      Fax: item.Fax,\n      Address: item.Address == null || item.Address == undefined ? \"\" : item.Address.length < 1 ? item.Address + \", \" + this.state.province[0].province_name : item.Address,\n      Slug: item.Slug,\n      Website: item.Website,\n      Code: item._id,\n      id: item['_id'],\n      Status: item.Status,\n      current_province:  item.Address == null || item.Address == undefined ? \"\" : item.Address.length < 1 ? this.state.province[0].province_name :\n        item.Address.split(',')[item.Address.split(',').length - 1]\n    })\n  }\n\n  async updateCompany() {\n    const { Email, Name, Phone, Fax, Address, Website, Slug, Status, current_province } = this.state\n\n    if (Email == null || Email == ''\n      || Name == null || Name == ''\n      || Phone == null || Phone == ''\n      || Slug == null || Slug == ''\n      || Address == null || Address == '') {\n      alert(\"Vui lòng nhập đầy đủ trường dữ liệu !!!\");\n      return\n    }\n    let add = Address.split(',');\n    add.splice(Address.split(',').length - 1, 1)\n\n    const body = {\n      Name: Name,\n      Email: Email,\n      Phone: Phone,\n      Fax: Fax,\n      Address: add + \",\" + current_province,\n      Website: Website,\n      Slug: Slug,\n      Code: this.state.id,\n      Status: Status,\n      id: this.state.id\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.PLUGIN_UPDATE_COMPANY,\n      method: 'POST',\n      data: body\n    });\n\n    if (res.data.is_success == true) {\n      this.getData();\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(res.data.message);\n      this.setState({ isLoading: false });\n    }\n  }\n\n  openDelete = (item) => {\n    this.setState({\n      modalDelete: !this.state.modalDelete,\n      delete: item\n    })\n  }\n\n  async delete() {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.PLUGIN_DELETE_COMPANY,\n      method: 'DELETE',\n      data: {\n        \"id\": this.state.delete['_id']\n      }\n    });\n\n    if (res.data.is_success == true) {\n      this.getData();\n      this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n    } else {\n      alert(res.data.message);\n      this.setState({ isLoading: false });\n    }\n\n  }\n\n  async getPackageData(company_id) {\n    let arrTemp = []\n    const resPackage = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_PLUGIN_ORDER_FOR_ADMIN,\n      method: 'POST',\n      data: {\n        company_id: company_id\n      }\n    });\n    let val = resPackage.data.data.result;\n\n    for (let i = 0; i < val.length; i++) {\n      let data = await this.getPackageName(val[i].Package_Id);\n      val[i].Name = data.Name\n      val[i].Unit = data.Unit\n      val[i].Value = data.Value\n      arrTemp.push(val[i])\n    }\n\n    this.setState({ arrTotalPackage: arrTemp })\n    return arrTemp;\n  }\n\n  getPackageName = async (package_id) => {\n    const resPackage = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.PLUGIN_DATA_PACKAGE,\n      method: 'POST',\n      data: {\n        package_id: package_id\n      }\n    });\n    return resPackage.data.data;\n  }\n\n  getBadge(status) {\n    switch (status) {\n      case 'Actived': return 'success'\n      case 'Inactive': return 'secondary'\n      case 'Locked': return 'warning'\n      case 'Deactived': return 'danger'\n      default: return 'primary'\n    }\n  }\n\n  getBadgeStatus(status) {\n    switch (status) {\n      case \"0\": return 'danger'\n      case \"1\": return 'success'\n      default: return 'primary'\n    }\n  }\n\n  getStatus(status) {\n    switch (status) {\n      case \"0\": return 'Chờ duyệt'\n      case \"1\": return 'Đã duyệt'\n      default: return 'primary'\n    }\n  }\n\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  actionSearch(e, name_action) {\n    this.setState({\n      [name_action]: e.target.value\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  resetSearch() {\n    this.setState({\n      key: '',\n      keyEmail: '',\n      keyPhone: '',\n      keyFax: '',\n      keyAddress: '',\n      keyWebsite: '',\n      keyCode: '',\n      keyCompany: '',\n      keyDateCreate: new Date(),\n      keyStatus: ''\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  convertUnitToDate(unit) {\n    switch (unit) {\n      case '0': return 'Ngày'\n      case '1': return 'Tháng'\n      case '2': return 'Năm'\n    }\n  }\n\n  CalculatorDateLeft(dateStart, dateEnd) {\n    return Math.ceil(Math.abs(new Date(dateEnd) - new Date(dateStart)) / (1000 * 60 * 60 * 24))\n  }\n\n  renderDetailPackage() {\n    return (\n      <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n        <thead className=\"thead-light\">\n          <tr>\n            <th className=\"text-center\">STT.</th>\n            <th className=\"text-center\">Tên dịch vụ</th>\n            <th className=\"text-center\">Đường dẫn</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            this.state.arrDetailPackage.length == 0 ?\n              <td colSpan=\"10\" hidden={false} className=\"text-center\">Không tìm thấy dữ liệu</td> :\n              <td colSpan=\"10\" hidden={true} className=\"text-center\">Không tìm thấy dữ liệu</td>\n\n          }\n\n          {\n            this.state.arrDetailPackage != undefined || this.state.arrDetailPackage.length != 0 || this.state.arrDetailPackage != null ?\n              this.state.arrDetailPackage.map((item, i) => {\n                return (\n                  <tr key={i}>\n                    <td className=\"text-center\">{i + 1}</td>\n                    <td className=\"text-center\">{item.Key}</td>\n                    <td className=\"text-center\">{item.Value + this.state.current_slug}</td>\n                  </tr>\n                );\n              }) : \"\"\n          }\n        </tbody>\n      </table>\n    )\n  }\n\n  calDateLeft(end, active) {\n    return this.CalculatorDateLeft(new Date(end), new Date(active))\n  }\n\n  async getProvince() {\n    const res = await axios({\n      baseURL: 'https://vapi.vnappmob.com',\n      url: '/api/province',\n      method: 'GET',\n    });\n\n    this.setState({ province: res.data.results })\n  }\n  render() {\n    const { data, key, action, arrPagination, type, current_province, arrTotalPackage, company_name, current_package, phone_number, province } = this.state;\n\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <p style={styles.success}>{this.state.updated}</p>\n              <p style={styles.danger}>{this.state.deleted}</p>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Danh sách công ty\n                  <div style={styles.tags}>\n                    <CRow>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CRow>\n                          <CCol sm=\"12\" lg=\"4\">\n                            <div>\n                              <Input style={styles.searchInput} onChange={(e) => {\n                                this.actionSearch(e, \"key\");\n                              }} name=\"key\" value={key} placeholder=\"Từ khóa\" />\n                            </div>\n                          </CCol>\n                          {/* <CCol sm=\"6\" lg=\"2\">\n                            <CInput type=\"date\" onChange={e => {\n                              this.actionSearch(e, \"keyDateCreate\");\n                            }} value={keyDateCreate} placeholder=\"Create Date\" />\n                          </CCol> */}\n                          <CCol sm=\"12\" lg=\"4\">\n                            <CSelect style={styles.flexOption} onChange={e => {\n\n                              this.actionSearch(e, \"keyStatus\");\n\n                            }} custom>\n                              {\n                                ['Actived', 'Deactived', 'Locked'].map((item, i) => {\n                                  return (\n                                    <option value={item}>{item}</option>\n                                  );\n                                })\n                              }\n                            </CSelect>\n                          </CCol>\n                          <CCol sm=\"12\" lg=\"4\">\n                            <CButton color=\"primary\" style={{ width: '100%', marginTop: 5 }} size=\"sm\" onClick={e => { this.resetSearch() }}>Làm mới tìm kiếm</CButton>\n                          </CCol>\n                        </CRow>\n                      </CCol>\n                      {/* <CCol sm=\"12\" lg=\"12\">\n                        <CButton outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={e => this.toggleModal(\"new\")}>Thêm mới</CButton>\n                      </CCol> */}\n                    </CRow>\n                  </div>\n                </CardHeader>\n                <CardBody>\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        <th className=\"text-center\">Tên Công Ty</th>\n                        <th className=\"text-center\">Email - SĐT</th>\n                        <th className=\"text-center\">Địa chỉ</th>\n                        <th className=\"text-center\">Người tạo</th>\n                        <th className=\"text-center\">Ngày tạo</th>\n                        <th className=\"text-center\">Trạng thái</th>\n                        <th className=\"text-center\">#</th>\n\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <td colSpan=\"10\" hidden={this.state.hidden} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                <td className=\"text-center\">{item.Name}</td>\n                                <td className=\"text-center\">\n                                  <div>{item.Email}</div>\n                                  <div>------------</div>\n                                  <div>{item.Phone}</div>\n                                </td>\n                                <td className=\"text-center\">{item.Address}</td>\n                                <td className=\"text-center\">{item.Create_By == null ? \"ADMIN\" : item.Create_By.Name}</td>\n                                <td className=\"text-center\">\n                                  {(new Date(item.Create_Date)).toLocaleDateString()}\n                                </td>\n                                <td className=\"text-center\">\n                                  <CBadge color={this.getBadge(item.Status)}>\n                                    {item.Status}\n                                  </CBadge>\n                                </td>\n                                <td className=\"text-center\">\n\n                                  <CButton style={{ margin: 1 }} outline color=\"primary\" size=\"sm\" onClick={(e) => this.openUpdate(item)} >\n                                    <CIcon name=\"cilPencil\" />\n                                  </CButton>{' '}\n                                  {\n                                    type == \"0\" ?\n                                      <CButton style={{ margin: 1 }} outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>\n                                        <CIcon name=\"cilTrash\" />\n                                      </CButton> : \"\"\n                                  }\n                                  {' '}\n                                  <CTooltip content=\"Xem chi tiết đơn hàng\">\n                                    <CButton style={{ margin: 1 }} outline color=\"info\" size=\"sm\" onClick={async (e) => { await this.onView(item.Name, item._id, item.Phone, item.Slug) }}>\n                                      <CIcon name=\"cil-magnifying-glass\" />\n                                    </CButton>\n                                  </CTooltip>\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n\n                </CardBody>\n              </Card>\n              <div style={{ float: 'right' }}>\n                <Pagination count={arrPagination.length} color=\"primary\" onChange={(e, v) => {\n                  this.setState({ data: arrPagination[v - 1], indexPage: v - 1 })\n                }} />\n              </div>\n              {/* {\n                arrPagination.length == 1 ? \"\" :\n                  <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                    <tr style={styles.row}>\n                      {\n                        arrPagination.map((item, i) => {\n                          return (\n                            <td>\n                              <CButton style={styles.pagination} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ data: arrPagination[i], indexPage: i }) }}>{i + 1}</CButton>\n                            </td>\n                          );\n                        })\n                      }\n                    </tr>\n                  </div>\n              } */}\n\n            </Col>\n          </Row>\n\n          <CModal\n            show={this.state.toggleView}\n            onClose={() => { this.setState({ toggleView: !this.state.toggleView }) }}\n            size=\"xl\"\n          >\n            <CModalHeader closeButton>\n              <CModalTitle>Danh sách đơn hàng của {company_name}</CModalTitle>\n              <CModalTitle style={{ marginLeft: 50 }}>Số điện thoại: {phone_number}</CModalTitle>\n            </CModalHeader>\n\n            <CModalBody>\n              <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th className=\"text-center\">STT.</th>\n                    <th className=\"text-center\">Tên Gói</th>\n                    <th className=\"text-center\">Tính năng</th>\n                    <th className=\"text-center\">Gói</th>\n                    <th className=\"text-center\">Ngày kích hoạt</th>\n                    <th className=\"text-center\">Ngày hết hạn</th>\n                    <th className=\"text-center\">Thời gian hết hạn</th>\n                    <th className=\"text-center\">Trạng thái</th>\n                    <th className=\"text-center\">#</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    arrTotalPackage == 0 ?\n                      <td colSpan=\"10\" hidden={false} className=\"text-center\">Không tìm thấy dữ liệu</td> :\n                      <td colSpan=\"10\" hidden={true} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                  }\n                  {\n                    arrTotalPackage != undefined ?\n                      arrTotalPackage.map((item, i) => {\n                        return (\n                          <tr key={i}>\n                            <th className=\"text-center\">{i + 1}</th>\n                            <th className=\"text-center\">{item.Name}</th>\n                            <th className=\"text-center\">\n                              {item.Array_Feature.map((item, i) => {\n                                if (i < 2) {\n                                  return (\n                                    <div><a href={item.Value} target=\"_blank\" key={i}>{item.Value}</a></div>\n                                  )\n                                }\n                              })}\n                              {\n                                (item.Array_Feature.length - 2) <= 0 ? \"\" : item.Array_Feature.length - 2 + \" mores...\"\n                              }\n                            </th>\n                            <th className=\"text-center\">{`${item.Value} ${this.convertUnitToDate(item.Unit)}`}</th>\n                            <th className=\"text-center\">\n                              {item.Status == \"1\" ? new Date(item.Active_Date).toLocaleDateString() : \"-----\"}\n                            </th>\n                            <th className=\"text-center\">\n                              {item.Status == \"1\" ? new Date(item.End_Date).toLocaleDateString() : \"-----\"}\n                            </th>\n                            {\n                              item.Status == \"1\" ? <th className=\"text-center\" style={\n                                this.calDateLeft(item.End_Date, Date.now()) > 30 ? { color: 'green' } :\n                                  this.calDateLeft(item.End_Date, Date.now()) < 15 ? { color: 'yellow' } : { color: 'red' }\n                              }>\n                                {\n                                  this.calDateLeft(item.End_Date, Date.now())\n                                } ngày nữa\n                              </th> : <th className=\"text-center\">-----</th>\n                            }\n                            <th className=\"text-center\" >\n                              <CBadge color={this.getBadgeStatus(item.Status)}>\n                                {this.getStatus(item.Status)}\n                              </CBadge>\n                            </th>\n\n                            <td className=\"text-center\">\n                              <CButton outline color=\"info\" size=\"sm\"\n                                onClick={async (e) => {\n                                  this.setState({\n                                    arrDetailPackage: item.Array_Feature, current_package: item.Name\n                                  })\n                                }}>\n                                <CIcon name=\"cil-magnifying-glass\" />\n                              </CButton>\n                            </td>\n                          </tr>\n                        )\n                      }) : \"\"\n                  }\n                </tbody>\n              </table>\n              <br />\n              <CModalHeader>\n                <CModalTitle>Chi tiết tính năng ({current_package})</CModalTitle>\n              </CModalHeader>\n              {\n                this.renderDetailPackage()\n              }\n            </CModalBody>\n            <CModalFooter>\n              <CButton color=\"secondary\" onClick={() => { this.setState({ toggleView: !this.state.toggleView }) }}>Đóng</CButton>\n            </CModalFooter>\n          </CModal>\n\n          <Modal isOpen={this.state.modalCom} className={this.props.className}>\n            <ModalHeader>{this.state.action == 'new' ? `Tạo mới` : `Cập nhật`}</ModalHeader>\n            <ModalBody>\n              <TextFieldGroup\n                field=\"Email\"\n                label=\"Email\"\n                value={this.state.Email}\n                type={\"email\"}\n                placeholder={\"Emal\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"Email\", e.target.value)}\n              // rows=\"5\"\n              />\n              <TextFieldGroup\n                field=\"Name\"\n                label=\"Tên công ty\"\n                value={this.state.Name}\n                placeholder={\"Tên công ty\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"Name\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"UserName\"\n                label=\"Tên đăng nhập\"\n                value={this.state.UserName}\n                placeholder={\"Tên đăng nhập\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"UserName\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"Password\"\n                label=\"Mật khẩu\"\n                type={\"password\"}\n                value={this.state.Password}\n                placeholder={\"Mật khẩu\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"Password\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"Phone\"\n                label=\"Số điện thoại\"\n                value={this.state.Phone}\n                placeholder={\"Số điện thoại\"}\n                onChange={e => this.onChange(\"Phone\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"Fax\"\n                label=\"Fax\"\n                value={this.state.Fax}\n                placeholder={\"Fax\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"Fax\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"Address\"\n                label=\"Địa chỉ\"\n                value={this.state.Address}\n                placeholder={\"Địa chỉ\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"Address\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <label style={styles.flexLabel} htmlFor=\"tag\">Tỉnh  </label>\n              <CSelect onChange={async e => { this.setState({ current_province: e.target.value }) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                {\n                  province.map((item, i) => {\n                    if (item.province_name == current_province) {\n                      return (\n                        <option selected value={item.province_name}>{item.province_name}</option>\n                      );\n                    } else {\n                      return (\n                        <option value={item.province_name}>{item.province_name}</option>\n                      );\n                    }\n                  })\n                }\n              </CSelect>\n\n              <TextFieldGroup\n                field=\"Slug\"\n                label=\"Slug\"\n                value={this.state.Slug}\n                placeholder={\"Slug\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"Slug\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"Website\"\n                label=\"Website\"\n                value={this.state.Website}\n                placeholder={\"Website\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"Website\", e.target.value)}\n              // rows=\"5\"\n              />\n              {\n                action == 'new' ? \"\" : <div>\n                  <label style={styles.flexLabel} htmlFor=\"tag\">Status    </label>\n                  <select style={styles.flexOption} name=\"Status\" onChange={e => this.onChange(\"Status\", e.target.value)}>\n                    <option value={this.state.Status}>{this.state.Status == '' ? ` - - - - - - - - - - ` : this.state.Status}</option>\n                    <option value={'Actived'}>Actived</option>\n                    <option value={'Deactived'}>Deactived</option>\n                  </select>\n                </div>\n              }\n\n            </ModalBody>\n\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => { this.state.action === 'new' ? this.addCompany() : this.updateCompany() }} disabled={this.state.isLoading}>Lưu</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Xoá`}</ModalHeader>\n            <ModalBody>\n              <label htmlFor=\"tag\">{`Xác nhận xóa !!!`}</label>\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Delete</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n        </div >\n      );\n    }\n\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst styles = {\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: 160,\n    margin: '1px'\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: 'right',\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh12: {\n    width: \"8%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wh15: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  w5: {\n    width: \"12%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    marginLeft: '5px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\"\n  },\n  searchInput: {\n    width: \"160px\",\n    display: 'inline-block',\n    margin: '1px'\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n  mgl5: {\n    marginBottom: '5px'\n  }\n}\n\nexport default PluginCustomerManager;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;"],"sourceRoot":""}