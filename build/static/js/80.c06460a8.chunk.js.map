{"version":3,"sources":["views/base/tables/HardWare.js","views/Common/TextFieldGroup.js"],"names":["headers","Headers","auth","localStorage","getItem","append","PackageSale","props","getData","a","setState","isLoading","axios","baseURL","Constants","BASE_URL","url","LIST_HARDWARE","method","state","token","res","pagination","data","dataApi","active","map","val","Status","totalActive","openDelete","item","modalDelete","delete","key","keyName","keyActive","keyEnd","keyStatus","keyCode","activePage","page","itemsCount","limit","modalCom","viewingUser","communities","updated","action","Name","Active_Date","Date","End_Date","dataCompany","currentCompany","arrPagination","indexPage","Authorization","this","arr","JSON","parse","i","length","to","window","location","hash","hidden","href","status","j","temparray","arrTotal","slice","push","d","toLocaleUpperCase","includes","e","name_action","target","value","searchKey","alert","body","ADD_HARDWARE","is_success","message","id","UPDATE_HARDWARE","DELETE_HARDWARE","fetchData","fetch","global","then","users","json","result","total","catch","console","log","pageNumber","getUsers","modal","image","isActive","errors","position","name","className","style","styles","tags","sm","lg","searchInput","onChange","actionSearch","placeholder","flexOption","custom","color","width","marginTop","size","onClick","resetSearch","outline","floatRight","toggleModal","undefined","toLocaleDateString","toLocaleTimeString","Key","Create_Date","getBadge","openUpdate","float","marginRight","padding","row","isOpen","field","label","datePicker","flexLabel","selected","date","htmlFor","addPackageSale","updatePackageSale","disabled","toggle","Email","Component","marginBottom","margin","textDecoration","spinner","center","textAlign","tbody","height","overflowY","wa10","wh16","wh15","w5","success","danger","mgl5","marginLeft","display","userActive","userPending","nagemonNameCol","borderRadius","TextFieldGroup","error","type","checkUserExists","readOnly","classnames","onBlur","defaultProps"],"mappings":"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","file":"static/js/80.c06460a8.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Button, Input,\r\n  ModalHeader, ModalBody, ModalFooter, Modal,\r\n} from 'reactstrap';\r\n\r\nimport {\r\n  CBadge,\r\n  CRow,\r\n  CCol,\r\n  CSelect,\r\n} from '@coreui/react'\r\n\r\nimport 'moment-timezone';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Constants from \"./../../../contants/contants\";\r\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\r\nimport axios from 'axios'\r\nlet headers = new Headers();\r\nconst auth = localStorage.getItem('auth');\r\nheaders.append('Authorization', 'Bearer ' + auth);\r\nheaders.append('Content-Type', 'application/json');\r\nclass PackageSale extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      key: '',\r\n      keyName: '',\r\n      keyActive: '',\r\n      keyEnd: '',\r\n      keyStatus: '',\r\n      keyCode: '',\r\n      activePage: 1,\r\n      page: 1,\r\n      itemsCount: 0,\r\n      limit: 20,\r\n      totalActive: 0,\r\n      modalCom: false,\r\n      viewingUser: {},\r\n      communities: [],\r\n      updated: '',\r\n      dataApi: [],\r\n      action: 'new',\r\n      Name: \"\",\r\n      Active_Date: new Date(),\r\n      End_Date: new Date(),\r\n      Status: \"\",\r\n      modalDelete: false,\r\n      delete: null,\r\n      dataCompany: [],\r\n      currentCompany: '',\r\n      arrPagination: [],\r\n      indexPage: 0,\r\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    this.getData();\r\n    let arr = JSON.parse(localStorage.getItem('url'));\r\n    for(let i = 0; i < arr.length; i++){\r\n      if(\"#\" + arr[i].to == window.location.hash){\r\n        if(arr[i].hidden == true){\r\n          window.location.href = '#/'\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  getBadge(status) {\r\n    switch (status) {\r\n      case 'INSTOCK': return 'success'\r\n      case 'AVAILABLE': return 'secondary'\r\n      case 'Locked': return 'warning'\r\n      case 'Deactived': return 'danger'\r\n      default: return 'primary'\r\n    }\r\n  }\r\n\r\n  pagination(dataApi) {\r\n    var i, j, temparray, chunk = 5;\r\n    var arrTotal = [];\r\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\r\n      temparray = dataApi.slice(i, i + chunk);\r\n      arrTotal.push(temparray);\r\n    }\r\n    this.setState({ arrPagination: arrTotal, data: arrTotal[this.state.indexPage] });\r\n  }\r\n\r\n  getData = async () => {\r\n    this.setState({ isLoading: true });\r\n    const res = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.LIST_HARDWARE,\r\n      method: 'POST',\r\n      headers: this.state.token\r\n    });\r\n\r\n    this.pagination(res.data.data);\r\n    this.setState({ dataApi: res.data.data });\r\n\r\n    let active = 0\r\n\r\n    res.data.data.map(val => {\r\n      if (val.Status == \"Actived\") {\r\n        active = active + 1\r\n      }\r\n    })\r\n\r\n    this.setState({ isLoading: false, totalActive: active });\r\n  }\r\n\r\n  searchKey() {\r\n    const { key, keyStatus } = this.state;\r\n\r\n    if (key != '' || keyStatus != '') {\r\n      let d = []\r\n      this.state.dataApi.map(val => {\r\n        if (val.Name.toLocaleUpperCase().includes(key.toLocaleUpperCase()) &&\r\n            val.Status.toLocaleUpperCase().includes(keyStatus.toLocaleUpperCase())) {\r\n            d.push(val)\r\n        }\r\n      })\r\n      let active = 0\r\n\r\n      d.map(val => {\r\n        if (val.Status == \"Actived\") {\r\n          active = active + 1\r\n        }\r\n      })\r\n\r\n      this.setState({ data: d, totalActive: active })\r\n    } else {\r\n      let active = 0\r\n\r\n      this.state.dataApi.map(val => {\r\n        if (val.Status == \"Actived\") {\r\n          active = active + 1\r\n        }\r\n      })\r\n\r\n      this.setState({ data: this.state.dataApi, totalActive: active })\r\n    }\r\n  }\r\n\r\n  actionSearch(e, name_action) {\r\n    this.setState({\r\n      [name_action]: e.target.value\r\n    }, () => {\r\n      this.searchKey();\r\n    });\r\n  }\r\n\r\n  resetSearch() {\r\n    this.setState({\r\n      keyName: '',\r\n      keyActive: new Date(),\r\n      keyEnd: new Date(),\r\n      keyStatus: '',\r\n      keyCode: ''\r\n    }, () => {\r\n      this.searchKey();\r\n    });\r\n  }\r\n\r\n  async toggleModal(key) {\r\n    if (key == 'new') {\r\n      this.setState({\r\n        modalCom: !this.state.modalCom,\r\n        action: key,\r\n        Name: \"\",\r\n        Active_Date: new Date(),\r\n        End_Date: new Date()\r\n      })\r\n    }\r\n  }\r\n\r\n  onChange(key, val) {\r\n    this.setState({ [key]: val })\r\n  }\r\n\r\n  async addPackageSale() {\r\n    const { Name, Active_Date, End_Date } = this.state\r\n\r\n    if (Name == null || Name == '') {\r\n      alert(\"Vui lòng nhập đầy đủ trường !!!\");\r\n      return\r\n    }\r\n\r\n    const body = {\r\n      Name: Name,\r\n      Active_Date: Active_Date,\r\n      End_Date: End_Date\r\n    }\r\n\r\n    this.setState({ isLoading: true });\r\n    const res = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.ADD_HARDWARE,\r\n      method: 'PUT',\r\n      data: body\r\n    });\r\n\r\n    if (res.data.is_success == true) {\r\n      this.getData();\r\n      this.setState({ modalCom: !this.state.modalCom })\r\n    } else {\r\n      alert(res.data.message);\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  async openUpdate(item) {\r\n    this.setState({\r\n      modalCom: !this.state.modalCom,\r\n      action: \"update\",\r\n      Name: item.Name,\r\n      Active_Date: item.Active_Date,\r\n      End_Date: item.End_Date,\r\n      Status: item.Status,\r\n      id: item['_id'],\r\n      Status: item.Status\r\n    })\r\n  }\r\n\r\n  async updatePackageSale() {\r\n    const { Name, Active_Date, End_Date, Status } = this.state\r\n\r\n    if (Name == null || Name == '') {\r\n      alert(\"Vui lòng nhập đầy đủ trường !!!\");\r\n      return\r\n    }\r\n\r\n    const body = {\r\n      Name: Name,\r\n      Active_Date: Active_Date,\r\n      End_Date: End_Date,\r\n      id: this.state.id,\r\n      Status: Status\r\n    }\r\n\r\n    this.setState({ isLoading: true });\r\n    const res = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.UPDATE_HARDWARE,\r\n      method: 'POST',\r\n      data: body\r\n    });\r\n\r\n    if (res.data.is_success == true) {\r\n      this.getData();\r\n      this.setState({ modalCom: !this.state.modalCom })\r\n    } else {\r\n      alert(res.data.message);\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  openDelete = (item) => {\r\n    this.setState({\r\n      modalDelete: !this.state.modalDelete,\r\n      delete: item\r\n    })\r\n  }\r\n\r\n  async delete() {\r\n    this.setState({ isLoading: true });\r\n    const res = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.DELETE_HARDWARE,\r\n      method: 'DELETE',\r\n      data: {\r\n        \"id\": this.state.delete['_id']\r\n      }\r\n    });\r\n\r\n    if (res.data.is_success == true) {\r\n      this.getData();\r\n      this.setState({ modalDelete: !this.state.modalDelete, delete: null })\r\n    } else {\r\n      alert(res.data.message);\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  getUsers(page = 1) {\r\n    const limit = this.state.limit;\r\n    const key = this.state.key || '';\r\n    const fetchData = {\r\n      method: 'GET',\r\n      headers: headers\r\n    };\r\n    fetch(global.BASE_URL + '/admin/users?key=' + key + '&page=' + page + '&limit=' + limit, fetchData).then(users => {\r\n      users.json().then(result => {\r\n        this.setState({\r\n          data: result.data,\r\n          itemsCount: result.total,\r\n          activePage: page,\r\n          totalActive: result.totalActive,\r\n          updated: '',\r\n        });\r\n      })\r\n    }).catch(console.log);\r\n  }\r\n  async handlePageChange(pageNumber) {\r\n    this.getUsers(pageNumber);\r\n  }\r\n  toggle(action = '') {\r\n    this.setState({\r\n      modal: !this.state.modal,\r\n      image: '',\r\n      url: '',\r\n      isActive: false,\r\n      isLoading: false,\r\n      errors: {},\r\n      action,\r\n      position: 1,\r\n      data: [],\r\n      updated: '',\r\n    });\r\n  }\r\n  inputChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { data, key, action, End_Date, Active_Date, arrPagination, indexPage } = this.state;\r\n    if (!this.state.isLoading) {\r\n      return (\r\n        <div>\r\n          <Card>\r\n            <CardHeader>\r\n              Quản lí phần cứng (Page: {this.state.indexPage + 1})\r\n              <div style={styles.tags}>\r\n                <CRow>\r\n                  <CCol sm=\"6\" lg=\"12\">\r\n                    <CRow>\r\n                      <CCol sm=\"6\" lg=\"4\">\r\n                        <div>\r\n                          <Input style={styles.searchInput} onChange={(e) => {\r\n                            this.actionSearch(e, \"key\");\r\n                          }} name=\"key\" value={key} placeholder=\"Từ khóa\" />\r\n                        </div>\r\n                      </CCol>\r\n\r\n                      <CCol sm=\"6\" lg=\"4\">\r\n                        <CSelect style={styles.flexOption} onChange={e => {\r\n\r\n                          this.actionSearch(e, \"keyStatus\");\r\n\r\n                        }} custom>\r\n                          {\r\n                            ['INSTOCK', 'AVAILABLE'].map((item, i) => {\r\n                              return (\r\n                                <option value={item}>{item}</option>\r\n                              );\r\n                            })\r\n                          }\r\n                        </CSelect>\r\n                      </CCol>\r\n                      <CCol sm=\"6\" lg=\"4\">\r\n                        <Button color=\"primary\" style={{ width: '100%', marginTop: 5 }} size=\"sm\" onClick={e => { this.resetSearch() }}>Làm mới tìm kiếm</Button>\r\n                      </CCol>\r\n                    </CRow>\r\n                  </CCol>\r\n                  <CCol sm=\"6\" lg=\"12\">\r\n                    <Button outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={e => this.toggleModal(\"new\")}>Thêm mới</Button>\r\n                  </CCol>\r\n                </CRow>\r\n              </div>\r\n            </CardHeader>\r\n            <CardBody>\r\n              <table className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                <thead className=\"thead-light\">\r\n                  <tr>\r\n                    <th className=\"text-center\">STT.</th>\r\n                    <th className=\"text-center\">Tên</th>\r\n                    <th className=\"text-center\">Ngày kích hoạt</th>\r\n                    <th className=\"text-center\">Ngày hết hạn</th>\r\n                    <th className=\"text-center\">Mã</th>\r\n                    <th className=\"text-center\">Ngày tạo</th>\r\n                    <th className=\"text-center\">Trạng thái</th>\r\n                    <th className=\"text-center\">#</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {\r\n                    data != undefined ?\r\n                      data.map((item, i) => {\r\n                        return (\r\n                          <tr key={i}>\r\n                            <td className=\"text-center\">{i + 1}</td>\r\n                            <td className=\"text-center\">{item.Name}</td>\r\n                            <td className=\"text-center\">\r\n                              {(new Date(item.Active_Date)).toLocaleDateString() + ' ' + (new Date(item.Active_Date)).toLocaleTimeString()}\r\n                            </td>\r\n                            <td className=\"text-center\">\r\n                              {(new Date(item.End_Date)).toLocaleDateString() + ' ' + (new Date(item.End_Date)).toLocaleTimeString()}\r\n                            </td>\r\n                            <td className=\"text-center\">{item.Key}</td>\r\n                            <td className=\"text-center\">\r\n                              {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\r\n                            </td>\r\n                            <td className=\"text-center\">\r\n                              <CBadge color={this.getBadge(item.Status)}>\r\n                                {item.Status}\r\n                              </CBadge>\r\n                            </td>\r\n                            <td className=\"text-center\">\r\n                              <Button outline color=\"primary\" size=\"sm\" onClick={(e) => this.openUpdate(item)} >Cập nhật</Button>{' '}\r\n                              <Button outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>Xoá</Button>\r\n                            </td>\r\n                          </tr>\r\n                        );\r\n                      }) : \"\"\r\n                  }\r\n                </tbody>\r\n              </table>\r\n            </CardBody>\r\n          </Card>\r\n          {\r\n            arrPagination.length == 1 ? \"\" :\r\n              <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\r\n                <tr style={styles.row}>\r\n                  {\r\n                    arrPagination.map((item, i) => {\r\n                      return (\r\n                        <td>\r\n                          <Button style={{ marginRight: '5px' }} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ data: arrPagination[i], indexPage: i }) }}>{i + 1}</Button>\r\n                        </td>\r\n                      );\r\n                    })\r\n                  }\r\n                </tr>\r\n              </div>\r\n          }\r\n\r\n\r\n\r\n          <Modal isOpen={this.state.modalCom} className={this.props.className}>\r\n            <ModalHeader>{this.state.action == 'new' ? `Tạo mới` : `Cập nhật`}</ModalHeader>\r\n            <ModalBody>\r\n              <TextFieldGroup\r\n                field=\"Name\"\r\n                label=\"Tên phần cứng\"\r\n                value={this.state.Name}\r\n                placeholder={\"Tên phần cứng\"}\r\n                // error={errors.title}\r\n                onChange={e => this.onChange(\"Name\", e.target.value)}\r\n              // rows=\"5\"\r\n              />\r\n\r\n              <div style={styles.datePicker}>\r\n                <label style={styles.flexLabel}>Ngày kích hoạt:</label>\r\n                <DatePicker style={styles.flexOption} selected={new Date(Active_Date)} onChange={(date) => this.setState({ Active_Date: date })} />\r\n              </div>\r\n\r\n              <div style={styles.datePicker}>\r\n                <label style={styles.flexLabel}>Ngày hết hạn:</label>\r\n                <DatePicker style={styles.flexOption} selected={new Date(End_Date)} onChange={(date) => this.setState({ End_Date: date })} />\r\n              </div>\r\n\r\n              {\r\n                action == 'new' ? \"\" : <div>\r\n                  <label style={styles.flexLabel} htmlFor=\"tag\">Trạng thái:</label>\r\n                  <select style={styles.flexOption} name=\"Status\" onChange={e => this.onChange(\"Status\", e.target.value)}>\r\n                    <option value={this.state.Status}>{this.state.Status == '' ? ` - - - - - - - - - - ` : this.state.Status}</option>\r\n                    <option value={'INSTOCK'}>INSTOCK</option>\r\n                    <option value={'AVAILABLE'}>AVAILABLE</option>\r\n                  </select>\r\n                </div>\r\n              }\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" onClick={e => { this.state.action === 'new' ? this.addPackageSale() : this.updatePackageSale() }} disabled={this.state.isLoading}>Lưu</Button>{' '}\r\n              <Button color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Đóng</Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n\r\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\r\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Xoá`}</ModalHeader>\r\n            <ModalBody>\r\n              <label htmlFor=\"tag\">{`Do you want to delete user \"${this.state.delete ? this.state.delete.Email : ''}\" ?`}</label>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Xoá</Button>{' '}\r\n              <Button color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Đóng</Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div id=\"page-loading\">\r\n        <div className=\"three-balls\">\r\n          <div className=\"ball ball1\"></div>\r\n          <div className=\"ball ball2\"></div>\r\n          <div className=\"ball ball3\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  datePicker: {\r\n    marginBottom: 20\r\n  },\r\n  flexLabel: {\r\n    width: 100\r\n  },\r\n  flexOption: {\r\n    width: 200,\r\n    margin: '1px'\r\n  },\r\n  a: {\r\n    textDecoration: 'none'\r\n  },\r\n  floatRight: {\r\n    float: \"right\",\r\n    marginTop: '3px'\r\n  },\r\n  spinner: {\r\n    width: \"30px\"\r\n  },\r\n  center: {\r\n    textAlign: \"center\"\r\n  },\r\n  tbody: {\r\n    height: \"380px\",\r\n    overflowY: \"auto\"\r\n  },\r\n  wa10: {\r\n    width: \"5%\",\r\n    float: \"left\",\r\n    height: \"80px\"\r\n  },\r\n  wh16: {\r\n    width: \"17%\",\r\n    float: \"left\",\r\n    height: \"80px\"\r\n  },\r\n  wh15: {\r\n    width: \"20%\",\r\n    float: \"left\",\r\n    height: \"80px\"\r\n  },\r\n  w5: {\r\n    width: \"20%\",\r\n    float: \"left\",\r\n    height: \"80px\"\r\n  },\r\n  row: {\r\n    float: \"left\",\r\n    width: \"100%\"\r\n  },\r\n  success: {\r\n    color: 'green'\r\n  },\r\n  danger: {\r\n    color: 'red'\r\n  },\r\n  mgl5: {\r\n    marginLeft: '5px'\r\n  },\r\n  tags: {\r\n    float: \"right\",\r\n    marginRight: \"5px\"\r\n  },\r\n  searchInput: {\r\n    width: \"200px\",\r\n    display: 'inline-block',\r\n    margin: '1px'\r\n  },\r\n  userActive: {\r\n    color: 'green'\r\n  },\r\n  userPending: {\r\n    color: 'red'\r\n  },\r\n  nagemonNameCol: {\r\n    width: '328px'\r\n  },\r\n  image: {\r\n    width: '100px',\r\n    height: '100px',\r\n    borderRadius: '99999px'\r\n  },\r\n}\r\n\r\nexport default PackageSale;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder, onClick }) => {\r\n  return (\r\n    <div className={classnames('form-group', { 'has-error': error })}>\r\n      <label className=\"control-label\">{label}</label>\r\n      <input\r\n        onChange={onChange}\r\n        onClick={onClick}\r\n        onBlur={checkUserExists}\r\n        value={value}\r\n        type={type}\r\n        name={field}\r\n        placeholder={placeholder}\r\n        readOnly={readOnly}\r\n        className=\"form-control\"\r\n      />\r\n    {error && <span className=\"help-block\">{error}</span>}\r\n    </div>  );\r\n}\r\n\r\nTextFieldGroup.propTypes = {\r\n  field: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  checkUserExists: PropTypes.func\r\n}\r\n\r\nTextFieldGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n\r\nexport default TextFieldGroup;\r\n"],"sourceRoot":""}