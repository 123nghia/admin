<<<<<<< HEAD:build/static/js/42.b745a950.chunk.js.map
{"version":3,"sources":["views/base/tables/MakeUp/Product.js","functions/callAPI.js"],"names":["headers","Headers","auth","localStorage","getItem","append","Product","props","getData","a","setState","isLoading","API_CONNECT","Constants","LIST_PRODUCT","res_product","LIST_BRAND","res_brand","LIST_TYPE","res_type","LIST_COLOR","res_color","val","data","brands","types","colors","pagination","dataApi","colorItem","color_id","totalActive","getData_Company","LIST_PRODUCT_COMPANY","JSON","parse","state","user","company_id","token","LIST_BRAND_COMPANY","LIST_TYPE_COMPANY","LIST_COLOR_COMPANY","openDelete","item","modalDelete","id","_id","key","keyColor","activePage","page","itemsCount","limit","modalCom","viewingUser","communities","updated","hidden","action","type_id","brand_id","brand_name","name","href","image","delete","arrPagination","indexPage","Authorization","type","BASE_URL","BASE_URL_CURRENT","arrProductColor","colorItemUpdate","colorItemBase","colorChooseUpdate","collapse","this","arr","i","length","url","window","location","hash","isHidden","j","temparray","arrTotal","slice","push","console","log","d","map","toLocaleUpperCase","includes","active","Status","e","files","target","reader","FileReader","readAsDataURL","onload","result","index","Number","alert","body","dataProductColor","axios","baseURL","ADD_PRODUCT","method","status","UPDATE_PRODUCT","DELETE_PRODUCT","value","name_action","searchKey","hex","searchColor","searchColorUpdate","field","label","placeholder","onChange","style","width","custom","size","selected","song","lodash","find","className","xs","sm","lg","border","borderRadius","margin","float","color","onClick","splice","show","backgroundColor","actionSearchColor","height","overflowY","cursor","onChooseColor","onChangeImage_ADD","src","marginBottom","addProduct","disabled","toggleModal","css","override","loading","speedMultiplier","styles","tags","searchInput","actionSearch","marginTop","resetSearch","outline","floatRight","ble","colSpan","undefined","mgl5","openUpdate","count","v","isOpen","renderFormAdd","onChangeImage","actionSearchColorUpdate","updateProducts","toggle","htmlFor","Component","marginRight","flexLabel","flexOption","textDecoration","spinner","center","textAlign","tbody","wh25","w5","wa10","row","success","danger","display","userActive","userPending","nagemonNameCol","require","default","defaults","constants","connect","options","get","is_success","post","put","del"],"mappings":"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","file":"static/js/42.b745a950.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport CIcon from '@coreui/icons-react'\nimport { cifAU, freeSet } from '@coreui/icons';\n\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Input,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n} from 'reactstrap';\n\nimport {\n  CLabel,\n  CSelect,\n  CButton,\n  CRow,\n  CCol,\n  CCardFooter,\n  CCard,\n  CCardBody,\n  CCollapse,\n  CListGroup,\n  CListGroupItem,\n  CInputFile\n} from '@coreui/react'\n\nimport Pagination from '@material-ui/lab/Pagination';\nimport 'moment-timezone';\nimport Constants from \"../../../../contants/contants\";\nimport TextFieldGroup from \"../../../Common/TextFieldGroup\";\nimport axios from 'axios'\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport API_CONNECT from \"../../../../functions/callAPI\";\nimport lodash from \"lodash\";\nimport { object } from 'prop-types';\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      keyColor: '',\n      activePage: 1,\n      page: 1,\n      itemsCount: 0,\n      limit: 20,\n      totalActive: 0,\n      modalCom: false,\n      viewingUser: {},\n      communities: [],\n      updated: '',\n      dataApi: [],\n      hidden: false,\n      action: 'new',\n      type_id: '',\n      brand_id: '',\n      color_id: '',\n      brand_name: '',\n      name: '',\n      href: '',\n      image: '',\n      brands: [],\n      types: [],\n      colors: [],\n      modalDelete: false,\n      delete: null,\n      arrPagination: [],\n      indexPage: 0,\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      type: localStorage.getItem('type'),\n      user: localStorage.getItem('user'),\n      isLoading: false,\n      BASE_URL: Constants.BASE_URL_CURRENT,\n      arrProductColor: [],\n      colorItem: [],\n      colorItemUpdate: [],\n      colorItemBase: [],\n      colorChooseUpdate: '',\n      collapse: false\n    };\n  }\n  async componentDidMount() {\n    const { type } = this.state;\n    if (type == '0' || type == '1') {\n      this.getData()\n    } else {\n      this.getData_Company()\n    }\n    let arr = JSON.parse(localStorage.getItem('url'));\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].url == window.location.hash) {\n        if (arr[i].isHidden == true) {\n          window.location.href = '#/'\n        }\n      }\n    }\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden: false\n      })\n    } else {\n      this.setState({\n        hidden: true\n      })\n    }\n\n    this.setState({ arrPagination: arrTotal, data: arrTotal[0] });\n  }\n\n  getData = async () => {\n    this.setState({ isLoading: true });\n\n    const res_product = await API_CONNECT(\n      Constants.LIST_PRODUCT, {}, \"\", \"GET\")\n\n    const res_brand = await API_CONNECT(\n      Constants.LIST_BRAND, {}, \"\", \"GET\")\n\n    const res_type = await API_CONNECT(\n      Constants.LIST_TYPE + \"/null\", {}, \"\", \"GET\")\n\n    const res_color = await API_CONNECT(\n      Constants.LIST_COLOR, {}, \"\", \"GET\")\n\n    let val = res_product.data;\n    let brands = res_brand.data;\n    let types = res_type.data;\n    let colors = res_color.data;\n\n    this.pagination(val);\n\n\n    this.setState({ dataApi: val, brands: brands, types: types, colors: colors, colorItem: types[0].color_id });\n\n    let active = 0\n\n    this.setState({ isLoading: false, totalActive: active });\n  }\n\n  getData_Company = async () => {\n    this.setState({ isLoading: true });\n\n    const res_product = await API_CONNECT(\n      Constants.LIST_PRODUCT_COMPANY + JSON.parse(this.state.user).company_id, {}, this.state.token, \"GET\")\n\n    const res_brand = await API_CONNECT(\n      Constants.LIST_BRAND_COMPANY + JSON.parse(this.state.user).company_id, {}, \"\", \"GET\")\n\n    const res_type = await API_CONNECT(\n      Constants.LIST_TYPE_COMPANY + JSON.parse(this.state.user).company_id + \"/null\", {}, \"\", \"GET\")\n\n    const res_color = await API_CONNECT(\n      Constants.LIST_COLOR_COMPANY + JSON.parse(this.state.user).company_id, {}, \"\", \"GET\")\n\n    let val = res_product.data;\n\n    let brands = res_brand.data;\n    let types = res_type.data;\n    let colors = res_color.data;\n\n    this.pagination(val);\n    this.setState({ dataApi: val, brands: brands, types: types, colors: colors, colorItem: types[0].color_id });\n\n    this.setState({ isLoading: false });\n  }\n\n  searchKey(key) {\n    this.setState({ key: key })\n\n    if (key != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if (val.name.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n          d.push(val)\n        }\n      })\n      let active = 0\n\n      this.setState({ data: d, totalActive: active })\n    } else {\n      let active = 0\n\n      this.state.dataApi.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: this.state.dataApi, totalActive: active })\n    }\n  }\n\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n\n  onChangeImage(e) {\n    let files = e.target.files;\n    let reader = new FileReader();\n    reader.readAsDataURL(files[0])\n    reader.onload = (e) => {\n      this.setState({ image: e.target.result })\n    }\n  }\n\n  async toggleModal(key) {\n\n    if (key == 'new') {\n      this.setState({\n        modalCom: !this.state.modalCom,\n        action: key,\n        name: \"\",\n        image: \"\",\n        href: \"\",\n        type_id: this.state.types.length == 0 ? '' : this.state.types[0].type_id,\n        brand_id: this.state.brands.length == 0 ? '' : this.state.brands[0]._id,\n        arrProductColor: [],\n        collapse: false\n      })\n    }\n  }\n\n  onChangeImage_ADD(e, index) {\n    const { arrProductColor } = this.state;\n    let files = e.target.files;\n    let reader = new FileReader();\n    reader.readAsDataURL(files[0])\n    reader.onload = (e) => {\n      arrProductColor[Number(index)].image = e.target.result;\n      this.setState({ arrProductColor: arrProductColor })\n    }\n  }\n\n  async addProduct() {\n    const { name, href, type_id, brand_id, arrProductColor } = this.state\n\n    if (name == null || name == '' ||\n      href == null || href == '' ||\n      type_id == null || type_id == '' ||\n      brand_id == null || brand_id == '') {\n      alert(\"Please fill in all the requirements\");\n      return\n    }\n\n    if (arrProductColor.length == 0) {\n      alert(\"Chưa thêm bất kì sản phẩm nào, thêm sản phẩm thất bại !!!\");\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      for (let i = 0; i < arrProductColor.length; i++) {\n        if (arrProductColor[i].color_id == \"\") {\n          alert(\"Sản phẩm thứ \" + (i + 1) + \" chưa được chọn màu\");\n          this.setState({ modalCom: !this.state.modalCom })\n          return;\n        }\n      }\n\n      const body = {\n        type_id: type_id,\n        brand_id: brand_id,\n        name: name,\n        href: href,\n        dataProductColor: arrProductColor,\n        company_id: this.state.type == '0' || this.state.type == '1' ? null : JSON.parse(this.state.user).company_id\n      }\n\n      this.setState({ isLoading: true });\n      const res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.ADD_PRODUCT,\n        method: 'POST',\n        data: body\n      });\n\n      if (res.status == 200) {\n        if (this.state.type == '0' || this.state.type == '1') {\n          this.getData()\n        } else {\n          this.getData_Company()\n        }\n        this.setState({ modalCom: !this.state.modalCom })\n      } else {\n        alert(\"Thêm sản phẩm thất bại\");\n        this.setState({ isLoading: false });\n      }\n    }\n  }\n\n  async openUpdate(item) {\n    this.setState({\n      modalCom: !this.state.modalCom,\n      action: \"update\",\n      name: item.name,\n      image: item.image,\n      href: item.href,\n      type_id: item.type_id.type_id,\n      brand_id: item.brand_id._id,\n      color_id: item.color_id == null ? '' : item.color_id,\n      brand_name: item.brand_id.name,\n      id: item['_id'],\n      arrProductColor: [],\n      colorItemUpdate: item.type_id.color_id,\n      colorItemBase: item.type_id.color_id,\n      collapse: false\n    })\n  }\n\n  async updateProducts() {\n    const { name, image, href, type_id, brand_id, color_id } = this.state\n\n\n\n    if (name == null || name == '' ||\n      href == null || href == '' ||\n      type_id == null || type_id == '' ||\n      brand_id == null || brand_id == '') {\n      alert(\"Please fill in all the requirements\");\n      return\n    }\n\n    const body = {\n      type_id: type_id,\n      brand_id: brand_id,\n      name: name,\n      href: href,\n      image: image,\n      color_id: color_id,\n      id: this.state.id\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.UPDATE_PRODUCT,\n      method: 'POST',\n      data: body\n    });\n\n    if (res.status == 200) {\n      if (this.state.type == '0' || this.state.type == '1') {\n        this.getData()\n      } else {\n        this.getData_Company()\n      };\n      console.log(this.state.id)\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(\"Cập nhật thất bại\");\n      this.setState({ isLoading: false });\n    }\n  }\n\n  openDelete = (item) => {\n    this.setState({\n      modalDelete: !this.state.modalDelete,\n      id: item._id\n    })\n  }\n\n  async delete() {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.DELETE_PRODUCT,\n      method: 'POST',\n      data: {\n        \"id\": this.state.id\n      }\n    });\n\n    if (res.status == 200) {\n      if (this.state.type == '0' || this.state.type == '1') {\n        this.getData()\n      } else {\n        this.getData_Company()\n      };\n      this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n    } else {\n      alert(\"Xóa sản phẩm thất bại\");\n      this.setState({ isLoading: false });\n    }\n\n  }\n\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  getBadge(status) {\n    switch (status) {\n      case 'Actived': return 'success'\n      case 'Inactive': return 'secondary'\n      case 'Locked': return 'warning'\n      case 'Deactived': return 'danger'\n      default: return 'primary'\n    }\n  }\n\n  searchKey() {\n    const { indexPage, key } = this.state;\n    // this.setState({ key: key })\n    console.log(this.state.dataApi)\n    if (key != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if (val.name.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n          val.brand_id.name.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n          val.type_id.name.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n      let active = 0\n\n      d.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: d, totalActive: active })\n    } else {\n      let active = 0\n\n      this.state.dataApi.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: this.state.arrPagination[indexPage], totalActive: active })\n    }\n  }\n\n  actionSearch(e, name_action) {\n    this.setState({\n      [name_action]: e.target.value\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  onChooseColor(color_id, index, hex) {\n    const { arrProductColor } = this.state;\n    arrProductColor[Number(index)].color_id = color_id;\n    arrProductColor[Number(index)].collapse = false;\n    arrProductColor[Number(index)].hex = hex;\n    this.setState({ arrProductColor: arrProductColor, keyColor: '' })\n  }\n\n  resetSearch() {\n    this.setState({\n      key: ''\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  searchColor() {\n    const { keyColor, colorItem, colors } = this.state;\n\n    if (keyColor != '') {\n      let d = []\n      colorItem.map(val => {\n        if (val.hex.toLocaleUpperCase().includes(keyColor.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n\n      this.setState({ colorItem: d })\n    } else {\n      this.setState({ colorItem: colors })\n    }\n  }\n\n  actionSearchColor(e, name_action) {\n    this.setState({\n      [name_action]: e\n    }, () => {\n      this.searchColor();\n    });\n  }\n\n  searchColorUpdate() {\n    const { keyColor, colorItemBase, colorItemUpdate } = this.state;\n\n    if (keyColor != '') {\n      let d = []\n      colorItemUpdate.map(val => {\n        if (val.hex.toLocaleUpperCase().includes(keyColor.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n\n      this.setState({ colorItemUpdate: d })\n    } else {\n      this.setState({ colorItemUpdate: colorItemBase })\n    }\n  }\n\n  actionSearchColorUpdate(e, name_action) {\n    this.setState({\n      [name_action]: e\n    }, () => {\n      this.searchColorUpdate();\n    });\n  }\n\n  renderFormAdd() {\n    const { brands, types, brand_name, arrProductColor, colorItem, keyColor, type_id } = this.state;\n    return (\n      <div>\n        <ModalHeader>Thêm mới</ModalHeader>\n        <ModalBody>\n          <TextFieldGroup\n            field=\"name\"\n            label=\"Tên sản phẩm\"\n            value={this.state.name}\n            placeholder={\"Tên sản phẩm\"}\n            onChange={e => this.onChange(\"name\", e.target.value)}\n          />\n\n          <TextFieldGroup\n            field=\"href\"\n            label=\"Đường dẫn\"\n            value={this.state.href}\n            placeholder={\"Đường dẫn\"}\n            onChange={e => this.onChange(\"href\", e.target.value)}\n          />\n\n          <div style={{ width: \"100%\" }}>\n            <CLabel>Thương hiệu:</CLabel>\n            <CSelect onChange={async e => { this.setState({ brand_id: e.target.value }) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n              {\n                brands.map((item, i) => {\n                  if (item.name == brand_name) {\n                    return (\n                      <option selected key={i} value={item._id}>{item.name}</option>\n                    );\n                  } else {\n                    return (\n                      <option key={i} value={item._id}>{item.name}</option>\n                    );\n                  }\n                })\n              }\n            </CSelect>\n          </div>\n\n          <CLabel>Danh mục:</CLabel>\n          <div style={{ width: \"100%\" }}>\n            <CSelect onChange={async e => {\n\n              var song = lodash.find(types, { _id: e.target.value });\n\n              this.setState({ type_id: e.target.value, colorItem: song.color_id });\n            }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n              {\n                types.map((item, i) => {\n                  if (item.type_id == type_id) {\n                    return (\n                      <option selected key={i} value={item._id}>{item.name}</option>\n                    );\n                  } else {\n                    return (\n                      <option key={i} value={item._id}>{item.name}</option>\n                    );\n                  }\n                })\n              }\n            </CSelect>\n          </div>\n\n\n          <div className={\"mt-2\"}>\n            <CLabel>Màu và hình ảnh cho sản phẩm</CLabel>\n            <CCard>\n              <CRow>\n                {\n                  arrProductColor.map((item, i) => {\n                    var id = i;\n                    return (\n                      <CCol xs=\"6\" sm=\"6\" lg=\"6\">\n                        <CCardBody style={{ border: '1px solid black', borderRadius: 20, margin: 2 }}>\n                          <CButton className=\"mb-2\" style={{ float: 'right' }} color=\"danger\" onClick={e => {\n                            arrProductColor.splice(i, 1);\n                            this.setState({ arrProductColor: arrProductColor })\n                          }}>X</CButton>\n                          <CRow>\n                            <CCol xs=\"8\" sm=\"8\" lg=\"8\">\n                              <CCollapse show={item.collapse}>\n                                <CListGroup>\n                                  <CListGroupItem style={{ backgroundColor: \"#000000\" }}>\n                                    <Input style={{ width: '100%' }} onChange={(e) => {\n                                      this.actionSearchColor(e.target.value, \"keyColor\");\n                                    }} name=\"keyColor\" value={keyColor} placeholder=\"Tìm kiếm\" />\n                                  </CListGroupItem>\n                                  <div style={{ height: '200px', overflowY: 'scroll' }}>\n                                    {\n                                      colorItem.map((item, i) => {\n                                        return (\n                                          <CListGroupItem style={{ cursor: 'pointer' }} key={i} onClick={() => {\n                                            this.onChooseColor(item._id, id, item.hex)\n                                          }}>\n                                            <CRow>\n                                              <CCol lg=\"5\">{item.hex}</CCol>\n                                              <CCol lg=\"7\"><div style={{ backgroundColor: item.hex, width: '100%', height: 20 }}></div></CCol>\n                                            </CRow>\n                                          </CListGroupItem>\n                                        );\n                                      })\n                                    }\n                                  </div>\n                                </CListGroup>\n                              </CCollapse>\n\n                              <CButton\n                                color=\"primary\"\n                                style={{ width: '100%' }}\n                                onClick={() => { arrProductColor[i].collapse = !item.collapse; this.setState({ arrProductColor: arrProductColor }) }}\n                                className={'mb-1'}\n                              >{\n                                  !item.collapse ? \"Chọn màu\" : \"Đóng\"\n                                }</CButton>\n                            </CCol>\n                            <CCol xs=\"4\" sm=\"4\" lg=\"4\">\n                              {arrProductColor[i].hex}\n                              <div style={{ backgroundColor: arrProductColor[i].hex, width: '100%', height: 14, borderRadius: 20 }}></div>\n                            </CCol>\n                          </CRow>\n\n                          <div className={\"m-2\"}>\n                            <CLabel>Ảnh sản phẩm</CLabel>\n                            <CInputFile name=\"image\" onChange={e => { this.onChangeImage_ADD(e, i) }} onClick={(e) => { e.target.value = null }} id=\"file-input\" name=\"file-input\" />\n                          </div>\n\n                          <center>\n                            <img width=\"150\" height=\"180\" src={arrProductColor[i].image} style={{ marginBottom: 20 }} />\n                          </center>\n                        </CCardBody>\n                      </CCol>\n                    );\n                  })\n                }\n              </CRow>\n              <CCardFooter>\n                <CButton color=\"primary\" style={{ float: 'right', width: '100%' }} onClick={e => {\n                  arrProductColor.push({ color_id: \"\", image: \"\", collapse: false, hex: '' })\n                  this.setState({ arrProductColor: arrProductColor })\n                }}>Thêm một màu và hình ảnh nữa</CButton>\n              </CCardFooter>\n            </CCard>\n          </div>\n\n\n        </ModalBody>\n        <ModalFooter>\n          <CButton color=\"primary\" onClick={e => {\n            this.addProduct()\n          }} disabled={this.state.isLoading}>Lưu</CButton>{' '}\n          <CButton color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Đóng</CButton>\n        </ModalFooter>\n      </div>\n    )\n  }\n\n  render() {\n    const { data, arrPagination, brands, types, brand_name, key, collapse, keyColor, colorItemUpdate, colorChooseUpdate } = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Danh sách sản phẩm\n                  <div style={styles.tags}>\n                    <CRow>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CRow>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <div>\n                              <Input style={styles.searchInput} onChange={(e) => {\n                                this.actionSearch(e, \"key\");\n                              }} name=\"key\" value={key} placeholder=\"Từ khóa\" />\n                            </div>\n                          </CCol>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <CButton color=\"primary\" style={{ width: '100%', marginTop: 5 }} size=\"sm\" onClick={e => { this.resetSearch() }}>Làm mới tìm kiếm</CButton>\n                          </CCol>\n                        </CRow>\n                      </CCol>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CButton outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={async e => await this.toggleModal(\"new\")}>Thêm</CButton>\n                      </CCol>\n                    </CRow>\n                  </div>\n                </CardHeader>\n                <CardBody>\n\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        <th className=\"text-center\">Danh mục cấp 2</th>\n                        <th className=\"text-center\">Thương hiệu</th>\n                        <th className=\"text-center\">Tên sản phẩm</th>\n                        <th className=\"text-center\">Màu</th>\n                        <th className=\"text-center\">Đường dẫn</th>\n                        <th className=\"text-center\">Ảnh</th>\n                        <th className=\"text-center\">#</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <td colSpan=\"10\" hidden={this.state.hidden} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                <td className=\"text-center\">{item.type_id == null ? \"\" : item.type_id.name}</td>\n                                <td className=\"text-center\">{item.brand_id == null ? \"\" : item.brand_id.name}</td>\n                                <td className=\"text-center\">{item.name}</td>\n                                <td className=\"text-center\">\n                                  {item.color_id == null ? \"\" : item.color_id.hex}\n                                  <div style={{ backgroundColor: item.color_id == null ? \"\" : item.color_id.hex, width: '100%', height: '30px' }}> </div>\n                                </td>\n                                <td className=\"text-center\">\n                                  <a\n                                    href={item.href}\n                                    target=\"_blank\"\n                                  >{`Open web`}</a>\n                                </td>\n                                <td className=\"text-center\" style={{ width: '10%' }}>\n                                  <img src={item.image || this.state.BASE_URL + \"/images/calendar.png\"} width={\"60px\"} height={\"60px\"} />\n                                </td>\n                                <td className=\"text-center\">\n                                  <CButton style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >\n                                    <CIcon name=\"cilPencil\" />\n                                  </CButton>\n                                  <CButton outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>\n                                    <CIcon name=\"cilTrash\" />\n                                  </CButton>\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n                </CardBody>\n              </Card>\n              <div style={{ float: 'right' }}>\n                <Pagination count={arrPagination.length} color=\"primary\" onChange={(e, v) => {\n                  this.setState({ data: arrPagination[v - 1], indexPage: v - 1 })\n                }} />\n              </div>\n            </Col>\n          </Row>\n\n          <Modal size=\"xl\" isOpen={this.state.modalCom} className={this.props.className}>\n            {\n              this.state.action == \"new\" ? this.renderFormAdd() :\n                <div>\n                  <ModalHeader>Cập nhật</ModalHeader>\n                  <ModalBody>\n                    <TextFieldGroup\n                      field=\"name\"\n                      label=\"Tên sản phẩm\"\n                      value={this.state.name}\n                      placeholder={\"Tên sản phẩm\"}\n                      // error={errors.title}\n                      onChange={e => this.onChange(\"name\", e.target.value)}\n                    // rows=\"5\"\n                    />\n\n                    <TextFieldGroup\n                      field=\"href\"\n                      label=\"Đường dẫn\"\n                      value={this.state.href}\n                      placeholder={\"Đường dẫn\"}\n                      // error={errors.title}\n                      onChange={e => this.onChange(\"href\", e.target.value)}\n                    // rows=\"5\"\n                    />\n\n                    <TextFieldGroup\n                      field=\"image\"\n                      label=\"Ảnh thương hiệu\"\n                      type={\"file\"}\n                      // error={errors.title}\n                      onChange={e => { this.onChangeImage(e) }}\n                      onClick={(e) => { e.target.value = null }}\n                    // rows=\"5\"\n                    />\n                    {\n                      this.state.image == \"\" ? \"\" :\n                        <img width=\"250\" height=\"300\" src={this.state.image} style={{ marginBottom: 20 }} />\n                    }\n\n                    <div style={{ width: \"100%\" }}>\n                      <CLabel>Thương hiệu:</CLabel>\n                      <CSelect onChange={async e => { this.setState({ brand_id: e.target.value }) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                        {\n                          brands.map((item, i) => {\n                            if (item.name == brand_name) {\n                              return (\n                                <option selected key={i} value={item._id}>{item.name}</option>\n                              );\n                            } else {\n                              return (\n                                <option key={i} value={item._id}>{item.name}</option>\n                              );\n                            }\n                          })\n                        }\n                      </CSelect>\n                    </div>\n\n                    <CLabel>Danh mục:</CLabel>\n                    <div style={{ width: \"100%\" }}>\n                      <CSelect onChange={async e => {\n                        this.setState({ type_id: e.target.value })\n                      }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                        {\n                          types.map((item, i) => {\n                            if (item.type_id == this.state.type_id) {\n                              return (\n                                <option selected key={i} value={item._id}>{item.name}</option>\n                              );\n                            } else {\n                              return (\n                                <option key={i} value={item._id}>{item.name}</option>\n                              );\n                            }\n                          })\n                        }\n                      </CSelect>\n                    </div>\n                    <div className=\"mt-2\">\n                      <div className=\"text-center m-5\">\n                        <CLabel><strong>Màu đã chọn: </strong></CLabel> {' '}\n                        {colorChooseUpdate}\n                        <div style={{ backgroundColor: colorChooseUpdate, width: '100%', height: '30px' }}> </div>\n                      </div>\n                      <CCollapse show={collapse}>\n                        <CListGroup>\n                          <CListGroupItem style={{ backgroundColor: \"#000000\" }}>\n                            <Input style={{ width: '100%' }} onChange={(e) => {\n                              this.actionSearchColorUpdate(e.target.value, \"keyColor\");\n                            }} name=\"keyColor\" value={keyColor} placeholder=\"Tìm kiếm\" />\n                          </CListGroupItem>\n                          <div style={{ height: '200px', overflowY: 'scroll' }}>\n                            {\n                              colorItemUpdate.map((item, i) => {\n                                return (\n                                  <CListGroupItem style={{ cursor: 'pointer' }} key={i} onClick={() => {\n                                    this.setState({ color_id: item._id, colorChooseUpdate: item.hex })\n                                  }}>\n                                    <CRow>\n                                      <CCol lg=\"2\">{item.hex}</CCol>\n                                      <CCol lg=\"10\"><div style={{ backgroundColor: item.hex, width: '100%', height: 20 }}></div></CCol>\n                                    </CRow>\n                                  </CListGroupItem>\n                                );\n                              })\n                            }\n                          </div>\n                        </CListGroup>\n                      </CCollapse>\n                    </div>\n                    <CButton\n                      color=\"primary\"\n                      style={{ width: '100%' }}\n                      onClick={() => { this.setState({ collapse: !collapse }) }}\n                      className={'mb-1'}\n                    >{\n                        !collapse ? \"Chọn màu\" : \"Đóng\"\n                      }</CButton>\n\n                  </ModalBody>\n                  <ModalFooter>\n                    <CButton color=\"primary\" onClick={e => this.updateProducts()} disabled={this.state.isLoading}>Lưu</CButton>{' '}\n                    <CButton color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Đóng</CButton>\n                  </ModalFooter>\n                </div>\n            }\n          </Modal>\n\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Delete`}</ModalHeader>\n            <ModalBody>\n              <label htmlFor=\"tag\">{`Xác nhận xóa !!!`}</label>\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Delete</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n        </div>\n      );\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst styles = {\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: 300\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: \"right\",\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh25: {\n    width: \"25%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  w5: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    margin: '5px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\"\n  },\n  searchInput: {\n    width: \"190px\",\n    display: 'inline-block',\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n}\n\nexport default Product;\n","import constants from './../contants/contants'\n\nconst axios = require('axios').default;\naxios.defaults.baseURL = constants.BASE_URL;\n\nconst connect = async function (url = \"\", data = {}, token = \"\", type) {\n  let options = {};\n  // console.log(\"Token: \", token)\n  if (token) {\n    options = {\n      headers: token\n    };\n  }\n  try {\n    switch (type) {\n      case \"GET\":\n        let get = await axios.get(url, data, options);\n        if (get.is_success == false) {\n          return null;\n        }\n        return get.data;\n      case \"POST\":\n        let post = await axios.post(url, data, options);\n        if (post.is_success == false) {\n          return null;\n        }\n        return post.data;\n      case \"PUT\":\n        let put = await axios.put(url, data, options);\n        if (put.is_success == false) {\n          return null;\n        }\n        return put.data;\n      case \"DELETE\":\n        let del = await axios.delete(url, data, options);\n        if (del.is_success == false) {\n          return null;\n        }\n        return del.data;\n    }\n\n  } catch (reason) {\n    return reason;\n  }\n\n\n}\n\nexport default connect;\n"],"sourceRoot":""}
=======
{"version":3,"sources":["views/base/tables/MakeUp/Product.js","functions/callAPI.js"],"names":["headers","Headers","auth","localStorage","getItem","append","Product","props","getData","a","setState","isLoading","API_CONNECT","Constants","LIST_PRODUCT","res_product","LIST_BRAND","res_brand","LIST_TYPE","res_type","LIST_COLOR","res_color","val","data","brands","types","colors","pagination","dataApi","colorItem","color_id","totalActive","getData_Company","LIST_PRODUCT_COMPANY","JSON","parse","state","user","company_id","token","LIST_BRAND_COMPANY","LIST_TYPE_COMPANY","LIST_COLOR_COMPANY","openDelete","item","modalDelete","id","_id","key","keyColor","activePage","page","itemsCount","limit","modalCom","viewingUser","communities","updated","hidden","action","type_id","brand_id","brand_name","name","href","image","delete","arrPagination","indexPage","Authorization","type","BASE_URL","BASE_URL_CURRENT","arrProductColor","colorItemUpdate","colorItemBase","colorChooseUpdate","collapse","this","arr","i","length","url","window","location","hash","isHidden","j","temparray","arrTotal","slice","push","console","log","d","map","toLocaleUpperCase","includes","active","Status","e","files","target","reader","FileReader","readAsDataURL","onload","result","index","Number","alert","body","dataProductColor","axios","baseURL","ADD_PRODUCT","method","status","UPDATE_PRODUCT","DELETE_PRODUCT","value","name_action","searchKey","hex","searchColor","searchColorUpdate","field","label","placeholder","onChange","style","width","custom","size","selected","song","lodash","find","className","xs","sm","lg","border","borderRadius","margin","float","color","onClick","splice","show","backgroundColor","actionSearchColor","height","overflowY","cursor","onChooseColor","onChangeImage_ADD","src","marginBottom","addProduct","disabled","toggleModal","css","override","loading","speedMultiplier","styles","tags","searchInput","actionSearch","marginTop","resetSearch","outline","floatRight","ble","colSpan","undefined","mgl5","openUpdate","count","v","isOpen","renderFormAdd","onChangeImage","actionSearchColorUpdate","updateProducts","toggle","htmlFor","Component","marginRight","flexLabel","flexOption","textDecoration","spinner","center","textAlign","tbody","wh25","w5","wa10","row","success","danger","display","userActive","userPending","nagemonNameCol","require","default","defaults","constants","connect","options","get","is_success","post","put","del"],"mappings":"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","file":"static/js/42.29e23d0a.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport CIcon from '@coreui/icons-react'\nimport { cifAU, freeSet } from '@coreui/icons';\n\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Input,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n} from 'reactstrap';\n\nimport {\n  CLabel,\n  CSelect,\n  CButton,\n  CRow,\n  CCol,\n  CCardFooter,\n  CCard,\n  CCardBody,\n  CCollapse,\n  CListGroup,\n  CListGroupItem,\n  CInputFile\n} from '@coreui/react'\n\nimport Pagination from '@material-ui/lab/Pagination';\nimport 'moment-timezone';\nimport Constants from \"../../../../contants/contants\";\nimport TextFieldGroup from \"../../../Common/TextFieldGroup\";\nimport axios from 'axios'\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport API_CONNECT from \"../../../../functions/callAPI\";\nimport lodash from \"lodash\";\nimport { object } from 'prop-types';\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\n\nclass Product extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      keyColor: '',\n      activePage: 1,\n      page: 1,\n      itemsCount: 0,\n      limit: 20,\n      totalActive: 0,\n      modalCom: false,\n      viewingUser: {},\n      communities: [],\n      updated: '',\n      dataApi: [],\n      hidden: false,\n      action: 'new',\n      type_id: '',\n      brand_id: '',\n      color_id: '',\n      brand_name: '',\n      name: '',\n      href: '',\n      image: '',\n      brands: [],\n      types: [],\n      colors: [],\n      modalDelete: false,\n      delete: null,\n      arrPagination: [],\n      indexPage: 0,\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      type: localStorage.getItem('type'),\n      user: localStorage.getItem('user'),\n      isLoading: false,\n      BASE_URL: Constants.BASE_URL_CURRENT,\n      arrProductColor: [],\n      colorItem: [],\n      colorItemUpdate: [],\n      colorItemBase: [],\n      colorChooseUpdate: '',\n      collapse: false\n    };\n  }\n  async componentDidMount() {\n    const { type } = this.state;\n    if (type == '0' || type == '1') {\n      this.getData()\n    } else {\n      this.getData_Company()\n    }\n    let arr = JSON.parse(localStorage.getItem('url'));\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].url == window.location.hash) {\n        if (arr[i].isHidden == true) {\n          window.location.href = '#/'\n        }\n      }\n    }\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden: false\n      })\n    } else {\n      this.setState({\n        hidden: true\n      })\n    }\n\n    this.setState({ arrPagination: arrTotal, data: arrTotal[0] });\n  }\n\n  getData = async () => {\n    this.setState({ isLoading: true });\n\n    const res_product = await API_CONNECT(\n      Constants.LIST_PRODUCT, {}, \"\", \"GET\")\n\n    const res_brand = await API_CONNECT(\n      Constants.LIST_BRAND, {}, \"\", \"GET\")\n\n    const res_type = await API_CONNECT(\n      Constants.LIST_TYPE + \"/null\", {}, \"\", \"GET\")\n\n    const res_color = await API_CONNECT(\n      Constants.LIST_COLOR, {}, \"\", \"GET\")\n\n    let val = res_product.data;\n    let brands = res_brand.data;\n    let types = res_type.data;\n    let colors = res_color.data;\n\n    this.pagination(val);\n\n\n    this.setState({ dataApi: val, brands: brands, types: types, colors: colors, colorItem: types[0].color_id });\n\n    let active = 0\n\n    this.setState({ isLoading: false, totalActive: active });\n  }\n\n  getData_Company = async () => {\n    this.setState({ isLoading: true });\n\n    const res_product = await API_CONNECT(\n      Constants.LIST_PRODUCT_COMPANY + JSON.parse(this.state.user).company_id, {}, this.state.token, \"GET\")\n\n    const res_brand = await API_CONNECT(\n      Constants.LIST_BRAND_COMPANY + JSON.parse(this.state.user).company_id, {}, \"\", \"GET\")\n\n    const res_type = await API_CONNECT(\n      Constants.LIST_TYPE_COMPANY + JSON.parse(this.state.user).company_id + \"/null\", {}, \"\", \"GET\")\n\n    const res_color = await API_CONNECT(\n      Constants.LIST_COLOR_COMPANY + JSON.parse(this.state.user).company_id, {}, \"\", \"GET\")\n\n    let val = res_product.data;\n\n    let brands = res_brand.data;\n    let types = res_type.data;\n    let colors = res_color.data;\n\n    this.pagination(val);\n    this.setState({ dataApi: val, brands: brands, types: types, colors: colors, colorItem: types[0].color_id });\n\n    this.setState({ isLoading: false });\n  }\n\n  searchKey(key) {\n    this.setState({ key: key })\n\n    if (key != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if (val.name.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n          d.push(val)\n        }\n      })\n      let active = 0\n\n      this.setState({ data: d, totalActive: active })\n    } else {\n      let active = 0\n\n      this.state.dataApi.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: this.state.dataApi, totalActive: active })\n    }\n  }\n\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n\n  onChangeImage(e) {\n    let files = e.target.files;\n    let reader = new FileReader();\n    reader.readAsDataURL(files[0])\n    reader.onload = (e) => {\n      this.setState({ image: e.target.result })\n    }\n  }\n\n  async toggleModal(key) {\n\n    if (key == 'new') {\n      this.setState({\n        modalCom: !this.state.modalCom,\n        action: key,\n        name: \"\",\n        image: \"\",\n        href: \"\",\n        type_id: this.state.types.length == 0 ? '' : this.state.types[0].type_id,\n        brand_id: this.state.brands.length == 0 ? '' : this.state.brands[0]._id,\n        arrProductColor: [],\n        collapse: false\n      })\n    }\n  }\n\n  onChangeImage_ADD(e, index) {\n    const { arrProductColor } = this.state;\n    let files = e.target.files;\n    let reader = new FileReader();\n    reader.readAsDataURL(files[0])\n    reader.onload = (e) => {\n      arrProductColor[Number(index)].image = e.target.result;\n      this.setState({ arrProductColor: arrProductColor })\n    }\n  }\n\n  async addProduct() {\n    const { name, href, type_id, brand_id, arrProductColor } = this.state\n\n    if (name == null || name == '' ||\n      href == null || href == '' ||\n      type_id == null || type_id == '' ||\n      brand_id == null || brand_id == '') {\n      alert(\"Please fill in all the requirements\");\n      return\n    }\n\n    if (arrProductColor.length == 0) {\n      alert(\"Chưa thêm bất kì sản phẩm nào, thêm sản phẩm thất bại !!!\");\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      for (let i = 0; i < arrProductColor.length; i++) {\n        if (arrProductColor[i].color_id == \"\") {\n          alert(\"Sản phẩm thứ \" + (i + 1) + \" chưa được chọn màu\");\n          this.setState({ modalCom: !this.state.modalCom })\n          return;\n        }\n      }\n\n      const body = {\n        type_id: type_id,\n        brand_id: brand_id,\n        name: name,\n        href: href,\n        dataProductColor: arrProductColor,\n        company_id: this.state.type == '0' || this.state.type == '1' ? null : JSON.parse(this.state.user).company_id\n      }\n\n      this.setState({ isLoading: true });\n      const res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.ADD_PRODUCT,\n        method: 'POST',\n        data: body\n      });\n\n      if (res.status == 200) {\n        if (this.state.type == '0' || this.state.type == '1') {\n          this.getData()\n        } else {\n          this.getData_Company()\n        }\n        this.setState({ modalCom: !this.state.modalCom })\n      } else {\n        alert(\"Thêm sản phẩm thất bại\");\n        this.setState({ isLoading: false });\n      }\n    }\n  }\n\n  async openUpdate(item) {\n    this.setState({\n      modalCom: !this.state.modalCom,\n      action: \"update\",\n      name: item.name,\n      image: item.image,\n      href: item.href,\n      type_id: item.type_id.type_id,\n      brand_id: item.brand_id._id,\n      color_id: item.color_id == null ? '' : item.color_id,\n      brand_name: item.brand_id.name,\n      id: item['_id'],\n      arrProductColor: [],\n      colorItemUpdate: item.type_id.color_id,\n      colorItemBase: item.type_id.color_id,\n      collapse: false\n    })\n  }\n\n  async updateProducts() {\n    const { name, image, href, type_id, brand_id, color_id } = this.state\n\n\n\n    if (name == null || name == '' ||\n      href == null || href == '' ||\n      type_id == null || type_id == '' ||\n      brand_id == null || brand_id == '') {\n      alert(\"Please fill in all the requirements\");\n      return\n    }\n\n    const body = {\n      type_id: type_id,\n      brand_id: brand_id,\n      name: name,\n      href: href,\n      image: image,\n      color_id: color_id,\n      id: this.state.id\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.UPDATE_PRODUCT,\n      method: 'POST',\n      data: body\n    });\n\n    if (res.status == 200) {\n      if (this.state.type == '0' || this.state.type == '1') {\n        this.getData()\n      } else {\n        this.getData_Company()\n      };\n      console.log(this.state.id)\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(\"Cập nhật thất bại\");\n      this.setState({ isLoading: false });\n    }\n  }\n\n  openDelete = (item) => {\n    this.setState({\n      modalDelete: !this.state.modalDelete,\n      id: item._id\n    })\n  }\n\n  async delete() {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.DELETE_PRODUCT,\n      method: 'POST',\n      data: {\n        \"id\": this.state.id\n      }\n    });\n\n    if (res.status == 200) {\n      if (this.state.type == '0' || this.state.type == '1') {\n        this.getData()\n      } else {\n        this.getData_Company()\n      };\n      this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n    } else {\n      alert(\"Xóa sản phẩm thất bại\");\n      this.setState({ isLoading: false });\n    }\n\n  }\n\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  getBadge(status) {\n    switch (status) {\n      case 'Actived': return 'success'\n      case 'Inactive': return 'secondary'\n      case 'Locked': return 'warning'\n      case 'Deactived': return 'danger'\n      default: return 'primary'\n    }\n  }\n\n  searchKey() {\n    const { indexPage, key } = this.state;\n    // this.setState({ key: key })\n    console.log(this.state.dataApi)\n    if (key != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if (val.name.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n          val.brand_id.name.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n          val.type_id.name.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n      let active = 0\n\n      d.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: d, totalActive: active })\n    } else {\n      let active = 0\n\n      this.state.dataApi.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: this.state.arrPagination[indexPage], totalActive: active })\n    }\n  }\n\n  actionSearch(e, name_action) {\n    this.setState({\n      [name_action]: e.target.value\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  onChooseColor(color_id, index, hex) {\n    const { arrProductColor } = this.state;\n    arrProductColor[Number(index)].color_id = color_id;\n    arrProductColor[Number(index)].collapse = false;\n    arrProductColor[Number(index)].hex = hex;\n    this.setState({ arrProductColor: arrProductColor, keyColor: '' })\n  }\n\n  resetSearch() {\n    this.setState({\n      key: ''\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  searchColor() {\n    const { keyColor, colorItem, colors } = this.state;\n\n    if (keyColor != '') {\n      let d = []\n      colorItem.map(val => {\n        if (val.hex.toLocaleUpperCase().includes(keyColor.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n\n      this.setState({ colorItem: d })\n    } else {\n      this.setState({ colorItem: colors })\n    }\n  }\n\n  actionSearchColor(e, name_action) {\n    this.setState({\n      [name_action]: e\n    }, () => {\n      this.searchColor();\n    });\n  }\n\n  searchColorUpdate() {\n    const { keyColor, colorItemBase, colorItemUpdate } = this.state;\n\n    if (keyColor != '') {\n      let d = []\n      colorItemUpdate.map(val => {\n        if (val.hex.toLocaleUpperCase().includes(keyColor.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n\n      this.setState({ colorItemUpdate: d })\n    } else {\n      this.setState({ colorItemUpdate: colorItemBase })\n    }\n  }\n\n  actionSearchColorUpdate(e, name_action) {\n    this.setState({\n      [name_action]: e\n    }, () => {\n      this.searchColorUpdate();\n    });\n  }\n\n  renderFormAdd() {\n    const { brands, types, brand_name, arrProductColor, colorItem, keyColor, type_id } = this.state;\n    return (\n      <div>\n        <ModalHeader>Thêm mới</ModalHeader>\n        <ModalBody>\n          <TextFieldGroup\n            field=\"name\"\n            label=\"Tên sản phẩm\"\n            value={this.state.name}\n            placeholder={\"Tên sản phẩm\"}\n            onChange={e => this.onChange(\"name\", e.target.value)}\n          />\n\n          <TextFieldGroup\n            field=\"href\"\n            label=\"Đường dẫn\"\n            value={this.state.href}\n            placeholder={\"Đường dẫn\"}\n            onChange={e => this.onChange(\"href\", e.target.value)}\n          />\n\n          <div style={{ width: \"100%\" }}>\n            <CLabel>Thương hiệu:</CLabel>\n            <CSelect onChange={async e => { this.setState({ brand_id: e.target.value }) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n              {\n                brands.map((item, i) => {\n                  if (item.name == brand_name) {\n                    return (\n                      <option selected key={i} value={item._id}>{item.name}</option>\n                    );\n                  } else {\n                    return (\n                      <option key={i} value={item._id}>{item.name}</option>\n                    );\n                  }\n                })\n              }\n            </CSelect>\n          </div>\n\n          <CLabel>Danh mục:</CLabel>\n          <div style={{ width: \"100%\" }}>\n            <CSelect onChange={async e => {\n\n              var song = lodash.find(types, { _id: e.target.value });\n\n              this.setState({ type_id: e.target.value, colorItem: song.color_id });\n            }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n              {\n                types.map((item, i) => {\n                  if (item.type_id == type_id) {\n                    return (\n                      <option selected key={i} value={item._id}>{item.name}</option>\n                    );\n                  } else {\n                    return (\n                      <option key={i} value={item._id}>{item.name}</option>\n                    );\n                  }\n                })\n              }\n            </CSelect>\n          </div>\n\n\n          <div className={\"mt-2\"}>\n            <CLabel>Màu và hình ảnh cho sản phẩm</CLabel>\n            <CCard>\n              <CRow>\n                {\n                  arrProductColor.map((item, i) => {\n                    var id = i;\n                    return (\n                      <CCol xs=\"6\" sm=\"6\" lg=\"6\">\n                        <CCardBody style={{ border: '1px solid black', borderRadius: 20, margin: 2 }}>\n                          <CButton className=\"mb-2\" style={{ float: 'right' }} color=\"danger\" onClick={e => {\n                            arrProductColor.splice(i, 1);\n                            this.setState({ arrProductColor: arrProductColor })\n                          }}>X</CButton>\n                          <CRow>\n                            <CCol xs=\"8\" sm=\"8\" lg=\"8\">\n                              <CCollapse show={item.collapse}>\n                                <CListGroup>\n                                  <CListGroupItem style={{ backgroundColor: \"#000000\" }}>\n                                    <Input style={{ width: '100%' }} onChange={(e) => {\n                                      this.actionSearchColor(e.target.value, \"keyColor\");\n                                    }} name=\"keyColor\" value={keyColor} placeholder=\"Tìm kiếm\" />\n                                  </CListGroupItem>\n                                  <div style={{ height: '200px', overflowY: 'scroll' }}>\n                                    {\n                                      colorItem.map((item, i) => {\n                                        return (\n                                          <CListGroupItem style={{ cursor: 'pointer' }} key={i} onClick={() => {\n                                            this.onChooseColor(item._id, id, item.hex)\n                                          }}>\n                                            <CRow>\n                                              <CCol lg=\"5\">{item.hex}</CCol>\n                                              <CCol lg=\"7\"><div style={{ backgroundColor: item.hex, width: '100%', height: 20 }}></div></CCol>\n                                            </CRow>\n                                          </CListGroupItem>\n                                        );\n                                      })\n                                    }\n                                  </div>\n                                </CListGroup>\n                              </CCollapse>\n\n                              <CButton\n                                color=\"primary\"\n                                style={{ width: '100%' }}\n                                onClick={() => { arrProductColor[i].collapse = !item.collapse; this.setState({ arrProductColor: arrProductColor }) }}\n                                className={'mb-1'}\n                              >{\n                                  !item.collapse ? \"Chọn màu\" : \"Đóng\"\n                                }</CButton>\n                            </CCol>\n                            <CCol xs=\"4\" sm=\"4\" lg=\"4\">\n                              {arrProductColor[i].hex}\n                              <div style={{ backgroundColor: arrProductColor[i].hex, width: '100%', height: 14, borderRadius: 20 }}></div>\n                            </CCol>\n                          </CRow>\n\n                          <div className={\"m-2\"}>\n                            <CLabel>Ảnh sản phẩm</CLabel>\n                            <CInputFile name=\"image\" onChange={e => { this.onChangeImage_ADD(e, i) }} onClick={(e) => { e.target.value = null }} id=\"file-input\" name=\"file-input\" />\n                          </div>\n\n                          <center>\n                            <img width=\"150\" height=\"180\" src={arrProductColor[i].image} style={{ marginBottom: 20 }} />\n                          </center>\n                        </CCardBody>\n                      </CCol>\n                    );\n                  })\n                }\n              </CRow>\n              <CCardFooter>\n                <CButton color=\"primary\" style={{ float: 'right', width: '100%' }} onClick={e => {\n                  arrProductColor.push({ color_id: \"\", image: \"\", collapse: false, hex: '' })\n                  this.setState({ arrProductColor: arrProductColor })\n                }}>Thêm một màu và hình ảnh nữa</CButton>\n              </CCardFooter>\n            </CCard>\n          </div>\n\n\n        </ModalBody>\n        <ModalFooter>\n          <CButton color=\"primary\" onClick={e => {\n            this.addProduct()\n          }} disabled={this.state.isLoading}>Lưu</CButton>{' '}\n          <CButton color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Cancel</CButton>\n        </ModalFooter>\n      </div>\n    )\n  }\n\n  render() {\n    const { data, arrPagination, brands, types, brand_name, key, collapse, keyColor, colorItemUpdate, colorChooseUpdate } = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Danh sách sản phẩm\n                  <div style={styles.tags}>\n                    <CRow>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CRow>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <div>\n                              <Input style={styles.searchInput} onChange={(e) => {\n                                this.actionSearch(e, \"key\");\n                              }} name=\"key\" value={key} placeholder=\"Từ khóa\" />\n                            </div>\n                          </CCol>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <CButton color=\"primary\" style={{ width: '100%', marginTop: 5 }} size=\"sm\" onClick={e => { this.resetSearch() }}>Làm mới tìm kiếm</CButton>\n                          </CCol>\n                        </CRow>\n                      </CCol>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CButton outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={async e => await this.toggleModal(\"new\")}>Thêm</CButton>\n                      </CCol>\n                    </CRow>\n                  </div>\n                </CardHeader>\n                <CardBody>\n\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        <th className=\"text-center\">Danh mục cấp 2</th>\n                        <th className=\"text-center\">Thương hiệu</th>\n                        <th className=\"text-center\">Tên sản phẩm</th>\n                        <th className=\"text-center\">Màu</th>\n                        <th className=\"text-center\">Đường dẫn</th>\n                        <th className=\"text-center\">Ảnh</th>\n                        <th className=\"text-center\">#</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <td colSpan=\"10\" hidden={this.state.hidden} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                <td className=\"text-center\">{item.type_id == null ? \"\" : item.type_id.name}</td>\n                                <td className=\"text-center\">{item.brand_id == null ? \"\" : item.brand_id.name}</td>\n                                <td className=\"text-center\">{item.name}</td>\n                                <td className=\"text-center\">\n                                  {item.color_id == null ? \"\" : item.color_id.hex}\n                                  <div style={{ backgroundColor: item.color_id == null ? \"\" : item.color_id.hex, width: '100%', height: '30px' }}> </div>\n                                </td>\n                                <td className=\"text-center\">\n                                  <a\n                                    href={item.href}\n                                    target=\"_blank\"\n                                  >{`Open web`}</a>\n                                </td>\n                                <td className=\"text-center\" style={{ width: '10%' }}>\n                                  <img src={item.image || this.state.BASE_URL + \"/images/calendar.png\"} width={\"60px\"} height={\"60px\"} />\n                                </td>\n                                <td className=\"text-center\">\n                                  <CButton style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >\n                                    <CIcon name=\"cilPencil\" />\n                                  </CButton>\n                                  <CButton outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>\n                                    <CIcon name=\"cilTrash\" />\n                                  </CButton>\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n                </CardBody>\n              </Card>\n              <div style={{ float: 'right' }}>\n                <Pagination count={arrPagination.length} color=\"primary\" onChange={(e, v) => {\n                  this.setState({ data: arrPagination[v - 1], indexPage: v - 1 })\n                }} />\n              </div>\n            </Col>\n          </Row>\n\n          <Modal size=\"xl\" isOpen={this.state.modalCom} className={this.props.className}>\n            {\n              this.state.action == \"new\" ? this.renderFormAdd() :\n                <div>\n                  <ModalHeader>Cập nhật</ModalHeader>\n                  <ModalBody>\n                    <TextFieldGroup\n                      field=\"name\"\n                      label=\"Tên sản phẩm\"\n                      value={this.state.name}\n                      placeholder={\"Tên sản phẩm\"}\n                      // error={errors.title}\n                      onChange={e => this.onChange(\"name\", e.target.value)}\n                    // rows=\"5\"\n                    />\n\n                    <TextFieldGroup\n                      field=\"href\"\n                      label=\"Đường dẫn\"\n                      value={this.state.href}\n                      placeholder={\"Đường dẫn\"}\n                      // error={errors.title}\n                      onChange={e => this.onChange(\"href\", e.target.value)}\n                    // rows=\"5\"\n                    />\n\n                    <TextFieldGroup\n                      field=\"image\"\n                      label=\"Ảnh thương hiệu\"\n                      type={\"file\"}\n                      // error={errors.title}\n                      onChange={e => { this.onChangeImage(e) }}\n                      onClick={(e) => { e.target.value = null }}\n                    // rows=\"5\"\n                    />\n                    {\n                      this.state.image == \"\" ? \"\" :\n                        <img width=\"250\" height=\"300\" src={this.state.image} style={{ marginBottom: 20 }} />\n                    }\n\n                    <div style={{ width: \"100%\" }}>\n                      <CLabel>Thương hiệu:</CLabel>\n                      <CSelect onChange={async e => { this.setState({ brand_id: e.target.value }) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                        {\n                          brands.map((item, i) => {\n                            if (item.name == brand_name) {\n                              return (\n                                <option selected key={i} value={item._id}>{item.name}</option>\n                              );\n                            } else {\n                              return (\n                                <option key={i} value={item._id}>{item.name}</option>\n                              );\n                            }\n                          })\n                        }\n                      </CSelect>\n                    </div>\n\n                    <CLabel>Danh mục:</CLabel>\n                    <div style={{ width: \"100%\" }}>\n                      <CSelect onChange={async e => {\n                        this.setState({ type_id: e.target.value })\n                      }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                        {\n                          types.map((item, i) => {\n                            if (item.type_id == this.state.type_id) {\n                              return (\n                                <option selected key={i} value={item._id}>{item.name}</option>\n                              );\n                            } else {\n                              return (\n                                <option key={i} value={item._id}>{item.name}</option>\n                              );\n                            }\n                          })\n                        }\n                      </CSelect>\n                    </div>\n                    <div className=\"mt-2\">\n                      <div className=\"text-center m-5\">\n                        <CLabel><strong>Màu đã chọn: </strong></CLabel> {' '}\n                        {colorChooseUpdate}\n                        <div style={{ backgroundColor: colorChooseUpdate, width: '100%', height: '30px' }}> </div>\n                      </div>\n                      <CCollapse show={collapse}>\n                        <CListGroup>\n                          <CListGroupItem style={{ backgroundColor: \"#000000\" }}>\n                            <Input style={{ width: '100%' }} onChange={(e) => {\n                              this.actionSearchColorUpdate(e.target.value, \"keyColor\");\n                            }} name=\"keyColor\" value={keyColor} placeholder=\"Tìm kiếm\" />\n                          </CListGroupItem>\n                          <div style={{ height: '200px', overflowY: 'scroll' }}>\n                            {\n                              colorItemUpdate.map((item, i) => {\n                                return (\n                                  <CListGroupItem style={{ cursor: 'pointer' }} key={i} onClick={() => {\n                                    this.setState({ color_id: item._id, colorChooseUpdate: item.hex })\n                                  }}>\n                                    <CRow>\n                                      <CCol lg=\"2\">{item.hex}</CCol>\n                                      <CCol lg=\"10\"><div style={{ backgroundColor: item.hex, width: '100%', height: 20 }}></div></CCol>\n                                    </CRow>\n                                  </CListGroupItem>\n                                );\n                              })\n                            }\n                          </div>\n                        </CListGroup>\n                      </CCollapse>\n                    </div>\n                    <CButton\n                      color=\"primary\"\n                      style={{ width: '100%' }}\n                      onClick={() => { this.setState({ collapse: !collapse }) }}\n                      className={'mb-1'}\n                    >{\n                        !collapse ? \"Chọn màu\" : \"Đóng\"\n                      }</CButton>\n\n                  </ModalBody>\n                  <ModalFooter>\n                    <CButton color=\"primary\" onClick={e => this.updateProducts()} disabled={this.state.isLoading}>Save</CButton>{' '}\n                    <CButton color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Cancel</CButton>\n                  </ModalFooter>\n                </div>\n            }\n          </Modal>\n\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Delete`}</ModalHeader>\n            <ModalBody>\n              <label htmlFor=\"tag\">{`Xác nhận xóa !!!`}</label>\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Delete</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Cancel</CButton>\n            </ModalFooter>\n          </Modal>\n        </div>\n      );\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst styles = {\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: 300\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: \"right\",\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh25: {\n    width: \"25%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  w5: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    margin: '5px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\"\n  },\n  searchInput: {\n    width: \"190px\",\n    display: 'inline-block',\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n}\n\nexport default Product;\n","import constants from './../contants/contants'\n\nconst axios = require('axios').default;\naxios.defaults.baseURL = constants.BASE_URL;\n\nconst connect = async function (url = \"\", data = {}, token = \"\", type) {\n  let options = {};\n  // console.log(\"Token: \", token)\n  if (token) {\n    options = {\n      headers: token\n    };\n  }\n  try {\n    switch (type) {\n      case \"GET\":\n        let get = await axios.get(url, data, options);\n        if (get.is_success == false) {\n          return null;\n        }\n        return get.data;\n      case \"POST\":\n        let post = await axios.post(url, data, options);\n        if (post.is_success == false) {\n          return null;\n        }\n        return post.data;\n      case \"PUT\":\n        let put = await axios.put(url, data, options);\n        if (put.is_success == false) {\n          return null;\n        }\n        return put.data;\n      case \"DELETE\":\n        let del = await axios.delete(url, data, options);\n        if (del.is_success == false) {\n          return null;\n        }\n        return del.data;\n    }\n\n  } catch (reason) {\n    return reason;\n  }\n\n\n}\n\nexport default connect;\n"],"sourceRoot":""}
>>>>>>> 572f03dd0d699b5cbe95000e46f393057d9e71d9:build/static/js/42.29e23d0a.chunk.js.map
