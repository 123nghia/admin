{"version":3,"sources":["views/base/tables/CreateOrder.js","../node_modules/reactstrap/es/Button.js","../node_modules/multiselect-react-dropdown/dist/index.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/multiselect/multiselect.component.tsx"],"names":["headers","Headers","auth","localStorage","getItem","append","Order","props","state","data","Company_Id","keyDateCreate","Date","keyStatus","activePage","page","itemsCount","limit","totalActive","modalCom","viewingUser","communities","updated","dataApi","action","Name","Email","Phone","Fax","Address","Website","Code","Status","modalDelete","delete","arrPagination","indexPage","dataCompany","currentCompany","arrHardWard","dataHardWard","arrChooseHard","token","Authorization","company_id","a","this","getCompanyData","arr","JSON","parse","i","length","to","window","location","hash","hidden","href","alert","axios","baseURL","Constants","BASE_URL","url","ADD_ORDER","method","resOrder","is_success","ADD_ORDER_DETAIL","_id","setState","message","LIST_COMPANY","resCompany","LIST_HARDWARE","res","key","getHardWardData","arrTemp","Array","LIST_HARDWARE_WITH_ID","arrHW","push","status","arrChoose","name","id","options","onSelect","e","onRemove","displayValue","className","style","styles","tags","sm","lg","flexLabel","htmlFor","flexOption","onChange","target","value","map","item","outline","color","floatRight","size","onClick","toggleModal","ble","undefined","Key","getBadge","Create_Date","marginTop","addOrder","isOpen","renderSelect","Component","pagination","marginRight","width","margin","textDecoration","float","spinner","center","textAlign","tbody","height","overflowY","wh12","wh15","w5","wa10","row","success","danger","mgl5","marginLeft","padding","searchInput","display","userActive","userPending","nagemonNameCol","image","borderRadius","propTypes","active","PropTypes","bool","string","block","disabled","tag","tagPropType","innerRef","oneOfType","object","func","children","node","cssModule","close","Button","_React$Component","_this","call","bind","_assertThisInitialized","_inheritsLoose","_proto","prototype","preventDefault","render","_this$props","ariaLabel","Tag","attributes","_objectWithoutPropertiesLoose","React","createElement","btnOutlineColor","classes","mapToCssModules","classNames","defaultAriaLabel","_extends","type","ref","defaultProps","module","exports","require","css","insertAt","document","head","getElementsByTagName","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","closeIconTypes","circle","circle2","cancel","Multiselect","inputValue","filteredOptions","unfilteredOptions","selectedValues","Object","assign","preSelectedValues","toggleOptionsList","highlightOption","avoidHighlightFirstOption","showCheckbox","keepSearchTerm","groupedObject","closeIconType","closeIcon","optionTimeout","n","searchWrapper","createRef","searchBox","onFocus","onBlur","renderMultiselectContainer","renderSelectedList","onRemoveSelectedItem","toggelOptionList","onArrowKeyNavigation","onSelectItem","filterOptionsByInput","removeSelectedValuesFromOptions","isSelectedValue","fadeOutSelection","isDisablePreSelectedValues","renderGroupByOptions","renderNormalOption","listenerCallback","resetSelectedValues","getSelectedItems","getSelectedItemsCount","hideOnClickOutside","isVisible","groupBy","singleSelect","groupByOptions","Promise","resolve","_this2","initialSetValue","current","addEventListener","prevProps","prevSelectedvalues","stringify","focus","clearTimeout","removeEventListener","skipCheck","isObject","optionList","filter","findIndex","v","indexOf","reduce","r","create","event","onSearch","_this3","matchValues","search","caseSensitiveSearch","toLowerCase","toString","keyCode","disablePreSelectedValues","previousState","index","splice","_this4","closeOnSelect","selectionLimit","onSingleSelect","_this5","emptyRecordMsg","loadingMessage","loading","keys","Fragment","obj","option","_this6","readOnly","checked","_this7","customCloseIcon","_this8","src","setTimeout","elem","offsetWidth","offsetHeight","getClientRects","element","getElementsByClassName","contains","_this9","placeholder","hidePlaceholder","disable","showArrow","onKeyDown","autoComplete","renderOptionList"],"mappings":"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","file":"static/js/26.8059b258.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport Multiselect from 'multiselect-react-dropdown';\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Button, Input,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n} from 'reactstrap';\nimport {\n  CBadge,\n  CRow,\n  CCol,\n} from '@coreui/react'\n\nimport 'moment-timezone';\nimport Constants from \"../../../contants/contants\";\nimport axios from 'axios'\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\nclass Order extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      Company_Id: '',\n      keyDateCreate: new Date(),\n      keyStatus: '',\n      activePage: 1,\n      page: 1,\n      itemsCount: 0,\n      limit: 20,\n      totalActive: 0,\n      modalCom: false,\n      viewingUser: {},\n      communities: [],\n      updated: '',\n      dataApi: [],\n      action: 'new',\n      Name: '',\n      Email: '',\n      Phone: '',\n      Fax: 'Nam',\n      Address: '',\n      Website: '',\n      Code: '',\n      Status: '',\n      modalDelete: false,\n      delete: null,\n      arrPagination: [],\n      indexPage: 0,\n      dataCompany: [],\n      currentCompany: '',\n      arrHardWard: [],\n      dataHardWard: [],\n      arrChooseHard: [],\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      company_id: localStorage.getItem('user')\n    };\n  }\n\n  async componentDidMount() {\n    this.getCompanyData();\n\n    let arr = JSON.parse(localStorage.getItem('url'));\n    for (let i = 0; i < arr.length; i++) {\n      if (\"#\" + arr[i].to == window.location.hash) {\n        if (arr[i].hidden == true) {\n          window.location.href = '#/'\n        }\n      }\n    }\n\n  }\n\n  async addOrder() {\n    const { arrHardWard, Company_Id, token } = this.state;\n\n    if(Company_Id == '' || Company_Id == null){\n      alert(\"Vui lòng chọn chính xác công ty\")\n    }\n    const resOrder = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.ADD_ORDER,\n      method: 'PUT',\n      data: {\n        \"Company_Id\": Company_Id,\n        \"Count\": arrHardWard.length\n      },\n      headers: token\n    });\n\n    if (resOrder.data.is_success == true) {\n      await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.ADD_ORDER_DETAIL,\n        method: 'PUT',\n        data: {\n          \"OrderID\": resOrder.data.data._id,\n          \"arrHard\": arrHardWard,\n          \"Company_Id\": resOrder.data.data.Company_Id\n        },\n        headers: token\n      });\n\n      this.setState({ arrHardWard: [] });\n\n    } else {\n      alert(resOrder.data.message);\n    }\n  }\n\n  async getCompanyData() {\n    const resCompany = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_COMPANY,\n      method: 'POST',\n    });\n\n    this.setState({ dataCompany: resCompany.data.data });\n  }\n\n  async getHardWardData() {\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_HARDWARE,\n      method: 'POST',\n      headers: this.state.token\n    });\n    this.setState({ dataHardWard: res.data.data });\n  }\n\n  async toggleModal(key) {\n    const { arrHardWard } = this.state;\n    this.getHardWardData()\n    let arrTemp = new Array();\n    if (key == 'new') {\n      this.setState({\n        modalCom: !this.state.modalCom,\n        action: key\n      })\n    }\n\n    for (let i = 0; i < arrHardWard.length; i++) {\n      const arrHW = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_HARDWARE_WITH_ID + arrHardWard[i],\n        method: 'POST',\n        headers: this.state.token\n      });\n\n      arrTemp.push(arrHW.data.data)\n    }\n\n    this.setState({ arrHardWard: arrTemp })\n  }\n\n  getBadge(status) {\n    switch (status) {\n      case 'INSTOCK': return 'success'\n      case 'AVAILABLE': return 'secondary'\n      case 'Locked': return 'warning'\n      case 'Deactived': return 'danger'\n      default: return 'primary'\n    }\n  }\n\n  renderSelect(arrChoose) {\n    const { dataHardWard } = this.state;\n    let arrTemp = [];\n    for (let i = 0; i < dataHardWard.length; i++) {\n      arrTemp.push({ name: dataHardWard[i].Name, id: dataHardWard[i]._id })\n    }\n\n    return (\n      <Multiselect\n        options={arrTemp}\n        // selectedValues={this.state.selectedValue}\n        onSelect={(e) => {\n          arrChoose = new Array();\n          for (let i = 0; i < e.length; i++) {\n            arrChoose.push(e[i].id); this.setState({ arrChooseHard: arrChoose});\n          }\n        }}\n        onRemove={(e) => {\n          arrChoose = new Array();\n          for (let i = 0; i < e.length; i++) {\n            arrChoose.push(e[i].id); this.setState({ arrChooseHard: arrChoose});\n          }\n        }}\n        displayValue=\"name\"\n      />\n    )\n  }\n\n  render() {\n    const { dataCompany, arrHardWard } = this.state;\n    const arrT = [];\n    return (\n      <div className=\"animated fadeIn\">\n        <Card>\n          <CardHeader>\n            <i className=\"fa fa-align-justify\"></i> Quản lý đơn hàng\n          </CardHeader>\n          <CardBody>\n            <div style={styles.tags}>\n              <CRow>\n                <CCol sm=\"12\" lg=\"12\">\n                  <div>\n                    <label style={styles.flexLabel} htmlFor=\"tag\">Chọn công ty:    </label>\n                    <select style={styles.flexOption} onChange={e => { this.setState({ Company_Id: e.target.value }); }}>\n                      <option value={this.state.Company_Id}>-----</option>\n                      {\n                        dataCompany.map((item, i) => {\n                          return (\n                            <option value={item._id}>{item.Name}</option>\n                          );\n                        })\n                      }\n                    </select>\n                  </div>\n                </CCol>\n\n                <CCol sm=\"12\" lg=\"12\">\n                  <CRow>\n                    <CCol sm=\"12\" lg=\"6\">\n                      <label htmlFor=\"tag\">DANH SÁCH PHẦN CỨNG ĐÃ CHỌN    </label>\n                    </CCol>\n                    <CCol sm=\"12\" lg=\"6\">\n                      <Button outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={e => { this.toggleModal(\"new\") }}>Chọn phần cứng</Button>\n                    </CCol>\n                  </CRow>\n                </CCol>\n\n                <CCol sm=\"12\" lg=\"12\">\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        <th className=\"text-center\">Mã phần cứng</th>\n                        <th className=\"text-center\">Trạng thái</th>\n                        <th className=\"text-center\">Ngày tạo</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {\n                        arrHardWard != undefined ?\n                          arrHardWard.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                <td className=\"text-center\">{item[0].Key}</td>\n                                <td className=\"text-center\">\n                                  <CBadge color={this.getBadge(item[0].Status)}>\n                                    {item[0].Status}\n                                  </CBadge>\n                                </td>\n                                <td className=\"text-center\">{item[0].Create_Date}</td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n                </CCol>\n\n                <CCol sm=\"12\" lg=\"12\">\n                  <label style={{ marginTop: 10 }} htmlFor=\"tag\">Số lượng phần cứng: {this.state.arrHardWard.length}    </label>\n                </CCol>\n\n                <CCol sm=\"12\" lg=\"12\">\n                  <CRow>\n                    <CCol sm=\"12\" lg=\"6\">\n                    </CCol>\n                    <CCol sm=\"12\" lg=\"6\">\n                      <Button outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={async e => { await this.addOrder() }}>Lưu</Button>\n                    </CCol>\n                  </CRow>\n                </CCol>\n              </CRow>\n            </div>\n          </CardBody>\n        </Card>\n\n        <Modal isOpen={this.state.modalCom} >\n          <ModalHeader>Danh sách phần cứng</ModalHeader>\n\n          <ModalBody>\n            {\n              this.renderSelect(arrT)\n            }\n            {/* <div>\n              <label style={styles.flexLabel} htmlFor=\"tag\">Chọn phần cứng:    </label>\n              <select style={styles.flexOption} onChange={e => { arrT.push(e.target.value); }}>\n                {\n                  dataHardWard.map((item, i) => {\n                    return (\n                      <option value={item._id}>{item.Name}</option>\n                    );\n                  })\n                }\n              </select>\n            </div> */}\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={e => { this.setState({ arrHardWard: this.state.arrChooseHard }); }}>Save</Button>{' '}\n            <Button color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Close</Button>\n          </ModalFooter>\n        </Modal>\n      </div >\n\n    )\n\n  }\n}\n\nconst styles = {\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: '100%'\n  },\n  flexOption: {\n    width: 160,\n    margin: '1px'\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: 'right',\n    margin: '5px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh12: {\n    width: \"8%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wh15: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  w5: {\n    width: \"12%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    marginLeft: '5px'\n  },\n  tags: {\n    padding: 10,\n  },\n  searchInput: {\n    width: \"160px\",\n    display: 'inline-block',\n    margin: '1px'\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n}\n\nexport default Order;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      return this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return /*#__PURE__*/React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./multiselect-react-dropdown.cjs.production.min.js')\n} else {\n  module.exports = require('./multiselect-react-dropdown.cjs.development.js')\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// @ts-nocheck\nimport React from \"react\";\nimport \"./styles.css\";\nimport CloseCircle from '../assets/svg/closeCircle.svg';\nimport CloseCircleDark from '../assets/svg/closeCircleDark.svg';\nimport CloseLine from '../assets/svg/closeLine.svg';\nimport CloseSquare from '../assets/svg/closeSquare.svg';\nimport DownArrow from '../assets/svg/downArrow.svg';\nimport { IMultiselectProps } from \"./interface\";\n\nconst closeIconTypes = {\n  circle: CloseCircleDark,\n  circle2: CloseCircle,\n  close: CloseSquare,\n  cancel: CloseLine\n};\n\nexport class Multiselect extends React.Component<IMultiselectProps, any> {\n  static defaultProps: { options: never[]; disablePreSelectedValues: boolean; selectedValues: never[]; isObject: boolean; displayValue: string; showCheckbox: boolean; selectionLimit: number; placeholder: string; groupBy: string; style: {}; emptyRecordMsg: string; onSelect: () => void; onRemove: () => void; closeIcon: string; singleSelect: boolean; caseSensitiveSearch: boolean; id: string; closeOnSelect: boolean; avoidHighlightFirstOption: boolean; hidePlaceholder: boolean; showArrow: boolean; keepSearchTerm: boolean; };\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      options: props.options,\n      filteredOptions: props.options,\n      unfilteredOptions: props.options,\n      selectedValues: Object.assign([], props.selectedValues),\n      preSelectedValues: Object.assign([], props.selectedValues),\n      toggleOptionsList: false,\n      highlightOption: props.avoidHighlightFirstOption ? -1 : 0,\n\t\t\tshowCheckbox: props.showCheckbox,\n      keepSearchTerm: props.keepSearchTerm,\n      groupedObject: [],\n      closeIconType: closeIconTypes[props.closeIcon] || closeIconTypes['circle']\n    };\n    // @ts-ignore\n    this.optionTimeout = null;\n    // @ts-ignore\n\t\tthis.searchWrapper = React.createRef();\n    // @ts-ignore\n\t\tthis.searchBox = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.renderMultiselectContainer = this.renderMultiselectContainer.bind(this);\n    this.renderSelectedList = this.renderSelectedList.bind(this);\n    this.onRemoveSelectedItem = this.onRemoveSelectedItem.bind(this);\n    this.toggelOptionList = this.toggelOptionList.bind(this);\n    this.onArrowKeyNavigation = this.onArrowKeyNavigation.bind(this);\n    this.onSelectItem = this.onSelectItem.bind(this);\n    this.filterOptionsByInput = this.filterOptionsByInput.bind(this);\n    this.removeSelectedValuesFromOptions = this.removeSelectedValuesFromOptions.bind(this);\n    this.isSelectedValue = this.isSelectedValue.bind(this);\n    this.fadeOutSelection = this.fadeOutSelection.bind(this);\n    this.isDisablePreSelectedValues = this.isDisablePreSelectedValues.bind(this);\n    this.renderGroupByOptions = this.renderGroupByOptions.bind(this);\n    this.renderNormalOption = this.renderNormalOption.bind(this);\n    this.listenerCallback = this.listenerCallback.bind(this);\n    this.resetSelectedValues = this.resetSelectedValues.bind(this);\n    this.getSelectedItems = this.getSelectedItems.bind(this);\n    this.getSelectedItemsCount = this.getSelectedItemsCount.bind(this);\n    this.hideOnClickOutside = this.hideOnClickOutside.bind(this);\n    this.isVisible = this.isVisible.bind(this);\n  }\n\n  initialSetValue() {\n    const { showCheckbox, groupBy, singleSelect } = this.props;\n\t\tconst { options } = this.state;\n    if (!showCheckbox && !singleSelect) {\n      this.removeSelectedValuesFromOptions(false);\n\t\t} \n    // if (singleSelect) {\n    //   this.hideOnClickOutside();\n    // }\n\t\tif (groupBy && showCheckbox) {\n\t\t\tthis.groupByOptions(options);\n\t\t}\n  }\n\n  resetSelectedValues() {\n    const { unfilteredOptions } = this.state;\n    return new Promise((resolve) => {\n      this.setState({\n        selectedValues: [],\n        preSelectedValues: [],\n        options: unfilteredOptions,\n        filteredOptions: unfilteredOptions\n      }, () => {\n        // @ts-ignore\n        resolve();\n        this.initialSetValue();\n      });\n    });\n  }\n\n  getSelectedItems() {\n    return this.state.selectedValues;\n  }\n\n  getSelectedItemsCount() {\n    return this.state.selectedValues.length;\n  }\n\n  componentDidMount() {\n\t\tthis.initialSetValue();\n    // @ts-ignore\n    this.searchWrapper.current.addEventListener(\"click\", this.listenerCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedValues } = this.props;\n    const { options: prevOptions, selectedValues: prevSelectedvalues } = prevProps;\n    if (JSON.stringify(prevOptions) !== JSON.stringify(options)) {\n      this.setState({ options, filteredOptions: options, unfilteredOptions: options }, this.initialSetValue);\n    }\n    if (JSON.stringify(prevSelectedvalues) !== JSON.stringify(selectedValues)) {\n      this.setState({ selectedValues: Object.assign([], selectedValues), preSelectedValues: Object.assign([], selectedValues) }, this.initialSetValue);\n    }\n  }\n\n  listenerCallback() {\n    // @ts-ignore\n    this.searchBox.current.focus();\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    if (this.optionTimeout) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    }\n    // @ts-ignore\n    this.searchWrapper.current.removeEventListener('click', this.listenerCallback);\n  }\n\n  // Skipcheck flag - value will be true when the func called from on deselect anything.\n  removeSelectedValuesFromOptions(skipCheck) {\n    const { isObject, displayValue, groupBy } = this.props;\n    const { selectedValues = [], unfilteredOptions, options } = this.state;\n    if (!skipCheck && groupBy) {\n      this.groupByOptions(options);\n    }\n    if (!selectedValues.length && !skipCheck) {\n      return;\n    }\n    if (isObject) {\n      let optionList = unfilteredOptions.filter(item => {\n        return selectedValues.findIndex(\n          v => v[displayValue] === item[displayValue]\n        ) === -1\n          ? true\n          : false;\n      });\n      if (groupBy) {\n        this.groupByOptions(optionList);\n      }\n      this.setState(\n        { options: optionList, filteredOptions: optionList },\n        this.filterOptionsByInput\n      );\n      return;\n    }\n    let optionList = unfilteredOptions.filter(\n      item => selectedValues.indexOf(item) === -1\n    );\n\n    this.setState(\n      { options: optionList, filteredOptions: optionList },\n      this.filterOptionsByInput\n    );\n  }\n\n  groupByOptions(options) {\n    const { groupBy } = this.props;\n    const groupedObject = options.reduce(function(r, a) {\n      const key = a[groupBy] || \"Others\";\n      r[key] = r[key] || [];\n      r[key].push(a);\n      return r;\n    }, Object.create({}));\n    \n    this.setState({ groupedObject });\n  }\n\n  onChange(event) {\n    const { onSearch } = this.props;\n    this.setState(\n      { inputValue: event.target.value },\n      this.filterOptionsByInput\n    );\n    if (onSearch) {\n      onSearch(event.target.value);\n    }\n  }\n\n  filterOptionsByInput() {\n    let { options, filteredOptions, inputValue } = this.state;\n    const { isObject, displayValue } = this.props;\n    if (isObject) {\n      options = filteredOptions.filter(i => this.matchValues(i[displayValue], inputValue))\n    } else {\n      options = filteredOptions.filter(i => this.matchValues(i, inputValue));\n    }\n    this.groupByOptions(options);\n    this.setState({ options });\n  }\n\n  matchValues(value, search) {\n    if (this.props.caseSensitiveSearch) {\n      return value.indexOf(search) > -1;\n    }\n    if (value.toLowerCase) {\n      return value.toLowerCase().indexOf(search.toLowerCase()) > -1;\n    }\n    return value.toString().indexOf(search) > -1;\n  }\n\n  onArrowKeyNavigation(e) {\n    const {\n      options,\n      highlightOption,\n      toggleOptionsList,\n      inputValue,\n      selectedValues\n    } = this.state;\n    const { disablePreSelectedValues } = this.props;\n    if (e.keyCode === 8 && !inputValue && !disablePreSelectedValues && selectedValues.length) {\n      this.onRemoveSelectedItem(selectedValues.length - 1);\n    }\n    if (!options.length) {\n      return;\n    }\n    if (e.keyCode === 38) {\n      if (highlightOption > 0) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption - 1\n        }));\n      } else {\n        this.setState({ highlightOption: options.length - 1 });\n      }\n    } else if (e.keyCode === 40) {\n      if (highlightOption < options.length - 1) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption + 1\n        }));\n      } else {\n        this.setState({ highlightOption: 0 });\n      }\n    } else if (e.key === \"Enter\" && options.length && toggleOptionsList) {\n      if (highlightOption === -1) {\n        return;\n      }\n      this.onSelectItem(options[highlightOption]);\n    }\n    // TODO: Instead of scrollIntoView need to find better soln for scroll the dropwdown container.\n    // setTimeout(() => {\n    //   const element = document.querySelector(\"ul.optionContainer .highlight\");\n    //   if (element) {\n    //     element.scrollIntoView();\n    //   }\n    // });\n  }\n\n  onRemoveSelectedItem(item) {\n\t\tlet { selectedValues, index = 0 } = this.state;\n\t\tconst { onRemove, showCheckbox, displayValue, isObject } = this.props;\n    if (isObject) {\n      index = selectedValues.findIndex(\n        i => i[displayValue] === item[displayValue]\n      );\n    } else {\n      index = selectedValues.indexOf(item);\n    }\n\t\tselectedValues.splice(index, 1);\n\t\tonRemove(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSelectItem(item) {\n    const { selectedValues } = this.state;\n    const { selectionLimit, onSelect, singleSelect, showCheckbox } = this.props;\n    if (!this.state.keepSearchTerm){\n      this.setState({\n        inputValue: ''\n      });\n    }\n    if (singleSelect) {\n      this.onSingleSelect(item);\n      onSelect([item], item);\n      return;\n    }\n    if (this.isSelectedValue(item)) {\n      this.onRemoveSelectedItem(item);\n      return;\n    }\n    if (selectionLimit == selectedValues.length) {\n      return;\n    }\n\t\tselectedValues.push(item);\n\t\tonSelect(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      } else {\n        this.filterOptionsByInput();\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSingleSelect(item) {\n    this.setState({ selectedValues: [item], toggleOptionsList: false });\n  }\n\n  isSelectedValue(item) {\n    const { isObject, displayValue } = this.props;\n    const { selectedValues } = this.state;\n    if (isObject) {\n      return (\n        selectedValues.filter(i => i[displayValue] === item[displayValue])\n          .length > 0\n      );\n    }\n    return selectedValues.filter(i => i === item).length > 0;\n  }\n\n  renderOptionList() {\n    const { groupBy, style, emptyRecordMsg, loading, loadingMessage = 'loading...' } = this.props;\n    const { options } = this.state;\n    if (loading) {\n      return (\n        <ul className={`optionContainer`} style={style['optionContainer']}>\n          {typeof loadingMessage === 'string' && <span style={style['loadingMessage']} className={`notFound`}>{loadingMessage}</span>}\n          {typeof loadingMessage !== 'string' && loadingMessage}\n        </ul>\n      );\n    }\n    return (\n      <ul className={`optionContainer`} style={style['optionContainer']}>\n        {options.length === 0 && <span style={style['notFound']} className={`notFound`}>{emptyRecordMsg}</span>}\n        {!groupBy ? this.renderNormalOption() : this.renderGroupByOptions()}\n      </ul>\n    );\n  }\n\n  renderGroupByOptions() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { groupedObject } = this.state;\n    return Object.keys(groupedObject).map(obj => {\n\t\t\treturn (\n\t\t\t\t<React.Fragment key={obj}>\n\t\t\t\t\t<li className=\"groupHeading\" style={style['groupHeading']}>{obj}</li>\n\t\t\t\t\t{groupedObject[obj].map((option, i) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={`option${i}`}\n\t\t\t\t\t\t\tstyle={style['option']}\n              className={`\n               groupChildEle ${this.fadeOutSelection(option) && 'disableSelection'}\n                ${this.isDisablePreSelectedValues(option) && 'disableSelection'} option\n              `}\n\t\t\t\t\t\t\tonClick={() => this.onSelectItem(option)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{showCheckbox && !singleSelect && (\n                  <input\n                    type=\"checkbox\"\n                    className={'checkbox'}\n                    readOnly\n                    checked={this.isSelectedValue(option)}\n                  />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{isObject ? option[displayValue] : (option || '').toString()}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t});\n  }\n\n  renderNormalOption() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { highlightOption } = this.state;\n    return this.state.options.map((option, i) => (\n          <li\n            key={`option${i}`}\n            style={style['option']}\n            className={`\n              ${highlightOption === i ? `highlightOption highlight` : \"\"} \n              ${this.fadeOutSelection(option) && 'disableSelection'} \n              ${this.isDisablePreSelectedValues(option) && 'disableSelection'} option\n            `}\n            onClick={() => this.onSelectItem(option)}\n          >\n            {showCheckbox && !singleSelect && (\n              <input\n                type=\"checkbox\"\n                readOnly\n                className={`checkbox`}\n                checked={this.isSelectedValue(option)}\n              />\n            )}\n            {isObject ? option[displayValue] : (option || '').toString()}\n          </li>\n    ));\n  }\n\n  renderSelectedList() {\n    const { isObject = false, displayValue, style, singleSelect, customCloseIcon } = this.props;\n    const { selectedValues, closeIconType } = this.state;\n    return selectedValues.map((value, index) => (\n      <span className={`chip  ${singleSelect && 'singleChip'} ${this.isDisablePreSelectedValues(value) && 'disableSelection'}`} key={index} style={style['chips']}>\n        {!isObject ? (value || '').toString() : value[displayValue]}\n        {!this.isDisablePreSelectedValues(value) && (!customCloseIcon ? <img\n          className=\"icon_cancel closeIcon\"\n          src={closeIconType}\n          onClick={() => this.onRemoveSelectedItem(value)}\n        /> : <i className=\"custom-close\" onClick={() => this.onRemoveSelectedItem(value)}>{customCloseIcon}</i>)}\n      </span>\n    ));\n  }\n\n  isDisablePreSelectedValues(value) {\n    const { isObject, disablePreSelectedValues, displayValue } = this.props;\n    const { preSelectedValues } = this.state;\n    if (!disablePreSelectedValues || !preSelectedValues.length) {\n      return false;\n    }\n    if (isObject) {\n      return (\n        preSelectedValues.filter(i => i[displayValue] === value[displayValue])\n          .length > 0\n      );\n    }\n    return preSelectedValues.filter(i => i === value).length > 0;\n  }\n\n  fadeOutSelection(item) {\n    const { selectionLimit, showCheckbox, singleSelect } = this.props;\n    if (singleSelect) {\n      return;\n    }\n    const { selectedValues } = this.state;\n    if (selectionLimit == -1) {\n      return false;\n    }\n    if (selectionLimit != selectedValues.length) {\n      return false;\n    }\n    if (selectionLimit == selectedValues.length) {\n      if (!showCheckbox) {\n        return true;\n      } else {\n        if (this.isSelectedValue(item)) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  toggelOptionList() {\n    this.setState({\n      toggleOptionsList: !this.state.toggleOptionsList,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0\n    });\n  }\n\n  onFocus(){\n    if (this.state.toggleOptionsList) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    } else {\n      this.toggelOptionList();\n    }\n  }\n\n  onBlur(){\n    // @ts-ignore\n    this.optionTimeout = setTimeout(this.toggelOptionList, 250);\n  }\n\n  isVisible(elem) {\n    return !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length )\n  }\n\n  hideOnClickOutside() {\n    const element = document.getElementsByClassName('multiselect-container')[0];\n    const outsideClickListener = event => {\n        if (element && !element.contains(event.target) && this.isVisible(element)) {\n          this.toggelOptionList();\n        }\n    }\n    document.addEventListener('click', outsideClickListener)\n  }\n\n  renderMultiselectContainer() {\n    const { inputValue, toggleOptionsList, selectedValues } = this.state;\n    const { placeholder, style, singleSelect, id, hidePlaceholder, disable, showArrow} = this.props;\n    return (\n      <div className={`multiselect-container multiSelectContainer ${disable ? `disable_ms` : ''}`} id={id || 'multiselectContainerReact'} style={style['multiselectContainer']}>\n        <div className={`search-wrapper searchWrapper ${singleSelect ? 'singleSelect' : ''}`} \n          ref={this.searchWrapper} style={style['searchBox']} \n          onClick={singleSelect ? this.toggelOptionList : () => {}}\n        >\n          {this.renderSelectedList()}\n          <input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tref={this.searchBox}\n            className=\"searchBox\"\n            id={`${id || 'search'}_input`}\n            onChange={this.onChange}\n            value={inputValue}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            placeholder={((singleSelect && selectedValues.length) || (hidePlaceholder && selectedValues.length)) ? '' : placeholder}\n            onKeyDown={this.onArrowKeyNavigation}\n            style={style['inputField']}\n            autoComplete=\"off\"\n            disabled={singleSelect || disable}\n          />\n          {(singleSelect || showArrow) && <img\n            src={DownArrow}\n            className={`icon_cancel icon_down_dir`}\n          />}\n        </div>\n        <div\n          className={`optionListContainer ${\n            toggleOptionsList ? 'displayBlock' : 'displayNone'\n          }`}\n        >\n          {this.renderOptionList()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return this.renderMultiselectContainer();\n  }\n}\n\nMultiselect.defaultProps = {\n  options: [],\n  disablePreSelectedValues: false,\n  selectedValues: [],\n  isObject: true,\n  displayValue: \"model\",\n  showCheckbox: false,\n  selectionLimit: -1,\n  placeholder: \"Select\",\n\tgroupBy: \"\",\n\tstyle: {},\n\temptyRecordMsg: \"No Options Available\",\n\tonSelect: () => {},\n  onRemove: () => {},\n  closeIcon: 'circle2',\n  singleSelect: false,\n  caseSensitiveSearch: false,\n  id: '',\n  closeOnSelect: true,\n  avoidHighlightFirstOption: false,\n  hidePlaceholder: false,\n  showArrow: false,\n  keepSearchTerm: false,\n  customCloseIcon: ''\n};\n"],"sourceRoot":""}