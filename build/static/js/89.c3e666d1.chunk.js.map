{"version":3,"sources":["views/base/tables/MakeUp/Color.js"],"names":["headers","Headers","auth","localStorage","getItem","append","Color","props","getData","a","setState","isLoading","axios","baseURL","Constants","BASE_URL","url","LIST_COLOR","method","res_color","LIST_PRODUCT","res_product","val","data","sub","i","length","undefined","subName","name","product","pagination","dataApi","products","getData_Company","state","user","LIST_COLOR_COMPANY","JSON","parse","company_id","LIST_PRODUCT_COMPANY","openDelete","item","modalDelete","id","_id","key","activePage","page","itemsCount","limit","totalActive","modalCom","viewingUser","communities","updated","hidden","action","product_id","hex","makeup_id","alpha","version","delete","arrPagination","indexPage","token","Authorization","type","this","arr","window","location","hash","isHidden","href","j","temparray","arrTotal","slice","push","d","map","toLocaleUpperCase","includes","active","Status","alert","body","ver","ADD_COLOR","status","UPDATE_COLOR","DELETE_COLOR","e","target","value","name_action","searchKey","className","css","override","size","color","loading","speedMultiplier","style","styles","tags","sm","lg","searchInput","onChange","actionSearch","placeholder","width","marginTop","onClick","resetSearch","ble","colSpan","backgroundColor","height","mgl5","outline","openUpdate","float","count","v","isOpen","custom","selected","field","label","addRoles","updateUser","disabled","toggleModal","toggle","htmlFor","Component","marginRight","flexLabel","flexOption","textDecoration","floatRight","spinner","center","textAlign","tbody","overflowY","wh25","w5","wa10","row","success","danger","margin","display","userActive","userPending","nagemonNameCol","image","borderRadius"],"mappings":"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","file":"static/js/89.c3e666d1.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport CIcon from '@coreui/icons-react'\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Input,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n} from 'reactstrap';\n\nimport {\n  CLabel,\n  CSelect,\n  CButton,\n  CRow, CCol\n} from '@coreui/react'\n\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport 'moment-timezone';\nimport Constants from \"../../../../contants/contants\";\nimport TextFieldGroup from \"../../../Common/TextFieldGroup\";\nimport axios from 'axios'\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\nclass Color extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      activePage: 1,\n      page: 1,\n      itemsCount: 0,\n      limit: 20,\n      totalActive: 0,\n      modalCom: false,\n      viewingUser: {},\n      communities: [],\n      updated: '',\n      dataApi: [],\n      hidden: false,\n      action: 'new',\n      products: [],\n      product_id: '',\n      hex: \"\",\n      makeup_id: \"\",\n      alpha: \"\",\n      version: \"v4\",\n      modalDelete: false,\n      delete: null,\n      arrPagination: [],\n      indexPage: 0,\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      type: localStorage.getItem('type'),\n      user: localStorage.getItem('user'),\n      isLoading: false\n    };\n  }\n  async componentDidMount() {\n    const { type } = this.state;\n    if (type == '0' || type == '1') {\n      this.getData()\n    } else {\n      this.getData_Company()\n    }\n    let arr = JSON.parse(localStorage.getItem('url'));\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].url == window.location.hash) {\n        if (arr[i].isHidden == true) {\n          window.location.href = '#/'\n        }\n      }\n    }\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden: false\n      })\n    } else {\n      this.setState({\n        hidden: true\n      })\n    }\n\n    this.setState({ arrPagination: arrTotal, data: arrTotal[0] });\n  }\n\n  getData = async () => {\n    this.setState({ isLoading: true });\n    const res_color = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_COLOR,\n      method: 'GET'\n    });\n\n    const res_product = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_PRODUCT,\n      method: 'GET'\n    });\n\n\n    let val = res_color.data.data;\n    let sub = res_color.data.sub;\n    for(let i = 0; i < val.length; i++) {\n      if(sub[i] != undefined){\n        val[i].subName = sub[i].name\n      } else {\n        val[i].subName = \"\"\n      }\n    }\n\n    let product = res_product.data.data;\n\n    this.pagination(val);\n    this.setState({ dataApi: val, products: product, isLoading: false })\n  }\n\n  getData_Company = async () => {\n    const { user } = this.state\n    this.setState({ isLoading: true });\n    const res_color = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_COLOR_COMPANY + JSON.parse(this.state.user).company_id,\n      method: 'GET',\n    });\n\n    const res_product = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_PRODUCT_COMPANY + JSON.parse(this.state.user).company_id,\n      method: 'GET',\n    });\n\n\n\n    let val = res_color.data.data;\n    let sub = res_color.data.sub;\n    for(let i = 0; i < val.length; i++) {\n      if(sub[i] != undefined){\n        val[i].subName = sub[i].name\n      } else {\n        val[i].subName = \"\"\n      }\n    }\n\n    let product = res_product.data.data;\n\n    this.pagination(val);\n    this.setState({ dataApi: val, products: product, isLoading: false });\n\n  }\n\n  searchKey(key) {\n    this.setState({ key: key })\n\n    if (key != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if (val.name.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n          d.push(val)\n        }\n      })\n      let active = 0\n\n      this.setState({ data: d, totalActive: active })\n    } else {\n      let active = 0\n\n      this.state.dataApi.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: this.state.dataApi, totalActive: active })\n    }\n  }\n\n  async toggleModal(key) {\n    if (key == 'new') {\n      this.setState({\n        modalCom: !this.state.modalCom,\n        action: key,\n        product_id: this.state.products.length == 0 ? '' : this.state.products[0]._id,\n        hex: \"\",\n        makeup_id: \"\",\n        alpha: \"\",\n        version: \"v4\",\n      })\n    }\n  }\n\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n\n  async addRoles() {\n    const { hex, makeup_id, alpha, product_id, version } = this.state;\n\n    if (hex == null || hex == '' ||\n      makeup_id == null || makeup_id == '' ||\n      alpha == null || alpha == '' ||\n      product_id == null || product_id == '') {\n      alert(\"Vui lòng nhập đầy đủ trường dữ liệu !!!\");\n      return\n    }\n\n    const body = {\n      product_id: product_id,\n      hex: hex,\n      makeup_id: makeup_id,\n      alpha: alpha,\n      ver: version,\n      company_id: this.state.type == '0' || this.state.type == '1' ? \"\" : JSON.parse(this.state.user).company_id\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.ADD_COLOR,\n      method: 'POST',\n      data: body\n    });\n\n    if (res.status == 200) {\n      if (this.state.type == '0' || this.state.type == '1') {\n        this.getData()\n      } else {\n        this.getData_Company()\n      }\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(\"Thêm màu thất bại\");\n      this.setState({ isLoading: false });\n    }\n  }\n\n  async openUpdate(item) {\n    this.setState({\n      modalCom: !this.state.modalCom,\n      action: \"update\",\n      product_id: item.product_id._id,\n      hex: item.hex,\n      makeup_id: item.makeup_id,\n      alpha: item.alpha,\n      id: item['_id'],\n      ver: item.version\n    })\n  }\n\n  async updateUser() {\n    const { hex, makeup_id, alpha, product_id, version } = this.state;\n\n    if (hex == null || hex == '' ||\n      makeup_id == null || makeup_id == '' ||\n      alpha == null || alpha == '' ||\n      product_id == null || product_id == '') {\n      alert(\"Vui lòng nhập đầy đủ trường dữ liệu !!!\");\n      return\n    }\n\n    const body = {\n      product_id: product_id,\n      hex: hex,\n      makeup_id: makeup_id,\n      alpha: alpha,\n      ver: version,\n      id: this.state.id\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.UPDATE_COLOR,\n      method: 'POST',\n      data: body\n    });\n\n    if (res.status == 200) {\n      if (this.state.type == '0' || this.state.type == '1') {\n        this.getData()\n      } else {\n        this.getData_Company()\n      }\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(\"Cập nhật thất bại\");\n      this.setState({ isLoading: false });\n    }\n  }\n\n  openDelete = (item) => {\n    this.setState({\n      modalDelete: !this.state.modalDelete,\n      id: item._id\n    })\n  }\n\n  async delete() {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.DELETE_COLOR,\n      method: 'POST',\n      data: {\n        \"id\": this.state.id\n      }\n    });\n\n    if (res.status == 200) {\n      if (this.state.type == '0' || this.state.type == '1') {\n        this.getData()\n      } else {\n        this.getData_Company()\n      }\n      this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n    } else {\n      alert(\"Xóa sản phẩm thất bại\");\n      this.setState({ isLoading: false });\n    }\n\n  }\n\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  getBadge(status) {\n    switch (status) {\n      case 'Actived': return 'success'\n      case 'Inactive': return 'secondary'\n      case 'Locked': return 'warning'\n      case 'Deactived': return 'danger'\n      default: return 'primary'\n    }\n  }\n\n  searchKey() {\n    const { indexPage, key } = this.state;\n    // this.setState({ key: key })\n\n    if (key != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if (val.hex.toLocaleUpperCase().includes(key.toLocaleUpperCase())||\n        val.makeup_id.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n        val.product_id.name.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n\n          d.push(val)\n        }\n      })\n      let active = 0\n\n      d.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: d, totalActive: active })\n    } else {\n      let active = 0\n\n      this.state.dataApi.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: this.state.arrPagination[indexPage], totalActive: active })\n    }\n  }\n\n  actionSearch(e, name_action) {\n    this.setState({\n      [name_action]: e.target.value\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  resetSearch() {\n    this.setState({\n      key: ''\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  render() {\n    const { data, arrPagination, products, type, key } = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Danh sách mã màu\n                  <div style={styles.tags}>\n                    <CRow>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CRow>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <div>\n                              <Input style={styles.searchInput} onChange={(e) => {\n                                this.actionSearch(e, \"key\");\n                              }} name=\"key\" value={key} placeholder=\"Từ khóa\" />\n                            </div>\n                          </CCol>\n                          <CCol sm=\"12\" lg=\"6\">\n                            <CButton color=\"primary\" style={{ width: '100%', marginTop: 5 }} size=\"sm\" onClick={e => { this.resetSearch() }}>Làm mới tìm kiếm</CButton>\n                          </CCol>\n                        </CRow>\n                      </CCol>\n                      <CCol sm=\"12\" lg=\"12\">\n                        {/* <CButton outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={async e => await this.toggleModal(\"new\")}>Thêm</CButton> */}\n                      </CCol>\n                    </CRow>\n\n                  </div>\n                </CardHeader>\n                <CardBody>\n\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        {/* <th className=\"text-center\">SKU</th> */}\n                        <th className=\"text-center\">Hex</th>\n                        <th className=\"text-center\">MakeUp ID</th>\n                        <th className=\"text-center\">Alpha</th>\n                        {/* <th className=\"text-center\">Danh mục cấp 2</th> */}\n                        <th className=\"text-center\">#</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <td colSpan=\"10\" hidden={this.state.hidden} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                {/* <td className=\"text-center\">{item.product_id == null ? \"\" : item.product_id.name}</td> */}\n                                <td className=\"text-center\">\n                                  {item.hex}\n                                  <div style={{ backgroundColor: item.hex, width: '100%', height: '30px' }}> </div>\n                                </td>\n                                <td className=\"text-center\">{item.makeup_id}</td>\n                                <td className=\"text-center\">{item.alpha}</td>\n                                {/* <td className=\"text-center\">{item.subName}</td> */}\n                                <td className=\"text-center\">\n                                  <CButton style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >\n                                    <CIcon name=\"cilPencil\" />\n                                  </CButton>\n                                  <CButton outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>\n                                    <CIcon name=\"cilTrash\" />\n                                  </CButton>\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n                </CardBody>\n              </Card>\n              <div style={{ float: 'right' }}>\n                <Pagination count={arrPagination.length} color=\"primary\" onChange={(e, v) => {\n                  this.setState({ data: arrPagination[v - 1], indexPage: v - 1 })\n                }} />\n              </div>\n              {/* {\n                arrPagination.length == 1 ? \"\" :\n                  <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                    <tr style={styles.row}>\n                      {\n                        arrPagination.map((item, i) => {\n                          return (\n                            <td>\n                              <CButton style={styles.pagination} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ data: arrPagination[i], indexPage: i }) }}>{i + 1}</CButton>\n                            </td>\n                          );\n                        })\n                      }\n                    </tr>\n                  </div>\n              } */}\n            </Col>\n          </Row>\n\n          <Modal isOpen={this.state.modalCom} className={this.props.className}>\n            <ModalHeader>{this.state.action == 'new' ? `Tạo mới` : `Cập nhật`}</ModalHeader>\n            <ModalBody>\n              <CLabel>Chọn sản phẩm:</CLabel>\n              <div style={{ width: \"100%\" }}>\n                <CSelect onChange={async e => { this.setState({ product_id: e.target.value }) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                  {\n                    products.map((item, i) => {\n                      if (item._id == this.state.product_id) {\n                        return (\n                          <option selected key={i} value={item._id}>{item.name}</option>\n                        );\n                      } else {\n                        return (\n                          <option key={i} value={item._id}>{item.name}</option>\n                        );\n                      }\n                    })\n                  }\n                </CSelect>\n              </div>\n\n              <TextFieldGroup\n                field=\"hex\"\n                label=\"Hex\"\n                value={this.state.hex}\n                placeholder={\"Hex\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"hex\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"makeup_id\"\n                label=\"Mã Makeup\"\n                value={this.state.makeup_id}\n                placeholder={\"Mã Makeup\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"makeup_id\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"alpha\"\n                label=\"Alpha\"\n                value={this.state.alpha}\n                placeholder={\"Alpha\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"alpha\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <CLabel>Phiên bản:</CLabel>\n              <div style={{ width: \"100%\" }}>\n                <CSelect onChange={async e => { this.setState({ version: e.target.value }) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                  {\n                    ['v3', 'v4'].map((item, i) => {\n                      if (item == this.state.version) {\n                        return (\n                          <option selected key={i} value={item}>{item}</option>\n                        );\n                      } else {\n                        return (\n                          <option key={i} value={item}>{item}</option>\n                        );\n                      }\n                    })\n                  }\n                </CSelect>\n              </div>\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => { this.state.action === 'new' ? this.addRoles() : this.updateUser() }} disabled={this.state.isLoading}>Lưu</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Xoá`}</ModalHeader>\n            <ModalBody>\n              <label htmlFor=\"tag\">{`Xác nhận xóa !!!`}</label>\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Delete</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n        </div>\n      );\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst styles = {\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: 300\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: \"right\",\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh25: {\n    width: \"25%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  w5: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    margin: '5px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\"\n  },\n  searchInput: {\n    width: \"190px\",\n    display: 'inline-block',\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n}\n\nexport default Color;\n"],"sourceRoot":""}