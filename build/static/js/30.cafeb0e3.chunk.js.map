{"version":3,"sources":["views/charts/MainChartExample.js","views/DashBoard/ShopManager.js","views/DashBoard/SaleManager.js","views/DashBoard/Dashboard.js","contants/contants.js"],"names":["getStyle","headers","Headers","auth","localStorage","getItem","append","ShopManager","props","state","month","dataUserSale","arrPagination","indexPage","dataStatistical","arrPaginationStatistical","indexPageStatistical","company_id","dataApi","arrTemp","hidden","hidden_all","arrAllUser","a","this","getCustomer","getCustomerByMonth","getDataForCharts","arr","phone","filter","data","Phone","length","i","j","temparray","arrTotal","slice","push","setState","arrTotal_Statistical","id","JSON","parse","axios","baseURL","Constants","BASE_URL","url","LIST_CUSTOMER","method","token","res","arrCount_User_Company","some","item","count","countType","CALCULATOR_ALL_USER_OF_COMPANY","resCal_Compay","coefficient","calculator","pagination","arrMonth","LIST_CUSTOMER_BY_MONTH","bodyUser","arrCount_User","GET_COEFFICIENT","resCal","pagination_statistical","row","md","htmlFor","xs","className","colSpan","undefined","map","Name","Email","Gender","Date","Create_Date","toLocaleDateString","toLocaleTimeString","style","float","marginRight","padding","width","Button","color","onClick","e","rows","backgroundColor","datasets","label","labels","options","tooltips","enabled","onChange","target","value","custom","size","name","Component","sale_id","CALCULATOR_ALL_USER_OF_SALE","GET_USER_SALE_BY_MONTH","GET_COEFFICIENT_PER_SALE","Dashboard","SaleManager"],"mappings":"sTAIqBA,mBAAS,WACZA,mBAAS,QACPA,mBAAS,U,6CCkCzBC,EAAU,IAAIC,QACZC,EAAOC,aAAaC,QAAQ,QAClCJ,EAAQK,OAAO,gBAAiB,UAAYH,GAC5CF,EAAQK,OAAO,eAAgB,oB,IAqWhBC,E,kDAnWb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,EACPC,aAAc,GACdC,cAAe,GACfC,UAAW,EACXC,gBAAiB,GACjBC,yBAA0B,GAC1BC,qBAAsB,EACtBC,WAAYb,aAAaC,QAAQ,QACjCa,QAAS,GACTC,QAAS,GACTC,QAAQ,EACRC,YAAY,EACZC,WAAY,IAfG,E,4FAmBnB,sBAAAC,EAAA,sEACQC,KAAKC,cADb,uBAEQD,KAAKE,mBAAmB,MAFhC,uBAGQF,KAAKG,mBAHb,gD,6EAOA,SAAUC,EAAKC,GAEb,OADcD,EAAIE,QAAO,SAAAC,GAAI,OAAIA,EAAKC,OAASH,KAClCI,S,wBAGf,SAAWf,GACT,IAAIgB,EAAGC,EAAGC,EACNC,EAAW,GACf,IAAKH,EAAI,EAAGC,EAAIjB,EAAQe,OAAQC,EAAIC,EAAGD,GAFV,EAG3BE,EAAYlB,EAAQoB,MAAMJ,EAAGA,EAHF,GAI3BG,EAASE,KAAKH,GAEhBZ,KAAKgB,SAAS,CAAE5B,cAAeyB,EAAU1B,aAAc0B,EAASb,KAAKf,MAAMI,e,oCAG7E,SAAuBK,GACrB,IAAIgB,EAAGC,EAAGC,EACNK,EAAuB,GAC3B,IAAKP,EAAI,EAAGC,EAAIjB,EAAQe,OAAQC,EAAIC,EAAGD,GAFV,EAG3BE,EAAYlB,EAAQoB,MAAMJ,EAAGA,EAHF,GAI3BO,EAAqBF,KAAKH,GAE5BZ,KAAKgB,SAAS,CAAEzB,yBAA0B0B,EAAsB3B,gBAAiB2B,EAAqBjB,KAAKf,MAAMO,0B,gEAGnH,6CAAAO,EAAA,6DAEUN,EAAeO,KAAKf,MAApBQ,WACJyB,EAAKC,KAAKC,MAAM3B,GAHtB,SAKoB4B,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUG,cACfC,OAAQ,OACRpB,KAAM,CACJ,UAAa,CACX,WAAcW,EAAGzB,aAGrBhB,QAASuB,KAAKf,MAAM2C,QAdxB,OAKQC,EALR,OAiBE7B,KAAKgB,SAAS,CAAEtB,QAASmC,EAAItB,KAAKA,OAI9BuB,EAAwB,GArB9B,IAAA/B,EAAA,iBAsBWW,GAtBX,eAAAX,EAAA,yDAwBS+B,EAAsBC,MAAK,SAAAC,GAAI,OAAIH,EAAItB,KAAKA,KAAKG,GAAGF,OAASwB,EAAKxB,SAxB3E,uBAyBMqB,EAAItB,KAAKA,KAAKG,GAAGuB,MAAQ,EAAKC,UAAUL,EAAItB,KAAKA,KAAMsB,EAAItB,KAAKA,KAAKG,GAAGF,OAzB9E,SA0BkCa,IAAM,CAChCC,QAASC,IAAUC,SACnBC,IAAKF,IAAUY,+BACfR,OAAQ,OACRpB,KAAM,CACJ,WAAcW,EAAGzB,WACjB,MAASoC,EAAItB,KAAKA,KAAKG,GAAGF,SAhCpC,OA0BY4B,EA1BZ,OAmCMP,EAAItB,KAAKA,KAAKG,GAAG2B,YAAcD,EAAc7B,KAAKA,KAAK+B,WACvDR,EAAsBf,KAAKc,EAAItB,KAAKA,KAAKG,IApC/C,0CAsBWA,EAAI,EAtBf,YAsBkBA,EAAImB,EAAItB,KAAKA,KAAKE,QAtBpC,0CAsBWC,GAtBX,iBAsB4CA,IAtB5C,uBAuCsC,GAAhCoB,EAAsBrB,OACxBT,KAAKgB,SAAS,CAAEpB,QAAQ,IAExBI,KAAKgB,SAAS,CAAEpB,QAAQ,IAE1BI,KAAKuC,WAAWT,GA5ClB,iD,2HAgDA,sCAAA/B,EAAA,sDACUN,EAAeO,KAAKf,MAApBQ,WACJyB,EAAKC,KAAKC,MAAM3B,GAChB+C,EAAW,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC9E7C,EAAU,GACLe,EAAI,EALf,YAKkBA,EAAI8B,EAAS/B,QAL/B,iCAMsBY,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUkB,uBACfd,OAAQ,OACRpB,KAAM,CACJd,WAAYyB,EAAGzB,WACfP,MAAOsD,EAAS9B,MAZxB,OAMUmB,EANV,OAeIlC,EAAQoB,KAAKc,EAAItB,KAAKA,KAAKE,QAf/B,QAKuCC,IALvC,uBAiBEV,KAAKgB,SAAS,CAAElB,WAAYH,IAjB9B,iD,6HAoBA,WAAyBT,GAAzB,kCAAAa,EAAA,yDACUN,EAAeO,KAAKf,MAApBQ,WACJyB,EAAKC,KAAKC,MAAM3B,GAChBiD,EAAW,CACbjD,WAAYyB,EAAGzB,WACfP,MAAOA,GAGI,GAATA,EARN,gCASUc,KAAKC,cATf,+CAWsBoB,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUkB,uBACfd,OAAQ,OACRpB,KAAMmC,IAfZ,QAkBgC,IAPtBb,EAXV,QAkBYtB,KAAKA,KAAKE,OAChBT,KAAKgB,SAAS,CAAEpB,QAAQ,IAExBI,KAAKgB,SAAS,CAAEpB,QAAQ,IAE1BI,KAAKgB,SAAS,CAAEtB,QAASmC,EAAItB,KAAKA,KAAMZ,QAASkC,EAAItB,KAAKA,OAGtDoC,EAAgB,GA1BxB,IAAA5C,EAAA,iBA2BaW,GA3Bb,eAAAX,EAAA,yDA6BW4C,EAAcZ,MAAK,SAAAC,GAAI,OAAI,EAAK/C,MAAMU,QAAQe,GAAGF,OAASwB,EAAKxB,SA7B1E,uBA8BQ,EAAKvB,MAAMU,QAAQe,GAAGuB,MAAQ,EAAKC,UAAU,EAAKjD,MAAMU,QAAS,EAAKV,MAAMU,QAAQe,GAAGF,OA9B/F,SA+B6Ba,IAAM,CACzBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUqB,gBACfjB,OAAQ,OACRpB,KAAM,CACJ,MAASrB,EACT,WAAcgC,EAAGzB,WACjB,MAAS,EAAKR,MAAMU,QAAQe,GAAGF,SAtC3C,OA+BcqC,EA/Bd,OAyCQ,EAAK5D,MAAMU,QAAQe,GAAG2B,YAAcQ,EAAOtC,KAAKA,KAAK+B,WACrDK,EAAc5B,KAAK,EAAK9B,MAAMU,QAAQe,IA1C9C,0CA2BaA,EAAI,EA3BjB,aA2BoBA,EAAIV,KAAKf,MAAMU,QAAQc,QA3B3C,0CA2BaC,GA3Bb,iBA2BmDA,IA3BnD,wBA8CIV,KAAK8C,uBAAuBH,GA9ChC,iD,2EAkDA,WAAU,IAAD,OACP,EACsE3C,KAAKf,MADnEE,EAAR,EAAQA,aAAcS,EAAtB,EAAsBA,OAAQR,EAA9B,EAA8BA,cAAeC,EAA7C,EAA6CA,UAAWQ,EAAxD,EAAwDA,WACtDP,EADF,EACEA,gBAAiBC,EADnB,EACmBA,yBAA0BC,EAD7C,EAC6CA,qBAC7C,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAYuD,KAAG,EAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CAAQC,QAAQ,WAAhB,wCAEF,cAAC,IAAD,CAAMC,GAAG,KAAKF,GAAG,WAKrB,eAAC,IAAD,WACE,wBAAOG,UAAU,yDAAjB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,oBAAIA,UAAU,cAAd,iBACA,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,yBACA,oBAAIA,UAAU,cAAd,yBACA,oBAAIA,UAAU,cAAd,mCAGJ,kCACE,oBAAIC,QAAQ,IAAIxD,OAAQC,EAAYsD,UAAU,cAA9C,yCAEkBE,GAAhBlE,EACEA,EAAamE,KAAI,SAACtB,EAAMtB,GACtB,OACE,+BACE,oBAAIyC,UAAU,cAAd,SAA6BzC,EAAI,IACjC,oBAAIyC,UAAU,cAAd,SAA6BnB,EAAKuB,OAClC,oBAAIJ,UAAU,cAAd,SAA6BnB,EAAKwB,QAClC,oBAAIL,UAAU,cAAd,SAA6BnB,EAAKxB,QAClC,oBAAI2C,UAAU,cAAd,SAA6BnB,EAAKyB,SAClC,oBAAIN,UAAU,cAAd,SAA6BnB,EAAKC,QAClC,oBAAIkB,UAAU,cAAd,SAA6BnB,EAAKK,cAClC,oBAAIc,UAAU,cAAd,SACI,IAAIO,KAAK1B,EAAK2B,aAAcC,qBAAuB,IAAO,IAAIF,KAAK1B,EAAK2B,aAAcE,yBATnFnD,MAaR,SAKa,GAAxBtB,EAAcqB,OAAc,GAC1B,qBAAKqD,MAAO,CAAEC,MAAO,QAASC,YAAa,OAAQC,QAAS,QAA5D,SACE,oBAAIH,MAAO,CAAEC,MAAO,OAAQG,MAAO,QAAnC,SAEI9E,EAAckE,KAAI,SAACtB,EAAMtB,GACvB,OACE,6BACE,cAACyD,EAAA,EAAD,CAAQL,MAAO,CAAEE,YAAa,OAASI,MAAO1D,GAAKrB,EAAY,UAAY,SAAUgF,QAAS,SAAAC,GAAO,EAAKtD,SAAS,CAAE7B,aAAcC,EAAcsB,GAAIrB,UAAWqB,KAAhK,SAAyKA,EAAI,aAQ7L,uBAEA,eAAC,IAAD,CAAY6D,MAAI,EAACpB,UAAU,SAA3B,UACE,eAAC,IAAD,CAAOqB,gBAAgB,MAAvB,UACE,cAAC,IAAD,wBAGA,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,SAAU,CACR,CACEC,MAAO,uBACPF,gBAAiB,UACjBjE,KAAMP,KAAKf,MAAMa,aAGrB6E,OAAO,SACPC,QAAS,CACPC,SAAU,CACRC,SAAS,WAMnB,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAY/B,KAAG,EAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CAAQC,QAAQ,WAAhB,6BAEF,cAAC,IAAD,CAAMC,GAAG,KAAKF,GAAG,IAAjB,SACE,qBAAKc,MAAO,CAAEC,MAAO,QAASG,MAAO,SAArC,SACE,eAAC,IAAD,CAASa,SAAQ,uCAAE,WAAMT,GAAN,SAAAvE,EAAA,sEAAmB,EAAKG,mBAAmBoE,EAAEU,OAAOC,OAApD,2CAAF,sDAAgEC,QAAM,EAACC,KAAK,KAAKC,KAAK,WAAWlE,GAAG,WAArH,UACE,wBAAQ+D,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,4BAMV,eAAC,IAAD,WACE,wBAAO9B,UAAU,yDAAjB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,yBACA,oBAAIA,UAAU,cAAd,8BAGJ,kCACE,oBAAIC,QAAQ,IAAIxD,OAAQA,EAAQuD,UAAU,cAA1C,yCAEqBE,GAAnB/D,EACEA,EAAgBgE,KAAI,SAACtB,EAAMtB,GACzB,OACE,+BACE,oBAAIyC,UAAU,cAAd,SAA6BnB,EAAKuB,OAClC,oBAAIJ,UAAU,cAAd,SAA6BnB,EAAKwB,QAClC,oBAAIL,UAAU,cAAd,SAA6BnB,EAAKxB,QAClC,oBAAI2C,UAAU,cAAd,SAA6BnB,EAAKyB,SAClC,oBAAIN,UAAU,cAAd,SAA6BnB,EAAKC,QAClC,oBAAIkB,UAAU,cAAd,SAA6BnB,EAAKK,gBAN3B3B,MASR,SAMwB,GAAnCnB,EAAyBkB,OAAc,GACrC,qBAAKqD,MAAO,CAAEC,MAAO,QAASC,YAAa,OAAQC,QAAS,QAA5D,SACE,oBAAIH,MAAO,CAAEC,MAAO,OAAQG,MAAO,QAAnC,SAEI3E,EAAyB+D,KAAI,SAACtB,EAAMtB,GAClC,OACE,6BACE,cAACyD,EAAA,EAAD,CAAQL,MAAO,CAAEE,YAAa,OAASI,MAAO1D,GAAKlB,EAAuB,UAAY,SAAU6E,QAAS,SAAAC,GAAO,EAAKtD,SAAS,CAAE1B,gBAAiBC,EAAyBmB,GAAIlB,qBAAsBkB,KAApM,SAA6MA,EAAI,oC,GA3U3N2E,aCJtB5G,EAAU,IAAIC,QACZC,EAAOC,aAAaC,QAAQ,QAClCJ,EAAQK,OAAO,gBAAiB,UAAYH,GAC5CF,EAAQK,OAAO,eAAgB,oB,IA2WhBC,E,kDAzWb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,MAAO,EACPC,aAAc,GACdC,cAAe,GACfC,UAAW,EACXC,gBAAiB,GACjBC,yBAA0B,GAC1BC,qBAAsB,EACtBC,WAAYb,aAAaC,QAAQ,QACjCa,QAAS,GACTC,QAAS,GACTC,QAAQ,EACRC,YAAY,EACZC,WAAY,IAfG,E,4FAmBnB,sBAAAC,EAAA,sEACQC,KAAKC,cADb,uBAEQD,KAAKE,mBAAmB,MAFhC,uBAGQF,KAAKG,mBAHb,gD,6EAOA,SAAUC,EAAKC,GAEb,OADcD,EAAIE,QAAO,SAAAC,GAAI,OAAIA,EAAKC,OAASH,KAClCI,S,wBAGf,SAAWf,GACT,IAAIgB,EAAGC,EAAGC,EACNC,EAAW,GACf,IAAKH,EAAI,EAAGC,EAAIjB,EAAQe,OAAQC,EAAIC,EAAGD,GAFV,EAG3BE,EAAYlB,EAAQoB,MAAMJ,EAAGA,EAHF,GAI3BG,EAASE,KAAKH,GAEhBZ,KAAKgB,SAAS,CAAE5B,cAAeyB,EAAU1B,aAAc0B,EAASb,KAAKf,MAAMI,e,oCAG7E,SAAuBK,GACrB,IAAIgB,EAAGC,EAAGC,EACNK,EAAuB,GAC3B,IAAKP,EAAI,EAAGC,EAAIjB,EAAQe,OAAQC,EAAIC,EAAGD,GAFV,EAG3BE,EAAYlB,EAAQoB,MAAMJ,EAAGA,EAHF,GAI3BO,EAAqBF,KAAKH,GAE5BZ,KAAKgB,SAAS,CAAEzB,yBAA0B0B,EAAsB3B,gBAAiB2B,EAAqBjB,KAAKf,MAAMO,0B,gEAGnH,6CAAAO,EAAA,6DAEUN,EAAeO,KAAKf,MAApBQ,WACJyB,EAAKC,KAAKC,MAAM3B,GAHtB,SAKoB4B,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUG,cACfC,OAAQ,OACRpB,KAAM,CACJ,UAAa,CACX,WAAcW,EAAGzB,WACjB,QAAWyB,EAAGoE,UAGlB7G,QAASuB,KAAKf,MAAM2C,QAfxB,OAKQC,EALR,OAkBE7B,KAAKgB,SAAS,CAAEtB,QAASmC,EAAItB,KAAKA,OAI9BuB,EAAwB,GAtB9B,IAAA/B,EAAA,iBAuBWW,GAvBX,eAAAX,EAAA,yDAyBS+B,EAAsBC,MAAK,SAAAC,GAAI,OAAIH,EAAItB,KAAKA,KAAKG,GAAGF,OAASwB,EAAKxB,SAzB3E,uBA0BMqB,EAAItB,KAAKA,KAAKG,GAAGuB,MAAQ,EAAKC,UAAUL,EAAItB,KAAKA,KAAMsB,EAAItB,KAAKA,KAAKG,GAAGF,OA1B9E,SA2BkCa,IAAM,CAChCC,QAASC,IAAUC,SACnBC,IAAKF,IAAUgE,4BACf5D,OAAQ,OACRpB,KAAM,CACJ,WAAcW,EAAGzB,WACjB,MAASoC,EAAItB,KAAKA,KAAKG,GAAGF,MAC1B,QAAWU,EAAGoE,WAlCxB,OA2BYlD,EA3BZ,OAqCMP,EAAItB,KAAKA,KAAKG,GAAG2B,YAAcD,EAAc7B,KAAKA,KAAK+B,WACvDR,EAAsBf,KAAKc,EAAItB,KAAKA,KAAKG,IAtC/C,0CAuBWA,EAAI,EAvBf,YAuBkBA,EAAImB,EAAItB,KAAKA,KAAKE,QAvBpC,0CAuBWC,GAvBX,iBAuB4CA,IAvB5C,uBAyCsC,GAAhCoB,EAAsBrB,OACxBT,KAAKgB,SAAS,CAAEpB,QAAQ,IAExBI,KAAKgB,SAAS,CAAEpB,QAAQ,IAE1BI,KAAKuC,WAAWT,GA9ClB,iD,2HAkDA,sCAAA/B,EAAA,sDACUN,EAAeO,KAAKf,MAApBQ,WACJyB,EAAKC,KAAKC,MAAM3B,GAChB+C,EAAW,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAC9E7C,EAAU,GACLe,EAAI,EALf,YAKkBA,EAAI8B,EAAS/B,QAL/B,iCAMsBY,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUiE,uBACf7D,OAAQ,OACRpB,KAAM,CACJd,WAAYyB,EAAGzB,WACfP,MAAOsD,EAAS9B,GAChB4E,QAASpE,EAAGoE,WAbpB,OAMUzD,EANV,OAgBIlC,EAAQoB,KAAKc,EAAItB,KAAKA,KAAKE,QAhB/B,QAKuCC,IALvC,uBAmBEV,KAAKgB,SAAS,CAAElB,WAAYH,IAnB9B,iD,6HAsBA,WAAyBT,GAAzB,kCAAAa,EAAA,yDACUN,EAAeO,KAAKf,MAApBQ,WACJyB,EAAKC,KAAKC,MAAM3B,GAChBiD,EAAW,CACbjD,WAAYyB,EAAGzB,WACfP,MAAOA,EACPoG,QAASpE,EAAGoE,SAGD,GAATpG,EATN,gCAUUc,KAAKC,cAVf,+CAYsBoB,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUiE,uBACf7D,OAAQ,OACRpB,KAAMmC,IAhBZ,QAmBgC,IAPtBb,EAZV,QAmBYtB,KAAKA,KAAKE,OAChBT,KAAKgB,SAAS,CAAEpB,QAAQ,IAExBI,KAAKgB,SAAS,CAAEpB,QAAQ,IAE1BI,KAAKgB,SAAS,CAAEtB,QAASmC,EAAItB,KAAKA,KAAMZ,QAASkC,EAAItB,KAAKA,OAGtDoC,EAAgB,GA3BxB,IAAA5C,EAAA,iBA4BaW,GA5Bb,eAAAX,EAAA,yDA8BW4C,EAAcZ,MAAK,SAAAC,GAAI,OAAI,EAAK/C,MAAMU,QAAQe,GAAGF,OAASwB,EAAKxB,SA9B1E,uBA+BQ,EAAKvB,MAAMU,QAAQe,GAAGuB,MAAQ,EAAKC,UAAU,EAAKjD,MAAMU,QAAS,EAAKV,MAAMU,QAAQe,GAAGF,OA/B/F,SAgC6Ba,IAAM,CACzBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUkE,yBACf9D,OAAQ,OACRpB,KAAM,CACJ,MAASrB,EACT,WAAcgC,EAAGzB,WACjB,MAAS,EAAKR,MAAMU,QAAQe,GAAGF,MAC/B,QAAWU,EAAGoE,WAxC1B,OAgCczC,EAhCd,OA2CQ,EAAK5D,MAAMU,QAAQe,GAAG2B,YAAcQ,EAAOtC,KAAKA,KAAK+B,WACrDK,EAAc5B,KAAK,EAAK9B,MAAMU,QAAQe,IA5C9C,0CA4BaA,EAAI,EA5BjB,aA4BoBA,EAAIV,KAAKf,MAAMU,QAAQc,QA5B3C,0CA4BaC,GA5Bb,iBA4BmDA,IA5BnD,wBAgDIV,KAAK8C,uBAAuBH,GAhDhC,iD,2EAoDA,WAAU,IAAD,OACP,EACsE3C,KAAKf,MADnEE,EAAR,EAAQA,aAAcS,EAAtB,EAAsBA,OAAQR,EAA9B,EAA8BA,cAAeC,EAA7C,EAA6CA,UAAWQ,EAAxD,EAAwDA,WACtDP,EADF,EACEA,gBAAiBC,EADnB,EACmBA,yBAA0BC,EAD7C,EAC6CA,qBAC7C,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAYuD,KAAG,EAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CAAQC,QAAQ,WAAhB,wCAEF,cAAC,IAAD,CAAMC,GAAG,KAAKF,GAAG,WAKrB,eAAC,IAAD,WACE,wBAAOG,UAAU,yDAAjB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,oBAAIA,UAAU,cAAd,iBACA,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,yBACA,oBAAIA,UAAU,cAAd,yBACA,oBAAIA,UAAU,cAAd,mCAGJ,kCACE,oBAAIC,QAAQ,IAAIxD,OAAQC,EAAYsD,UAAU,cAA9C,yCAEkBE,GAAhBlE,EACEA,EAAamE,KAAI,SAACtB,EAAMtB,GACtB,OACE,+BACE,oBAAIyC,UAAU,cAAd,SAA6BzC,EAAI,IACjC,oBAAIyC,UAAU,cAAd,SAA6BnB,EAAKuB,OAClC,oBAAIJ,UAAU,cAAd,SAA6BnB,EAAKwB,QAClC,oBAAIL,UAAU,cAAd,SAA6BnB,EAAKxB,QAClC,oBAAI2C,UAAU,cAAd,SAA6BnB,EAAKyB,SAClC,oBAAIN,UAAU,cAAd,SAA6BnB,EAAKC,QAClC,oBAAIkB,UAAU,cAAd,SAA6BnB,EAAKK,cAClC,oBAAIc,UAAU,cAAd,SACI,IAAIO,KAAK1B,EAAK2B,aAAcC,qBAAuB,IAAO,IAAIF,KAAK1B,EAAK2B,aAAcE,yBATnFnD,MAaR,SAKa,GAAxBtB,EAAcqB,OAAc,GAC1B,qBAAKqD,MAAO,CAAEC,MAAO,QAASC,YAAa,OAAQC,QAAS,QAA5D,SACE,oBAAIH,MAAO,CAAEC,MAAO,OAAQG,MAAO,QAAnC,SAEI9E,EAAckE,KAAI,SAACtB,EAAMtB,GACvB,OACE,6BACE,cAACyD,EAAA,EAAD,CAAQL,MAAO,CAAEE,YAAa,OAASI,MAAO1D,GAAKrB,EAAY,UAAY,SAAUgF,QAAS,SAAAC,GAAO,EAAKtD,SAAS,CAAE7B,aAAcC,EAAcsB,GAAIrB,UAAWqB,KAAhK,SAAyKA,EAAI,aAQ7L,uBAEA,eAAC,IAAD,CAAY6D,MAAI,EAACpB,UAAU,SAA3B,UACE,eAAC,IAAD,CAAOqB,gBAAgB,MAAvB,UACE,cAAC,IAAD,wBAGA,cAAC,IAAD,UACE,cAAC,IAAD,CACEC,SAAU,CACR,CACEC,MAAO,uBACPF,gBAAiB,UACjBjE,KAAMP,KAAKf,MAAMa,aAGrB6E,OAAO,SACPC,QAAS,CACPC,SAAU,CACRC,SAAS,WAMnB,eAAC,IAAD,WACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAY/B,KAAG,EAAf,UACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,cAAC,IAAD,CAAQC,QAAQ,WAAhB,6BAEF,cAAC,IAAD,CAAMC,GAAG,KAAKF,GAAG,IAAjB,SACE,qBAAKc,MAAO,CAAEC,MAAO,QAASG,MAAO,SAArC,SACE,eAAC,IAAD,CAASa,SAAQ,uCAAE,WAAMT,GAAN,SAAAvE,EAAA,sEAAmB,EAAKG,mBAAmBoE,EAAEU,OAAOC,OAApD,2CAAF,sDAAgEC,QAAM,EAACC,KAAK,KAAKC,KAAK,WAAWlE,GAAG,WAArH,UACE,wBAAQ+D,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,4BAMV,eAAC,IAAD,WACE,wBAAO9B,UAAU,yDAAjB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,yBACA,oBAAIA,UAAU,cAAd,8BAGJ,kCACE,oBAAIC,QAAQ,IAAIxD,OAAQA,EAAQuD,UAAU,cAA1C,yCAEqBE,GAAnB/D,EACEA,EAAgBgE,KAAI,SAACtB,EAAMtB,GACzB,OACE,+BACE,oBAAIyC,UAAU,cAAd,SAA6BnB,EAAKuB,OAClC,oBAAIJ,UAAU,cAAd,SAA6BnB,EAAKwB,QAClC,oBAAIL,UAAU,cAAd,SAA6BnB,EAAKxB,QAClC,oBAAI2C,UAAU,cAAd,SAA6BnB,EAAKyB,SAClC,oBAAIN,UAAU,cAAd,SAA6BnB,EAAKC,QAClC,oBAAIkB,UAAU,cAAd,SAA6BnB,EAAKK,gBAN3B3B,MASR,SAMwB,GAAnCnB,EAAyBkB,OAAc,GACrC,qBAAKqD,MAAO,CAAEC,MAAO,QAASC,YAAa,OAAQC,QAAS,QAA5D,SACE,oBAAIH,MAAO,CAAEC,MAAO,OAAQG,MAAO,QAAnC,SAEI3E,EAAyB+D,KAAI,SAACtB,EAAMtB,GAClC,OACE,6BACE,cAACyD,EAAA,EAAD,CAAQL,MAAO,CAAEE,YAAa,OAASI,MAAO1D,GAAKlB,EAAuB,UAAY,SAAU6E,QAAS,SAAAC,GAAO,EAAKtD,SAAS,CAAE1B,gBAAiBC,EAAyBmB,GAAIlB,qBAAsBkB,KAApM,SAA6MA,EAAI,oC,GAjV3N2E,aCjBtB5G,EAAU,IAAIC,QACZC,EAAOC,aAAaC,QAAQ,QAClCJ,EAAQK,OAAO,gBAAiB,UAAYH,GAC5CF,EAAQK,OAAO,eAAgB,oB,IACzB4G,E,4JACJ,WACE,OACE,8BAEoC,eAAhC9G,aAAaC,QAAQ,QAA2B,cAAC,EAAD,IAAkB,cAAC8G,EAAD,U,GALpDN,aAYTK,a,iCC3CA,KACb,SAAa,kCAEb,UAAc,iBACd,kBAAsB,qBACtB,SAAa,gBACb,YAAgB,mBAChB,YAAgB,mBAChB,YAAgB,mBAChB,SAAa,gBACb,SAAa,gBACb,gBAAoB,mCACpB,yBAA6B,4CAC7B,uBAA2B,iCAC3B,+BAAmC,mCACnC,4BAAgC,mCAChC,WAAe,gBACf,cAAiB,qBAEjB,cAAkB,qBAClB,uBAA2B,8BAE3B,aAAiB,oBACjB,qBAAyB,wBACzB,YAAgB,mBAChB,eAAmB,sBACnB,eAAmB,sBAEnB,cAAkB,qBAClB,sBAA0B,yBAC1B,aAAiB,oBACjB,gBAAoB,uBACpB,gBAAoB,uBAEpB,WAAe,kBACf,UAAc,iBAEd,kBAAsB,wBACtB,iBAAqB,uBAErB,UAAc,iBACd,kBAAsB,qBACtB,SAAa,gBACb,YAAgB,mBAChB,YAAgB,mBAEhB,aAAiB,oBACjB,qBAAyB,wBACzB,YAAgB,mBAChB,eAAmB,sBACnB,eAAmB,sBAEnB,UAAc,iBACd,kBAAsB,qBACtB,SAAa,gBACb,YAAgB,mBAChB,YAAgB,mBAEhB,cAAkB,qBAClB,sBAA0B,yBAC1B,aAAiB,oBACjB,gBAAoB,uBACpB,gBAAoB,uBAEpB,SAAa,gBACb,iBAAqB,oBACrB,QAAY,eACZ,WAAe,kBACf,WAAe,kBAEf,aAAiB,oBACjB,qBAAyB,wBACzB,YAAgB,mBAChB,eAAmB,sBACnB,eAAmB,sBAEnB,UAAc,iBACd,kBAAsB,qBACtB,SAAa,gBACb,YAAgB,mBAChB,YAAgB","file":"static/js/30.cafeb0e3.chunk.js","sourcesContent":["import React from 'react'\nimport { CChartLine } from '@coreui/react-chartjs'\nimport { getStyle, hexToRgba } from '@coreui/utils'\n\nconst brandSuccess = getStyle('success') || '#4dbd74'\nconst brandInfo = getStyle('info') || '#20a8d8'\nconst brandDanger = getStyle('danger') || '#f86c6b'\n\nconst MainChartExample = attributes => {\n  const random = (min, max)=>{\n    return Math.floor(Math.random() * (max - min + 1) + min)\n  }\n\n  const defaultDatasets = (()=>{\n    let elements = 27\n    const data1 = []\n    const data2 = []\n    const data3 = []\n    for (let i = 0; i <= elements; i++) {\n      data1.push(random(50, 200))\n      data2.push(random(80, 100))\n      data3.push(65)\n    }\n    return [\n      {\n        label: 'My First dataset',\n        backgroundColor: hexToRgba(brandInfo, 10),\n        borderColor: brandInfo,\n        pointHoverBackgroundColor: brandInfo,\n        borderWidth: 2,\n        data: data1\n      },\n      {\n        label: 'My Second dataset',\n        backgroundColor: 'transparent',\n        borderColor: brandSuccess,\n        pointHoverBackgroundColor: brandSuccess,\n        borderWidth: 2,\n        data: data2\n      },\n      {\n        label: 'My Third dataset',\n        backgroundColor: 'transparent',\n        borderColor: brandDanger,\n        pointHoverBackgroundColor: brandDanger,\n        borderWidth: 1,\n        borderDash: [8, 5],\n        data: data3\n      }\n    ]\n  })()\n\n  const defaultOptions = (()=>{\n    return {\n        maintainAspectRatio: false,\n        legend: {\n          display: false\n        },\n        scales: {\n          xAxes: [{\n            gridLines: {\n              drawOnChartArea: false\n            }\n          }],\n          yAxes: [{\n            ticks: {\n              beginAtZero: true,\n              maxTicksLimit: 5,\n              stepSize: Math.ceil(250 / 5),\n              max: 250\n            },\n            gridLines: {\n              display: true\n            }\n          }]\n        },\n        elements: {\n          point: {\n            radius: 0,\n            hitRadius: 10,\n            hoverRadius: 4,\n            hoverBorderWidth: 3\n          }\n        }\n      }\n    }\n  )()\n\n  // render\n  return (\n    <CChartLine\n      {...attributes}\n      datasets={defaultDatasets}\n      options={defaultOptions}\n      labels={['Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa', 'Su']}\n    />\n  )\n}\n\n\nexport default MainChartExample\n","import React, { lazy, Component } from 'react'\nimport {\n  CBadge,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CCallout,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CSelect, CCardGroup\n} from '@coreui/react'\n\nimport {\n  CChartBar,\n  CChartLine,\n  CChartDoughnut,\n  CChartRadar,\n  CChartPie,\n  CChartPolarArea\n} from '@coreui/react-chartjs'\n\nimport { DocsLink } from 'src/reusable'\n\nimport {\n  Button\n} from 'reactstrap';\nimport CIcon from '@coreui/icons-react'\nimport axios from 'axios'\nimport Constants from \"./../../contants/contants\";\nimport MainChartExample from '../charts/MainChartExample.js'\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\nclass ShopManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      month: 0,\n      dataUserSale: [],\n      arrPagination: [],\n      indexPage: 0,\n      dataStatistical: [],\n      arrPaginationStatistical: [],\n      indexPageStatistical: 0,\n      company_id: localStorage.getItem('user'),\n      dataApi: [],\n      arrTemp: [],\n      hidden: true,\n      hidden_all: true,\n      arrAllUser: []\n    };\n  }\n\n  async componentDidMount() {\n    await this.getCustomer();\n    await this.getCustomerByMonth(\"01\");\n    await this.getDataForCharts();\n\n  }\n\n  countType(arr, phone) {\n    const count = arr.filter(data => data.Phone == phone);\n    return count.length;\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n    this.setState({ arrPagination: arrTotal, dataUserSale: arrTotal[this.state.indexPage] });\n  }\n\n  pagination_statistical(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal_Statistical = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal_Statistical.push(temparray);\n    }\n    this.setState({ arrPaginationStatistical: arrTotal_Statistical, dataStatistical: arrTotal_Statistical[this.state.indexPageStatistical] });\n  }\n\n  async getCustomer() {\n\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_CUSTOMER,\n      method: 'POST',\n      data: {\n        \"condition\": {\n          \"Company_Id\": id.company_id\n        }\n      },\n      headers: this.state.token\n    });\n\n    this.setState({ dataApi: res.data.data });\n\n\n    //STATISTICAL\n    let arrCount_User_Company = [];\n    for (let i = 0; i < res.data.data.length; i++) {\n      //check if exits in arr\n      if (!arrCount_User_Company.some(item => res.data.data[i].Phone == item.Phone)) {\n        res.data.data[i].count = this.countType(res.data.data, res.data.data[i].Phone);\n        const resCal_Compay = await axios({\n          baseURL: Constants.BASE_URL,\n          url: Constants.CALCULATOR_ALL_USER_OF_COMPANY,\n          method: 'POST',\n          data: {\n            \"company_id\": id.company_id,\n            \"phone\": res.data.data[i].Phone\n          }\n        });\n        res.data.data[i].coefficient = resCal_Compay.data.data.calculator;\n        arrCount_User_Company.push(res.data.data[i])\n      }\n    }\n    if (arrCount_User_Company.length == 0) {\n      this.setState({ hidden: false })\n    } else {\n      this.setState({ hidden: true })\n    }\n    this.pagination(arrCount_User_Company);\n\n  }\n\n  async getDataForCharts() {\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n    let arrMonth = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"]\n    let arrTemp = [];\n    for (let i = 0; i < arrMonth.length; i++) {\n      const res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_CUSTOMER_BY_MONTH,\n        method: 'POST',\n        data: {\n          company_id: id.company_id,\n          month: arrMonth[i]\n        }\n      });\n      arrTemp.push(res.data.data.length)\n    }\n    this.setState({ arrAllUser: arrTemp })\n  }\n\n  async getCustomerByMonth(month) {\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n    var bodyUser = {\n      company_id: id.company_id,\n      month: month\n    }\n\n    if (month == 0) {\n      await this.getCustomer();\n    } else {\n      const res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_CUSTOMER_BY_MONTH,\n        method: 'POST',\n        data: bodyUser\n      });\n\n      if (res.data.data.length == 0) {\n        this.setState({ hidden: false })\n      } else {\n        this.setState({ hidden: true })\n      }\n      this.setState({ dataApi: res.data.data, arrTemp: res.data.data });\n\n      //STATISTICAL\n      let arrCount_User = [];\n      for (let i = 0; i < this.state.arrTemp.length; i++) {\n        //check if exits in arr\n        if (!arrCount_User.some(item => this.state.arrTemp[i].Phone == item.Phone)) {\n          this.state.arrTemp[i].count = this.countType(this.state.arrTemp, this.state.arrTemp[i].Phone);\n          const resCal = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.GET_COEFFICIENT,\n            method: 'POST',\n            data: {\n              \"month\": month,\n              \"company_id\": id.company_id,\n              \"phone\": this.state.arrTemp[i].Phone\n            }\n          });\n          this.state.arrTemp[i].coefficient = resCal.data.data.calculator;\n          arrCount_User.push(this.state.arrTemp[i])\n        }\n      }\n\n      this.pagination_statistical(arrCount_User);\n    }\n  }\n\n  render() {\n    const { dataUserSale, hidden, arrPagination, indexPage, hidden_all,\n      dataStatistical, arrPaginationStatistical, indexPageStatistical } = this.state;\n    return (\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>\n              <CFormGroup row>\n                <CCol md=\"3\">\n                  <CLabel htmlFor=\"selectSm\">ALL USER SALE OF COMPANY</CLabel>\n                </CCol>\n                <CCol xs=\"12\" md=\"9\">\n                  {/*  */}\n                </CCol>\n              </CFormGroup>\n            </CCardHeader>\n            <CCardBody>\n              <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th className=\"text-center\">No.</th>\n                    <th className=\"text-center\">Name</th>\n                    <th className=\"text-center\">Email</th>\n                    <th className=\"text-center\">Phone</th>\n                    <th className=\"text-center\">Gender</th>\n                    <th className=\"text-center\">Time Visits</th>\n                    <th className=\"text-center\">Coefficient</th>\n                    <th className=\"text-center\">Last Times Visit</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <td colSpan=\"9\" hidden={hidden_all} className=\"text-center\">No users in this month</td>\n                  {\n                    dataUserSale != undefined ?\n                      dataUserSale.map((item, i) => {\n                        return (\n                          <tr key={i}>\n                            <td className=\"text-center\">{i + 1}</td>\n                            <td className=\"text-center\">{item.Name}</td>\n                            <td className=\"text-center\">{item.Email}</td>\n                            <td className=\"text-center\">{item.Phone}</td>\n                            <td className=\"text-center\">{item.Gender}</td>\n                            <td className=\"text-center\">{item.count}</td>\n                            <td className=\"text-center\">{item.coefficient}</td>\n                            <td className=\"text-center\">\n                              {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\n                            </td>\n                          </tr>\n                        );\n                      }) : \"\"\n                  }\n                </tbody>\n              </table>\n              {\n                arrPagination.length == 1 ? \"\" :\n                  <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                    <tr style={{ float: \"left\", width: \"100%\" }}>\n                      {\n                        arrPagination.map((item, i) => {\n                          return (\n                            <td>\n                              <Button style={{ marginRight: '5px' }} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ dataUserSale: arrPagination[i], indexPage: i }) }}>{i + 1}</Button>\n                            </td>\n                          );\n                        })\n                      }\n                    </tr>\n                  </div>\n              }\n              <br />\n\n              <CCardGroup rows className=\"cols-2\">\n                <CCard backgroundColor=\"red\">\n                  <CCardHeader>\n                    Bar Chart\n                  </CCardHeader>\n                  <CCardBody>\n                    <CChartBar\n                      datasets={[\n                        {\n                          label: 'Total user of month ',\n                          backgroundColor: '#f87979',\n                          data: this.state.arrAllUser\n                        }\n                      ]}\n                      labels=\"months\"\n                      options={{\n                        tooltips: {\n                          enabled: true\n                        }\n                      }}\n                    />\n                  </CCardBody>\n                </CCard>\n                <CCard>\n                  <CCardHeader>\n                    <CFormGroup row>\n                      <CCol md=\"3\">\n                        <CLabel htmlFor=\"selectSm\">USER ON MONTH</CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"9\">\n                        <div style={{ float: \"right\", width: \"250px\" }}>\n                          <CSelect onChange={async e => { await this.getCustomerByMonth(e.target.value) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                            <option value=\"01\">01</option>\n                            <option value=\"02\">02</option>\n                            <option value=\"03\">03</option>\n                            <option value=\"04\">04</option>\n                            <option value=\"05\">05</option>\n                            <option value=\"06\">06</option>\n                            <option value=\"07\">07</option>\n                            <option value=\"08\">08</option>\n                            <option value=\"09\">09</option>\n                            <option value=\"10\">10</option>\n                            <option value=\"11\">11</option>\n                            <option value=\"12\">12</option>\n                          </CSelect>\n                        </div>\n                      </CCol>\n                    </CFormGroup>\n                  </CCardHeader>\n                  <CCardBody>\n                    <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                      <thead className=\"thead-light\">\n                        <tr>\n                          <th className=\"text-center\">Name</th>\n                          <th className=\"text-center\">Email</th>\n                          <th className=\"text-center\">Phone</th>\n                          <th className=\"text-center\">Gender</th>\n                          <th className=\"text-center\">Times Count</th>\n                          <th className=\"text-center\">Coefficient</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <td colSpan=\"7\" hidden={hidden} className=\"text-center\">No users in this month</td>\n                        {\n                          dataStatistical != undefined ?\n                            dataStatistical.map((item, i) => {\n                              return (\n                                <tr key={i}>\n                                  <td className=\"text-center\">{item.Name}</td>\n                                  <td className=\"text-center\">{item.Email}</td>\n                                  <td className=\"text-center\">{item.Phone}</td>\n                                  <td className=\"text-center\">{item.Gender}</td>\n                                  <td className=\"text-center\">{item.count}</td>\n                                  <td className=\"text-center\">{item.coefficient}</td>\n                                </tr>\n                              );\n                            }) : \"\"\n                        }\n                      </tbody>\n                    </table>\n\n                    {\n                      arrPaginationStatistical.length == 1 ? \"\" :\n                        <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                          <tr style={{ float: \"left\", width: \"100%\" }}>\n                            {\n                              arrPaginationStatistical.map((item, i) => {\n                                return (\n                                  <td>\n                                    <Button style={{ marginRight: '5px' }} color={i == indexPageStatistical ? 'primary' : 'danger'} onClick={e => { this.setState({ dataStatistical: arrPaginationStatistical[i], indexPageStatistical: i }) }}>{i + 1}</Button>\n                                  </td>\n                                );\n                              })\n                            }\n                          </tr>\n                        </div>\n                    }\n                  </CCardBody>\n                </CCard>\n\n              </CCardGroup>\n            </CCardBody>\n          </CCard>\n\n\n\n\n        </CCol>\n      </CRow>\n\n    )\n  }\n}\n\nexport default ShopManager\n","import React, { lazy, Component } from 'react'\nimport {\n  CBadge,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CCallout,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CSelect, CCardGroup\n} from '@coreui/react'\n\nimport {\n  CChartBar,\n  CChartLine,\n  CChartDoughnut,\n  CChartRadar,\n  CChartPie,\n  CChartPolarArea\n} from '@coreui/react-chartjs'\n\nimport { DocsLink } from 'src/reusable'\n\nimport {\n  Button\n} from 'reactstrap';\nimport CIcon from '@coreui/icons-react'\nimport axios from 'axios'\nimport Constants from \"./../../contants/contants\";\nimport MainChartExample from '../charts/MainChartExample.js'\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\nclass ShopManager extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      month: 0,\n      dataUserSale: [],\n      arrPagination: [],\n      indexPage: 0,\n      dataStatistical: [],\n      arrPaginationStatistical: [],\n      indexPageStatistical: 0,\n      company_id: localStorage.getItem('user'),\n      dataApi: [],\n      arrTemp: [],\n      hidden: true,\n      hidden_all: true,\n      arrAllUser: []\n    };\n  }\n\n  async componentDidMount() {\n    await this.getCustomer();\n    await this.getCustomerByMonth(\"01\");\n    await this.getDataForCharts();\n\n  }\n\n  countType(arr, phone) {\n    const count = arr.filter(data => data.Phone == phone);\n    return count.length;\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n    this.setState({ arrPagination: arrTotal, dataUserSale: arrTotal[this.state.indexPage] });\n  }\n\n  pagination_statistical(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal_Statistical = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal_Statistical.push(temparray);\n    }\n    this.setState({ arrPaginationStatistical: arrTotal_Statistical, dataStatistical: arrTotal_Statistical[this.state.indexPageStatistical] });\n  }\n\n  async getCustomer() {\n\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_CUSTOMER,\n      method: 'POST',\n      data: {\n        \"condition\": {\n          \"Company_Id\": id.company_id,\n          \"Sale_Id\": id.sale_id\n        }\n      },\n      headers: this.state.token\n    });\n\n    this.setState({ dataApi: res.data.data });\n\n\n    //STATISTICAL\n    let arrCount_User_Company = [];\n    for (let i = 0; i < res.data.data.length; i++) {\n      //check if exits in arr\n      if (!arrCount_User_Company.some(item => res.data.data[i].Phone == item.Phone)) {\n        res.data.data[i].count = this.countType(res.data.data, res.data.data[i].Phone);\n        const resCal_Compay = await axios({\n          baseURL: Constants.BASE_URL,\n          url: Constants.CALCULATOR_ALL_USER_OF_SALE,\n          method: 'POST',\n          data: {\n            \"company_id\": id.company_id,\n            \"phone\": res.data.data[i].Phone,\n            \"sale_id\": id.sale_id\n          }\n        });\n        res.data.data[i].coefficient = resCal_Compay.data.data.calculator;\n        arrCount_User_Company.push(res.data.data[i])\n      }\n    }\n    if (arrCount_User_Company.length == 0) {\n      this.setState({ hidden: false })\n    } else {\n      this.setState({ hidden: true })\n    }\n    this.pagination(arrCount_User_Company);\n\n  }\n\n  async getDataForCharts() {\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n    let arrMonth = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"]\n    let arrTemp = [];\n    for (let i = 0; i < arrMonth.length; i++) {\n      const res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.GET_USER_SALE_BY_MONTH,\n        method: 'POST',\n        data: {\n          company_id: id.company_id,\n          month: arrMonth[i],\n          sale_id: id.sale_id\n        }\n      });\n      arrTemp.push(res.data.data.length)\n    }\n\n    this.setState({ arrAllUser: arrTemp })\n  }\n\n  async getCustomerByMonth(month) {\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n    var bodyUser = {\n      company_id: id.company_id,\n      month: month,\n      sale_id: id.sale_id\n    }\n\n    if (month == 0) {\n      await this.getCustomer();\n    } else {\n      const res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.GET_USER_SALE_BY_MONTH,\n        method: 'POST',\n        data: bodyUser\n      });\n\n      if (res.data.data.length == 0) {\n        this.setState({ hidden: false })\n      } else {\n        this.setState({ hidden: true })\n      }\n      this.setState({ dataApi: res.data.data, arrTemp: res.data.data });\n\n      //STATISTICAL\n      let arrCount_User = [];\n      for (let i = 0; i < this.state.arrTemp.length; i++) {\n        //check if exits in arr\n        if (!arrCount_User.some(item => this.state.arrTemp[i].Phone == item.Phone)) {\n          this.state.arrTemp[i].count = this.countType(this.state.arrTemp, this.state.arrTemp[i].Phone);\n          const resCal = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.GET_COEFFICIENT_PER_SALE,\n            method: 'POST',\n            data: {\n              \"month\": month,\n              \"company_id\": id.company_id,\n              \"phone\": this.state.arrTemp[i].Phone,\n              \"sale_id\": id.sale_id\n            }\n          });\n          this.state.arrTemp[i].coefficient = resCal.data.data.calculator;\n          arrCount_User.push(this.state.arrTemp[i])\n        }\n      }\n\n      this.pagination_statistical(arrCount_User);\n    }\n  }\n\n  render() {\n    const { dataUserSale, hidden, arrPagination, indexPage, hidden_all,\n      dataStatistical, arrPaginationStatistical, indexPageStatistical } = this.state;\n    return (\n      <CRow>\n        <CCol>\n          <CCard>\n            <CCardHeader>\n              <CFormGroup row>\n                <CCol md=\"3\">\n                  <CLabel htmlFor=\"selectSm\">ALL USER SALE OF COMPANY</CLabel>\n                </CCol>\n                <CCol xs=\"12\" md=\"9\">\n                  {/*  */}\n                </CCol>\n              </CFormGroup>\n            </CCardHeader>\n            <CCardBody>\n              <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                <thead className=\"thead-light\">\n                  <tr>\n                    <th className=\"text-center\">No.</th>\n                    <th className=\"text-center\">Name</th>\n                    <th className=\"text-center\">Email</th>\n                    <th className=\"text-center\">Phone</th>\n                    <th className=\"text-center\">Gender</th>\n                    <th className=\"text-center\">Time Visits</th>\n                    <th className=\"text-center\">Coefficient</th>\n                    <th className=\"text-center\">Last Times Visit</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <td colSpan=\"9\" hidden={hidden_all} className=\"text-center\">No users in this month</td>\n                  {\n                    dataUserSale != undefined ?\n                      dataUserSale.map((item, i) => {\n                        return (\n                          <tr key={i}>\n                            <td className=\"text-center\">{i + 1}</td>\n                            <td className=\"text-center\">{item.Name}</td>\n                            <td className=\"text-center\">{item.Email}</td>\n                            <td className=\"text-center\">{item.Phone}</td>\n                            <td className=\"text-center\">{item.Gender}</td>\n                            <td className=\"text-center\">{item.count}</td>\n                            <td className=\"text-center\">{item.coefficient}</td>\n                            <td className=\"text-center\">\n                              {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\n                            </td>\n                          </tr>\n                        );\n                      }) : \"\"\n                  }\n                </tbody>\n              </table>\n              {\n                arrPagination.length == 1 ? \"\" :\n                  <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                    <tr style={{ float: \"left\", width: \"100%\" }}>\n                      {\n                        arrPagination.map((item, i) => {\n                          return (\n                            <td>\n                              <Button style={{ marginRight: '5px' }} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ dataUserSale: arrPagination[i], indexPage: i }) }}>{i + 1}</Button>\n                            </td>\n                          );\n                        })\n                      }\n                    </tr>\n                  </div>\n              }\n              <br />\n\n              <CCardGroup rows className=\"cols-2\">\n                <CCard backgroundColor=\"red\">\n                  <CCardHeader>\n                    Bar Chart\n                  </CCardHeader>\n                  <CCardBody>\n                    <CChartBar\n                      datasets={[\n                        {\n                          label: 'Total user of month ',\n                          backgroundColor: '#f87979',\n                          data: this.state.arrAllUser\n                        }\n                      ]}\n                      labels=\"months\"\n                      options={{\n                        tooltips: {\n                          enabled: true\n                        }\n                      }}\n                    />\n                  </CCardBody>\n                </CCard>\n                <CCard>\n                  <CCardHeader>\n                    <CFormGroup row>\n                      <CCol md=\"3\">\n                        <CLabel htmlFor=\"selectSm\">USER ON MONTH</CLabel>\n                      </CCol>\n                      <CCol xs=\"12\" md=\"9\">\n                        <div style={{ float: \"right\", width: \"250px\" }}>\n                          <CSelect onChange={async e => { await this.getCustomerByMonth(e.target.value) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                            <option value=\"01\">01</option>\n                            <option value=\"02\">02</option>\n                            <option value=\"03\">03</option>\n                            <option value=\"04\">04</option>\n                            <option value=\"05\">05</option>\n                            <option value=\"06\">06</option>\n                            <option value=\"07\">07</option>\n                            <option value=\"08\">08</option>\n                            <option value=\"09\">09</option>\n                            <option value=\"10\">10</option>\n                            <option value=\"11\">11</option>\n                            <option value=\"12\">12</option>\n                          </CSelect>\n                        </div>\n                      </CCol>\n                    </CFormGroup>\n                  </CCardHeader>\n                  <CCardBody>\n                    <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                      <thead className=\"thead-light\">\n                        <tr>\n                          <th className=\"text-center\">Name</th>\n                          <th className=\"text-center\">Email</th>\n                          <th className=\"text-center\">Phone</th>\n                          <th className=\"text-center\">Gender</th>\n                          <th className=\"text-center\">Times Count</th>\n                          <th className=\"text-center\">Coefficient</th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <td colSpan=\"7\" hidden={hidden} className=\"text-center\">No users in this month</td>\n                        {\n                          dataStatistical != undefined ?\n                            dataStatistical.map((item, i) => {\n                              return (\n                                <tr key={i}>\n                                  <td className=\"text-center\">{item.Name}</td>\n                                  <td className=\"text-center\">{item.Email}</td>\n                                  <td className=\"text-center\">{item.Phone}</td>\n                                  <td className=\"text-center\">{item.Gender}</td>\n                                  <td className=\"text-center\">{item.count}</td>\n                                  <td className=\"text-center\">{item.coefficient}</td>\n                                </tr>\n                              );\n                            }) : \"\"\n                        }\n                      </tbody>\n                    </table>\n\n                    {\n                      arrPaginationStatistical.length == 1 ? \"\" :\n                        <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                          <tr style={{ float: \"left\", width: \"100%\" }}>\n                            {\n                              arrPaginationStatistical.map((item, i) => {\n                                return (\n                                  <td>\n                                    <Button style={{ marginRight: '5px' }} color={i == indexPageStatistical ? 'primary' : 'danger'} onClick={e => { this.setState({ dataStatistical: arrPaginationStatistical[i], indexPageStatistical: i }) }}>{i + 1}</Button>\n                                  </td>\n                                );\n                              })\n                            }\n                          </tr>\n                        </div>\n                    }\n                  </CCardBody>\n                </CCard>\n\n              </CCardGroup>\n            </CCardBody>\n          </CCard>\n\n\n\n\n        </CCol>\n      </CRow>\n\n    )\n  }\n}\n\nexport default ShopManager\n","import React, { lazy, Component } from 'react'\nimport {\n  CBadge,\n  CButton,\n  CButtonGroup,\n  CCard,\n  CCardBody,\n  CCardFooter,\n  CCardHeader,\n  CCol,\n  CProgress,\n  CRow,\n  CCallout,\n  CForm,\n  CFormGroup,\n  CLabel,\n  CSelect\n} from '@coreui/react'\nimport CIcon from '@coreui/icons-react'\nimport axios from 'axios'\nimport Constants from \"./../../contants/contants\";\nimport MainChartExample from '../charts/MainChartExample.js'\nimport ShopManager from './ShopManager'\nimport SaleManager from './SaleManager'\n\nconst WidgetsDropdown = lazy(() => import('../widgets/WidgetsDropdown.js'))\nconst WidgetsBrand = lazy(() => import('../widgets/WidgetsBrand.js'))\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\nclass Dashboard extends Component {\n  render() {\n    return (\n      <div>\n        {\n          localStorage.getItem('role') == 'SHOPMANAGER' ? <ShopManager /> : <SaleManager />\n        }\n      </div>\n    )\n  }\n}\n\nexport default Dashboard\n","export default {\n  \"BASE_URL\" : \"https://thanhvien.applamdep.com\",\n  //\"BASE_URL\" : \"http://localhost:3000\",\n  \"LIST_USER\" : \"/api/list-user\",\n  \"LIST_USER_WITH_ID\" : \"/api/list-user?id=\",\n  \"ADD_USER\" : \"/api/add-user\",\n  \"UPDATE_USER\" : \"/api/update-user\",\n  \"DELETE_USER\" : \"/api/delete-user\",\n  \"LOGIN_ADMIN\" : \"/api/login_admin\",\n  \"GET_SHOP\" : \"/api/get-shop\",\n  \"GET_SALE\" : \"/api/get-sale\",\n  \"GET_COEFFICIENT\" : \"/api/calculator-coefficient-user\",\n  \"GET_COEFFICIENT_PER_SALE\" : \"/api/calculator-coefficient-user-per-sale\",\n  \"GET_USER_SALE_BY_MONTH\" : \"/api/get-user-of-sale-by-month\",\n  \"CALCULATOR_ALL_USER_OF_COMPANY\" : \"/api/calculator-all-user-company\",\n  \"CALCULATOR_ALL_USER_OF_SALE\" : \"/api/calculator-all-user-of-sale\",\n  \"GET_SEEDER\" : \"/api/get-seed\",\n  \"GET_SALE_NAME\": \"/api/get-name-sale\",\n\n  \"LIST_CUSTOMER\" : \"/api/list-customer\",\n  \"LIST_CUSTOMER_BY_MONTH\" : \"/api/get-user-sale-by-month\",\n\n  \"LIST_TYPEKEY\" : \"/api/list-typekey\",\n  \"LIST_TYPEKEY_WITH_ID\" : \"/api/list-typekey?id=\",\n  \"ADD_TYPEKEY\" : \"/api/add-typekey\",\n  \"UPDATE_TYPEKEY\" : \"/api/update-typekey\",\n  \"DELETE_TYPEKEY\" : \"/api/delete-typekey\",\n\n  \"LIST_HARDWARE\" : \"/api/list-hardware\",\n  \"LIST_HARDWARE_WITH_ID\" : \"/api/list-hardware?id=\",\n  \"ADD_HARDWARE\" : \"/api/add-hardware\",\n  \"UPDATE_HARDWARE\" : \"/api/update-hardware\",\n  \"DELETE_HARDWARE\" : \"/api/delete-hardware\",\n\n  \"LIST_ORDER\" : \"/api/list-order\",\n  \"ADD_ORDER\" : \"/api/add-order\",\n\n  \"LIST_ORDER_DETAIL\" : \"/api/list-orderdetail\",\n  \"ADD_ORDER_DETAIL\" : \"/api/add-orderdetail\",\n\n  \"LIST_ROLE\" : \"/api/list-role\",\n  \"LIST_ROLE_WITH_ID\" : \"/api/list-role?id=\",\n  \"ADD_ROLE\" : \"/api/add-role\",\n  \"UPDATE_ROLE\" : \"/api/update-role\",\n  \"DELETE_ROLE\" : \"/api/delete-role\",\n\n  \"LIST_SALELOG\" : \"/api/list-salelog\",\n  \"LIST_SALELOG_WITH_ID\" : \"/api/list-salelog?id=\",\n  \"ADD_SALELOG\" : \"/api/add-salelog\",\n  \"UPDATE_SALELOG\" : \"/api/update-salelog\",\n  \"DELETE_SALELOG\" : \"/api/delete-salelog\",\n\n  \"LIST_SALE\" : \"/api/list-sale\",\n  \"LIST_SALE_WITH_ID\" : \"/api/list-sale?id=\",\n  \"ADD_SALE\" : \"/api/add-sale\",\n  \"UPDATE_SALE\" : \"/api/update-sale\",\n  \"DELETE_SALE\" : \"/api/delete-sale\",\n\n  \"LIST_KEYORDER\" : \"/api/list-keyorder\",\n  \"LIST_KEYORDER_WITH_ID\" : \"/api/list-keyorder?id=\",\n  \"ADD_KEYORDER\" : \"/api/add-keyorder\",\n  \"UPDATE_KEYORDER\" : \"/api/update-keyorder\",\n  \"DELETE_KEYORDER\" : \"/api/delete-keyorder\",\n\n  \"LIST_KEY\" : \"/api/list-key\",\n  \"LIST_KEY_WITH_ID\" : \"/api/list-key?id=\",\n  \"ADD_KEY\" : \"/api/add-key\",\n  \"UPDATE_KEY\" : \"/api/update-key\",\n  \"DELETE_KEY\" : \"/api/delete-key\",\n\n  \"LIST_COMPANY\" : \"/api/list-company\",\n  \"LIST_COMPANY_WITH_ID\" : \"/api/list-company?id=\",\n  \"ADD_COMPANY\" : \"/api/add-company\",\n  \"UPDATE_COMPANY\" : \"/api/update-company\",\n  \"DELETE_COMPANY\" : \"/api/delete-company\",\n\n  \"LIST_LINK\" : \"/api/list-link\",\n  \"LIST_LINK_WITH_ID\" : \"/api/list-link?id=\",\n  \"ADD_LINK\" : \"/api/add-link\",\n  \"UPDATE_LINK\" : \"/api/update-link\",\n  \"DELETE_LINK\" : \"/api/delete-link\",\n\n};\n"],"sourceRoot":""}