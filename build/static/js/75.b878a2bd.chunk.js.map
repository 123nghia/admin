{"version":3,"sources":["views/base/tables/AI_Skin/HistorySkin.js"],"names":["headers","Headers","auth","localStorage","getItem","append","HistorySkin","props","getData","a","state","activePage","itemPerPage","setState","isLoading","axios","baseURL","Constants","BASE_URL","url","LIST_HISTORY_SKIN","data","page","limit","method","res","dataApi","itemsCount","total","handlePageChange","pageNumber","getData_ByCondition","LIST_HISTORY_SKIN_BY_CONDITION","token","active","map","val","Status","totalActive","key","numPage","modalCom","hidden","action","UserName","Result","User_Id","Company_Id","Sale_Id","modalDelete","delete","indexPage","Authorization","type","BASE_URL_CURRENT","console","log","this","arr","JSON","parse","i","length","window","location","hash","isHidden","href","d","toLocaleUpperCase","includes","push","e","target","name","value","status","className","css","override","size","color","loading","speedMultiplier","ble","colSpan","undefined","item","src","Image","style","width","height","outline","onClick","Name","Date","Create_Date","toLocaleDateString","toLocaleTimeString","float","itemsCountPerPage","totalItemsCount","pageRangeDisplayed","onChange","itemClass","linkClass","Component"],"mappings":"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","file":"static/js/75.b878a2bd.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport CIcon from '@coreui/icons-react'\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n} from 'reactstrap';\n\nimport {\n  CButton\n} from '@coreui/react'\n\n//import Pagination from '@material-ui/lab/Pagination';\nimport Pagination from \"react-js-pagination\";\nimport 'moment-timezone';\nimport Constants from \"../../../../contants/contants\";\nimport axios from 'axios'\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\n\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\nclass HistorySkin extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      page: 1,\n      limit: 20,\n      totalActive: 0,\n      activePage: 1,\n      numPage: 1,\n      itemsCount: 0,\n      itemPerPage: 5,\n      modalCom: false,\n      dataApi: [],\n      hidden: false,\n      action: 'new',\n      UserName: '',\n      Result: '',\n      User_Id: '',\n      Company_Id: '',\n      Sale_Id: '',\n      modalDelete: false,\n      delete: null,\n      indexPage: 0,\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      isLoading: false,\n      type: localStorage.getItem('type'),\n      BASE_URL: Constants.BASE_URL_CURRENT,\n    };\n  }\n  async componentDidMount() {\n    console.log(this.state.type)\n    if (this.state.type == '0') {\n      this.getData()\n    } else {\n      this.getData_ByCondition()\n    }\n\n    let arr = JSON.parse(localStorage.getItem('url'));\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].url == window.location.hash) {\n        if (arr[i].isHidden == true) {\n          window.location.href = '#/'\n        }\n      }\n    }\n  }\n\n  getData = async () => {\n    const { activePage, itemPerPage } = this.state;\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_HISTORY_SKIN,\n      data: {\n        page: activePage,\n        limit: itemPerPage\n      },\n      method: 'POST'\n    });\n\n    let data = res.data.data;\n\n    this.setState({ dataApi: data.data, data: data.data, isLoading: false, itemsCount: data.total });\n  }\n\n  handlePageChange = async (pageNumber) => {\n    this.setState({ activePage: pageNumber }, () => {\n      this.getData();\n    });\n  };\n\n  getData_ByCondition = async () => {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_HISTORY_SKIN_BY_CONDITION,\n      method: 'POST',\n      headers: this.state.token\n    });\n\n    let data = res.data.data\n    this.setState({ dataApi: data.data, data: data.data });\n\n    let active = 0\n\n    data.data.map(val => {\n      if (val.Status == \"Actived\") {\n        active = active + 1\n      }\n    })\n\n    this.setState({ isLoading: false, totalActive: active, itemsCount: data.total });\n  }\n\n  searchKey(key) {\n    this.setState({ key: key })\n\n    if (key != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if (val.UserName.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n          d.push(val)\n        }\n      })\n      let active = 0\n\n      d.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: d, totalActive: active })\n    } else {\n      let active = 0\n\n      this.state.dataApi.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: this.state.dataApi, totalActive: active })\n    }\n  }\n\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  getBadge(status) {\n    switch (status) {\n      case 'Actived': return 'success'\n      case 'Inactive': return 'secondary'\n      case 'Locked': return 'warning'\n      case 'Deactived': return 'danger'\n      default: return 'primary'\n    }\n  }\n\n  render() {\n    const { data, activePage, itemPerPage, itemsCount } = this.state;\n\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Lịch sử soi da\n                </CardHeader>\n                <CardBody>\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        <th className=\"text-center\">Tên</th>\n                        <th className=\"text-center\">Hình ảnh</th>\n                        <th className=\"text-center\">Kết quả</th>\n                        <th className=\"text-center\">Công ty</th>\n                        <th className=\"text-center\">Sale</th>\n                        <th className=\"text-center\">Ngày tạo</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <td colSpan=\"10\" hidden={data.length > 0 ? true : false } className=\"text-center\">Không tìm thấy dữ liệu</td>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                <td className=\"text-center\">{item.UserName}</td>\n                                <td className=\"text-center\">\n                                  <img src={item.Image} style={{ width: '50%', height: 50 }} />\n                                </td>\n                                <td className=\"text-center\">\n                                  <CButton outline color=\"primary\" onClick={e => {\n                                    console.log(JSON.parse(item.Result))\n                                  }}><CIcon name=\"cil-magnifying-glass\" /> Xem chi tiết</CButton>\n                                  {/* <img src={this.state.BASE_URL + \"/images/calendar.png\"} style={{ width: '10%' }} /> */}\n                                  {/* {item.Result} */}\n                                </td>\n                                <td className=\"text-center\">{item.Company_Id.Name}</td>\n                                <td className=\"text-center\">{item.Sale_Id == null ? \"ADMIN\" : item.Sale_Id.Name}</td>\n                                <td className=\"text-center\">\n                                  {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n                </CardBody>\n              </Card>\n\n              <div style={{ float: 'right' }}>\n                <Pagination\n                  activePage={activePage}\n                  itemsCountPerPage={itemPerPage}\n                  totalItemsCount={itemsCount}\n                  pageRangeDisplayed={10}\n                  onChange={(e) => this.handlePageChange(e)}\n                  itemClass=\"page-item\"\n                  linkClass=\"page-link\"\n                />\n              </div>\n            </Col>\n          </Row>\n        </div>\n      );\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nexport default HistorySkin;\n"],"sourceRoot":""}