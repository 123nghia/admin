{"version":3,"sources":["views/base/tables/Key.js","contants/contants.js","views/Common/TextFieldGroup.js"],"names":["headers","Headers","auth","localStorage","getItem","append","Users","props","getData","a","setState","isLoading","axios","baseURL","Constants","BASE_URL","url","LIST_KEY","method","res","pagination","data","dataApi","active","map","val","Status","totalActive","openDelete","item","modalDelete","state","delete","key","activePage","page","itemsCount","limit","modalCom","viewingUser","communities","updated","action","Name","Company_Id","Type_Key","Start_Date","Date","End_Date","Value","dataCompany","currentCompany","dataTypeKey","currentTypeKey","arrPagination","indexPage","this","i","j","temparray","arrTotal","length","slice","push","d","toLocaleUpperCase","includes","getCompanyData","getTypeKeyData","alert","body","ADD_KEY","is_success","message","id","UPDATE_KEY","DELETE_KEY","fetchData","fetch","global","then","users","json","result","total","catch","console","log","LIST_COMPANY","resCompany","undefined","LIST_COMPANY_WITH_ID","currentC","LIST_TYPEKEY","resType","LIST_TYPEKEY_WITH_ID","e","target","name","value","className","style","styles","success","danger","deleted","tags","searchInput","onChange","searchKey","placeholder","outline","color","floatRight","size","onClick","toggleModal","responsive","wa10","wh12","wh15","w5","row","toLocaleDateString","toLocaleTimeString","mgl5","openUpdate","float","marginRight","padding","isOpen","field","label","flexLabel","htmlFor","flexOption","selected","_id","datePicker","date","addUser","updateUser","disabled","toggle","Email","Component","marginBottom","width","height","textDecoration","marginTop","spinner","center","textAlign","tbody","overflowY","marginLeft","display","userActive","userPending","nagemonNameCol","image","borderRadius","TextFieldGroup","error","type","checkUserExists","readOnly","classnames","onBlur","defaultProps"],"mappings":"4dAkBIA,EAAU,IAAIC,QACZC,EAAOC,aAAaC,QAAQ,QAClCJ,EAAQK,OAAO,gBAAiB,UAAYH,GAC5CF,EAAQK,OAAO,eAAgB,oB,IACzBC,E,kDACF,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IA8CVC,QA/CmB,sBA+CT,8BAAAC,EAAA,6DACN,EAAKC,SAAS,CAAEC,WAAW,IADrB,SAEYC,IAAM,CACpBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUG,SACfC,OAAQ,QALN,OAEAC,EAFA,OAQN,EAAKC,WAAWD,EAAIE,KAAKA,MACzB,EAAKX,SAAS,CAAEY,QAASH,EAAIE,KAAKA,OAE9BE,EAAS,EAEbJ,EAAIE,KAAKA,KAAKG,KAAI,SAAAC,GACI,WAAdA,EAAIC,SACJH,GAAkB,MAI1B,EAAKb,SAAS,CAAEC,WAAW,EAAOgB,YAAaJ,IAnBzC,2CA/CS,EAmNnBK,WAAa,SAACC,GACV,EAAKnB,SAAS,CACVoB,aAAc,EAAKC,MAAMD,YACzBE,OAAQH,KApNZ,EAAKE,MAAQ,CACTV,KAAM,GACNY,IAAK,GACLC,WAAY,EACZC,KAAM,EACNC,WAAY,EACZC,MAAO,GACPV,YAAa,EACbW,UAAU,EACVC,YAAa,GACbC,YAAa,GACbC,QAAS,GACTnB,QAAS,GACToB,OAAQ,MACRC,KAAM,GACNC,WAAY,GACZC,SAAU,GACVC,WAAY,IAAIC,KAChBC,SAAU,IAAID,KACdrB,OAAQ,GACRuB,MAAO,GACPnB,aAAa,EACbE,OAAQ,KACRkB,YAAa,GACbC,eAAgB,GAChBC,YAAa,GACbC,eAAgB,GAChBC,cAAe,GACfC,UAAW,GA9BA,E,4FAiCnB,sBAAA9C,EAAA,sDACI+C,KAAKhD,UADT,gD,8EAIA,SAAWc,GACP,IAAImC,EAAGC,EAAGC,EACNC,EAAW,GACf,IAAKH,EAAI,EAAGC,EAAIpC,EAAQuC,OAAQJ,EAAIC,EAAGD,GAFV,EAGzBE,EAAYrC,EAAQwC,MAAML,EAAGA,EAHJ,GAIzBG,EAASG,KAAKJ,GAElBH,KAAK9C,SAAS,CAAE4C,cAAeM,EAAUvC,KAAMuC,EAASJ,KAAKzB,MAAMwB,e,uBAyBvE,SAAUtB,GACN,IAAQsB,EAAcC,KAAKzB,MAAnBwB,UAGR,GAFAC,KAAK9C,SAAS,CAAEuB,IAAKA,IAEV,IAAPA,EAAW,CACX,IAAI+B,EAAI,GACRR,KAAKzB,MAAMT,QAAQE,KAAI,SAAAC,GACfA,EAAIkB,KAAKsB,oBAAoBC,SAASjC,EAAIgC,sBAC1CD,EAAED,KAAKtC,MAGf,IAAIF,EAAS,EAEbyC,EAAExC,KAAI,SAAAC,GACgB,WAAdA,EAAIC,SACJH,GAAkB,MAI1BiC,KAAK9C,SAAS,CAAEW,KAAM2C,EAAGrC,YAAaJ,QACnC,CACH,IAAIA,EAAS,EAEbiC,KAAKzB,MAAMT,QAAQE,KAAI,SAAAC,GACD,WAAdA,EAAIC,SACJH,GAAkB,MAI1BiC,KAAK9C,SAAS,CAAEW,KAAMmC,KAAKzB,MAAMuB,cAAcC,GAAY5B,YAAaJ,O,gEAIhF,WAAkBU,GAAlB,SAAAxB,EAAA,sEACU+C,KAAKW,iBADf,uBAEUX,KAAKY,iBAFf,OAGe,OAAPnC,GACAuB,KAAK9C,SAAS,CACV4B,UAAWkB,KAAKzB,MAAMO,SACtBI,OAAQT,EACRU,KAAM,GACNC,WAAY,GACZC,SAAU,GACVC,WAAY,IAAIC,KAChBC,SAAU,IAAID,KACdE,MAAO,KAZnB,gD,6EAiBA,SAAShB,EAAKR,GACV+B,KAAK9C,SAAL,eAAiBuB,EAAMR,M,4DAG3B,4CAAAhB,EAAA,2DACwE+C,KAAKzB,MAAjEY,EADZ,EACYA,KAAMC,EADlB,EACkBA,WAAYC,EAD9B,EAC8BA,SAAUC,EADxC,EACwCA,WAAYE,EADpD,EACoDA,SAAUC,EAD9D,EAC8DA,MAE9C,MAARN,GAAwB,IAARA,EAHxB,uBAIQ0B,MAAM,uCAJd,iCAQUC,EAAO,CACT3B,KAAMA,EACNC,WAAYA,EACZC,SAAUA,EACVC,WAAYA,EACZE,SAAUA,EACVC,MAAOA,GAGXO,KAAK9C,SAAS,CAAEC,WAAW,IAjB/B,SAkBsBC,IAAM,CACpBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUyD,QACfrD,OAAQ,MACRG,KAAMiD,IAtBd,OAyB+B,IAPrBnD,EAlBV,QAyBYE,KAAKmD,YACThB,KAAKhD,UACLgD,KAAK9C,SAAS,CAAE4B,UAAWkB,KAAKzB,MAAMO,aAEtC+B,MAAMlD,EAAIE,KAAKoD,SACfjB,KAAK9C,SAAS,CAAEC,WAAW,KA9BnC,iD,qHAkCA,WAAiBkB,GAAjB,SAAApB,EAAA,sEACU+C,KAAKW,eAAetC,EAAKe,YADnC,uBAEUY,KAAKY,eAAevC,EAAKgB,UAFnC,OAIIW,KAAK9C,SAAS,CACV4B,UAAWkB,KAAKzB,MAAMO,SACtBI,OAAQ,SACRC,KAAMd,EAAKc,KACXC,WAAYf,EAAKe,WACjBC,SAAUhB,EAAKgB,SACfC,WAAYjB,EAAKiB,WACjBE,SAAUnB,EAAKmB,SACfC,MAAOpB,EAAKoB,MACZyB,GAAI7C,EAAI,IACRH,OAAQG,EAAKH,SAdrB,gD,sHAkBA,8CAAAjB,EAAA,2DACgF+C,KAAKzB,MAAzEY,EADZ,EACYA,KAAMC,EADlB,EACkBA,WAAYC,EAD9B,EAC8BA,SAAUC,EADxC,EACwCA,WAAYE,EADpD,EACoDA,SAAUC,EAD9D,EAC8DA,MAAOvB,EADrE,EACqEA,OAErD,MAARiB,GAAwB,IAARA,EAHxB,uBAIQ0B,MAAM,uCAJd,iCAQUC,EAAO,CACT3B,KAAMA,EACNC,WAAYA,EACZC,SAAUA,EACVC,WAAYA,EACZE,SAAUA,EACVC,MAAOA,EACPyB,GAAIlB,KAAKzB,MAAM2C,GACfhD,OAAQA,GAGZ8B,KAAK9C,SAAS,CAAEC,WAAW,IAnB/B,SAoBsBC,IAAM,CACpBC,QAASC,IAAUC,SACnBC,IAAKF,IAAU6D,WACfzD,OAAQ,OACRG,KAAMiD,IAxBd,OA2B+B,IAPrBnD,EApBV,QA2BYE,KAAKmD,YACThB,KAAKhD,UACLgD,KAAK9C,SAAS,CAAE4B,UAAWkB,KAAKzB,MAAMO,aAEtC+B,MAAMlD,EAAIE,KAAKoD,SACfjB,KAAK9C,SAAS,CAAEC,WAAW,KAhCnC,iD,iHA2CA,4BAAAF,EAAA,6DACI+C,KAAK9C,SAAS,CAAEC,WAAW,IAD/B,SAEsBC,IAAM,CACpBC,QAASC,IAAUC,SACnBC,IAAKF,IAAU8D,WACf1D,OAAQ,SACRG,KAAM,CACF,GAAMmC,KAAKzB,MAAMC,OAAX,OAPlB,OAW+B,IATrBb,EAFV,QAWYE,KAAKmD,YACThB,KAAKhD,UACLgD,KAAK9C,SAAS,CAAEoB,aAAc0B,KAAKzB,MAAMD,YAAaE,OAAQ,SAE9DqC,MAAMlD,EAAIE,KAAKoD,SACfjB,KAAK9C,SAAS,CAAEC,WAAW,KAhBnC,gD,4EAqBA,WAAoB,IAAD,OAAVwB,EAAU,uDAAH,EACNE,EAAQmB,KAAKzB,MAAMM,MACnBJ,EAAMuB,KAAKzB,MAAME,KAAO,GACxB4C,EAAY,CACd3D,OAAQ,MACRlB,QAASA,GAEb8E,MAAMC,EAAOhE,SAAW,oBAAsBkB,EAAM,SAAWE,EAAO,UAAYE,EAAOwC,GAAWG,MAAK,SAAAC,GACrGA,EAAMC,OAAOF,MAAK,SAAAG,GACd,EAAKzE,SAAS,CACVW,KAAM8D,EAAO9D,KACbe,WAAY+C,EAAOC,MACnBlD,WAAYC,EACZR,YAAawD,EAAOxD,YACpBc,QAAS,WAGlB4C,MAAMC,QAAQC,O,mEAGrB,WAAqBb,GAArB,iBAAAjE,EAAA,sEAC6BG,IAAM,CAC3BC,QAASC,IAAUC,SACnBC,IAAKF,IAAU0E,aACftE,OAAQ,QAJhB,UACUuE,EADV,OAOc,IAANf,QAAkBgB,GAANhB,EAPpB,gCAQ+B9D,IAAM,CACzBC,QAASC,IAAUC,SACnBC,IAAKF,IAAU6E,qBAAuBjB,EACtCxD,OAAQ,QAXpB,OAakC,OALpB0E,EARd,QAaqBvE,KAAKA,WAAsCqE,GAAtBE,EAASvE,KAAKA,MAC5CmC,KAAK9C,SAAS,CAAEyC,eAAgByC,EAASvE,KAAKA,KAAKsB,OAd/D,OAiBIa,KAAK9C,SAAS,CAAEwC,YAAauC,EAAWpE,KAAKA,OAjBjD,gD,0HAoBA,WAAqBqD,GAArB,iBAAAjE,EAAA,sEAC0BG,IAAM,CACxBC,QAASC,IAAUC,SACnBC,IAAKF,IAAU+E,aACf3E,OAAQ,QAJhB,UACU4E,EADV,OAOc,IAANpB,QAAkBgB,GAANhB,EAPpB,gCAQqC9D,IAAM,CAC/BC,QAASC,IAAUC,SACnBC,IAAKF,IAAUiF,qBAAuBrB,EACtCxD,OAAQ,QAXpB,OAawC,OAL1BmC,EARd,QAa2BhC,KAAKA,WAA4CqE,GAA5BrC,EAAehC,KAAKA,MACxDmC,KAAK9C,SAAS,CAAE2C,eAAgBA,EAAehC,KAAKA,KAAKsB,OAdrE,OAiBIa,KAAK9C,SAAS,CAAE0C,YAAa0C,EAAQzE,KAAKA,OAjB9C,gD,gFAoBA,SAAY2E,GACRxC,KAAK9C,SAAL,eAAiBsF,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,oBAG9C,WAAU,IAAD,OACL,EACsF3C,KAAKzB,MADnFV,EAAR,EAAQA,KAAMY,EAAd,EAAcA,IAA+BiB,GAA7C,EAAmBX,YAAnB,EAAgCC,YAAhC,EAA6CU,aACzCC,EADJ,EACIA,eAAgBC,EADpB,EACoBA,YAAaC,EADjC,EACiCA,eAAgBX,EADjD,EACiDA,OAAQY,EADzD,EACyDA,cAAeC,EADxE,EACwEA,UAExE,OAAKC,KAAKzB,MAAMpB,UA6LZ,qBAAK+D,GAAG,eAAR,SACI,sBAAK0B,UAAU,cAAf,UACI,qBAAKA,UAAU,eACf,qBAAKA,UAAU,eACf,qBAAKA,UAAU,oBA/LnB,sBAAKA,UAAU,kBAAf,UACI,cAAC,IAAD,UACI,eAAC,IAAD,WACI,mBAAGC,MAAOC,EAAOC,QAAjB,SAA2B/C,KAAKzB,MAAMU,UACtC,mBAAG4D,MAAOC,EAAOE,OAAjB,SAA0BhD,KAAKzB,MAAM0E,UACrC,eAAC,IAAD,WACI,eAAC,IAAD,WACI,mBAAGL,UAAU,wBADjB,qBAC4EV,GAAnBlC,KAAKzB,MAAMV,MAAwC,MAAnBmC,KAAKzB,MAAMV,KAC5FmC,KAAKzB,MAAMV,KAAKwC,OAAS,EAFjC,aAE8CL,KAAKzB,MAAMJ,YAFzD,WAE8E6B,KAAKzB,MAAMwB,UAAY,EAFrG,IAGI,qBAAK8C,MAAOC,EAAOI,KAAnB,SACI,gCACI,cAAC,IAAD,CAAOL,MAAOC,EAAOK,YAAaC,SAAU,SAACZ,GAAD,OAAO,EAAKa,UAAUb,EAAEC,OAAOE,QAAQD,KAAK,MAAMC,MAAOlE,EAAK6E,YAAY,WACtH,cAAC,IAAD,CAAQC,SAAO,EAACC,MAAM,UAAUX,MAAOC,EAAOW,WAAYC,KAAK,KAAKC,QAAO,uCAAE,WAAMnB,GAAN,SAAAvF,EAAA,sEAAiB,EAAK2G,YAAY,OAAlC,mFAAF,sDAA3E,yBAIZ,cAAC,IAAD,UACI,eAAC,IAAD,CAAOC,YAAU,EAAjB,UACI,gCACI,+BACI,oBAAIhB,MAAOC,EAAOgB,KAAlB,iBACA,oBAAIjB,MAAOC,EAAOiB,KAAlB,kBACA,oBAAIlB,MAAOC,EAAOkB,KAAlB,wBACA,oBAAInB,MAAOC,EAAOkB,KAAlB,sBACA,oBAAInB,MAAOC,EAAOiB,KAAlB,wBACA,oBAAIlB,MAAOC,EAAOiB,KAAlB,sBACA,oBAAIlB,MAAOC,EAAOiB,KAAlB,mBACA,oBAAIlB,MAAOC,EAAOiB,KAAlB,oBACA,oBAAIlB,MAAOC,EAAOmB,GAAlB,yBAGR,qCAEgB/B,GAARrE,EACAA,EAAKG,KAAI,SAACK,EAAM4B,GACZ,OACI,qBAAY4C,MAAOC,EAAOoB,IAA1B,UACI,oBAAIrB,MAAOC,EAAOgB,KAAlB,SAAyB7D,EAAI,IAC7B,oBAAI4C,MAAOC,EAAOiB,KAAlB,SAAyB1F,EAAKc,OAC9B,oBAAI0D,MAAOC,EAAOkB,KAAlB,SAAyB3F,EAAKe,aAC9B,oBAAIyD,MAAOC,EAAOkB,KAAlB,SAAyB3F,EAAKgB,WAC9B,oBAAIwD,MAAOC,EAAOiB,KAAlB,SACM,IAAIxE,KAAKlB,EAAKiB,YAAa6E,qBAAuB,IAAO,IAAI5E,KAAKlB,EAAKiB,YAAa8E,uBAE1F,oBAAIvB,MAAOC,EAAOiB,KAAlB,SACM,IAAIxE,KAAKlB,EAAKmB,UAAW2E,qBAAuB,IAAO,IAAI5E,KAAKlB,EAAKmB,UAAW4E,uBAEtF,oBAAIvB,MAAOC,EAAOiB,KAAlB,SAAyB1F,EAAKoB,QAC9B,oBAAIoD,MAAOC,EAAOiB,KAAlB,SAAyB1F,EAAKH,SAC9B,qBAAI2E,MAAOC,EAAOmB,GAAlB,UACI,cAAC,IAAD,CAAQpB,MAAOC,EAAOuB,KAAMd,SAAO,EAACC,MAAM,UAAUE,KAAK,KAAKC,QAAO,uCAAE,WAAOnB,GAAP,SAAAvF,EAAA,sEAAmB,EAAKqH,WAAWjG,GAAnC,mFAAF,sDAArE,oBAAkI,IAClI,cAAC,IAAD,CAAQkF,SAAO,EAACC,MAAM,SAASE,KAAK,KAAKC,QAAS,SAACnB,GAAQ,EAAKpE,WAAWC,IAA3E,yBAfC4B,MAmBZ,aAOG,GAAxBH,EAAcO,OAAc,GACxB,qBAAKwC,MAAO,CAAE0B,MAAO,QAASC,YAAa,OAAQC,QAAS,QAA5D,SACI,oBAAI5B,MAAOC,EAAOoB,IAAlB,SAEQpE,EAAc9B,KAAI,SAACK,EAAM4B,GACrB,OACI,6BACI,cAAC,IAAD,CAAQ4C,MAAOC,EAAOlF,WAAY4F,MAAOvD,GAAKF,EAAY,UAAY,SAAU4D,QAAS,SAAAnB,GAAO,EAAKtF,SAAS,CAAEW,KAAMiC,EAAcG,GAAIF,UAAWE,KAAnJ,SAA4JA,EAAI,kBAWxM,eAAC,IAAD,CAAOyE,OAAQ1E,KAAKzB,MAAMO,SAAU8D,UAAW5C,KAAKjD,MAAM6F,UAA1D,UACI,cAAC,IAAD,UAAmC,OAArB5C,KAAKzB,MAAMW,OAAX,oBAEd,eAAC,IAAD,WACI,cAAC,IAAD,CACIyF,MAAM,OACNC,MAAM,OACNjC,MAAO3C,KAAKzB,MAAMY,KAClBmE,YAAa,OAEbF,SAAU,SAAAZ,GAAC,OAAI,EAAKY,SAAS,OAAQZ,EAAEC,OAAOE,UAIlD,gCACI,uBAAOE,MAAOC,EAAO+B,UAAWC,QAAQ,MAAxC,0BACA,yBAAQjC,MAAOC,EAAOiC,WAAYrC,KAAK,aAAaU,SAAU,SAAAZ,GAAC,OAAI,EAAKY,SAAS,aAAcZ,EAAEC,OAAOE,QAAxG,UACI,wBAAQA,MAAO3C,KAAKzB,MAAMa,WAA1B,mBAEIM,EAAY1B,KAAI,SAACK,EAAM4B,GACnB,OAAI5B,EAAKc,MAAQQ,EAET,wBAAQqF,UAAQ,EAACrC,MAAOtE,EAAK4G,IAA7B,SAAmC5G,EAAKc,OAIxC,wBAAQwD,MAAOtE,EAAK4G,IAApB,SAA0B5G,EAAKc,gBAQvD,gCACI,uBAAO0D,MAAOC,EAAO+B,UAAWC,QAAQ,MAAxC,2BACA,yBAAQjC,MAAOC,EAAOiC,WAAYrC,KAAK,WAAWU,SAAU,SAAAZ,GAAC,OAAI,EAAKY,SAAS,WAAYZ,EAAEC,OAAOE,QAApG,UACI,wBAAQA,MAAO3C,KAAKzB,MAAMc,SAA1B,mBAEIO,EAAY5B,KAAI,SAACK,EAAM4B,GACnB,OAAI5B,EAAKc,MAAQU,EAET,wBAAQmF,UAAQ,EAACrC,MAAOtE,EAAK4G,IAA7B,SAAmC5G,EAAKc,OAIxC,wBAAQwD,MAAOtE,EAAK4G,IAApB,SAA0B5G,EAAKc,gBAQvD,sBAAK0D,MAAOC,EAAOoC,WAAnB,UACI,kDACA,cAAC,IAAD,CAAYF,SAAU,IAAIzF,KAAKS,KAAKzB,MAAMe,YAAa8D,SAAU,SAAC+B,GAAD,OAAU,EAAKjI,SAAS,CAAEoC,WAAY6F,UAG3G,sBAAKtC,MAAOC,EAAOoC,WAAnB,UACI,gDACA,cAAC,IAAD,CAAYF,SAAU,IAAIzF,KAAKS,KAAKzB,MAAMiB,UAAW4D,SAAU,SAAC+B,GAAD,OAAU,EAAKjI,SAAS,CAAEsC,SAAU2F,UAGvG,cAAC,IAAD,CACIR,MAAM,QACNC,MAAM,QACNjC,MAAO3C,KAAKzB,MAAMkB,MAClB6D,YAAa,QAEbF,SAAU,SAAAZ,GAAC,OAAI,EAAKY,SAAS,QAASZ,EAAEC,OAAOE,UAIrC,OAAVzD,EAAkB,GAAK,gCACnB,uBAAO2D,MAAOC,EAAO+B,UAAWC,QAAQ,MAAxC,qBACA,yBAAQjC,MAAOC,EAAOiC,WAAYrC,KAAK,SAASU,SAAU,SAAAZ,GAAC,OAAI,EAAKY,SAAS,SAAUZ,EAAEC,OAAOE,QAAhG,UACI,wBAAQA,MAAO3C,KAAKzB,MAAML,OAA1B,SAAwD,IAArB8B,KAAKzB,MAAML,OAAX,wBAAoD8B,KAAKzB,MAAML,SAClG,wBAAQyE,MAAO,UAAf,qBACA,wBAAQA,MAAO,SAAf,oBACA,wBAAQA,MAAO,YAAf,gCAOhB,eAAC,IAAD,WACI,cAAC,IAAD,CAAQa,MAAM,UAAUG,QAAS,SAAAnB,GAA6B,QAAtB,EAAKjE,MAAMW,OAAmB,EAAKkG,UAAY,EAAKC,cAAgBC,SAAUtF,KAAKzB,MAAMpB,UAAjI,kBAA0J,IAC1J,cAAC,IAAD,CAAQqG,MAAM,YAAYG,QAAS,SAAAnB,GAAC,OAAI,EAAKoB,YAAY,QAAzD,0BAIR,eAAC,IAAD,CAAOc,OAAQ1E,KAAKzB,MAAMD,YAAaiH,OAAQ,SAAA/C,GAAC,OAAI,EAAKtF,SAAS,CAAEoB,aAAc,EAAKC,MAAMD,YAAaE,OAAQ,QAASoE,UAAW5C,KAAKjD,MAAM6F,UAAjJ,UACI,cAAC,IAAD,CAAa2C,OAAQ,SAAA/C,GAAC,OAAI,EAAKtF,SAAS,CAAEoB,aAAc,EAAKC,MAAMD,YAAaE,OAAQ,QAAxF,oBACA,cAAC,IAAD,UACI,uBAAOsG,QAAQ,MAAf,+CAAqD9E,KAAKzB,MAAMC,OAASwB,KAAKzB,MAAMC,OAAOgH,MAAQ,GAAnG,WAEJ,eAAC,IAAD,WACI,cAAC,IAAD,CAAQhC,MAAM,UAAUG,QAAS,SAAAnB,GAAC,OAAI,EAAKhE,UAAU8G,SAAUtF,KAAKzB,MAAMpB,UAA1E,oBAAqG,IACrG,cAAC,IAAD,CAAQqG,MAAM,YAAYG,QAAS,SAAAnB,GAAC,OAAI,EAAKtF,SAAS,CAAEoB,aAAc,EAAKC,MAAMD,YAAaE,OAAQ,QAAtG,iC,GA1eRiH,aA4fd3C,EAAM,aACRoC,WAAY,CACRQ,aAAc,IAElB5B,KAAM,CACF6B,MAAO,KACPpB,MAAO,OACPqB,OAAQ,QAEZhI,WAAY,CACR4G,YAAa,OAEjBK,UAAW,CACPc,MAAO,KAEXZ,WAAY,CACRY,MAAO,KAEX1I,EAAG,CACC4I,eAAgB,QAEpBpC,WAAY,CACRc,MAAO,QACPuB,UAAW,OAEfC,QAAS,CACLJ,MAAO,QAEXK,OAAQ,CACJC,UAAW,UAEfC,MAAO,CACHN,OAAQ,QACRO,UAAW,QAEfpC,KAAM,CACF4B,MAAO,MACPpB,MAAO,OACPqB,OAAQ,QAEZ5B,KAAM,CACF2B,MAAO,MACPpB,MAAO,OACPqB,OAAQ,QAEZ3B,GAAI,CACA0B,MAAO,MACPpB,MAAO,OACPqB,OAAQ,QAEZ1B,IAAK,CACDK,MAAO,OACPoB,MAAO,QAEX5C,QAAS,CACLS,MAAO,SAEXR,OAAQ,CACJQ,MAAO,OAEXa,KAAM,CACF+B,WAAY,OAEhBlD,KAAM,CACFqB,MAAO,QACPC,YAAa,MACbmB,MAAO,SAEXxC,YAAa,CACTwC,MAAO,QACPU,QAAS,gBAEbC,WAAY,CACR9C,MAAO,SAEX+C,YAAa,CACT/C,MAAO,OAEXgD,eAAgB,CACZb,MAAO,SAEXc,MAAO,CACHd,MAAO,QACPC,OAAQ,QACRc,aAAc,YApFV,OAsFF,CACFhB,aAAc,QAIP5I,a,oDC7mBA,KACb,SAAa,iCAEb,UAAc,iBACd,kBAAsB,qBACtB,SAAa,gBACb,YAAgB,mBAChB,YAAgB,mBAChB,YAAgB,mBAChB,SAAa,gBACb,SAAa,gBACb,gBAAoB,mCAEpB,cAAkB,qBAClB,uBAA2B,8BAE3B,aAAiB,oBACjB,qBAAyB,wBACzB,YAAgB,mBAChB,eAAmB,sBACnB,eAAmB,sBAEnB,UAAc,iBACd,kBAAsB,qBACtB,SAAa,gBACb,YAAgB,mBAChB,YAAgB,mBAEhB,aAAiB,oBACjB,qBAAyB,wBACzB,YAAgB,mBAChB,eAAmB,sBACnB,eAAmB,sBAEnB,UAAc,iBACd,kBAAsB,qBACtB,SAAa,gBACb,YAAgB,mBAChB,YAAgB,mBAEhB,cAAkB,qBAClB,sBAA0B,yBAC1B,aAAiB,oBACjB,gBAAoB,uBACpB,gBAAoB,uBAEpB,SAAa,gBACb,iBAAqB,oBACrB,QAAY,eACZ,WAAe,kBACf,WAAe,kBAEf,aAAiB,oBACjB,qBAAyB,wBACzB,YAAgB,mBAChB,eAAmB,sBACnB,eAAmB,wB,iCCxDrB,mCAIM6J,EAAiB,SAAC,GAA4F,IAA1FhC,EAAyF,EAAzFA,MAAOhC,EAAkF,EAAlFA,MAAOiC,EAA2E,EAA3EA,MAAOgC,EAAoE,EAApEA,MAAOC,EAA6D,EAA7DA,KAAMzD,EAAuD,EAAvDA,SAAU0D,EAA6C,EAA7CA,gBAAiBC,EAA4B,EAA5BA,SAAUzD,EAAkB,EAAlBA,YAC/F,OACE,sBAAKV,UAAWoE,IAAW,aAAc,CAAE,YAAaJ,IAAxD,UACE,uBAAOhE,UAAU,gBAAjB,SAAkCgC,IAClC,uBACExB,SAAUA,EACV6D,OAAQH,EACRnE,MAAOA,EACPkE,KAAMA,EACNnE,KAAMiC,EACNrB,YAAaA,EACbyD,SAAUA,EACVnE,UAAU,iBAEbgE,GAAS,sBAAMhE,UAAU,aAAhB,SAA8BgE,QAc5CD,EAAeO,aAAe,CAC5BL,KAAM,QAGOF","file":"static/js/18.3ed1b7e5.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n    Card,\n    CardBody,\n    CardHeader,\n    Col,\n    Row,\n    Table, Button, Input,\n    ModalHeader, ModalBody, ModalFooter, Modal,\n    Alert\n} from 'reactstrap';\nimport 'moment-timezone';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Constants from \"./../../../contants/contants\";\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\nimport axios from 'axios'\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\nclass Users extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            key: '',\n            activePage: 1,\n            page: 1,\n            itemsCount: 0,\n            limit: 20,\n            totalActive: 0,\n            modalCom: false,\n            viewingUser: {},\n            communities: [],\n            updated: '',\n            dataApi: [],\n            action: 'new',\n            Name: '',\n            Company_Id: '',\n            Type_Key: '',\n            Start_Date: new Date(),\n            End_Date: new Date(),\n            Status: '',\n            Value: '',\n            modalDelete: false,\n            delete: null,\n            dataCompany: [],\n            currentCompany: '',\n            dataTypeKey: [],\n            currentTypeKey: '',\n            arrPagination: [],\n            indexPage: 0\n        };\n    }\n    async componentDidMount() {\n        this.getData()\n    }\n\n    pagination(dataApi) {\n        var i, j, temparray, chunk = 5;\n        var arrTotal = [];\n        for (i = 0, j = dataApi.length; i < j; i += chunk) {\n            temparray = dataApi.slice(i, i + chunk);\n            arrTotal.push(temparray);\n        }\n        this.setState({ arrPagination: arrTotal, data: arrTotal[this.state.indexPage] });\n    }\n\n    getData = async () => {\n        this.setState({ isLoading: true });\n        const res = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.LIST_KEY,\n            method: 'GET',\n        });\n\n        this.pagination(res.data.data);\n        this.setState({ dataApi: res.data.data });\n\n        let active = 0\n\n        res.data.data.map(val => {\n            if (val.Status == \"Actived\") {\n                active = active + 1\n            }\n        })\n\n        this.setState({ isLoading: false, totalActive: active });\n    }\n\n    searchKey(key) {\n        const { indexPage } = this.state;\n        this.setState({ key: key })\n\n        if (key != '') {\n            let d = []\n            this.state.dataApi.map(val => {\n                if (val.Name.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n                    d.push(val)\n                }\n            })\n            let active = 0\n\n            d.map(val => {\n                if (val.Status == \"Actived\") {\n                    active = active + 1\n                }\n            })\n\n            this.setState({ data: d, totalActive: active })\n        } else {\n            let active = 0\n\n            this.state.dataApi.map(val => {\n                if (val.Status == \"Actived\") {\n                    active = active + 1\n                }\n            })\n\n            this.setState({ data: this.state.arrPagination[indexPage], totalActive: active })\n        }\n    }\n\n    async toggleModal(key) {\n        await this.getCompanyData()\n        await this.getTypeKeyData()\n        if (key == 'new') {\n            this.setState({\n                modalCom: !this.state.modalCom,\n                action: key,\n                Name: '',\n                Company_Id: '',\n                Type_Key: '',\n                Start_Date: new Date(),\n                End_Date: new Date(),\n                Value: ''\n            })\n        }\n    }\n\n    onChange(key, val) {\n        this.setState({ [key]: val })\n    }\n\n    async addUser() {\n        const { Name, Company_Id, Type_Key, Start_Date, End_Date, Value } = this.state\n\n        if (Name == null || Name == '') {\n            alert(\"Please fill in all the requirements\");\n            return\n        }\n\n        const body = {\n            Name: Name,\n            Company_Id: Company_Id,\n            Type_Key: Type_Key,\n            Start_Date: Start_Date,\n            End_Date: End_Date,\n            Value: Value\n        }\n\n        this.setState({ isLoading: true });\n        const res = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.ADD_KEY,\n            method: 'PUT',\n            data: body\n        });\n\n        if (res.data.is_success == true) {\n            this.getData();\n            this.setState({ modalCom: !this.state.modalCom })\n        } else {\n            alert(res.data.message);\n            this.setState({ isLoading: false });\n        }\n    }\n\n    async openUpdate(item) {\n        await this.getCompanyData(item.Company_Id)\n        await this.getTypeKeyData(item.Type_Key)\n\n        this.setState({\n            modalCom: !this.state.modalCom,\n            action: \"update\",\n            Name: item.Name,\n            Company_Id: item.Company_Id,\n            Type_Key: item.Type_Key,\n            Start_Date: item.Start_Date,\n            End_Date: item.End_Date,\n            Value: item.Value,\n            id: item['_id'],\n            Status: item.Status\n        })\n    }\n\n    async updateUser() {\n        const { Name, Company_Id, Type_Key, Start_Date, End_Date, Value, Status } = this.state\n\n        if (Name == null || Name == '') {\n            alert(\"Please fill in all the requirements\");\n            return\n        }\n\n        const body = {\n            Name: Name,\n            Company_Id: Company_Id,\n            Type_Key: Type_Key,\n            Start_Date: Start_Date,\n            End_Date: End_Date,\n            Value: Value,\n            id: this.state.id,\n            Status: Status\n        }\n\n        this.setState({ isLoading: true });\n        const res = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.UPDATE_KEY,\n            method: 'POST',\n            data: body\n        });\n\n        if (res.data.is_success == true) {\n            this.getData();\n            this.setState({ modalCom: !this.state.modalCom })\n        } else {\n            alert(res.data.message);\n            this.setState({ isLoading: false });\n        }\n    }\n\n    openDelete = (item) => {\n        this.setState({\n            modalDelete: !this.state.modalDelete,\n            delete: item\n        })\n    }\n\n    async delete() {\n        this.setState({ isLoading: true });\n        const res = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.DELETE_KEY,\n            method: 'DELETE',\n            data: {\n                \"id\": this.state.delete['_id']\n            }\n        });\n\n        if (res.data.is_success == true) {\n            this.getData();\n            this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n        } else {\n            alert(res.data.message);\n            this.setState({ isLoading: false });\n        }\n\n    }\n\n    getUsers(page = 1) {\n        const limit = this.state.limit;\n        const key = this.state.key || '';\n        const fetchData = {\n            method: 'GET',\n            headers: headers\n        };\n        fetch(global.BASE_URL + '/admin/users?key=' + key + '&page=' + page + '&limit=' + limit, fetchData).then(users => {\n            users.json().then(result => {\n                this.setState({\n                    data: result.data,\n                    itemsCount: result.total,\n                    activePage: page,\n                    totalActive: result.totalActive,\n                    updated: '',\n                });\n            })\n        }).catch(console.log);\n    }\n\n    async getCompanyData(id) {\n        const resCompany = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.LIST_COMPANY,\n            method: 'GET',\n        });\n\n        if (id != '' || id != undefined) {\n            const currentC = await axios({\n                baseURL: Constants.BASE_URL,\n                url: Constants.LIST_COMPANY_WITH_ID + id,\n                method: 'GET',\n            });\n            if (currentC.data.data != null || currentC.data.data != undefined) {\n                this.setState({ currentCompany: currentC.data.data.Name });\n            }\n        }\n        this.setState({ dataCompany: resCompany.data.data });\n    }\n\n    async getTypeKeyData(id) {\n        const resType = await axios({\n            baseURL: Constants.BASE_URL,\n            url: Constants.LIST_TYPEKEY,\n            method: 'GET',\n        });\n\n        if (id != '' || id != undefined) {\n            const currentTypeKey = await axios({\n                baseURL: Constants.BASE_URL,\n                url: Constants.LIST_TYPEKEY_WITH_ID + id,\n                method: 'GET',\n            });\n            if (currentTypeKey.data.data != null || currentTypeKey.data.data != undefined) {\n                this.setState({ currentTypeKey: currentTypeKey.data.data.Name });\n            }\n        }\n        this.setState({ dataTypeKey: resType.data.data });\n    }\n\n    inputChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    render() {\n        const { data, key, viewingUser, communities, dataCompany,\n            currentCompany, dataTypeKey, currentTypeKey, action, arrPagination, indexPage } = this.state;\n\n        if (!this.state.isLoading) {\n            return (\n                <div className=\"animated fadeIn\">\n                    <Row>\n                        <Col>\n                            <p style={styles.success}>{this.state.updated}</p>\n                            <p style={styles.danger}>{this.state.deleted}</p>\n                            <Card>\n                                <CardHeader>\n                                    <i className=\"fa fa-align-justify\"></i> KEY (Total: {this.state.data != undefined || this.state.data != null ?\n                                        this.state.data.length : 0}, Active: {this.state.totalActive}, Page: {this.state.indexPage + 1})\n                                    <div style={styles.tags}>\n                                        <div>\n                                            <Input style={styles.searchInput} onChange={(e) => this.searchKey(e.target.value)} name=\"key\" value={key} placeholder=\"Search\" />\n                                            <Button outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={async e => await this.toggleModal(\"new\")}>Add</Button>\n                                        </div>\n                                    </div>\n                                </CardHeader>\n                                <CardBody>\n                                    <Table responsive>\n                                        <thead>\n                                            <tr>\n                                                <th style={styles.wa10}>No.</th>\n                                                <th style={styles.wh12}>Name</th>\n                                                <th style={styles.wh15}>Company ID</th>\n                                                <th style={styles.wh15}>Type Key</th>\n                                                <th style={styles.wh12}>Start Date</th>\n                                                <th style={styles.wh12}>End Date</th>\n                                                <th style={styles.wh12}>Value</th>\n                                                <th style={styles.wh12}>Status</th>\n                                                <th style={styles.w5}>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                data != undefined ?\n                                                data.map((item, i) => {\n                                                    return (\n                                                        <tr key={i} style={styles.row}>\n                                                            <td style={styles.wa10}>{i + 1}</td>\n                                                            <td style={styles.wh12}>{item.Name}</td>\n                                                            <td style={styles.wh15}>{item.Company_Id}</td>\n                                                            <td style={styles.wh15}>{item.Type_Key}</td>\n                                                            <td style={styles.wh12}>\n                                                                {(new Date(item.Start_Date)).toLocaleDateString() + ' ' + (new Date(item.Start_Date)).toLocaleTimeString()}\n                                                            </td>\n                                                            <td style={styles.wh12}>\n                                                                {(new Date(item.End_Date)).toLocaleDateString() + ' ' + (new Date(item.End_Date)).toLocaleTimeString()}\n                                                            </td>\n                                                            <td style={styles.wh12}>{item.Value}</td>\n                                                            <td style={styles.wh12}>{item.Status}</td>\n                                                            <td style={styles.w5}>\n                                                                <Button style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >Update</Button>{' '}\n                                                                <Button outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>Delete</Button>\n                                                            </td>\n                                                        </tr>\n                                                    );\n                                                }) : \"\"\n                                            }\n                                        </tbody>\n                                    </Table>\n                                </CardBody>\n                            </Card>\n                            {\n                                arrPagination.length == 1 ? \"\" :\n                                    <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                                        <tr style={styles.row}>\n                                            {\n                                                arrPagination.map((item, i) => {\n                                                    return (\n                                                        <td>\n                                                            <Button style={styles.pagination} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ data: arrPagination[i], indexPage: i }) }}>{i + 1}</Button>\n                                                        </td>\n                                                    );\n                                                })\n                                            }\n                                        </tr>\n                                    </div>\n                            }\n                        </Col>\n                    </Row>\n\n                    <Modal isOpen={this.state.modalCom} className={this.props.className}>\n                        <ModalHeader>{this.state.action == 'new' ? `Create` : `Update`}</ModalHeader>\n\n                        <ModalBody>\n                            <TextFieldGroup\n                                field=\"Name\"\n                                label=\"Name\"\n                                value={this.state.Name}\n                                placeholder={\"Name\"}\n                                // error={errors.title}\n                                onChange={e => this.onChange(\"Name\", e.target.value)}\n                            // rows=\"5\"\n                            />\n\n                            <div>\n                                <label style={styles.flexLabel} htmlFor=\"tag\">Company:    </label>\n                                <select style={styles.flexOption} name=\"Company_Id\" onChange={e => this.onChange(\"Company_Id\", e.target.value)}>\n                                    <option value={this.state.Company_Id}>-----</option>\n                                    {\n                                        dataCompany.map((item, i) => {\n                                            if (item.Name == currentCompany) {\n                                                return (\n                                                    <option selected value={item._id}>{item.Name}</option>\n                                                );\n                                            } else {\n                                                return (\n                                                    <option value={item._id}>{item.Name}</option>\n                                                );\n                                            }\n                                        })\n                                    }\n                                </select>\n                            </div>\n\n                            <div>\n                                <label style={styles.flexLabel} htmlFor=\"tag\">Type Key:    </label>\n                                <select style={styles.flexOption} name=\"Type_Key\" onChange={e => this.onChange(\"Type_Key\", e.target.value)}>\n                                    <option value={this.state.Type_Key}>-----</option>\n                                    {\n                                        dataTypeKey.map((item, i) => {\n                                            if (item.Name == currentTypeKey) {\n                                                return (\n                                                    <option selected value={item._id}>{item.Name}</option>\n                                                );\n                                            } else {\n                                                return (\n                                                    <option value={item._id}>{item.Name}</option>\n                                                );\n                                            }\n                                        })\n                                    }\n                                </select>\n                            </div>\n\n                            <div style={styles.datePicker}>\n                                <label>Start Date:  </label>\n                                <DatePicker selected={new Date(this.state.Start_Date)} onChange={(date) => this.setState({ Start_Date: date })} />\n                            </div>\n\n                            <div style={styles.datePicker}>\n                                <label>End Date:  </label>\n                                <DatePicker selected={new Date(this.state.End_Date)} onChange={(date) => this.setState({ End_Date: date })} />\n                            </div>\n\n                            <TextFieldGroup\n                                field=\"Value\"\n                                label=\"Value\"\n                                value={this.state.Value}\n                                placeholder={\"Value\"}\n                                // error={errors.title}\n                                onChange={e => this.onChange(\"Value\", e.target.value)}\n                            // rows=\"5\"\n                            />\n                            {\n                                action == 'new' ? \"\" : <div>\n                                    <label style={styles.flexLabel} htmlFor=\"tag\">Status:</label>\n                                    <select style={styles.flexOption} name=\"Status\" onChange={e => this.onChange(\"Status\", e.target.value)}>\n                                        <option value={this.state.Status}>{this.state.Status == '' ? ` - - - - - - - - - - ` : this.state.Status}</option>\n                                        <option value={'Actived'}>Actived</option>\n                                        <option value={'Locked'}>Locked</option>\n                                        <option value={'Deactived'}>Deactived</option>\n                                    </select>\n                                </div>\n                            }\n\n\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"primary\" onClick={e => { this.state.action === 'new' ? this.addUser() : this.updateUser() }} disabled={this.state.isLoading}>Save</Button>{' '}\n                            <Button color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Cancel</Button>\n                        </ModalFooter>\n                    </Modal>\n\n                    <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n                        <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Delete`}</ModalHeader>\n                        <ModalBody>\n                            <label htmlFor=\"tag\">{`Do you want to delete user \"${this.state.delete ? this.state.delete.Email : ''}\" ?`}</label>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Delete</Button>{' '}\n                            <Button color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Cancel</Button>\n                        </ModalFooter>\n                    </Modal>\n                </div>\n            );\n        }\n        return (\n            <div id=\"page-loading\">\n                <div className=\"three-balls\">\n                    <div className=\"ball ball1\"></div>\n                    <div className=\"ball ball2\"></div>\n                    <div className=\"ball ball3\"></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    datePicker: {\n        marginBottom: 20\n    },\n    wa10: {\n        width: \"5%\",\n        float: \"left\",\n        height: \"80px\"\n    },\n    pagination: {\n        marginRight: '5px'\n    },\n    flexLabel: {\n        width: 100\n    },\n    flexOption: {\n        width: 300\n    },\n    a: {\n        textDecoration: 'none'\n    },\n    floatRight: {\n        float: \"right\",\n        marginTop: '3px'\n    },\n    spinner: {\n        width: \"30px\"\n    },\n    center: {\n        textAlign: \"center\"\n    },\n    tbody: {\n        height: \"380px\",\n        overflowY: \"auto\"\n    },\n    wh12: {\n        width: \"10%\",\n        float: \"left\",\n        height: \"80px\"\n    },\n    wh15: {\n        width: \"15%\",\n        float: \"left\",\n        height: \"80px\"\n    },\n    w5: {\n        width: \"12%\",\n        float: \"left\",\n        height: \"80px\"\n    },\n    row: {\n        float: \"left\",\n        width: \"100%\"\n    },\n    success: {\n        color: 'green'\n    },\n    danger: {\n        color: 'red'\n    },\n    mgl5: {\n        marginLeft: '5px'\n    },\n    tags: {\n        float: \"right\",\n        marginRight: \"5px\",\n        width: \"250px\"\n    },\n    searchInput: {\n        width: \"190px\",\n        display: 'inline-block',\n    },\n    userActive: {\n        color: 'green'\n    },\n    userPending: {\n        color: 'red'\n    },\n    nagemonNameCol: {\n        width: '328px'\n    },\n    image: {\n        width: '100px',\n        height: '100px',\n        borderRadius: '99999px'\n    },\n    mgl5: {\n        marginBottom: '0px'\n    }\n}\n\nexport default Users;\n","export default {\n  \"BASE_URL\" : \"http://thanhvien.applamdep.com\",\n  //\"BASE_URL\" : \"http://localhost:3000\",\n  \"LIST_USER\" : \"/api/list-user\",\n  \"LIST_USER_WITH_ID\" : \"/api/list-user?id=\",\n  \"ADD_USER\" : \"/api/add-user\",\n  \"UPDATE_USER\" : \"/api/update-user\",\n  \"DELETE_USER\" : \"/api/delete-user\",\n  \"LOGIN_ADMIN\" : \"/api/login_admin\",\n  \"GET_SHOP\" : \"/api/get-shop\",\n  \"GET_SALE\" : \"/api/get-sale\",\n  \"GET_COEFFICIENT\" : \"/api/calculator-coefficient-user\",\n\n  \"LIST_CUSTOMER\" : \"/api/list-customer\",\n  \"LIST_CUSTOMER_BY_MONTH\" : \"/api/get-user-sale-by-month\",\n\n  \"LIST_TYPEKEY\" : \"/api/list-typekey\",\n  \"LIST_TYPEKEY_WITH_ID\" : \"/api/list-typekey?id=\",\n  \"ADD_TYPEKEY\" : \"/api/add-typekey\",\n  \"UPDATE_TYPEKEY\" : \"/api/update-typekey\",\n  \"DELETE_TYPEKEY\" : \"/api/delete-typekey\",\n\n  \"LIST_ROLE\" : \"/api/list-role\",\n  \"LIST_ROLE_WITH_ID\" : \"/api/list-role?id=\",\n  \"ADD_ROLE\" : \"/api/add-role\",\n  \"UPDATE_ROLE\" : \"/api/update-role\",\n  \"DELETE_ROLE\" : \"/api/delete-role\",\n\n  \"LIST_SALELOG\" : \"/api/list-salelog\",\n  \"LIST_SALELOG_WITH_ID\" : \"/api/list-salelog?id=\",\n  \"ADD_SALELOG\" : \"/api/add-salelog\",\n  \"UPDATE_SALELOG\" : \"/api/update-salelog\",\n  \"DELETE_SALELOG\" : \"/api/delete-salelog\",\n\n  \"LIST_SALE\" : \"/api/list-sale\",\n  \"LIST_SALE_WITH_ID\" : \"/api/list-sale?id=\",\n  \"ADD_SALE\" : \"/api/add-sale\",\n  \"UPDATE_SALE\" : \"/api/update-sale\",\n  \"DELETE_SALE\" : \"/api/delete-sale\",\n\n  \"LIST_KEYORDER\" : \"/api/list-keyorder\",\n  \"LIST_KEYORDER_WITH_ID\" : \"/api/list-keyorder?id=\",\n  \"ADD_KEYORDER\" : \"/api/add-keyorder\",\n  \"UPDATE_KEYORDER\" : \"/api/update-keyorder\",\n  \"DELETE_KEYORDER\" : \"/api/delete-keyorder\",\n\n  \"LIST_KEY\" : \"/api/list-key\",\n  \"LIST_KEY_WITH_ID\" : \"/api/list-key?id=\",\n  \"ADD_KEY\" : \"/api/add-key\",\n  \"UPDATE_KEY\" : \"/api/update-key\",\n  \"DELETE_KEY\" : \"/api/delete-key\",\n\n  \"LIST_COMPANY\" : \"/api/list-company\",\n  \"LIST_COMPANY_WITH_ID\" : \"/api/list-company?id=\",\n  \"ADD_COMPANY\" : \"/api/add-company\",\n  \"UPDATE_COMPANY\" : \"/api/update-company\",\n  \"DELETE_COMPANY\" : \"/api/delete-company\",\n\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder }) => {\n  return (\n    <div className={classnames('form-group', { 'has-error': error })}>\n      <label className=\"control-label\">{label}</label>\n      <input\n        onChange={onChange}\n        onBlur={checkUserExists}\n        value={value}\n        type={type}\n        name={field}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        className=\"form-control\"\n      />\n    {error && <span className=\"help-block\">{error}</span>}\n    </div>  );\n}\n\nTextFieldGroup.propTypes = {\n  field: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checkUserExists: PropTypes.func\n}\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextFieldGroup;\n"],"sourceRoot":""}