{"version":3,"sources":["views/base/tables/Key.js","views/Common/TextFieldGroup.js"],"names":["headers","Headers","auth","localStorage","getItem","append","Users","props","getData","a","setState","isLoading","axios","baseURL","Constants","BASE_URL","url","LIST_KEY","method","state","token","res","pagination","data","dataApi","active","map","val","Status","totalActive","openDelete","item","modalDelete","delete","key","keyName","keyCodeCompany","keyTypeKey","keyActive","keyEndDate","keyStatus","keyValue","activePage","page","itemsCount","limit","modalCom","viewingUser","communities","updated","action","Name","Company_Id","Type_Key","Start_Date","Date","End_Date","Value","dataCompany","currentCompany","dataTypeKey","currentTypeKey","dataHardWare","currentHardWare","arrPagination","indexPage","hidden","Authorization","this","getHardWData_all","arr","JSON","parse","i","length","to","window","location","hash","href","j","temparray","arrTotal","slice","push","status","LIST_HARDWARE","resKey","id","condition","undefined","LIST_HARDWARE_WITH_ID","currentKey","d","toLocaleUpperCase","includes","e","name_action","target","value","searchKey","getCompanyData","getTypeKeyData","getHardWData","body","UPDATE_KEY","is_success","alert","message","DELETE_KEY","fetchData","fetch","global","then","users","json","result","total","catch","console","log","LIST_COMPANY","resCompany","LIST_COMPANY_WITH_ID","currentC","LIST_TYPEKEY","resType","LIST_TYPEKEY_WITH_ID","name","className","style","styles","success","danger","deleted","tags","sm","lg","searchInput","onChange","actionSearch","placeholder","flexOption","custom","color","width","marginTop","size","onClick","resetSearch","outline","floatRight","toggleModal","ble","colSpan","toLocaleDateString","toLocaleTimeString","getBadge","mgl5","openUpdate","float","marginRight","padding","row","isOpen","flexLabel","htmlFor","updateUser","disabled","toggle","Email","Component","datePicker","marginBottom","wa10","height","margin","textDecoration","spinner","center","textAlign","tbody","overflowY","wh12","wh15","w5","marginLeft","display","userActive","userPending","nagemonNameCol","image","borderRadius","TextFieldGroup","field","label","error","type","checkUserExists","readOnly","classnames","onBlur","defaultProps"],"mappings":"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","file":"static/js/84.eb17e80b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n  Table, Button, Input,\r\n  ModalHeader, ModalBody, ModalFooter, Modal,\r\n  Alert\r\n} from 'reactstrap';\r\n\r\nimport {\r\n  CBadge,\r\n  CRow,\r\n  CCol,\r\n  CSelect,\r\n  CInput\r\n} from '@coreui/react'\r\n\r\nimport 'moment-timezone';\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Constants from \"./../../../contants/contants\";\r\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\r\nimport axios from 'axios'\r\nlet headers = new Headers();\r\nconst auth = localStorage.getItem('auth');\r\nheaders.append('Authorization', 'Bearer ' + auth);\r\nheaders.append('Content-Type', 'application/json');\r\nclass Users extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [],\r\n      key: '',\r\n      keyName: '',\r\n      keyCodeCompany: '',\r\n      keyTypeKey: '',\r\n      keyActive: '',\r\n      keyEndDate: '',\r\n      keyStatus: '',\r\n      keyValue: '',\r\n      activePage: 1,\r\n      page: 1,\r\n      itemsCount: 0,\r\n      limit: 20,\r\n      totalActive: 0,\r\n      modalCom: false,\r\n      viewingUser: {},\r\n      communities: [],\r\n      updated: '',\r\n      dataApi: [],\r\n      action: 'new',\r\n      Name: '',\r\n      Company_Id: '',\r\n      Type_Key: '',\r\n      Start_Date: new Date(),\r\n      End_Date: new Date(),\r\n      Status: '',\r\n      Value: '',\r\n      modalDelete: false,\r\n      delete: null,\r\n      dataCompany: [],\r\n      currentCompany: '',\r\n      dataTypeKey: [],\r\n      currentTypeKey: '',\r\n      dataHardWare: [],\r\n      currentHardWare: '',\r\n      arrPagination: [],\r\n      indexPage: 0,\r\n      hidden: true,\r\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` }\r\n    };\r\n  }\r\n  async componentDidMount() {\r\n    this.getData();\r\n    await this.getHardWData_all();\r\n\r\n    let arr = JSON.parse(localStorage.getItem('url'));\r\n    for (let i = 0; i < arr.length; i++) {\r\n      if (\"#\" + arr[i].to == window.location.hash) {\r\n        if (arr[i].hidden == true) {\r\n          window.location.href = '#/'\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  pagination(dataApi) {\r\n    var i, j, temparray, chunk = 5;\r\n    var arrTotal = [];\r\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\r\n      temparray = dataApi.slice(i, i + chunk);\r\n      arrTotal.push(temparray);\r\n    }\r\n    if (arrTotal.length == 0) {\r\n      this.setState({\r\n        hidden: false\r\n      })\r\n    } else {\r\n      this.setState({\r\n        hidden: true\r\n      })\r\n    }\r\n    this.setState({ arrPagination: arrTotal, data: arrTotal[this.state.indexPage] });\r\n  }\r\n\r\n  getBadge(status) {\r\n    switch (status) {\r\n      case 'INSTOCK': return 'success'\r\n      case 'DISABLE': return 'danger'\r\n      default: return 'primary'\r\n    }\r\n  }\r\n\r\n  async getHardWData_all() {\r\n    const resKey = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.LIST_HARDWARE,\r\n      method: 'POST',\r\n      headers: this.state.token\r\n    });\r\n\r\n    this.setState({ dataHardWare: resKey.data.data });\r\n  }\r\n\r\n  async getHardWData(id) {\r\n    const resKey = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.LIST_HARDWARE,\r\n      method: 'POST',\r\n      data: {\r\n        condition: {\r\n          \"Status\": \"INSTOCK\"\r\n        }\r\n      },\r\n      headers: this.state.token\r\n    });\r\n\r\n    if (id != '' || id != undefined) {\r\n      const currentKey = await axios({\r\n        baseURL: Constants.BASE_URL,\r\n        url: Constants.LIST_HARDWARE_WITH_ID + id,\r\n        method: 'POST',\r\n        headers: this.state.token\r\n      });\r\n      if (currentKey.data.data != null || currentKey.data.data != undefined) {\r\n        this.setState({ currentHardWare: currentKey.data.data.Name });\r\n      }\r\n    }\r\n\r\n    this.setState({ dataHardWare: resKey.data.data });\r\n  }\r\n\r\n  getData = async () => {\r\n    this.setState({ isLoading: true });\r\n    const res = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.LIST_KEY,\r\n      method: 'POST',\r\n      headers: this.state.token\r\n    });\r\n\r\n    this.pagination(res.data.data);\r\n    this.setState({ dataApi: res.data.data });\r\n\r\n    let active = 0\r\n\r\n    res.data.data.map(val => {\r\n      if (val.Status == \"Actived\") {\r\n        active = active + 1\r\n      }\r\n    })\r\n\r\n    this.setState({ isLoading: false, totalActive: active });\r\n  }\r\n\r\n  searchKey() {\r\n    const { indexPage, key, keyStatus } = this.state;\r\n\r\n    if (key != '' || keyStatus != '') {\r\n      let d = []\r\n      this.state.dataApi.map(val => {\r\n        if ((val.Name.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\r\n          val.Value.toLocaleUpperCase().includes(key.toLocaleUpperCase())) &&\r\n          val.Status.toLocaleUpperCase().includes(keyStatus.toLocaleUpperCase())) {\r\n          d.push(val)\r\n        }\r\n      })\r\n      let active = 0\r\n\r\n      d.map(val => {\r\n        if (val.Status == \"Actived\") {\r\n          active = active + 1\r\n        }\r\n      })\r\n\r\n      this.setState({ data: d, totalActive: active })\r\n    } else {\r\n      let active = 0\r\n\r\n      this.state.dataApi.map(val => {\r\n        if (val.Status == \"Actived\") {\r\n          active = active + 1\r\n        }\r\n      })\r\n\r\n      this.setState({ data: this.state.arrPagination[indexPage], totalActive: active })\r\n    }\r\n  }\r\n\r\n  actionSearch(e, name_action) {\r\n    this.setState({\r\n      [name_action]: e.target.value\r\n    }, () => {\r\n      this.searchKey();\r\n    });\r\n  }\r\n\r\n  resetSearch() {\r\n    this.setState({\r\n      key: '',\r\n      keyStatus: ''\r\n    }, () => {\r\n      this.searchKey();\r\n    });\r\n  }\r\n\r\n  onChange(key, val) {\r\n    this.setState({ [key]: val })\r\n  }\r\n\r\n\r\n  async openUpdate(item) {\r\n    await this.getCompanyData(item.Company_Id)\r\n    await this.getTypeKeyData(item.Type_Key)\r\n    await this.getHardWData(item.Value)\r\n\r\n    this.setState({\r\n      modalCom: !this.state.modalCom,\r\n      action: \"update\",\r\n      id: item['_id'],\r\n      Status: item.Status\r\n    })\r\n  }\r\n\r\n  async updateUser() {\r\n    const { Status } = this.state\r\n\r\n    const body = {\r\n      id: this.state.id,\r\n      Status: Status\r\n    }\r\n\r\n    this.setState({ isLoading: true });\r\n    const res = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.UPDATE_KEY,\r\n      method: 'POST',\r\n      data: body\r\n    });\r\n\r\n    if (res.data.is_success == true) {\r\n      this.getData();\r\n      this.setState({ modalCom: !this.state.modalCom })\r\n    } else {\r\n      alert(res.data.message);\r\n      this.setState({ isLoading: false });\r\n    }\r\n  }\r\n\r\n  openDelete = (item) => {\r\n    this.setState({\r\n      modalDelete: !this.state.modalDelete,\r\n      delete: item\r\n    })\r\n  }\r\n\r\n  async delete() {\r\n    this.setState({ isLoading: true });\r\n    const res = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.DELETE_KEY,\r\n      method: 'DELETE',\r\n      data: {\r\n        \"id\": this.state.delete['_id']\r\n      }\r\n    });\r\n\r\n    if (res.data.is_success == true) {\r\n      this.getData();\r\n      this.setState({ modalDelete: !this.state.modalDelete, delete: null })\r\n    } else {\r\n      alert(res.data.message);\r\n      this.setState({ isLoading: false });\r\n    }\r\n\r\n  }\r\n\r\n  getUsers(page = 1) {\r\n    const limit = this.state.limit;\r\n    const key = this.state.key || '';\r\n    const fetchData = {\r\n      method: 'GET',\r\n      headers: headers\r\n    };\r\n    fetch(global.BASE_URL + '/admin/users?key=' + key + '&page=' + page + '&limit=' + limit, fetchData).then(users => {\r\n      users.json().then(result => {\r\n        this.setState({\r\n          data: result.data,\r\n          itemsCount: result.total,\r\n          activePage: page,\r\n          totalActive: result.totalActive,\r\n          updated: '',\r\n        });\r\n      })\r\n    }).catch(console.log);\r\n  }\r\n\r\n  async getCompanyData(id) {\r\n    const resCompany = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.LIST_COMPANY,\r\n      method: 'POST',\r\n    });\r\n\r\n    if (id != '' || id != undefined) {\r\n      const currentC = await axios({\r\n        baseURL: Constants.BASE_URL,\r\n        url: Constants.LIST_COMPANY_WITH_ID + id,\r\n        method: 'POST',\r\n      });\r\n      if (currentC.data.data != null || currentC.data.data != undefined) {\r\n        this.setState({ currentCompany: currentC.data.data.Name });\r\n      }\r\n    }\r\n    this.setState({ dataCompany: resCompany.data.data });\r\n  }\r\n\r\n  async getTypeKeyData(id) {\r\n    const resType = await axios({\r\n      baseURL: Constants.BASE_URL,\r\n      url: Constants.LIST_TYPEKEY,\r\n      method: 'GET',\r\n    });\r\n\r\n    if (id != '' || id != undefined) {\r\n      const currentTypeKey = await axios({\r\n        baseURL: Constants.BASE_URL,\r\n        url: Constants.LIST_TYPEKEY_WITH_ID + id,\r\n        method: 'GET',\r\n      });\r\n      if (currentTypeKey.data.data != null || currentTypeKey.data.data != undefined) {\r\n        this.setState({ currentTypeKey: currentTypeKey.data.data.Name });\r\n      }\r\n    }\r\n    this.setState({ dataTypeKey: resType.data.data });\r\n  }\r\n\r\n  inputChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    const { data, key, viewingUser, communities, dataCompany, hidden,\r\n      currentCompany, dataTypeKey, currentTypeKey, action, arrPagination,\r\n      indexPage, dataHardWare, currentHardWare, keyName,\r\n      keyCodeCompany, keyTypeKey, keyActive, keyEndDate, keyStatus, keyValue } = this.state;\r\n\r\n    if (!this.state.isLoading) {\r\n      return (\r\n        <div className=\"animated fadeIn\">\r\n          <Row>\r\n            <Col>\r\n              <p style={styles.success}>{this.state.updated}</p>\r\n              <p style={styles.danger}>{this.state.deleted}</p>\r\n              <Card>\r\n                <CardHeader>\r\n                  Quản lý khóa (Page: {this.state.indexPage + 1})\r\n                  <div style={styles.tags}>\r\n                    <CRow>\r\n                      <CCol sm=\"6\" lg=\"12\">\r\n                        <CRow>\r\n                          <CCol sm=\"6\" lg=\"4\">\r\n                            <div>\r\n                              <Input style={styles.searchInput} onChange={(e) => {\r\n                                this.actionSearch(e, \"key\");\r\n                              }} name=\"key\" value={key} placeholder=\"Từ khóa\" />\r\n                            </div>\r\n                          </CCol>\r\n\r\n                          <CCol sm=\"6\" lg=\"4\">\r\n                            <CSelect style={styles.flexOption} onChange={e => {\r\n\r\n                              this.actionSearch(e, \"keyStatus\");\r\n\r\n                            }} custom>\r\n                              <option value={\"\"}>-----</option>\r\n                              {\r\n                                ['INSTOCK', 'AVAILABLE', 'ACTIVED', 'DISABLE'].map((item, i) => {\r\n                                  return (\r\n                                    <option value={item}>{item}</option>\r\n                                  );\r\n                                })\r\n                              }\r\n                            </CSelect>\r\n                          </CCol>\r\n                          <CCol sm=\"6\" lg=\"4\">\r\n                            <Button color=\"primary\" style={{ width: '100%', marginTop: 5 }} size=\"sm\" onClick={e => { this.resetSearch() }}>Làm mới tìm kiếm</Button>\r\n                          </CCol>\r\n                        </CRow>\r\n                      </CCol>\r\n                      <CCol sm=\"6\" lg=\"12\">\r\n                        <Button outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={e => this.toggleModal(\"new\")}>Thêm mới</Button>\r\n                      </CCol>\r\n                    </CRow>\r\n                  </div>\r\n                </CardHeader>\r\n                <CardBody>\r\n                  <table ble className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                    <thead className=\"thead-light\">\r\n                      <tr>\r\n                        <th className=\"text-center\">STT.</th>\r\n                        <th className=\"text-center\">Tên key</th>\r\n                        <th className=\"text-center\">Ngày kích hoạt</th>\r\n                        <th className=\"text-center\">Ngày hết hạn</th>\r\n                        <th className=\"text-center\">Giá trị</th>\r\n                        <th className=\"text-center\">Trạng thái</th>\r\n                        <th className=\"text-center\">#</th>\r\n                      </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                      <td colSpan=\"10\" hidden={hidden} className=\"text-center\">Không tìm thấy dữ liệu</td>\r\n                      {\r\n                        data != undefined ?\r\n                          data.map((item, i) => {\r\n                            return (\r\n                              <tr key={i}>\r\n                                <td className=\"text-center\">{i + 1}</td>\r\n                                <td className=\"text-center\">{item.Name}</td>\r\n                                <td className=\"text-center\">\r\n                                  {\r\n                                    item.Start_Date != null || item.Start_Date != undefined ?\r\n                                      (new Date(item.Start_Date)).toLocaleDateString() + ' ' + (new Date(item.Start_Date)).toLocaleTimeString() : \"\"\r\n                                  }\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                  {\r\n                                    item.End_Date != null || item.End_Date != undefined ?\r\n                                      (new Date(item.End_Date)).toLocaleDateString() + ' ' + (new Date(item.End_Date)).toLocaleTimeString() : \"\"\r\n                                  }\r\n                                </td>\r\n                                <td className=\"text-center\">{item.Value}</td>\r\n                                <td className=\"text-center\">\r\n                                  <CBadge color={this.getBadge(item.Status)}>\r\n                                    {item.Status}\r\n                                  </CBadge>\r\n                                </td>\r\n                                <td className=\"text-center\">\r\n                                  <Button style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >Cập nhật</Button>{' '}\r\n                                  <Button outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>Xoá</Button>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          }) : \"\"\r\n                      }\r\n                    </tbody>\r\n                  </table>\r\n                </CardBody>\r\n              </Card>\r\n              {\r\n                arrPagination.length == 1 ? \"\" :\r\n                  <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\r\n                    <tr style={styles.row}>\r\n                      {\r\n                        arrPagination.map((item, i) => {\r\n                          return (\r\n                            <td>\r\n                              <Button style={styles.pagination} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ data: arrPagination[i], indexPage: i }) }}>{i + 1}</Button>\r\n                            </td>\r\n                          );\r\n                        })\r\n                      }\r\n                    </tr>\r\n                  </div>\r\n              }\r\n            </Col>\r\n          </Row>\r\n\r\n          <Modal isOpen={this.state.modalCom} className={this.props.className}>\r\n            <ModalHeader>{this.state.action == 'new' ? `Tạo mới` : `Cập nhật`}</ModalHeader>\r\n\r\n            <ModalBody>\r\n              {\r\n                action == 'new' ? \"\" : <div>\r\n                  <label style={styles.flexLabel} htmlFor=\"tag\">Trạng thái:</label>\r\n                  <select style={styles.flexOption} name=\"Status\" onChange={e => this.onChange(\"Status\", e.target.value)}>\r\n                    <option value={this.state.Status}>{this.state.Status == '' ? ` - - - - - - - - - - ` : this.state.Status}</option>\r\n                    <option value={'INSTOCK'}>INSTOCK</option>\r\n                    <option value={'AVAILABLE'}>AVAILABLE</option>\r\n                    <option value={'ACTIVED'}>ACTIVED</option>\r\n                    <option value={'DISABLE'}>DISABLE</option>\r\n                  </select>\r\n                </div>\r\n              }\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" onClick={e => { this.state.action === 'new' ? this.updateUser() : this.updateUser() }} disabled={this.state.isLoading}>Lưu</Button>{' '}\r\n              <Button color=\"secondary\" onClick={e => this.setState({ modalCom: !this.state.modalCom })}>Đóng</Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n\r\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\r\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Xoá`}</ModalHeader>\r\n            <ModalBody>\r\n              <label htmlFor=\"tag\">{`Do you want to delete user \"${this.state.delete ? this.state.delete.Email : ''}\" ?`}</label>\r\n            </ModalBody>\r\n            <ModalFooter>\r\n              <Button color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Xoá</Button>{' '}\r\n              <Button color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Đóng</Button>\r\n            </ModalFooter>\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div id=\"page-loading\">\r\n        <div className=\"three-balls\">\r\n          <div className=\"ball ball1\"></div>\r\n          <div className=\"ball ball2\"></div>\r\n          <div className=\"ball ball3\"></div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst styles = {\r\n  datePicker: {\r\n    marginBottom: 20\r\n  },\r\n  wa10: {\r\n    width: \"5%\",\r\n    float: \"left\",\r\n    height: \"80px\"\r\n  },\r\n  pagination: {\r\n    marginRight: '5px'\r\n  },\r\n  flexLabel: {\r\n    width: 100\r\n  },\r\n  flexOption: {\r\n    width: 200,\r\n    margin: '1px'\r\n  },\r\n  a: {\r\n    textDecoration: 'none'\r\n  },\r\n  floatRight: {\r\n    float: \"right\",\r\n    marginTop: '3px'\r\n  },\r\n  spinner: {\r\n    width: \"30px\"\r\n  },\r\n  center: {\r\n    textAlign: \"center\"\r\n  },\r\n  tbody: {\r\n    height: \"380px\",\r\n    overflowY: \"auto\"\r\n  },\r\n  wh12: {\r\n    width: \"10%\",\r\n    float: \"left\",\r\n    height: \"80px\"\r\n  },\r\n  wh15: {\r\n    width: \"15%\",\r\n    float: \"left\",\r\n    height: \"80px\"\r\n  },\r\n  w5: {\r\n    width: \"12%\",\r\n    float: \"left\",\r\n    height: \"80px\"\r\n  },\r\n  row: {\r\n    float: \"left\",\r\n    width: \"100%\"\r\n  },\r\n  success: {\r\n    color: 'green'\r\n  },\r\n  danger: {\r\n    color: 'red'\r\n  },\r\n  mgl5: {\r\n    marginLeft: '5px'\r\n  },\r\n  tags: {\r\n    float: \"right\",\r\n    marginRight: \"5px\"\r\n  },\r\n  searchInput: {\r\n    width: \"200px\",\r\n    display: 'inline-block',\r\n    margin: '1px'\r\n  },\r\n  userActive: {\r\n    color: 'green'\r\n  },\r\n  userPending: {\r\n    color: 'red'\r\n  },\r\n  nagemonNameCol: {\r\n    width: '328px'\r\n  },\r\n  image: {\r\n    width: '100px',\r\n    height: '100px',\r\n    borderRadius: '99999px'\r\n  },\r\n  mgl5: {\r\n    marginBottom: '0px'\r\n  }\r\n}\r\n\r\nexport default Users;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder, onClick }) => {\r\n  return (\r\n    <div className={classnames('form-group', { 'has-error': error })}>\r\n      <label className=\"control-label\">{label}</label>\r\n      <input\r\n        onChange={onChange}\r\n        onClick={onClick}\r\n        onBlur={checkUserExists}\r\n        value={value}\r\n        type={type}\r\n        name={field}\r\n        placeholder={placeholder}\r\n        readOnly={readOnly}\r\n        className=\"form-control\"\r\n      />\r\n    {error && <span className=\"help-block\">{error}</span>}\r\n    </div>  );\r\n}\r\n\r\nTextFieldGroup.propTypes = {\r\n  field: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  checkUserExists: PropTypes.func\r\n}\r\n\r\nTextFieldGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n\r\nexport default TextFieldGroup;\r\n"],"sourceRoot":""}