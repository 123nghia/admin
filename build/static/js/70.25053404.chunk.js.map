{"version":3,"sources":["../node_modules/reactstrap/es/FormGroup.js","views/beauty/configWeb/BannerAia.js","views/beauty/configWeb/GameConfig.js","views/beauty/configWeb/dataList.js","views/beauty/configWeb/gameUser.js","views/beauty/configWeb/Content.js","views/beauty/configBeauty.js","views/Common/TextFieldGroup.js","views/components/Iframe.js","../node_modules/react-iframe/dist/es/iframe.js","../node_modules/reactstrap/es/Label.js"],"names":["propTypes","children","PropTypes","node","row","bool","check","inline","disabled","tag","tagPropType","className","string","cssModule","object","FormGroup","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","defaultProps","BannerAia","setStateByName","name","value","onChangeImage","e","name_link","name_show","this","SaveAllConfigWeb","class","Button","variant","color","onClick","TextFieldGroup","field","label","type","onChange","target","alt","style","width","height","src","imageBannerDesktop","hrefImageBannerDesktop","placeholder","imageBannerMobile","hrefImageBannerMobile","Component","Seo","getTimeConver","datetime","moment","format","Label","Input","score","scoreMax","custom","size","status","Voucher","getstatusItem","state","modalCom","scoreInput","scoreMaxInput","statusInput","setState","item","console","log","id","_id","valueselect","key","val","openModal","window","location","reload","bodyRequest","axios","post","baseUrlapi","then","res","Swal","fire","title","timer","reloadPage","dataListBeauty","map","i","x","dataCompany","find","companyId","compnayName","Name","outline","editdata","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","saveBeauty","GameUser","viewHistory","open","undefined","GameData","UserName","Phone","Image","ageGameReal","successGame","Date","Create_Date","toLocaleDateString","toLocaleTimeString","headers","Headers","auth","localStorage","getItem","append","ConfigWeb","valueLink","valueShow","files","reader","FileReader","readAsDataURL","onload","result","change","a","Constants","BASE_URL","url","newComany_id","company_id","tabNameConfig","icon","IoLogoBuffer","JSON","parse","poupintro","pupupSuccess","popupfail","fromDate","todate","fromtime","totime","dataGame","tabcontent","tablinks","document","getElementsByClassName","length","classList","add","remove","replace","animation","getAllDataCompany","getDataConfigWeb","setTimeout","getDataBeautyUser","ToggleViewConfigWeb","List_All_company","params","data","get","Output_newComany_id","dataGame1","isLoading","css","override","loading","speedMultiplier","List","sx","maxWidth","bgcolor","component","aria-labelledby","ListItemButton","pl","ListItemIcon","ListItemText","fontSize","primary","typeGetData","error","checkUserExists","readOnly","classnames","onBlur","Iframe","toggleView","link","closeModal","show","closeButton","display","position","__assign","Object","assign","t","s","n","arguments","p","prototype","hasOwnProperty","call","apply","_a","allowFullScreen","overflow","styles","onLoad","onMouseOver","onMouseOut","scrolling","frameBorder","ariaHidden","sandbox","allow","ariaLabel","ariaLabelledby","importance","referrerpolicy","allowpaymentrequest","objectAssign","create","_i","_b","keys","prop","_c","_d","currentAllow","trim","border","stringOrNumberProp","oneOfType","number","columnProps","shape","order","offset","hidden","for","xs","sm","md","lg","xl","widths","array","getColumnSizeClass","isXs","colWidth","colSize","htmlFor","colClasses","forEach","columnProp","colClass","isObject","_classNames","colSizeInterfix","push"],"mappings":"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","file":"static/js/70.25053404.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  children: PropTypes.node,\n  row: PropTypes.bool,\n  check: PropTypes.bool,\n  inline: PropTypes.bool,\n  disabled: PropTypes.bool,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar FormGroup = function FormGroup(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      row = props.row,\n      disabled = props.disabled,\n      check = props.check,\n      inline = props.inline,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"row\", \"disabled\", \"check\", \"inline\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, row ? 'row' : false, check ? 'form-check' : 'form-group', check && inline ? 'form-check-inline' : false, check && disabled ? 'disabled' : false), cssModule);\n\n  if (Tag === 'fieldset') {\n    attributes.disabled = disabled;\n  }\n\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nFormGroup.propTypes = propTypes;\nFormGroup.defaultProps = defaultProps;\nexport default FormGroup;","import { Component } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\r\n\r\nexport default class BannerAia extends Component {\r\n  \r\n    SaveAllConfigWeb(value) {\r\n        this.props.SaveAllConfigWeb(value);\r\n    }\r\n    setStateByName = (name, value) => {\r\n        this.props.setStateByName(name, value);\r\n      };\r\n    onChangeImage=(e, name, name_link, name_show) =>{\r\n        this.props.onChangeImage(e, name, name_link, name_show);\r\n    }\r\n\r\n  render() {\r\n      \r\n    return (\r\n      <>\r\n        <div class=\"text-center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={() => this.SaveAllConfigWeb(\"banner\")}\r\n          >\r\n            Lưu thay đổi\r\n          </Button>\r\n        </div>\r\n        <div class=\"mt-3\">\r\n          <h1>Banner trên PC</h1>\r\n          <TextFieldGroup\r\n            field=\"image\"\r\n            label=\"Hình ảnh\"\r\n            type={\"file\"}\r\n            onChange={(e) => this.onChangeImage(\r\n                e,\r\n                \"imageBannerDesktop\",\r\n                \"imageBannerDesktop_link\",\r\n                \"imageBannerDesktop_show\"\r\n              )}\r\n            onClick={(e) => {e.target.value = null;this.setStateByName(\"imageBannerDesktop_show\", \"\")}} \r\n   \r\n          />\r\n          <div class=\"text-center\">\r\n            <img\r\n              alt=\"\"\r\n              style={{ width: \"400px\" }}\r\n              height=\"auto\"\r\n              src={this.props.imageBannerDesktop}\r\n            />\r\n          </div>\r\n          <TextFieldGroup\r\n            field=\"hrefImageBannerDesktop\"\r\n            label=\"Đường dẫn(Nếu có)\"\r\n            value={this.props.hrefImageBannerDesktop}\r\n            placeholder=\"\"\r\n            type={\"text\"}\r\n            className=\"mt-3\"\r\n            onChange={(e) => {\r\n                this.setStateByName(\"hrefImageBannerDesktop\", e.target.value);\r\n              }}\r\n            \r\n          />\r\n        </div>\r\n        <hr />\r\n        <div class=\"mt-3\">\r\n          <h1>Banner trên điện thoại</h1>\r\n          <TextFieldGroup\r\n            field=\"image\"\r\n            label=\"Hình ảnh\"\r\n            type={\"file\"}\r\n            onChange={(e) => {\r\n              this.onChangeImage(\r\n                e,\r\n                \"imageBannerMobile\",\r\n                \"imageBannerMobile_link\",\r\n                \"imageBannerMobile_show\"\r\n              );\r\n            }}\r\n            onClick={(e) => {e.target.value = null;this.setStateByName(\"imageBannerMobile_show\", \"\")}} \r\n          />\r\n          <div class=\"text-center\">\r\n            <img\r\n              alt=\"\"\r\n              style={{ width: \"400px\" }}\r\n              height=\"auto\"\r\n              src={this.props.imageBannerMobile}\r\n            />\r\n          </div>\r\n          <TextFieldGroup\r\n            field=\"hrefImageBannerMobile\"\r\n            label=\"Đường dẫn(Nếu có)\"\r\n            value={this.props.hrefImageBannerMobile}\r\n            placeholder=\"\"\r\n            type={\"text\"}\r\n            className=\"mt-3\"\r\n            onChange={(e) => {\r\n              this.setStateByName(\"hrefImageBannerMobile\", e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport moment from 'moment'\r\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\r\nimport { Button, FormGroup, Label,Input  } from \"reactstrap\";\r\nimport {\r\n\r\n  CLabel, CSelect, CRow, CCol\r\n} from \"@coreui/react\";\r\n\r\n\r\nexport default class Seo extends Component {\r\n  SaveAllConfigWeb() {\r\n    this.props.SaveAllConfigWeb();\r\n  }\r\n  setStateByName = (name, value) => {\r\n    this.props.setStateByName(name, value);\r\n  };\r\n  onChangeImage=(e, name, name_link, name_show) =>{\r\n    this.props.onChangeImage(e, name, name_link, name_show);\r\n}\r\ngetTimeConver = (datetime) => {\r\n  if(datetime ==null )\r\n          return '';\r\n   return  moment(datetime).format('YYYY-MM-DD');\r\n\r\n}\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"text-center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={() => this.SaveAllConfigWeb()}\r\n          >\r\n            Lưu thay đổi\r\n          </Button>\r\n        </div>\r\n\r\n          \r\n      <FormGroup>\r\n    <Label >\r\n      Điểm mỗi lượt soi\r\n    </Label>\r\n    <Input\r\n      name =\"score\"\r\n      placeholder=\"Điểm mỗi lượt soi\"\r\n      type=\"number\"\r\n      value={this.props.score}\r\n      onChange={(e) => {\r\n        this.setStateByName( \"score\", e.target.value );\r\n      }}\r\n    />\r\n  </FormGroup>\r\n     \r\n  <FormGroup>\r\n    <Label >\r\n      Điểm tối đa ( theo ngày)\r\n    </Label>\r\n    <Input\r\n      name =\"scoreMax\"\r\n      placeholder=\"Điểm tối đa ( theo ngày)\"\r\n      type=\"number\"\r\n      value={this.props.scoreMax}\r\n      onChange={(e) => {\r\n        this.setStateByName( \"scoreMax\", e.target.value );\r\n      }}\r\n    />\r\n  </FormGroup>\r\n  <CSelect\r\n                 onChange={(e) => {\r\n                  this.setStateByName( \"status\", e.target.value );\r\n                }}   custom size=\"sm\" name=\"status\" \r\n                        value ={this.props.status}\r\n                 >\r\n                     \r\n                          <option   value =\"1\" >\r\n                          Hoạt động\r\n                          </option>\r\n                          <option   value =\"0\" >\r\n                          không hoạt động\r\n                          </option>\r\n                    \r\n                    </CSelect>\r\n\r\n\r\n        </>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\n\r\nimport CIcon from '@coreui/icons-react';\r\n\r\nimport {\r\n\r\nCSelect\r\n} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\r\nimport { Button } from \"reactstrap\";\r\nimport {\r\n  CButton\r\n} from '@coreui/react'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n  Input,\r\n  ModalHeader, ModalBody, ModalFooter, Modal,\r\n\r\n} from 'reactstrap';\r\nimport Swal from 'sweetalert2';\r\nexport default class Voucher extends Component {\r\n  \r\n  \r\n  SaveAllConfigWeb(value) {\r\n    this.props.SaveAllConfigWeb(value);\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n     \r\n      modalCom: false,\r\n      scoreInput: 0,\r\n      scoreMaxInput: 0,\r\n      statusInput: 0\r\n\r\n    };\r\n  }\r\n  setStateByName = (name, value) => {\r\n    this.props.setStateByName(name, value);\r\n  };\r\n  getstatusItem = (status)=> {\r\n    if(status ==\"1\")\r\n    {\r\n      return \"Hoạt động\";\r\n    }\r\n    return \"Không hoạt động\";\r\n  }\r\n\r\n  openModal() {\r\n    this.setState({\r\n      modalCom: !this.state.modalCom,\r\n    \r\n    })\r\n    \r\n  }\r\n\r\n  editdata (item){\r\n    console.log(item);\r\n \r\n\r\n    this.setState({\r\n      modalCom: !this.state.modalCom,\r\n      scoreMaxInput:  item.scoreMax,\r\n      id: item._id,\r\n      statusInput: item.status,\r\n      scoreInput:  item.score\r\n    \r\n    })\r\n  }\r\n\r\n  changeCompanySet (valueselect)\r\n  {\r\n\r\n  }\r\n  onChange(key, val) {\r\n    this.setState({ [key]: val })\r\n  }\r\n  reloadPage() {\r\n    \r\n   \r\n    this.openModal();\r\n    window.location.reload();\r\n\r\n  }\r\n\r\n  saveBeauty() {\r\n\r\n    \r\n  var baseUrlapi = \"https://api-soida.applamdep.com\";\r\n    let url = baseUrlapi + \"/api/gameBeauty/adminUpdate\";\r\n    \r\n    const bodyRequest = {\r\n        id: this.state.id,\r\n      status: this.state.statusInput,\r\n      score: this.state.scoreInput,\r\n      scoreMax: this.state.scoreMaxInput\r\n    };\r\n     axios\r\n    .post(url,bodyRequest )\r\n    .then((res) => {\r\n             Swal.fire({\r\n              title: 'thao tác thành công!',\r\n              timer: 3000,    \r\n            }\r\n            \r\n            );\r\n            this.reloadPage();\r\n    });\r\n \r\n};\r\n  render() {\r\n    return (\r\n      <>\r\n      \r\n       \r\n        <div class=\"flex-a-center config-box-border\">\r\n        \r\n        <table  className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                  <thead className=\"thead-light\">\r\n                    <tr>\r\n                      <th className=\"text-center\">STT.</th>\r\n                      <th className=\"text-center\">Tên công ty</th>\r\n                      <th className=\"text-center\">Điểm mỗi lươt soi</th>\r\n                      <th className=\"text-center\">Điểm tối đa\t</th>\r\n                         \r\n                      <th className=\"text-center\">Trạng thái</th>\r\n                      <th className=\"text-center\">Danh sách</th>\r\n                      <th className=\"text-center\">Chỉnh sửa</th>\r\n                          </tr>\r\n                  </thead>\r\n                  <tbody>\r\n             \r\n                    {\r\n                      this.props.dataListBeauty.map((item, i) => {\r\n                    \r\n                        var x =  this.props.dataCompany.find(x => x._id ===  item.companyId);\r\n\r\n                        const dataCompany = this.props.dataCompany;\r\n              \r\n                        var compnayName =\"\";\r\n                        if(x)\r\n                        {\r\n                          compnayName  = x.Name;\r\n                        }\r\n                        if(compnayName )\r\n                        {\r\n                        }\r\n                        else \r\n                        {\r\n                          return;\r\n                        }\r\n                        return (\r\n                              <tr >\r\n                                      <td className=\"text-center\">1 </td>\r\n                                      <td className=\"text-center\">{compnayName}</td>\r\n                                      <td className=\"text-center\">{item.score}</td>\r\n                                      <td className=\"text-center\">{item.scoreMax}</td>\r\n                                      <td className=\"text-center\">{this.getstatusItem(item.status)}</td>\r\n                                        \r\n                                      <td className=\"text-center\">\r\n                                          <CButton outline color=\"primary\" ><CIcon name=\"cil-magnifying-glass\" /> Xem chi tiết</CButton>\r\n                                      </td>\r\n                                      <td className=\"text-center\">\r\n                                          <CButton outline color=\"primary\"  onClick={e => this.editdata(item)} ><CIcon name=\"cis-update\" /> Sửa</CButton>\r\n                                      \r\n                                      </td>\r\n                            </tr>\r\n                        )\r\n\r\n                      })\r\n                     }\r\n                            \r\n                 \r\n                  </tbody>\r\n\r\n                </table>\r\n         \r\n        </div>\r\n\r\n\r\n        <Modal isOpen={this.state.modalCom} >\r\n            <ModalHeader>{'new' == 'new' ? `Tạo mới` : `Cập nhật`}</ModalHeader>\r\n            <ModalBody>\r\n              <TextFieldGroup\r\n                field=\"scoreInput\"\r\n                label=\"Điểm mỗi lượt soi\"\r\n              value ={this.state.scoreInput}\r\n              onChange={e => this.onChange(\"scoreInput\", e.target.value)}\r\n              />\r\n\r\n              <TextFieldGroup\r\n                field=\"scoreMaxInput\"\r\n                label=\"Điểm tối đa\"\r\n                value ={this.state.scoreMaxInput}\r\n                onChange={e => this.onChange(\"scoreMaxInput\", e.target.value)}\r\n              />\r\n               <CSelect\r\n                 onChange={e => this.onChange(\"statusInput\", e.target.value)}   custom size=\"sm\" name=\"company_idSearch\" \r\n                 value ={this.state.statusInput}\r\n                 id=\"company_idSearch\">\r\n                     \r\n                          <option   value =\"1\">\r\n                          Hoạt động\r\n                          </option>\r\n                          <option   value =\"0\">\r\n                          không hoạt động\r\n                          </option>\r\n                    \r\n                    </CSelect>\r\n\r\n            \r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n              <CButton color=\"primary\"  onClick={e => this.saveBeauty()} >Lưu</CButton>\r\n              <CButton color=\"secondary\" onClick={e => this.openModal()} >Đóng</CButton>\r\n            </ModalFooter>\r\n          </Modal>\r\n       \r\n        \r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport TextFieldGroup from \"../../Common/TextFieldGroup\";\r\nimport { Button } from \"reactstrap\";\r\nimport IframeModal from '../../components/Iframe';\r\nimport CIcon from '@coreui/icons-react';\r\nimport {\r\n  CButton\r\n} from '@coreui/react'\r\nimport {\r\n    CTextarea,\r\n  } from \"@coreui/react\";\r\n  export default class GameUser extends Component {\r\n   \r\n  SaveAllConfigWeb() {\r\n    this.props.SaveAllConfigWeb();\r\n  }\r\n  setStateByName = (name, value) => {\r\n    this.props.setStateByName(name, value);\r\n  };\r\n  onChangeImage=(e, name, name_link, name_show) =>{\r\n    this.props.onChangeImage(e, name, name_link, name_show);\r\n}\r\n\r\n\r\nviewHistory = (e) => {\r\n\r\n  window.open(\"/#/lich-su-ca-nhan/\"+ e, \"_blank\");\r\n\r\n}\r\n  render() {\r\n    return (\r\n      <>\r\n      \r\n        <table  className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                  <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th className=\"text-center\">STT.</th>\r\n                            <th className=\"text-center\">Tên</th>\r\n                            <th className=\"text-center\">Số điện thoại</th>\r\n                            <th className=\"text-center\">Hình ảnh</th>\r\n                            <th className=\"text-center\">Thông tin kết quả</th>\r\n                            <th className=\"text-center\">Ngày than gia</th>\r\n                            <th className=\"text-center\">Thông tin</th>\r\n                        </tr>\r\n                  </thead>\r\n                  <tbody>\r\n           \r\n                   \r\n                    {\r\n                      this.props.GameData != undefined ?\r\n                      this.props.GameData.map((item, i) => {\r\n                      return (\r\n                             <tr key={i}>\r\n                              <td className=\"text-center\">{i+1}</td>\r\n                                   <td className=\"text-center\">{item.UserName}</td>\r\n                                   <td className=\"text-center\">{item.Phone}</td>\r\n                                   <td className=\"text-center\">\r\n                                         <img src={item.Image} style={{ width: '100px', height: 50 }} />\r\n                                   </td>\r\n                                   <td className=\"text-left\">\r\n                                    \r\n                                         <p>Loại game: <strong>Game tuổi da</strong>  </p>\r\n                                         <p>Độ tuổi trúng game:  <strong>26 </strong>  </p>\r\n                                         <p>Độ tuổi thực:  <strong>{ item.ageGameReal} </strong>  </p>\r\n\r\n                                         <p>Trúng thưởng:   <strong>{item.successGame? \"Trúng thưởng\": \"Không\" } </strong></p>\r\n                                    </td>\r\n                                   \r\n                                   <td className=\"text-center\">\r\n                                          <p>{(new Date(item.Create_Date)).toLocaleDateString()} </p> \r\n                                          \r\n                                          <p>{(new Date(item.Create_Date)).toLocaleTimeString()} </p>\r\n                                            \r\n                                    </td>\r\n\r\n                                    <td className=\"text-center\">\r\n                                      <CButton outline color=\"primary\" onClick={e => {\r\n                                      this.viewHistory(\r\n                                         item._id\r\n                                      )\r\n                                      }}\r\n                                \r\n                                ><CIcon name=\"cil-magnifying-glass\" /> Xem chi tiết</CButton>\r\n                                     </td>\r\n\r\n\r\n                              </tr>\r\n                          );\r\n                        }) : \"\"\r\n                    }\r\n                  </tbody>\r\n\r\n               \r\n        </table>\r\n      \r\n   \r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\r\nimport { Button } from \"reactstrap\";\r\nimport {\r\n    CTextarea,\r\n  } from \"@coreui/react\";\r\nexport default class Seo extends Component {\r\n  SaveAllConfigWeb() {\r\n    this.props.SaveAllConfigWeb();\r\n  }\r\n  setStateByName = (name, value) => {\r\n    this.props.setStateByName(name, value);\r\n  };\r\n  onChangeImage=(e, name, name_link, name_show) =>{\r\n    this.props.onChangeImage(e, name, name_link, name_show);\r\n}\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"text-center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={() => this.SaveAllConfigWeb()}\r\n          >\r\n            Lưu thay đổi\r\n          </Button>\r\n        </div>\r\n        <TextFieldGroup\r\n            field=\"poupintro\"\r\n            label=\"Poup giới thiệu:\"\r\n            value={this.props.poupintro}\r\n            placeholder={\"\"}\r\n            onChange={(e) => {\r\n              this.setStateByName( \"poupintro\", e.target.value );\r\n            }}\r\n        />\r\n        <TextFieldGroup\r\n            field=\"pupupSuccess\"\r\n            label=\"Câu thông  báo khi trúng thưởng:\"\r\n            value={this.props.pupupSuccess}\r\n            placeholder={\"\"}\r\n            onChange={(e) => {\r\n              this.setStateByName( \"pupupSuccess\", e.target.value );\r\n            }}\r\n        />\r\n        <TextFieldGroup\r\n            field=\"introduce\"\r\n            label=\"Câu thông báo khi không trúng thưởng:\"\r\n            value={this.props.popupfail}\r\n            placeholder={\"\"}\r\n            onChange={(e) => {\r\n              this.setStateByName( \"popupfail\", e.target.value );\r\n            }}\r\n        />  \r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport List from \"@mui/material/List\";\r\n\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Constants from \"./../../contants/contants\";\r\nimport axios from \"axios\";\r\nimport { css } from \"@emotion/react\";\r\nimport DotLoader from \"react-spinners/DotLoader\";\r\nimport { IoLogoBuffer } from \"@react-icons/all-files/io/IoLogoBuffer\";\r\nimport BannerAia from \"./configWeb/BannerAia\";\r\nimport Logo from \"./configWeb/GameConfig\";\r\nimport DataList from \"./configWeb/dataList\";\r\n\r\nimport Seo from \"./configWeb/Content\";\r\nimport DataGame from \"./configWeb/gameUser\";\r\nimport { BiSlideshow } from \"react-icons/bi\";\r\nimport { MdOutlinePermDataSetting } from \"react-icons/md\";\r\nimport { BsChatDots } from \"react-icons/bs\";\r\n\r\nimport Swal from 'sweetalert2';\r\nlet headers = new Headers();\r\nconst auth = localStorage.getItem(\"auth\");\r\nheaders.append(\"Authorization\", \"Bearer \" + auth);\r\nheaders.append(\"Content-Type\", \"application/json\");\r\nclass ConfigWeb extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if(localStorage.type !='2')\r\n    {\r\n      this.state = {\r\n        tabNameConfig: [\r\n           \r\n          {\r\n            _id: \"20\",\r\n            name: \"Nhà cung cấp\",\r\n            icon: <IoLogoBuffer style={{ width: \"24px \", height: \"24px \" }} />,\r\n          },\r\n        ],\r\n        company_id: JSON.parse(localStorage.getItem(\"user\")).company_id\r\n          ? JSON.parse(localStorage.getItem(\"user\")).company_id\r\n          : null,\r\n        poupintro: \"\",\r\n        pupupSuccess: \"\",\r\n        popupfail: \"\",\r\n        fromDate: \"\",\r\n        todate: \"\",\r\n        fromtime: \"\",\r\n        totime: \"\",\r\n        scoreMax: \"\",\r\n        dataGame:  [],\r\n        score: \"\",\r\n        dataListBeauty: [],\r\n        dataCompany: []\r\n  \r\n  \r\n      };\r\n    }\r\n    else \r\n    {\r\n      this.state = {\r\n        tabNameConfig: [\r\n            {\r\n            _id: \"4\",\r\n            name: \"Cài đặt\",\r\n            icon: <IoLogoBuffer style={{ width: \"24px \", height: \"24px \" }} />,\r\n          }\r\n          // ,\r\n          // {\r\n          //   _id: \"19\",\r\n          //   name: \"Danh sách\",\r\n          //   icon: <IoLogoBuffer style={{ width: \"24px \", height: \"24px \" }} />,\r\n          // }\r\n         \r\n        ],\r\n        company_id: JSON.parse(localStorage.getItem(\"user\")).company_id\r\n          ? JSON.parse(localStorage.getItem(\"user\")).company_id\r\n          : null,\r\n        poupintro: \"\",\r\n        pupupSuccess: \"\",\r\n        popupfail: \"\",\r\n        fromDate: \"\",\r\n        todate: \"\",\r\n        fromtime: \"\",\r\n        totime: \"\",\r\n        scoreMax: \"\",\r\n        dataGame:  [],\r\n        score: \"\",\r\n        dataListBeauty: [],\r\n        dataCompany: []\r\n  \r\n  \r\n      };\r\n    }\r\n   \r\n  }\r\n\r\n  ToggleViewConfigWeb(id) {\r\n    var i, tabcontent, tablinks;\r\n    tabcontent = document.getElementsByClassName(\"tabcontent\");\r\n    tablinks = document.getElementsByClassName(\"tablinks\");\r\n    const { tabNameConfig } = this.state;\r\n    for (i = 0; i < tabNameConfig.length; i++) {\r\n      if (tabNameConfig[i]._id === id) {\r\n        tablinks[i].classList.add(\"tabcontent-left-active\");\r\n      } else {\r\n        tablinks[i].classList.remove(\"tabcontent-left-active\");\r\n      }\r\n    }\r\n    for (i = 0; i < tabcontent.length; i++) {\r\n      if (tabcontent[i].id.replace(\"tabcontent\", \"\") === id) {\r\n        tabcontent[i].classList.add(\"defaultOpen\");\r\n        tabcontent[i].style.animation = \"hideOpa 1s ease-in-out\";\r\n      } else {\r\n        tabcontent[i].classList.remove(\"defaultOpen\");\r\n        tabcontent[i].style.animation = \"none\";\r\n      }\r\n    }\r\n  }\r\n  onChangeImage = (e, value, valueLink, valueShow) => {\r\n    let files = e.target.files;\r\n    let reader = new FileReader();\r\n    this.setState({ [valueLink]: files[0] });\r\n    reader.readAsDataURL(files[0]);\r\n    reader.onload = (e) => {\r\n      this.setState({ [value]: e.target.result, [valueShow]: e.target.result });\r\n    };\r\n  };\r\n  async componentDidMount() {\r\n    await this.getAllDataCompany();\r\n  \r\n      await this.getDataConfigWeb();\r\n\r\n      setTimeout(() => {\r\n         this.dataListBeauty();\r\n      }, 2000);\r\n\r\n   \r\n      if(localStorage.type =='2')\r\n      {\r\n        this.getDataBeautyUser();\r\n      }\r\n      \r\n \r\n      this.ToggleViewConfigWeb(\"4\");\r\n  }\r\n\r\n  async getAllDataCompany (){\r\n    \r\n    var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + Constants.List_All_company;\r\n   \r\n    await axios\r\n      .post(url, {\r\n        params: {\r\n\r\n        \r\n        },\r\n      })\r\n      .then((res) => {\r\n        \r\n        var data = res.data;\r\n      \r\n      \r\n           this.setState(\r\n          {\r\n        \r\n            dataCompany: data.data.dataCompany\r\n           \r\n          },\r\n          () => {\r\n\r\n           \r\n          }\r\n        );\r\n      });\r\n\r\n  }\r\n\r\n async dataListBeauty ()\r\n {\r\n\r\n  var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + \"/api/gameBeauty/getall\";\r\n   \r\n    await axios\r\n      .get(url, {\r\n        params: {\r\n\r\n        \r\n        },\r\n      })\r\n      .then((res) => {\r\n        \r\n        var data = res.data.data;\r\n      \r\n           this.setState(\r\n          {\r\n        \r\n            dataListBeauty: data\r\n           \r\n          },\r\n          () => {\r\n\r\n           \r\n          }\r\n        );\r\n      });\r\n\r\n }\r\n\r\n  async getDataConfigWeb() {\r\n    var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + \"/api/gameBeauty/getInfo\";\r\n    const newComany_id = this.state.company_id;\r\n    let Output_newComany_id;\r\n    if (newComany_id) {\r\n      Output_newComany_id = newComany_id;\r\n    } else {\r\n      Output_newComany_id = \"-1\";\r\n    }\r\n    await axios\r\n      .get(url, {\r\n        params: {\r\n\r\n          company_id: Output_newComany_id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        \r\n        var data = res.data.data;\r\n        console.log(data);\r\n        \r\n           this.setState(\r\n          {\r\n        \r\n            scoreMax: data.scoreMax,\r\n            score: data.score,\r\n            status:data.status,\r\n           \r\n          },\r\n          () => {\r\n\r\n            console.log(this.state);\r\n          }\r\n        );\r\n      });\r\n  }\r\n\r\n  async getDataGame1() {\r\n    var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + \"/api/get-game-data-11\";\r\n    const newComany_id = this.state.company_id;\r\n    let Output_newComany_id;\r\n    if (newComany_id) {\r\n      Output_newComany_id = newComany_id;\r\n    } else {\r\n      Output_newComany_id = \"-1\";\r\n    }\r\n    await axios\r\n      .get(url, {\r\n        params: {\r\n          company_id: Output_newComany_id,\r\n\r\n        },\r\n      })\r\n      .then((res) => {\r\n        \r\n         var data = res.data.data;\r\n          this.setState(\r\n          {\r\n            dataGame1 : data\r\n          },\r\n          () => {\r\n\r\n            \r\n          }\r\n        );\r\n      });\r\n  }\r\n\r\n  async getDataBeautyUser() {\r\n    var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + \"/api/get-data-beauty-user\";\r\n    const newComany_id = this.state.company_id;\r\n    let Output_newComany_id;\r\n    if (newComany_id) {\r\n      Output_newComany_id = newComany_id;\r\n    } else {\r\n      Output_newComany_id = \"-1\";\r\n    }\r\n    await axios\r\n      .get(url, {\r\n        params: {\r\n          company_id: Output_newComany_id,\r\n\r\n        },\r\n      })\r\n      .then((res) => {\r\n        \r\n         var data = res.data.data;\r\n          this.setState(\r\n          {\r\n            dataGame1 : data\r\n          },\r\n          () => {\r\n\r\n            \r\n          }\r\n        );\r\n      });\r\n  }\r\n  async getDataGame() {\r\n    var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + \"/api/get-game-data-1\";\r\n    const newComany_id = this.state.company_id;\r\n    let Output_newComany_id;\r\n    if (newComany_id) {\r\n      Output_newComany_id = newComany_id;\r\n    } else {\r\n      Output_newComany_id = \"-1\";\r\n    }\r\n    await axios\r\n      .get(url, {\r\n        params: {\r\n          company_id: Output_newComany_id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        \r\n         var data = res.data.data;\r\n          this.setState(\r\n          {\r\n            dataGame : data\r\n          },\r\n          () => {\r\n\r\n            console.log(data);\r\n          }\r\n        );\r\n      });\r\n  }\r\n\r\n  SaveAllConfigWeb = async (change) => {\r\n\r\n   \r\n\r\n    var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + \"/api/gameBeauty/update\";\r\n    const newComany_id = this.state.company_id;\r\n    let Output_newComany_id;\r\n    if (newComany_id) {\r\n      Output_newComany_id = newComany_id;\r\n    } else {\r\n      Output_newComany_id = \"-1\";\r\n    }\r\n    const bodyRequest = {\r\n    \r\n      company_id: Output_newComany_id,\r\n      status: this.state.status,\r\n      scoreMax: this.state.scoreMax,\r\n      score: this.state.score\r\n     \r\n\r\n\r\n};\r\n    \r\n\r\n    await axios\r\n    .post(url,bodyRequest )\r\n    .then((res) => {\r\n             Swal.fire({\r\n              title: 'thao tác thành công!',\r\n              timer: 3000,    \r\n            });\r\n    });\r\n \r\n  };\r\n\r\n  setStateByName = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.isLoading) {\r\n      return (\r\n        <div className=\"animated fadeIn\">\r\n          <div className=\"flex-tabs\">\r\n            <div className=\"tab\">\r\n              <List\r\n                sx={{\r\n                  width: \"100%\",\r\n                  maxWidth: 360,\r\n                  bgcolor: \"background.paper\",\r\n                }}\r\n                component=\"nav\"\r\n                aria-labelledby=\"nested-list-subheader\"\r\n              >\r\n                {this.state.tabNameConfig\r\n                  ? this.state.tabNameConfig.map((item, i) => {\r\n                      return (\r\n                        <ListItemButton\r\n                          key={item._id}\r\n                          className={\r\n                            i === 0\r\n                              ? \" tablinks tabcontent-left-active\"\r\n                              : \" tablinks\"\r\n                          }\r\n                          onClick={() => this.ToggleViewConfigWeb(item._id)}\r\n                          sx={{ pl: 4 }}\r\n                        >\r\n                          <ListItemIcon>{item.icon}</ListItemIcon>\r\n                          <ListItemText\r\n                            className=\"tabcontent-left\"\r\n                            style={{\r\n                              fontSize: \"14px !important\",\r\n                              color: \"rgb(52, 71, 103)\",\r\n                            }}\r\n                            primary={item.name}\r\n                          />\r\n                        </ListItemButton>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </List>\r\n            </div>\r\n            <div className=\"tabcontents\">\r\n              \r\n              \r\n\r\n              <div id=\"tabcontent12\" className=\"tabcontent\">\r\n                <DataGame\r\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\r\n                  setStateByName={this.setStateByName}\r\n                  GameData  = {this.state.dataGame}\r\n                  typeGetData = {0}\r\n                  pupupSuccess={this.state.pupupSuccess}\r\n                  poupintro={this.state.poupintro}\r\n                  popupfail={this.state.popupfail}\r\n                  fromDate={this.state.fromDate}\r\n                  todate={this.state.todate}\r\n                  fromtime={this.state.fromtime}\r\n                  totime={this.state.totime}\r\n                \r\n                  scoreMax={this.state.scoreMax}\r\n                  status={this.state.status}\r\n                  score={this.state.score}\r\n                />\r\n              </div>\r\n\r\n              <div id=\"tabcontent13\" className=\"tabcontent\">\r\n                <DataGame\r\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\r\n                  setStateByName={this.setStateByName}\r\n                  GameData  = {this.state.dataGame1}\r\n                  typeGetData = {1}\r\n                 \r\n                \r\n                  scoreMax={this.state.scoreMax}\r\n                  score={this.state.score}\r\n                  status= {this.state.status}\r\n                />\r\n              </div>\r\n\r\n              <div id=\"tabcontent19\" className=\"tabcontent\">\r\n                <DataGame\r\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\r\n                  setStateByName={this.setStateByName}\r\n                  GameData  = {this.state.dataGame1}\r\n                  typeGetData = {1}\r\n                 \r\n                \r\n                  scoreMax={this.state.scoreMax}\r\n                  score={this.state.score}\r\n                  status= {this.state.status}\r\n                />\r\n              </div>\r\n\r\n              <div id=\"tabcontent9\" className=\"tabcontent\">\r\n                <BannerAia\r\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\r\n                  setStateByName={this.setStateByName}\r\n                  onChangeImage = {this.onChangeImage}\r\n                  imageBannerDesktop={this.state.imageBannerDesktop}\r\n                  hrefImageBannerDesktop={this.state.hrefImageBannerDesktop}\r\n                  imageBannerMobile={this.state.imageBannerMobile}\r\n                  hrefImageBannerMobile={this.state.hrefImageBannerMobile}\r\n                />\r\n              </div>\r\n              <div id=\"tabcontent4\" className=\"tabcontent \">\r\n                <Logo\r\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\r\n                  setStateByName={this.setStateByName}\r\n              \r\n                  pupupSuccess={this.state.pupupSuccess}\r\n                  poupintro={this.state.poupintro}\r\n                  popupfail={this.state.popupfail}\r\n                  fromDate={this.state.fromDate}\r\n                  todate={this.state.todate}\r\n                  fromtime={this.state.fromtime}\r\n                  totime={this.state.totime}\r\n                  scoreMax={this.state.scoreMax}\r\n                  score={this.state.score}\r\n                  status= {this.state.status}\r\n                />\r\n              </div>\r\n              {\r\n\r\n                  this.state.company_id == undefined ? ( <div id=\"tabcontent20\" className=\"tabcontent\">\r\n                  <DataList\r\n                 \r\n                    dataListBeauty =  {this.state.dataListBeauty}\r\n                  \r\n                    dataCompany = {this.state.dataCompany}\r\n                    \r\n                  />\r\n                </div>) : <></>\r\n              }\r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"sweet-loading\">\r\n        <DotLoader\r\n          css={override}\r\n          size={50}\r\n          color={\"#123abc\"}\r\n          loading={this.state.isLoading}\r\n          speedMultiplier={1.5}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nexport default ConfigWeb;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder, onClick }) => {\r\n  return (\r\n    <div className={classnames('form-group', { 'has-error': error })}>\r\n      <label className=\"control-label\">{label}</label>\r\n      <input\r\n        onChange={onChange}\r\n        onClick={onClick}\r\n        onBlur={checkUserExists}\r\n        value={value}\r\n        type={type}\r\n        name={field}\r\n        placeholder={placeholder}\r\n        readOnly={readOnly}\r\n        className=\"form-control\"\r\n      />\r\n    {error && <span className=\"help-block\">{error}</span>}\r\n    </div>  );\r\n}\r\n\r\nTextFieldGroup.propTypes = {\r\n  field: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  checkUserExists: PropTypes.func\r\n}\r\n\r\nTextFieldGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n\r\nexport default TextFieldGroup;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Iframes from 'react-iframe'\r\n\r\nimport {\r\n  CButton,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n} from '@coreui/react'\r\n\r\nfunction Iframe({ toggleView, link, closeModal }) {\r\n\r\n  const handleClose = () => {\r\n    if (closeModal) {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CModal\r\n      show={toggleView}\r\n      size=\"xl\"\r\n    >\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>Chi tiết soi da</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        <Iframes url={link}\r\n          width=\"100%\"\r\n          height=\"500px\"\r\n          display=\"initial\"\r\n          position=\"relative\" />\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"secondary\" onClick={() => { handleClose() }}>Đóng</CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n  )\r\n}\r\n\r\nIframe.propTypes = {\r\n  link: PropTypes.string,\r\n  toggleView: PropTypes.bool\r\n}\r\n\r\nIframe.defaultProps = {\r\n  link: \"\",\r\n  toggleView: false\r\n};\r\n\r\nexport default Iframe\r\n\r\n","var __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nimport React from \"react\";\nimport objectAssign from \"object-assign\";\nvar Iframe = function (_a) {\n    var url = _a.url, allowFullScreen = _a.allowFullScreen, position = _a.position, display = _a.display, height = _a.height, width = _a.width, overflow = _a.overflow, styles = _a.styles, onLoad = _a.onLoad, onMouseOver = _a.onMouseOver, onMouseOut = _a.onMouseOut, scrolling = _a.scrolling, id = _a.id, frameBorder = _a.frameBorder, ariaHidden = _a.ariaHidden, sandbox = _a.sandbox, allow = _a.allow, className = _a.className, title = _a.title, ariaLabel = _a.ariaLabel, ariaLabelledby = _a.ariaLabelledby, name = _a.name, target = _a.target, loading = _a.loading, importance = _a.importance, referrerpolicy = _a.referrerpolicy, allowpaymentrequest = _a.allowpaymentrequest, src = _a.src;\n    var defaultProps = objectAssign({\n        src: src || url,\n        target: target || null,\n        style: {\n            position: position || null,\n            display: display || \"block\",\n            overflow: overflow || null\n        },\n        scrolling: scrolling || null,\n        allowpaymentrequest: allowpaymentrequest || null,\n        importance: importance || null,\n        sandbox: sandbox || null,\n        loading: loading || null,\n        styles: styles || null,\n        name: name || null,\n        className: className || null,\n        referrerpolicy: referrerpolicy || null,\n        title: title || null,\n        allow: allow || null,\n        id: id || null,\n        \"aria-labelledby\": ariaLabelledby || null,\n        \"aria-hidden\": ariaHidden || null,\n        \"aria-label\": ariaLabel || null,\n        width: width || null,\n        height: height || null,\n        onLoad: onLoad || null,\n        onMouseOver: onMouseOver || null,\n        onMouseOut: onMouseOut || null\n    });\n    var props = Object.create(null);\n    for (var _i = 0, _b = Object.keys(defaultProps); _i < _b.length; _i++) {\n        var prop = _b[_i];\n        if (defaultProps[prop] != null) {\n            props[prop] = defaultProps[prop];\n        }\n    }\n    for (var _c = 0, _d = Object.keys(props.style); _c < _d.length; _c++) {\n        var i = _d[_c];\n        if (props.style[i] == null) {\n            delete props.style[i];\n        }\n    }\n    if (allowFullScreen) {\n        if (\"allow\" in props) {\n            var currentAllow = props.allow.replace(\"fullscreen\", \"\");\n            props.allow = (\"fullscreen \" + currentAllow.trim()).trim();\n        }\n        else {\n            props.allow = \"fullscreen\";\n        }\n    }\n    if (frameBorder >= 0) {\n        if (!props.style.hasOwnProperty(\"border\")) {\n            props.style.border = frameBorder;\n        }\n    }\n    return React.createElement(\"iframe\", __assign({}, props));\n};\nexport default Iframe;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType, isObject } from './utils';\nvar colWidths = ['xs', 'sm', 'md', 'lg', 'xl'];\nvar stringOrNumberProp = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\nvar columnProps = PropTypes.oneOfType([PropTypes.bool, PropTypes.string, PropTypes.number, PropTypes.shape({\n  size: stringOrNumberProp,\n  order: stringOrNumberProp,\n  offset: stringOrNumberProp\n})]);\nvar propTypes = {\n  children: PropTypes.node,\n  hidden: PropTypes.bool,\n  check: PropTypes.bool,\n  size: PropTypes.string,\n  for: PropTypes.string,\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  xs: columnProps,\n  sm: columnProps,\n  md: columnProps,\n  lg: columnProps,\n  xl: columnProps,\n  widths: PropTypes.array\n};\nvar defaultProps = {\n  tag: 'label',\n  widths: colWidths\n};\n\nvar getColumnSizeClass = function getColumnSizeClass(isXs, colWidth, colSize) {\n  if (colSize === true || colSize === '') {\n    return isXs ? 'col' : \"col-\" + colWidth;\n  } else if (colSize === 'auto') {\n    return isXs ? 'col-auto' : \"col-\" + colWidth + \"-auto\";\n  }\n\n  return isXs ? \"col-\" + colSize : \"col-\" + colWidth + \"-\" + colSize;\n};\n\nvar Label = function Label(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      hidden = props.hidden,\n      widths = props.widths,\n      Tag = props.tag,\n      check = props.check,\n      size = props.size,\n      htmlFor = props.for,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"hidden\", \"widths\", \"tag\", \"check\", \"size\", \"for\"]);\n\n  var colClasses = [];\n  widths.forEach(function (colWidth, i) {\n    var columnProp = props[colWidth];\n    delete attributes[colWidth];\n\n    if (!columnProp && columnProp !== '') {\n      return;\n    }\n\n    var isXs = !i;\n    var colClass;\n\n    if (isObject(columnProp)) {\n      var _classNames;\n\n      var colSizeInterfix = isXs ? '-' : \"-\" + colWidth + \"-\";\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp.size);\n      colClasses.push(mapToCssModules(classNames((_classNames = {}, _classNames[colClass] = columnProp.size || columnProp.size === '', _classNames[\"order\" + colSizeInterfix + columnProp.order] = columnProp.order || columnProp.order === 0, _classNames[\"offset\" + colSizeInterfix + columnProp.offset] = columnProp.offset || columnProp.offset === 0, _classNames))), cssModule);\n    } else {\n      colClass = getColumnSizeClass(isXs, colWidth, columnProp);\n      colClasses.push(colClass);\n    }\n  });\n  var classes = mapToCssModules(classNames(className, hidden ? 'sr-only' : false, check ? 'form-check-label' : false, size ? \"col-form-label-\" + size : false, colClasses, colClasses.length ? 'col-form-label' : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({\n    htmlFor: htmlFor\n  }, attributes, {\n    className: classes\n  }));\n};\n\nLabel.propTypes = propTypes;\nLabel.defaultProps = defaultProps;\nexport default Label;"],"sourceRoot":""}