{"version":3,"sources":["views/base/tables/AI_Skin/CustomerRequestTable.js","../node_modules/@material-ui/core/esm/styles/makeStyles.js"],"names":["headers","Headers","auth","localStorage","getItem","append","makeStyles","theme","root","marginTop","spacing","CustomerRequest","props","getData","a","setState","isLoading","axios","baseURL","Constants","BASE_URL","url","CUS_RES_LIST","method","res","val","data","is_success","pagination","dataApi","active","map","Status","totalActive","getDataForCompany","CUS_RES_LIST_COMPANY","Company_Id","JSON","parse","state","company_id","openDelete","item","modalDelete","delete","key","keyStatus","activePage","page","itemsCount","limit","modalCom","viewingUser","communities","updated","hidden","action","UserName","FullName","Phone","Type","arrPagination","indexPage","token","Authorization","arrTypeRequest","type","this","getTypeRequestData","arr","i","length","window","location","hash","isHidden","href","TYPE_REQUEST_LIST","j","temparray","arrTotal","slice","push","d","toLocaleUpperCase","includes","e","name_action","target","value","searchKey","alert","body","CUS_RES_ADD","message","id","CUS_RES_UPDATE","CUS_RES_DELETE","name","status","className","css","override","size","color","loading","speedMultiplier","style","styles","success","danger","deleted","tags","sm","lg","searchInput","onChange","actionSearch","placeholder","flexOption","custom","width","onClick","resetSearch","ble","colSpan","undefined","Name","Date","Create_Date","toLocaleDateString","toLocaleTimeString","getBadge","getBadge_String","float","count","v","isOpen","field","label","htmlFor","Value","selected","flexLabel","addRoles","updateUser","disabled","toggleModal","toggle","Component","marginRight","margin","textDecoration","floatRight","spinner","center","textAlign","tbody","height","overflowY","wh12","wh15","w5","wa10","row","mgl5","marginLeft","display","userActive","userPending","nagemonNameCol","image","borderRadius","marginBottom","stylesOrCreator","options","arguments","makeStylesWithoutDefault","_extends","defaultTheme"],"mappings":"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","file":"static/js/61.dbb97cdf.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport CIcon from '@coreui/icons-react'\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Input,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n} from 'reactstrap';\n\nimport {\n  CSelect,\n  CRow,\n  CCol,\n  CBadge,\n  CButton\n} from '@coreui/react'\n\nimport { makeStyles, withStyles } from '@material-ui/core/styles';\nimport Pagination from '@material-ui/lab/Pagination';\nimport 'moment-timezone';\nimport Constants from \"../../../../contants/contants\";\nimport TextFieldGroup from \"../../../Common/TextFieldGroup\";\nimport axios from 'axios'\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    '& > *': {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\nclass CustomerRequest extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      keyStatus: '',\n      activePage: 1,\n      page: 1,\n      itemsCount: 0,\n      limit: 20,\n      totalActive: 0,\n      modalCom: false,\n      viewingUser: {},\n      communities: [],\n      updated: '',\n      dataApi: [],\n      hidden: false,\n      action: 'new',\n      UserName: '',\n      FullName: '',\n      Phone: '',\n      Company_Id: '',\n      Type: \"0\",\n      Status: '',\n      modalDelete: false,\n      delete: null,\n      arrPagination: [],\n      indexPage: 0,\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      company_id: localStorage.getItem('user'),\n      isLoading: false,\n      arrTypeRequest: [],\n      type: localStorage.getItem('type')\n    };\n  }\n  async componentDidMount() {\n    if (this.state.type == '0' || this.state.type == '1') {\n      this.getData();\n    } else {\n      this.getDataForCompany();\n    }\n\n    this.getTypeRequestData();\n\n    let arr = JSON.parse(localStorage.getItem('url'));\n\n    for (let i = 0; i < arr.length; i++) {\n      if (arr[i].url == window.location.hash) {\n        if (arr[i].isHidden == true) {\n          window.location.href = '#/'\n        }\n      }\n    }\n  }\n\n  async getTypeRequestData() {\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.TYPE_REQUEST_LIST,\n      method: 'POST'\n    });\n\n    if (res.data.is_success) {\n      this.setState({ arrTypeRequest: res.data.data })\n    }\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden: false\n      })\n    } else {\n      this.setState({\n        hidden: true\n      })\n    }\n\n    this.setState({ arrPagination: arrTotal, data: arrTotal[this.state.indexPage] });\n  }\n\n  getData = async () => {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.CUS_RES_LIST,\n      method: 'POST'\n    });\n    let val = res.data.data;\n\n    if (res.data.is_success) {\n      this.pagination(val);\n      this.setState({ dataApi: val });\n\n      let active = 0\n\n      val.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ isLoading: false, totalActive: active });\n    }\n  }\n\n  getDataForCompany = async () => {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.CUS_RES_LIST_COMPANY,\n      method: 'POST',\n      data: {\n        Company_Id: JSON.parse(this.state.company_id).company_id\n      }\n    });\n    let val = res.data.data;\n\n    if (res.data.is_success) {\n      this.pagination(val);\n      this.setState({ dataApi: val });\n\n      let active = 0\n\n      val.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ isLoading: false, totalActive: active });\n    }\n  }\n\n  searchKey() {\n    const { indexPage, key, keyStatus } = this.state;\n    // this.setState({ key: key })\n\n    if (key != '' || keyStatus != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if ((val.UserName.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n          val.Phone.toLocaleUpperCase().includes(key.toLocaleUpperCase())) &&\n          val.Status.includes(keyStatus)) {\n\n          d.push(val)\n        }\n      })\n      let active = 0\n\n      d.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: d, totalActive: active })\n    } else {\n      let active = 0\n\n      this.state.dataApi.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: this.state.arrPagination[indexPage], totalActive: active })\n    }\n  }\n\n  actionSearch(e, name_action) {\n    this.setState({\n      [name_action]: e.target.value\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  resetSearch() {\n    this.setState({\n      key: '',\n      keyStatus: ''\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  async toggleModal(key) {\n    if (key == 'new') {\n      this.setState({\n        modalCom: !this.state.modalCom,\n        action: key,\n        UserName: '',\n        FullName: '',\n        Phone: '',\n        Type: \"0\"\n      })\n    }\n  }\n\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n\n  async addRoles() {\n    const { UserName, Phone, Type, FullName } = this.state\n\n    if (UserName == null || UserName == '' ||\n      Phone == null || Phone == '' || FullName == '') {\n      alert(\"Vui lòng nhập đầy đủ trường dữ liệu !!!\");\n      return\n    }\n\n    const body = {\n      UserName: UserName,\n      FullName: FullName,\n      Phone: Phone,\n      Company_Id: this.state.type == '0' || this.state.type == '1' ? null : JSON.parse(this.state.company_id).company_id,\n      Type: Type\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.CUS_RES_ADD,\n      method: 'PUT',\n      data: body\n    });\n\n    if (res.data.is_success == true) {\n      if (this.state.type == '0' || this.state.type == '1') {\n        this.getData();\n      } else {\n        this.getDataForCompany();\n      }\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(res.data.message);\n      this.setState({ isLoading: false });\n    }\n  }\n\n  async openUpdate(item) {\n    this.setState({\n      modalCom: !this.state.modalCom,\n      action: \"update\",\n      UserName: item.UserName,\n      FullName: item.FullName,\n      Phone: item.Phone,\n      Type: item.Type,\n      id: item['_id'],\n      Status: item.Status\n    })\n  }\n\n  async updateUser() {\n    const { UserName, Phone, Type, FullName, Status } = this.state\n    if (UserName == null || UserName == '' ||\n      Phone == null || Phone == '' || FullName == null || FullName == '') {\n      alert(\"Vui lòng nhập đầy đủ trường dữ liệu !!!\");\n      return\n\n    }\n\n    const body = {\n      UserName: UserName,\n      FullName: FullName,\n      Phone: Phone,\n      Type: Type,\n      id: this.state.id,\n      Status: Status\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.CUS_RES_UPDATE,\n      method: 'POST',\n      data: body\n    });\n\n    if (res.data.is_success == true) {\n      if (this.state.type == '0' || this.state.type == '1') {\n        this.getData();\n      } else {\n        this.getDataForCompany();\n      }\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(res.data.message);\n      this.setState({ isLoading: false });\n    }\n  }\n\n  openDelete = (item) => {\n    this.setState({\n      modalDelete: !this.state.modalDelete,\n      delete: item\n    })\n  }\n\n  async delete() {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.CUS_RES_DELETE,\n      method: 'DELETE',\n      data: {\n        \"id\": this.state.delete['_id']\n      }\n    });\n\n    if (res.data.is_success == true) {\n      if (this.state.type == '0' || this.state.type == '1') {\n        this.getData();\n      } else {\n        this.getDataForCompany();\n      }\n      this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n    } else {\n      alert(res.data.message);\n      this.setState({ isLoading: false });\n    }\n\n  }\n\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  getBadge(status) {\n    switch (status) {\n      case '0': return 'danger'\n      case '1': return 'success'\n      default: return 'primary'\n    }\n  }\n\n  getBadge_String(status) {\n    switch (status) {\n      case '0': return 'Chưa nhận quà'\n      case '1': return 'Đã nhận quà'\n      default: return 'primary'\n    }\n  }\n\n  render() {\n    const { data, action, arrPagination, arrTypeRequest, type, key } = this.state;\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <Row>\n            <Col>\n              <p style={styles.success}>{this.state.updated}</p>\n              <p style={styles.danger}>{this.state.deleted}</p>\n              <Card>\n                <CardHeader>\n                  <i className=\"fa fa-align-justify\"></i> Danh sách nhận quà\n                  <div style={styles.tags}>\n                    <CRow>\n                      <CCol sm=\"12\" lg=\"12\">\n                        <CRow>\n                          <CCol sm=\"12\" lg=\"4\">\n                            <div>\n                              <Input style={styles.searchInput} onChange={(e) => {\n                                this.actionSearch(e, \"key\");\n                              }} name=\"key\" value={key} placeholder=\"Từ khóa\" />\n                            </div>\n                          </CCol>\n                          <CCol sm=\"12\" lg=\"4\">\n                            <CSelect style={styles.flexOption} onChange={e => {\n\n                              this.actionSearch(e, \"keyStatus\");\n\n                            }} custom>\n                              {\n                                ['0', '1'].map((item, i) => {\n                                  return (\n                                    <option value={item}>{item == \"0\" ? \"Chưa nhận quà\" : \"Đã nhận quà\"}</option>\n                                  );\n                                })\n                              }\n                            </CSelect>\n                          </CCol>\n                          <CCol sm=\"12\" lg=\"4\">\n                            <CButton color=\"primary\" style={{ width: '100%', marginTop: 5 }} size=\"sm\" onClick={e => { this.resetSearch() }}>Làm mới tìm kiếm</CButton>\n                          </CCol>\n                        </CRow>\n                      </CCol>\n                    </CRow>\n                  </div>\n                </CardHeader>\n                <CardBody>\n\n                  <table ble className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                    <thead className=\"thead-light\">\n                      <tr>\n                        <th className=\"text-center\">STT.</th>\n                        <th className=\"text-center\">Tên</th>\n                        <th className=\"text-center\">Tên đầy đủ</th>\n                        <th className=\"text-center\">Số điện thoại</th>\n                        {\n                          type == '0' || type == '1' ? <th className=\"text-center\">Tạo bởi</th> : \"\"\n                        }\n                        {\n                          type == '0' || type == '1' ? <th className=\"text-center\">Loại</th> : \"\"\n                        }\n                        <th className=\"text-center\">Ngày tạo</th>\n                        <th className=\"text-center\">Trạng thái</th>\n                        <th className=\"text-center\">#</th>\n                      </tr>\n                    </thead>\n                    <tbody>\n                      <td colSpan=\"10\" hidden={this.state.hidden} className=\"text-center\">Không tìm thấy dữ liệu</td>\n                      {\n                        data != undefined ?\n                          data.map((item, i) => {\n                            return (\n                              <tr key={i}>\n                                <td className=\"text-center\">{i + 1}</td>\n                                <td className=\"text-center\">{item.UserName}</td>\n                                <td className=\"text-center\">{item.FullName}</td>\n                                <td className=\"text-center\">{item.Phone}</td>\n                                {\n                                  type == '0' || type == '1' ? <td className=\"text-center\">{item.Company_Id == null || item.Company_Id == undefined ? \"admin\" : item.Company_Id.Name}</td> : \"\"\n                                }\n                                {\n                                  type == '0' || type == '1' ? <td className=\"text-center\">{item.Type}</td> : \"\"\n                                }\n                                <td className=\"text-center\">\n                                  {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\n                                </td>\n                                <td className=\"text-center\">\n                                  <CBadge color={this.getBadge(item.Status)}>\n                                    {this.getBadge_String(item.Status)}\n                                  </CBadge>\n                                </td>\n                                <td className=\"text-center\">\n                                  {/* <CButton style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >\n                                    <CIcon name=\"cilPencil\" />\n                                  </CButton>{' '} */}\n                                  {/* <CButton outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>\n                                    <CIcon name=\"cilTrash\" />\n                                  </CButton> */}\n                                </td>\n                              </tr>\n                            );\n                          }) : \"\"\n                      }\n                    </tbody>\n                  </table>\n                </CardBody>\n              </Card>\n              <div style={{ float: 'right' }}>\n                <Pagination count={arrPagination.length} color=\"primary\" onChange={(e, v) => {\n                  this.setState({ data: arrPagination[v - 1], indexPage: v - 1 })\n                }} />\n              </div>\n              {/* {\n                arrPagination.length == 1 ? \"\" :\n                  <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                    <tr style={styles.row}>\n                      {\n                        arrPagination.map((item, i) => {\n                          return (\n                            <td>\n                              <CButton style={styles.pagination} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ data: arrPagination[i], indexPage: i }) }}>{i + 1}</CButton>\n                            </td>\n                          );\n                        })\n                      }\n                    </tr>\n                  </div>\n              } */}\n            </Col>\n          </Row>\n\n          <Modal isOpen={this.state.modalCom} className={this.props.className}>\n            <ModalHeader>{this.state.action == 'new' ? `Tạo mới` : `Cập nhật`}</ModalHeader>\n            <ModalBody>\n              <TextFieldGroup\n                field=\"UserName\"\n                label=\"Tên đăng nhập\"\n                value={this.state.UserName}\n                placeholder={\"Tên đăng nhập\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"UserName\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"FullName\"\n                label=\"Tên đầy đủ\"\n                value={this.state.FullName}\n                placeholder={\"Tên đầy đủ\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"FullName\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"Phone\"\n                label=\"Số điện thoại\"\n                value={this.state.Phone}\n                placeholder={\"Số điện thoại\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"Phone\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              {/* <TextFieldGroup\n              field=\"Type\"\n              label=\"Loại\"\n              value={this.state.Type}\n              placeholder={\"Loại\"}\n              // error={errors.title}\n              onChange={e => this.onChange(\"Type\", e.target.value)}\n            // rows=\"5\"\n            /> */}\n\n              <label htmlFor=\"tag\">Chọn loại khuyến mãi </label>\n              <CSelect onChange={async e => {\n                this.setState({ Type: e.target.value });\n              }}>\n                {\n                  arrTypeRequest.map((item, i) => {\n                    if (item.Value == this.state.Type) {\n                      return (\n                        <option selected value={item.Value}>{item.Value}</option>\n                      );\n                    } else {\n                      return (\n                        <option value={item.Value}>{item.Value}</option>\n                      );\n                    }\n                  })\n                }\n              </CSelect>\n\n              {\n                action == 'new' ? \"\" : <div>\n                  <label style={styles.flexLabel} htmlFor=\"tag\">Status:</label>\n                  <select style={styles.flexOption} name=\"Status\" onChange={e => this.onChange(\"Status\", e.target.value)}>\n                    <option value={this.state.Status}>{this.state.Status == '' ? ` - - - - - - - - - - ` : this.state.Status}</option>\n                    <option value={'0'}>Chưa nhận quà</option>\n                    <option value={'1'}>Đã nhận quà</option>\n                  </select>\n                </div>\n              }\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => { this.state.action === 'new' ? this.addRoles() : this.updateUser() }} disabled={this.state.isLoading}>Lưu</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Xoá`}</ModalHeader>\n            <ModalBody>\n              <label htmlFor=\"tag\">{`Xác nhận xóa !!!`}</label>\n            </ModalBody>\n            <ModalFooter>\n              <CButton color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Delete</CButton>{' '}\n              <CButton color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader css={override} size={50} color={\"#123abc\"} loading={this.state.isLoading} speedMultiplier={1.5} />\n      </div>\n    );\n\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nconst styles = {\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: 160,\n    margin: '1px'\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: 'right',\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh12: {\n    width: \"8%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wh15: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  w5: {\n    width: \"12%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"80px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    marginLeft: '5px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\"\n  },\n  searchInput: {\n    width: \"160px\",\n    display: 'inline-block',\n    margin: '1px'\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n  mgl5: {\n    marginBottom: '5px'\n  }\n}\n\nexport default CustomerRequest;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { makeStyles as makeStylesWithoutDefault } from '@material-ui/styles';\nimport defaultTheme from './defaultTheme';\n\nfunction makeStyles(stylesOrCreator) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return makeStylesWithoutDefault(stylesOrCreator, _extends({\n    defaultTheme: defaultTheme\n  }, options));\n}\n\nexport default makeStyles;"],"sourceRoot":""}