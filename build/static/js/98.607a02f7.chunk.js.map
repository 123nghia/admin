{"version":3,"sources":["redux/data/actions.js","redux/actions.js","views/base/tables/ListCustomer.js","views/Common/TextFieldGroup.js"],"names":["onSaveID","id","type","payload","onSaveSeed","seed","headers","Headers","auth","localStorage","getItem","append","Users","props","getUserSale","sale_id","a","company_id","state","setState","isLoading","JSON","parse","bodyCustomer","condition","Company_Id","Sale_Id","axios","baseURL","Constants","BASE_URL","url","LIST_CUSTOMER","method","data","token","res","pagination","dataApi","active","map","val","Status","totalActive","getAllData","resAll","arrCount_All_User","i","length","getSaleDataOfUser","Address","NameSale","Name","push","hidden_all","pagination_all","getData","role","bodyUser","GET_SHOP","GET_SALE","key","keyName","keyEmail","keyPhone","keyGender","keyStatus","activePage","page","itemsCount","limit","modalCom","viewingUser","communities","updated","action","Email","Phone","Gender","Role_Id","UserName","Password","Code","modalDelete","delete","dataCompany","currentCompany","dataSale","currentSale","dataRole","currentRole","arrPagination","indexPage","arrPagination_All","indexPage_All","see_detail","month","arrTemp","arrMonth","arrMonthWithDefault","hidden","nameSale","dataAll","isSale","Authorization","arrAllUser","this","arr","to","window","location","hash","href","GET_SEEDER","history","j","temparray","arrTotal","slice","phone","filter","DATA_SALE","console","log","LIST_ROLE","resRole","undefined","LIST_ROLE_WITH_ID","e","target","name","value","tableUserSale_forSale","getDataUser_ForSale","status","d","toLocaleUpperCase","includes","name_action","searchKey","className","color","height","width","style","styles","tags","sm","lg","searchInput","onChange","actionSearch","placeholder","flexOption","custom","item","marginTop","size","onClick","resetSearch","colSpan","getBadge","Date","Create_Date","toLocaleDateString","toLocaleTimeString","float","marginRight","padding","row","isOpen","field","label","readOnly","flexLabel","htmlFor","selected","_id","toggle","disabled","Component","wa10","sale_times","textAlign","margin","textDecoration","floatRight","spinner","center","tbody","overflowY","wh12","ws12","wh15","w5","w5_10","success","danger","mgl5","marginLeft","display","userActive","userPending","nagemonNameCol","image","borderRadius","connect","getData_AllAPI","TextFieldGroup","error","checkUserExists","classnames","onBlur","defaultProps"],"mappings":"kPAKO,SAASA,EAASC,GACvB,MAAO,CACLC,KCPwB,eDQxBC,QAAS,CAAEF,OAIR,SAASG,EAAWC,GACzB,MAAO,CACLH,KCbqB,YDcrBC,QAAS,CAAEE,W,qTEaXC,EAAU,IAAIC,QACZC,EAAOC,aAAaC,QAAQ,QAClCJ,EAAQK,OAAO,gBAAiB,UAAYH,GAC5CF,EAAQK,OAAO,eAAgB,oB,IAEzBC,E,kDACJ,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAgIRC,YAjImB,uCAiIL,WAAOC,GAAP,uBAAAC,EAAA,6DACJC,EAAe,EAAKC,MAApBD,WACR,EAAKE,SAAS,CAAEC,WAAW,IACvBnB,EAAKoB,KAAKC,MAAML,GAEhBM,EAAe,CACjBC,UAAW,CACTC,WAAYxB,EAAGgB,WACfS,QAASX,IARD,SAYIY,IAAM,CACpBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUG,cACfC,OAAQ,OACRC,KAAMX,EACNjB,QAAS,EAAKY,MAAMiB,QAjBV,OAYRC,EAZQ,OAoBZ,EAAKC,WAAWD,EAAIF,KAAKA,MACzB,EAAKf,SAAS,CAAEmB,QAASF,EAAIF,KAAKA,OAE9BK,EAAS,EAEbH,EAAIF,KAAKA,KAAKM,KAAI,SAAAC,GACE,WAAdA,EAAIC,SACNH,GAAkB,MAItB,EAAKpB,SAAS,CAAEC,WAAW,EAAOuB,YAAaJ,IA/BnC,4CAjIK,wDAwKnBK,WAxKmB,sBAwKN,kCAAA5B,EAAA,6DACY,EAAKE,MAApBD,WACR,EAAKE,SAAS,CAAEC,WAAW,IAFhB,SAIQO,IAAM,CACvBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUG,cACfC,OAAQ,OACR3B,QAAS,EAAKY,MAAMiB,QARX,OAIPU,EAJO,OAWPC,EAAoB,GAIfC,EAAI,EAfF,YAeKA,EAAIF,EAAOX,KAAKA,KAAKc,QAf1B,kCAkBQ,EAAKC,kBAAkBJ,EAAOX,KAAKA,KAAKa,GAAGrB,SAlBnD,QAkBLQ,EAlBK,OAmBTW,EAAOX,KAAKA,KAAKa,GAAGG,QAAUhB,EAAKgB,QACnCL,EAAOX,KAAKA,KAAKa,GAAGI,SAAWjB,EAAKkB,KACpCN,EAAkBO,KAAKR,EAAOX,KAAKA,KAAKa,IArB/B,QAekCA,IAflC,uBAyBqB,GAA5BD,EAAkBE,OACpB,EAAK7B,SAAS,CACZmC,YAAY,IAGd,EAAKnC,SAAS,CACZmC,YAAY,IAIhB,EAAKnC,SAAS,CAAEmB,QAASQ,IAEzB,EAAKS,eAAeT,GACpB,EAAK3B,SAAS,CAAEC,WAAW,IAtChB,4CAxKM,EAiNnBoC,QAjNmB,sBAiNT,0CAAAxC,EAAA,2DACqB,EAAKE,MAA1BD,EADA,EACAA,WAAYwC,EADZ,EACYA,KACpB,EAAKtC,SAAS,CAAEC,WAAW,IACvBnB,EAAKoB,KAAKC,MAAML,GAEhByC,EAAW,CACbzC,WAAYhB,EAAGgB,YAGbM,EAAe,CACjBC,UAAW,CACTC,WAAYxB,EAAGgB,WACfS,QAASzB,EAAGc,UAGJ,SAAR0C,GAA2B,aAARA,EAff,iCAgBU9B,IAAM,CACpBC,QAASC,IAAUC,SACnBC,IAAKF,IAAU8B,SACf1B,OAAQ,OACR3B,QAAS,EAAKY,MAAMiB,QApBhB,OAgBFC,EAhBE,kCAuBW,eAARqB,EAvBH,kCAwBU9B,IAAM,CACpBC,QAASC,IAAUC,SACnBC,IAAKF,IAAU+B,SACf3B,OAAQ,OACRC,KAAMwB,EACNpD,QAAS,EAAKY,MAAMiB,QA7BhB,QAwBFC,EAxBE,kCAgCW,SAARqB,EAhCH,kCAiCU9B,IAAM,CACpBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUG,cACfC,OAAQ,OACRC,KAAMX,EACNjB,QAAS,EAAKY,MAAMiB,QAtChB,QAiCFC,EAjCE,eA0CR,EAAKC,WAAWD,EAAIF,KAAKA,MACzB,EAAKf,SAAS,CAAEmB,QAASF,EAAIF,KAAKA,OAE9BK,EAAS,EAEbH,EAAIF,KAAKA,KAAKM,KAAI,SAAAC,GACE,WAAdA,EAAIC,SACNH,GAAkB,MAItB,EAAKpB,SAAS,CAAEC,WAAW,EAAOuB,YAAaJ,IArDvC,4CA/MR,EAAKrB,MAAQ,CACXgB,KAAM,GACN2B,IAAK,GACLC,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,UAAW,GACXC,WAAY,EACZC,KAAM,EACNC,WAAY,EACZC,MAAO,GACP3B,YAAa,EACb4B,UAAU,EACVC,YAAa,GACbC,YAAa,GACbC,QAAS,GACTpC,QAAS,GACTqC,OAAQ,MACRC,MAAO,GACP1B,QAAS,GACTE,KAAM,GACNyB,MAAO,GACPC,OAAQ,MACRrD,WAAY,GACZsD,QAAS,GACTC,SAAU,GACVC,SAAU,GACVvD,QAAS,GACTwD,KAAM,GACNxC,OAAQ,GACRyC,aAAa,EACbC,OAAQ,KACRC,YAAa,GACbC,eAAgB,GAChBC,SAAU,GACVC,YAAa,GACbC,SAAU,GACVC,YAAa,GACbC,cAAe,GACfC,UAAW,EACXC,kBAAmB,GACnBC,cAAe,EACfrC,KAAMhD,aAAaC,QAAQ,QAC3BO,WAAYR,aAAaC,QAAQ,QACjCqF,YAAY,EACZC,MAAO,EACPC,QAAS,GACTC,SAAU,CACR,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAEpEC,oBAAqB,CACnB,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAE1E/E,WAAW,EACXgF,QAAQ,EACRC,SAAU,GACVC,QAAS,GACThD,YAAY,EACZiD,QAAQ,EACRpE,MAAO,CAAEqE,cAAc,UAAD,OAAY/F,aAAaC,QAAQ,WACvD+F,WAAY,IA/DG,E,4FAkEnB,8BAAAzF,EAAA,sDAGE,IAFA0F,KAAK9D,aACD+D,EAAMtF,KAAKC,MAAMb,aAAaC,QAAQ,QACjCqC,EAAI,EAAGA,EAAI4D,EAAI3D,OAAQD,IAC1B,IAAM4D,EAAI5D,GAAG6D,IAAMC,OAAOC,SAASC,MAChB,GAAjBJ,EAAI5D,GAAGqD,SACTS,OAAOC,SAASE,KAAO,MAN/B,gD,oHAYA,4BAAAhG,EAAA,sEACoBW,IAAM,CACtBC,QAASC,IAAUC,SACnBC,IAAKF,IAAUoF,WACfhF,OAAQ,OACRC,KAAM,CACJ,MAAS,uBANf,OACQE,EADR,OASEsE,KAAK7F,MAAMT,WAAWgC,EAAIF,KAAKA,MAC/BwE,KAAK7F,MAAMqG,QAAQ7D,KAAK,YAV1B,gD,8EAaA,SAAWf,GACT,IAAIS,EAAGoE,EAAGC,EACNC,EAAW,GACf,IAAKtE,EAAI,EAAGoE,EAAI7E,EAAQU,OAAQD,EAAIoE,EAAGpE,GAFV,GAG3BqE,EAAY9E,EAAQgF,MAAMvE,EAAGA,EAHF,IAI3BsE,EAAShE,KAAK+D,GAEO,GAAnBC,EAASrE,OACX0D,KAAKvF,SAAS,CACZiF,QAAQ,IAGVM,KAAKvF,SAAS,CACZiF,QAAQ,IAGZM,KAAKvF,SAAS,CAAEwE,cAAe0B,EAAUnF,KAAMmF,EAASX,KAAKxF,MAAM0E,e,4BAGrE,SAAetD,GACb,IAAIS,EAAGoE,EAAGC,EACNC,EAAW,GACf,IAAKtE,EAAI,EAAGoE,EAAI7E,EAAQU,OAAQD,EAAIoE,EAAGpE,GAFV,GAG3BqE,EAAY9E,EAAQgF,MAAMvE,EAAGA,EAHF,IAI3BsE,EAAShE,KAAK+D,GAEO,GAAnBC,EAASrE,OACX0D,KAAKvF,SAAS,CACZmC,YAAY,IAGdoD,KAAKvF,SAAS,CACZmC,YAAY,IAGhBoD,KAAKvF,SAAS,CAAE0E,kBAAmBwB,EAAUf,QAASe,EAASX,KAAKxF,MAAM4E,mB,uBAqC5E,SAAUa,EAAKY,GAEb,OADcZ,EAAIa,QAAO,SAAAtF,GAAI,OAAIA,EAAK2C,OAAS0C,KAClCvE,S,sEAoGf,WAAwBjC,GAAxB,eAAAC,EAAA,sEACkBW,IAAM,CACpBC,QAASC,IAAUC,SACnBC,IAAKF,IAAU4F,UACfxF,OAAQ,OACRC,KAAM,CACJnB,QAASA,KANf,cACMqB,EADN,OASEsF,QAAQC,IAAIvF,EAAIF,KAAKA,KAAK,IAT5B,kBAUS,CAAEgB,QAASd,EAAIF,KAAKA,KAAK,GAAGgB,QAASE,KAAMhB,EAAIF,KAAKA,KAAK,GAAGkB,OAVrE,2C,uHAcA,WAAkBnD,GAAlB,iBAAAe,EAAA,sEACwBW,IAAM,CAC1BC,QAASC,IAAUC,SACnBC,IAAKF,IAAU+F,UACf3F,OAAQ,MACR3B,QAASoG,KAAKxF,MAAMiB,QALxB,UACQ0F,EADR,OAQY,IAAN5H,QAAkB6H,GAAN7H,EARlB,gCAS8B0B,IAAM,CAC9BC,QAASC,IAAUC,SACnBC,IAAKF,IAAUkG,kBAAoB9H,EACnCgC,OAAQ,MACR3B,QAASoG,KAAKxF,MAAMiB,QAb1B,OAeiC,OANvBuD,EATV,QAeoBxD,KAAKA,WAAyC4F,GAAzBpC,EAAYxD,KAAKA,MACpDwE,KAAKvF,SAAS,CAAEuE,YAAaA,EAAYxD,KAAKA,KAAKkB,OAhBzD,OAmBEsD,KAAKvF,SAAS,CAAEsE,SAAUoC,EAAQ3F,KAAKA,OAnBzC,gD,gFAsBA,SAAY8F,GACVtB,KAAKvF,SAAL,eAAiB6G,EAAEC,OAAOC,KAAOF,EAAEC,OAAOE,U,wEAG5C,WAA0BnC,GAA1B,SAAAhF,EAAA,yDAEc,SADK0F,KAAKxF,MAAduC,KADV,uBAGIiD,KAAKvF,SAAS,CAAEoF,QAAQ,EAAMP,MAAOA,IAHzC,SAIUU,KAAK0B,sBAAsBpC,GAJrC,gD,iHAQA,WAAYgC,GAAZ,SAAAhH,EAAA,yDACwB,MAAlBgH,EAAEC,OAAOE,MADf,gBAEIzB,KAAKlD,UACLkD,KAAKvF,SAAS,CAAEoF,QAAQ,IAH5B,sCAKUG,KAAK2B,oBAAoBL,EAAEC,OAAOE,OAL5C,OAMIzB,KAAKvF,SAAS,CAAE6E,MAAOgC,EAAEC,OAAOE,QANpC,gD,6EAUA,SAASG,GACP,OAAQA,GACN,IAAK,UAAW,MAAO,UACvB,IAAK,WAAY,MAAO,YACxB,IAAK,SAAU,MAAO,UACtB,IAAK,YAAa,MAAO,SACzB,QAAS,MAAO,a,uBAIpB,WACE,MAA0C5B,KAAKxF,MAAvC4E,EAAR,EAAQA,cAAejC,EAAvB,EAAuBA,IAAKK,EAA5B,EAA4BA,UAE5B,GAAW,IAAPL,GAA0B,IAAbK,EAAiB,CAChC,IAAIqE,EAAI,GACR7B,KAAKxF,MAAMoB,QAAQE,KAAI,SAAAC,IAChBA,EAAIW,KAAKoF,oBAAoBC,SAAS5E,EAAI2E,sBAC7C/F,EAAImC,MAAM4D,oBAAoBC,SAAS5E,EAAI2E,sBAC3C/F,EAAIoC,MAAM2D,oBAAoBC,SAAS5E,EAAI2E,uBAC3C/F,EAAIC,OAAO8F,oBAAoBC,SAASvE,EAAUsE,sBAClDD,EAAElF,KAAKZ,MAGX,IAAIF,EAAS,EAEbgG,EAAE/F,KAAI,SAAAC,GACc,WAAdA,EAAIC,SACNH,GAAkB,MAItBmE,KAAKvF,SAAS,CAAEmF,QAASiC,EAAG5F,YAAaJ,QACpC,CACL,IAAIA,EAAS,EAEbmE,KAAKxF,MAAMoB,QAAQE,KAAI,SAAAC,GACH,WAAdA,EAAIC,SACNH,GAAkB,MAItBmE,KAAKvF,SAAS,CAAEmF,QAASI,KAAKxF,MAAM2E,kBAAkBC,GAAgBnD,YAAaJ,O,0BAKvF,SAAayF,EAAGU,GAAc,IAAD,OAC3BhC,KAAKvF,SAAL,eACGuH,EAAcV,EAAEC,OAAOE,QACvB,WACD,EAAKQ,iB,yBAIT,WAAe,IAAD,OACZjC,KAAKvF,SAAS,CACZ2C,QAAS,GACTC,SAAU,GACVC,SAAU,GACVC,UAAW,GACXC,UAAW,KACV,WACD,EAAKyE,iB,oBAIT,WAAU,IAAD,OACP,EACgEjC,KAAKxF,MAD7D2C,EAAR,EAAQA,IAAKwB,EAAb,EAAaA,YAAaiB,EAA1B,EAA0BA,QAAST,EAAnC,EAAmCA,kBAAmBC,EAAtD,EAAsDA,cACpDR,EADF,EACEA,eAAgBX,EADlB,EACkBA,OAAQc,EAD1B,EAC0BA,SAAUC,EADpC,EACoCA,YAAapC,EADjD,EACiDA,WAEjD,OAAKoD,KAAKxF,MAAME,UA+Vd,qBAAKwH,UAAU,gCAAf,SACE,cAAC,IAAD,CAAc1I,KAAM,QAAS2I,MAAO,SAAUC,OAAQ,KAAMC,MAAO,SA9VnE,gCACE,eAAC,IAAD,WACE,eAAC,IAAD,oDACgCrC,KAAKxF,MAAM0E,UAAY,EADvD,KAEE,qBAAKoD,MAAOC,EAAOC,KAAnB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMC,GAAG,IAAIC,GAAG,KAAhB,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAMD,GAAG,IAAIC,GAAG,IAAhB,SACE,8BACE,cAAC,IAAD,CACEJ,MAAOC,EAAOI,YACdC,SAAU,SAACtB,GACT,EAAKuB,aAAavB,EAAG,QAEvBE,KAAK,MACLC,MAAOtE,EACP2F,YAAY,wBAIlB,cAAC,IAAD,CAAML,GAAG,IAAIC,GAAG,IAAhB,SACE,cAAC,IAAD,CACEJ,MAAOC,EAAOQ,WACdH,SAAU,SAACtB,GACT,EAAKuB,aAAavB,EAAG,cAEvB0B,QAAM,EALR,SAOG,CAAC,UAAW,YAAa,UAAUlH,KAAI,SAACmH,EAAM5G,GAC7C,OAAO,wBAAQoF,MAAOwB,EAAf,SAAsBA,WAInC,cAAC,IAAD,CAAMR,GAAG,IAAIC,GAAG,IAAhB,SACE,cAAC,IAAD,CACEP,MAAM,UACNG,MAAO,CAAED,MAAO,OAAQa,UAAW,GACnCC,KAAK,KACLC,QAAS,SAAC9B,GACR,EAAK+B,eALT,qDAaN,cAAC,IAAD,CAAMZ,GAAG,IAAIC,GAAG,eAMtB,cAAC,IAAD,CAAUR,UAAU,kBAApB,SAEI,wBAAOA,UAAU,yDAAjB,UACE,uBAAOA,UAAU,cAAjB,SACE,+BACE,oBAAIA,UAAU,cAAd,kBACA,oBAAIA,UAAU,cAAd,oBACA,oBAAIA,UAAU,cAAd,yBACA,oBAAIA,UAAU,cAAd,yCACA,oBAAIA,UAAU,cAAd,mBACA,oBAAIA,UAAU,cAAd,+CACA,oBAAIA,UAAU,cAAd,+BACA,oBAAIA,UAAU,cAAd,gCACA,oBAAIA,UAAU,cAAd,mCAGJ,kCACE,oBAAIoB,QAAQ,IAAI5D,OAAQ9C,EAAYsF,UAAU,cAA9C,8DAGYd,GAAXxB,EACGA,EAAQ9D,KAAI,SAACmH,EAAM5G,GACjB,OACE,+BACE,oBAAI6F,UAAU,cAAd,SAA6B7F,EAAI,IACjC,oBAAI6F,UAAU,cAAd,SAA6Be,EAAKvG,OAClC,oBAAIwF,UAAU,cAAd,SAA6Be,EAAKxG,WAClC,oBAAIyF,UAAU,cAAd,SAA6Be,EAAKzG,UAClC,oBAAI0F,UAAU,cAAd,SAA6Be,EAAK/E,QAClC,oBAAIgE,UAAU,cAAd,SAA6Be,EAAK9E,QAClC,oBAAI+D,UAAU,cAAd,SAA6Be,EAAK7E,SAClC,oBAAI8D,UAAU,cAAd,SACE,cAAC,IAAD,CAAQC,MAAO,EAAKoB,SAASN,EAAKjH,QAAlC,SACGiH,EAAKjH,WAGV,oBAAIkG,UAAU,cAAd,SACG,IAAIsB,KACHP,EAAKQ,aACLC,qBACA,IACA,IAAIF,KACFP,EAAKQ,aACLE,yBApBCtH,MAyBb,cAMe,GAA5B8C,EAAkB7C,OACjB,GAEA,qBACEgG,MAAO,CAAEsB,MAAO,QAASC,YAAa,OAAQC,QAAS,QADzD,SAGE,oBAAIxB,MAAOC,EAAOwB,IAAlB,SACG5E,EAAkBrD,KAAI,SAACmH,EAAM5G,GAC5B,OACE,6BACE,cAAC,IAAD,CACEiG,MAAOC,EAAO5G,WACdwG,MAAO9F,GAAK+C,EAAgB,UAAY,SACxCgE,QAAS,SAAC9B,GACR,EAAK7G,SAAS,CACZmF,QAAST,EAAkB9C,GAC3B+C,cAAe/C,KANrB,SAUGA,EAAI,aASnB,eAAC,IAAD,CAAO2H,OAAQhE,KAAKxF,MAAMqD,SAAUqE,UAAWlC,KAAK7F,MAAM+H,UAA1D,UACE,cAAC,IAAD,UACwB,OAArBlC,KAAKxF,MAAMyD,OAAX,2CAEH,eAAC,IAAD,WACE,cAAC,IAAD,CACEgG,MAAM,QACNC,MAAM,QACNzC,MAAOzB,KAAKxF,MAAM0D,MAClB4E,YAAa,QACbtJ,KAAM,QACNoJ,SAAU,SAACtB,GAAD,OAAO,EAAKsB,SAAS,QAAStB,EAAEC,OAAOE,UAGnD,cAAC,IAAD,CACEwC,MAAM,UACNC,MAAM,UACNzC,MAAOzB,KAAKxF,MAAMgC,QAClBsG,YAAa,QACbtJ,KAAM,QACNoJ,SAAU,SAACtB,GAAD,OAAO,EAAKsB,SAAS,UAAWtB,EAAEC,OAAOE,UAGrD,cAAC,IAAD,CACEwC,MAAM,OACNC,MAAM,OACNzC,MAAOzB,KAAKxF,MAAMkC,KAClBoG,YAAa,OAEbF,SAAU,SAACtB,GAAD,OAAO,EAAKsB,SAAS,OAAQtB,EAAEC,OAAOE,UAIlD,cAAC,IAAD,CACEwC,MAAM,WACNC,MAAM,WACNzC,MAAOzB,KAAKxF,MAAM+D,SAClB/E,KAAM,WACNsJ,YAAa,WACbqB,SAAoB,OAAVlG,EACV2E,SAAU,SAACtB,GAAD,OAAO,EAAKsB,SAAS,WAAYtB,EAAEC,OAAOE,UAItD,cAAC,IAAD,CACEwC,MAAM,OACNC,MAAM,OACNpB,YAAa,OACbrB,MAAOzB,KAAKxF,MAAMgE,KAElBoE,SAAU,SAACtB,GAAD,OAAO,EAAKsB,SAAS,OAAQtB,EAAEC,OAAOE,UAIlD,cAAC,IAAD,CACEwC,MAAM,WACNC,MAAM,WACNpB,YAAa,WACbrB,MAAOzB,KAAKxF,MAAM8D,SAElBsE,SAAU,SAACtB,GAAD,OAAO,EAAKsB,SAAS,WAAYtB,EAAEC,OAAOE,UAItD,cAAC,IAAD,CACEwC,MAAM,QACNC,MAAM,QACNzC,MAAOzB,KAAKxF,MAAM2D,MAClB2E,YAAa,QAEbF,SAAU,SAACtB,GAAD,OAAO,EAAKsB,SAAS,QAAStB,EAAEC,OAAOE,UAInD,gCACE,wBAAOa,MAAOC,EAAO6B,UAAWC,QAAQ,MAAxC,oBACU,OAEV,yBACE/B,MAAOC,EAAOQ,WACdvB,KAAK,SACLoB,SAAU,SAACtB,GAAD,OAAO,EAAKsB,SAAS,SAAUtB,EAAEC,OAAOE,QAHpD,UAKE,wBAAQA,MAAOzB,KAAKxF,MAAM4D,OAA1B,SACwB,IAArB4B,KAAKxF,MAAM4D,OAAX,wBAEG4B,KAAKxF,MAAM4D,SAEjB,wBAAQqD,MAAO,MAAf,iBACA,wBAAQA,MAAO,UAAf,2BAIJ,gCACE,wBAAOa,MAAOC,EAAO6B,UAAWC,QAAQ,MAAxC,qBACW,OAEX,yBACE/B,MAAOC,EAAOQ,WACdvB,KAAK,aACLoB,SAAU,SAACtB,GAAD,OAAO,EAAKsB,SAAS,aAActB,EAAEC,OAAOE,QAHxD,UAKE,wBAAQA,MAAOzB,KAAKxF,MAAMO,WAA1B,mBACC4D,EAAY7C,KAAI,SAACmH,EAAM5G,GACtB,OAAI4G,EAAKvG,MAAQkC,EAEb,wBAAQ0F,UAAQ,EAAC7C,MAAOwB,EAAKsB,IAA7B,SACGtB,EAAKvG,OAIH,wBAAQ+E,MAAOwB,EAAKsB,IAApB,SAA0BtB,EAAKvG,gBAM9C,gCACE,wBAAO4F,MAAOC,EAAO6B,UAAWC,QAAQ,MAAxC,kBACQ,OAER,yBACE/B,MAAOC,EAAOQ,WACdvB,KAAK,UACLoB,SAAU,SAACtB,GAAD,OAAO,EAAKsB,SAAS,UAAWtB,EAAEC,OAAOE,QAHrD,UAKE,wBAAQA,MAAOzB,KAAKxF,MAAM6D,QAA1B,mBACCU,EAASjD,KAAI,SAACmH,EAAM5G,GACnB,OAAI4G,EAAKvG,MAAQsC,EAEb,wBAAQsF,UAAQ,EAAC7C,MAAOwB,EAAKsB,IAA7B,SACGtB,EAAKvG,OAIH,wBAAQ+E,MAAOwB,EAAKsB,IAApB,SAA0BtB,EAAKvG,mBA0BhD,cAAC,IAAD,OAGF,eAAC,IAAD,CACEsH,OAAQhE,KAAKxF,MAAMiE,YACnB+F,OAAQ,SAAClD,GAAD,OACN,EAAK7G,SAAS,CACZgE,aAAc,EAAKjE,MAAMiE,YACzBC,OAAQ,QAGZwD,UAAWlC,KAAK7F,MAAM+H,UARxB,UAUE,cAAC,IAAD,CACEsC,OAAQ,SAAClD,GAAD,OACN,EAAK7G,SAAS,CACZgE,aAAc,EAAKjE,MAAMiE,YACzBC,OAAQ,QAJd,oBAQA,cAAC,IAAD,UACE,uBAAO2F,QAAQ,MAAf,+CACErE,KAAKxF,MAAMkE,OAASsB,KAAKxF,MAAMkE,OAAOR,MAAQ,GADhD,WAIF,eAAC,IAAD,WACE,cAAC,IAAD,CACEiE,MAAM,UACNiB,QAAS,SAAC9B,GAAD,OAAO,EAAK5C,UACrB+F,SAAUzE,KAAKxF,MAAME,UAHvB,oBAMU,IACV,cAAC,IAAD,CACEyH,MAAM,YACNiB,QAAS,SAAC9B,GAAD,OACP,EAAK7G,SAAS,CACZgE,aAAc,EAAKjE,MAAMiE,YACzBC,OAAQ,QALd,uC,GAxtBMgG,aAgvBdnC,EAAS,CACboC,KAAM,CACJtC,MAAO,KACPuB,MAAO,OACPxB,OAAQ,QAEVwC,WAAY,CACVvC,MAAO,KACPuB,MAAO,OACPxB,OAAQ,OACRyC,UAAW,UAEblJ,WAAY,CACVkI,YAAa,OAEfO,UAAW,CACT/B,MAAO,KAETU,WAAY,CACVV,MAAO,IACPyC,OAAQ,OAEVxK,EAAG,CACDyK,eAAgB,QAElBC,WAAY,CACVpB,MAAO,QACPV,UAAW,OAEb+B,QAAS,CACP5C,MAAO,QAET6C,OAAQ,CACNL,UAAW,UAEbM,MAAO,CACL/C,OAAQ,QACRgD,UAAW,QAEbC,KAAM,CACJhD,MAAO,MACPuB,MAAO,OACPxB,OAAQ,OACRyC,UAAW,UAEbS,KAAM,CACJjD,MAAO,MACPuB,MAAO,OACPxB,OAAQ,OACRyC,UAAW,UAEbU,KAAM,CACJlD,MAAO,MACPuB,MAAO,OACPxB,OAAQ,OACRyC,UAAW,UAEbW,GAAI,CACFnD,MAAO,MACPuB,MAAO,OACPxB,OAAQ,QAEVqD,MAAO,CACLpD,MAAO,KACPuB,MAAO,OACPxB,OAAQ,QAEV2B,IAAK,CACHH,MAAO,OACPvB,MAAO,QAETqD,QAAS,CACPvD,MAAO,SAETwD,OAAQ,CACNxD,MAAO,OAETyD,KAAM,CACJC,WAAY,OAEdrD,KAAM,CACJoB,MAAO,QACPC,YAAa,OAEflB,YAAa,CACXN,MAAO,QACPyD,QAAS,eACThB,OAAQ,OAEViB,WAAY,CACV5D,MAAO,SAET6D,YAAa,CACX7D,MAAO,OAET8D,eAAgB,CACd5D,MAAO,SAET6D,MAAO,CACL7D,MAAO,QACPD,OAAQ,QACR+D,aAAc,YAWHC,uBAPS,SAAA5L,GACtB,MAAO,CACLgB,KAAMhB,EAAM6L,kBAKwB,CAAE/M,aAAUI,gBAArC0M,CAAmDlM,I,iCCj4BlE,mCAIMoM,EAAiB,SAAC,GAAqG,IAAnGrC,EAAkG,EAAlGA,MAAOxC,EAA2F,EAA3FA,MAAOyC,EAAoF,EAApFA,MAAOqC,EAA6E,EAA7EA,MAAO/M,EAAsE,EAAtEA,KAAMoJ,EAAgE,EAAhEA,SAAU4D,EAAsD,EAAtDA,gBAAiBrC,EAAqC,EAArCA,SAAUrB,EAA2B,EAA3BA,YAAaM,EAAc,EAAdA,QAC5G,OACE,sBAAKlB,UAAWuE,IAAW,aAAc,CAAE,YAAaF,IAAxD,UACE,uBAAOrE,UAAU,gBAAjB,SAAkCgC,IAClC,uBACEtB,SAAUA,EACVQ,QAASA,EACTsD,OAAQF,EACR/E,MAAOA,EACPjI,KAAMA,EACNgI,KAAMyC,EACNnB,YAAaA,EACbqB,SAAUA,EACVjC,UAAU,iBAEbqE,GAAS,sBAAMrE,UAAU,aAAhB,SAA8BqE,QAc5CD,EAAeK,aAAe,CAC5BnN,KAAM,QAGO8M","file":"static/js/98.607a02f7.chunk.js","sourcesContent":["import {\n  SAVE_ID_SALE,\n  SAVE_SEED\n} from '../actions.js'\n\nexport function onSaveID(id) {\n  return {\n    type: SAVE_ID_SALE,\n    payload: { id }\n  };\n}\n\nexport function onSaveSeed(seed) {\n  return {\n    type: SAVE_SEED,\n    payload: { seed }\n  };\n}\n","export const SAVE_ID_SALE = \"SAVE_ID_SALE\"\nexport const SAVE_SEED = \"SAVE_SEED\"\n","import React, { Component } from 'react';\n\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Button, Input,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n} from 'reactstrap';\n\nimport {\n  CSelect,\n  CRow,\n  CCol,\n  CBadge\n} from '@coreui/react'\n\nimport { connect } from 'react-redux';\nimport {\n  onSaveID,\n  onSaveSeed\n} from '../../../redux/data/actions'\nimport 'moment-timezone';\nimport Constants from \"./../../../contants/contants\";\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\nimport axios from 'axios'\nimport ReactLoading from 'react-loading';\n\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      keyName: '',\n      keyEmail: '',\n      keyPhone: '',\n      keyGender: '',\n      keyStatus: '',\n      activePage: 1,\n      page: 1,\n      itemsCount: 0,\n      limit: 20,\n      totalActive: 0,\n      modalCom: false,\n      viewingUser: {},\n      communities: [],\n      updated: '',\n      dataApi: [],\n      action: 'new',\n      Email: '',\n      Address: '',\n      Name: '',\n      Phone: '',\n      Gender: 'Nam',\n      Company_Id: '',\n      Role_Id: '',\n      UserName: '',\n      Password: '',\n      Sale_Id: '',\n      Code: '',\n      Status: '',\n      modalDelete: false,\n      delete: null,\n      dataCompany: [],\n      currentCompany: '',\n      dataSale: [],\n      currentSale: '',\n      dataRole: [],\n      currentRole: '',\n      arrPagination: [],\n      indexPage: 0,\n      arrPagination_All: [],\n      indexPage_All: 0,\n      role: localStorage.getItem('role'),\n      company_id: localStorage.getItem('user'),\n      see_detail: true,\n      month: 0,\n      arrTemp: [],\n      arrMonth: [\n        \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\",\n      ],\n      arrMonthWithDefault: [\n        \"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\",\n      ],\n      isLoading: true,\n      hidden: false,\n      nameSale: '',\n      dataAll: [],\n      hidden_all: false,\n      isSale: false,\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      arrAllUser: []\n    };\n  }\n  async componentDidMount() {\n    this.getAllData();\n    let arr = JSON.parse(localStorage.getItem('url'));\n    for (let i = 0; i < arr.length; i++) {\n      if (\"#\" + arr[i].to == window.location.hash) {\n        if (arr[i].hidden == true) {\n          window.location.href = '#/'\n        }\n      }\n    }\n  }\n\n  async getSeeder() {\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.GET_SEEDER,\n      method: 'POST',\n      data: {\n        \"email\": \"ktpm489@gmail.com\"\n      }\n    })\n    this.props.onSaveSeed(res.data.data);\n    this.props.history.push('/history')\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 50;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden: false\n      })\n    } else {\n      this.setState({\n        hidden: true\n      })\n    }\n    this.setState({ arrPagination: arrTotal, data: arrTotal[this.state.indexPage] });\n  }\n\n  pagination_all(dataApi) {\n    var i, j, temparray, chunk = 50;\n    let arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden_all: false\n      })\n    } else {\n      this.setState({\n        hidden_all: true\n      })\n    }\n    this.setState({ arrPagination_All: arrTotal, dataAll: arrTotal[this.state.indexPage_All] });\n  }\n\n  getUserSale = async (sale_id) => {\n    const { company_id } = this.state;\n    this.setState({ isLoading: true });\n    var id = JSON.parse(company_id);\n\n    var bodyCustomer = {\n      condition: {\n        Company_Id: id.company_id,\n        Sale_Id: sale_id\n      }\n    }\n\n    var res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_CUSTOMER,\n      method: 'POST',\n      data: bodyCustomer,\n      headers: this.state.token\n    })\n\n    this.pagination(res.data.data);\n    this.setState({ dataApi: res.data.data });\n\n    let active = 0\n\n    res.data.data.map(val => {\n      if (val.Status == \"Actived\") {\n        active = active + 1\n      }\n    })\n\n    this.setState({ isLoading: false, totalActive: active });\n  }\n\n  countType(arr, phone) {\n    const count = arr.filter(data => data.Phone == phone);\n    return count.length;\n  }\n\n  getAllData = async () => {\n    const { company_id } = this.state;\n    this.setState({ isLoading: true });\n\n    var resAll = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_CUSTOMER,\n      method: 'POST',\n      headers: this.state.token\n    })\n\n    let arrCount_All_User = [];\n\n    // this.getSaleDataOfUser()\n\n    for (let i = 0; i < resAll.data.data.length; i++) {\n      //check if exits in arr\n      //if (!arrCount_All_User.some(item => resAll.data.data[i].Name == item.Name)) {\n      var data = await this.getSaleDataOfUser(resAll.data.data[i].Sale_Id);\n      resAll.data.data[i].Address = data.Address;\n      resAll.data.data[i].NameSale = data.Name;\n      arrCount_All_User.push(resAll.data.data[i])\n      //}\n    }\n    // console.log(arrCount_All_User)\n    if (arrCount_All_User.length == 0) {\n      this.setState({\n        hidden_all: false\n      })\n    } else {\n      this.setState({\n        hidden_all: true\n      })\n    }\n\n    this.setState({ dataApi: arrCount_All_User });\n\n    this.pagination_all(arrCount_All_User);\n    this.setState({ isLoading: false });\n  }\n\n  getData = async () => {\n    const { company_id, role } = this.state;\n    this.setState({ isLoading: true });\n    var id = JSON.parse(company_id);\n\n    var bodyUser = {\n      company_id: id.company_id\n    }\n\n    var bodyCustomer = {\n      condition: {\n        Company_Id: id.company_id,\n        Sale_Id: id.sale_id\n      }\n    }\n    if (role == 'ADMIN' || role == 'ADMINSALE') {\n      var res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.GET_SHOP,\n        method: 'POST',\n        headers: this.state.token\n      });\n\n    } else if (role == 'SHOPMANAGER') {\n      var res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.GET_SALE,\n        method: 'POST',\n        data: bodyUser,\n        headers: this.state.token\n      });\n\n    } else if (role == 'SALES') {\n      var res = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_CUSTOMER,\n        method: 'POST',\n        data: bodyCustomer,\n        headers: this.state.token\n      })\n    }\n\n    this.pagination(res.data.data);\n    this.setState({ dataApi: res.data.data });\n\n    let active = 0\n\n    res.data.data.map(val => {\n      if (val.Status == \"Actived\") {\n        active = active + 1\n      }\n    })\n\n    this.setState({ isLoading: false, totalActive: active });\n  }\n\n  async getSaleDataOfUser(sale_id) {\n    let res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.DATA_SALE,\n      method: 'POST',\n      data: {\n        sale_id: sale_id\n      }\n    });\n    console.log(res.data.data[0])\n    return { Address: res.data.data[0].Address, Name: res.data.data[0].Name } ;\n\n  }\n\n  async getRoleData(id) {\n    const resRole = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_ROLE,\n      method: 'GET',\n      headers: this.state.token\n    });\n\n    if (id != '' || id != undefined) {\n      const currentRole = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_ROLE_WITH_ID + id,\n        method: 'GET',\n        headers: this.state.token\n      });\n      if (currentRole.data.data != null || currentRole.data.data != undefined) {\n        this.setState({ currentRole: currentRole.data.data.Name });\n      }\n    }\n    this.setState({ dataRole: resRole.data.data });\n  }\n\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  async getDataUser_ForSale(month) {\n    const { role } = this.state;\n    if (role == 'SALES') {\n      this.setState({ isSale: true, month: month })\n      await this.tableUserSale_forSale(month);\n    }\n  }\n\n  async check(e) {\n    if (e.target.value == \"00\") {\n      this.getData();\n      this.setState({ isSale: false })\n    } else {\n      await this.getDataUser_ForSale(e.target.value);\n      this.setState({ month: e.target.value })\n    }\n  }\n\n  getBadge(status) {\n    switch (status) {\n      case 'Actived': return 'success'\n      case 'Inactive': return 'secondary'\n      case 'Locked': return 'warning'\n      case 'Deactived': return 'danger'\n      default: return 'primary'\n    }\n  }\n\n  searchKey() {\n    const { indexPage_All, key, keyStatus } = this.state;\n\n    if (key != '' || keyStatus != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if ((val.Name.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n          val.Email.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n          val.Phone.toLocaleUpperCase().includes(key.toLocaleUpperCase())) &&\n          val.Status.toLocaleUpperCase().includes(keyStatus.toLocaleUpperCase())) {\n          d.push(val)\n        }\n      })\n      let active = 0\n\n      d.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ dataAll: d, totalActive: active })\n    } else {\n      let active = 0\n\n      this.state.dataApi.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ dataAll: this.state.arrPagination_All[indexPage_All], totalActive: active })\n    }\n  }\n\n\n  actionSearch(e, name_action) {\n    this.setState({\n      [name_action]: e.target.value\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  resetSearch() {\n    this.setState({\n      keyName: '',\n      keyEmail: '',\n      keyPhone: '',\n      keyGender: '',\n      keyStatus: ''\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  render() {\n    const { key, dataCompany, dataAll, arrPagination_All, indexPage_All,\n      currentCompany, action, dataRole, currentRole, hidden_all } = this.state;\n\n    if (!this.state.isLoading) {\n      return (\n        <div>\n          <Card>\n            <CardHeader>\n              Danh sách khách hàng ( Page: {this.state.indexPage + 1} )\n              <div style={styles.tags}>\n                <CRow>\n                  <CCol sm=\"6\" lg=\"12\">\n                    <CRow>\n                      <CCol sm=\"6\" lg=\"4\">\n                        <div>\n                          <Input\n                            style={styles.searchInput}\n                            onChange={(e) => {\n                              this.actionSearch(e, \"key\");\n                            }}\n                            name=\"key\"\n                            value={key}\n                            placeholder=\"Từ khóa\"\n                          />\n                        </div>\n                      </CCol>\n                      <CCol sm=\"6\" lg=\"4\">\n                        <CSelect\n                          style={styles.flexOption}\n                          onChange={(e) => {\n                            this.actionSearch(e, \"keyStatus\");\n                          }}\n                          custom\n                        >\n                          {[\"Actived\", \"Deactived\", \"Locked\"].map((item, i) => {\n                            return <option value={item}>{item}</option>;\n                          })}\n                        </CSelect>\n                      </CCol>\n                      <CCol sm=\"6\" lg=\"4\">\n                        <Button\n                          color=\"primary\"\n                          style={{ width: \"100%\", marginTop: 5 }}\n                          size=\"sm\"\n                          onClick={(e) => {\n                            this.resetSearch();\n                          }}\n                        >\n                          Làm mới tìm kiếm\n                        </Button>\n                      </CCol>\n                    </CRow>\n                  </CCol>\n                  <CCol sm=\"6\" lg=\"12\">\n                    {/* <Button outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={e => this.toggleModal(\"new\")}>Thêm mới</Button> */}\n                  </CCol>\n                </CRow>\n              </div>\n            </CardHeader>\n            <CardBody className=\"table__overflow\">\n              {\n                <table className=\"table table-hover table-outline mb-0 d-none d-sm-table\">\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th className=\"text-center\">STT.</th>\n                      <th className=\"text-center\">Tên</th>\n                      <th className=\"text-center\">Tên Sale</th>\n                      <th className=\"text-center\">Địa chỉ shop</th>\n                      <th className=\"text-center\">Email</th>\n                      <th className=\"text-center\">Số điện thoại</th>\n                      <th className=\"text-center\">Giới tính</th>\n                      <th className=\"text-center\">Trạng thái</th>\n                      <th className=\"text-center\">Ngày tạo</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    <td colSpan=\"8\" hidden={hidden_all} className=\"text-center\">\n                      Không tìm thấy dữ liệu\n                    </td>\n                    {dataAll != undefined\n                      ? dataAll.map((item, i) => {\n                          return (\n                            <tr key={i}>\n                              <td className=\"text-center\">{i + 1}</td>\n                              <td className=\"text-center\">{item.Name}</td>\n                              <td className=\"text-center\">{item.NameSale}</td>\n                              <td className=\"text-center\">{item.Address}</td>\n                              <td className=\"text-center\">{item.Email}</td>\n                              <td className=\"text-center\">{item.Phone}</td>\n                              <td className=\"text-center\">{item.Gender}</td>\n                              <td className=\"text-center\">\n                                <CBadge color={this.getBadge(item.Status)}>\n                                  {item.Status}\n                                </CBadge>\n                              </td>\n                              <td className=\"text-center\">\n                                {new Date(\n                                  item.Create_Date\n                                ).toLocaleDateString() +\n                                  \" \" +\n                                  new Date(\n                                    item.Create_Date\n                                  ).toLocaleTimeString()}\n                              </td>\n                            </tr>\n                          );\n                        })\n                      : \"\"}\n                  </tbody>\n                </table>\n              }\n            </CardBody>\n          </Card>\n          {arrPagination_All.length == 1 ? (\n            \"\"\n          ) : (\n            <div\n              style={{ float: \"right\", marginRight: \"10px\", padding: \"10px\" }}\n            >\n              <tr style={styles.row}>\n                {arrPagination_All.map((item, i) => {\n                  return (\n                    <td>\n                      <Button\n                        style={styles.pagination}\n                        color={i == indexPage_All ? \"primary\" : \"danger\"}\n                        onClick={(e) => {\n                          this.setState({\n                            dataAll: arrPagination_All[i],\n                            indexPage_All: i,\n                          });\n                        }}\n                      >\n                        {i + 1}\n                      </Button>\n                    </td>\n                  );\n                })}\n              </tr>\n            </div>\n          )}\n\n          <Modal isOpen={this.state.modalCom} className={this.props.className}>\n            <ModalHeader>\n              {this.state.action == \"new\" ? `Tạo mới` : `Cập nhật`}\n            </ModalHeader>\n            <ModalBody>\n              <TextFieldGroup\n                field=\"Email\"\n                label=\"Email\"\n                value={this.state.Email}\n                placeholder={\"Email\"}\n                type={\"email\"}\n                onChange={(e) => this.onChange(\"Email\", e.target.value)}\n                // rows=\"5\"\n              />\n              <TextFieldGroup\n                field=\"Address\"\n                label=\"Address\"\n                value={this.state.Address}\n                placeholder={\"Email\"}\n                type={\"email\"}\n                onChange={(e) => this.onChange(\"Address\", e.target.value)}\n                // rows=\"5\"\n              />\n              <TextFieldGroup\n                field=\"Name\"\n                label=\"Name\"\n                value={this.state.Name}\n                placeholder={\"Name\"}\n                // error={errors.title}\n                onChange={(e) => this.onChange(\"Name\", e.target.value)}\n                // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"Password\"\n                label=\"Password\"\n                value={this.state.Password}\n                type={\"password\"}\n                placeholder={\"Password\"}\n                readOnly={action == \"new\" ? false : true}\n                onChange={(e) => this.onChange(\"Password\", e.target.value)}\n                // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"Code\"\n                label=\"Code\"\n                placeholder={\"Code\"}\n                value={this.state.Code}\n                // error={errors.title}\n                onChange={(e) => this.onChange(\"Code\", e.target.value)}\n                // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"UserName\"\n                label=\"UserName\"\n                placeholder={\"Username\"}\n                value={this.state.UserName}\n                // error={errors.title}\n                onChange={(e) => this.onChange(\"UserName\", e.target.value)}\n                // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"Phone\"\n                label=\"Phone\"\n                value={this.state.Phone}\n                placeholder={\"Phone\"}\n                // error={errors.title}\n                onChange={(e) => this.onChange(\"Phone\", e.target.value)}\n                // rows=\"5\"\n              />\n\n              <div>\n                <label style={styles.flexLabel} htmlFor=\"tag\">\n                  Gender:{\" \"}\n                </label>\n                <select\n                  style={styles.flexOption}\n                  name=\"Gender\"\n                  onChange={(e) => this.onChange(\"Gender\", e.target.value)}\n                >\n                  <option value={this.state.Gender}>\n                    {this.state.Gender == \"\"\n                      ? ` - - - - - - - - - - `\n                      : this.state.Gender}\n                  </option>\n                  <option value={\"Nam\"}>Nam</option>\n                  <option value={\"Nữ\"}>Nữ</option>\n                </select>\n              </div>\n\n              <div>\n                <label style={styles.flexLabel} htmlFor=\"tag\">\n                  Company:{\" \"}\n                </label>\n                <select\n                  style={styles.flexOption}\n                  name=\"Company_Id\"\n                  onChange={(e) => this.onChange(\"Company_Id\", e.target.value)}\n                >\n                  <option value={this.state.Company_Id}>-----</option>\n                  {dataCompany.map((item, i) => {\n                    if (item.Name == currentCompany) {\n                      return (\n                        <option selected value={item._id}>\n                          {item.Name}\n                        </option>\n                      );\n                    } else {\n                      return <option value={item._id}>{item.Name}</option>;\n                    }\n                  })}\n                </select>\n              </div>\n\n              <div>\n                <label style={styles.flexLabel} htmlFor=\"tag\">\n                  Role:{\" \"}\n                </label>\n                <select\n                  style={styles.flexOption}\n                  name=\"Role_Id\"\n                  onChange={(e) => this.onChange(\"Role_Id\", e.target.value)}\n                >\n                  <option value={this.state.Role_Id}>-----</option>\n                  {dataRole.map((item, i) => {\n                    if (item.Name == currentRole) {\n                      return (\n                        <option selected value={item._id}>\n                          {item.Name}\n                        </option>\n                      );\n                    } else {\n                      return <option value={item._id}>{item.Name}</option>;\n                    }\n                  })}\n                </select>\n              </div>\n\n              {/* <div>\n                <label style={styles.flexLabel} htmlFor=\"tag\">Sale:    </label>\n                <select style={styles.flexOption} name=\"Sale_Id\" onChange={e => this.onChange(\"Sale_Id\", e.target.value)}>\n                  <option value={this.state.Sale_Id}>-----</option>\n                  {\n                    dataSale.map((item, i) => {\n                      if (item.Name == currentSale) {\n                        return (\n                          <option selected value={item._id}>{item.Name}</option>\n                        );\n                      } else {\n                        return (\n                          <option value={item._id}>{item.Name}</option>\n                        );\n                      }\n                    })\n                  }\n                </select>\n              </div> */}\n            </ModalBody>\n            <ModalFooter></ModalFooter>\n          </Modal>\n\n          <Modal\n            isOpen={this.state.modalDelete}\n            toggle={(e) =>\n              this.setState({\n                modalDelete: !this.state.modalDelete,\n                delete: null,\n              })\n            }\n            className={this.props.className}\n          >\n            <ModalHeader\n              toggle={(e) =>\n                this.setState({\n                  modalDelete: !this.state.modalDelete,\n                  delete: null,\n                })\n              }\n            >{`Xoá`}</ModalHeader>\n            <ModalBody>\n              <label htmlFor=\"tag\">{`Do you want to delete user \"${\n                this.state.delete ? this.state.delete.Email : \"\"\n              }\" ?`}</label>\n            </ModalBody>\n            <ModalFooter>\n              <Button\n                color=\"primary\"\n                onClick={(e) => this.delete()}\n                disabled={this.state.isLoading}\n              >\n                Xoá\n              </Button>{\" \"}\n              <Button\n                color=\"secondary\"\n                onClick={(e) =>\n                  this.setState({\n                    modalDelete: !this.state.modalDelete,\n                    delete: null,\n                  })\n                }\n              >\n                Đóng\n              </Button>\n            </ModalFooter>\n          </Modal>\n        </div>\n      );\n    }\n    return (\n      <div className=\"d-flex justify-content-center\">\n        <ReactLoading type={\"balls\"} color={\"orange\"} height={'5%'} width={'5%'} />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"60px\"\n  },\n  sale_times: {\n    width: \"8%\",\n    float: \"left\",\n    height: \"60px\",\n    textAlign: 'center'\n  },\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: 160,\n    margin: '1px'\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: \"right\",\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh12: {\n    width: \"11%\",\n    float: \"left\",\n    height: \"60px\",\n    textAlign: 'center'\n  },\n  ws12: {\n    width: \"13%\",\n    float: \"left\",\n    height: \"60px\",\n    textAlign: 'center'\n  },\n  wh15: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"60px\",\n    textAlign: 'center'\n  },\n  w5: {\n    width: \"22%\",\n    float: \"left\",\n    height: \"60px\"\n  },\n  w5_10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"60px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    marginLeft: '5px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\"\n  },\n  searchInput: {\n    width: \"160px\",\n    display: 'inline-block',\n    margin: '1px'\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.getData_AllAPI\n  }\n}\n\n\nexport default connect(mapStateToProps, { onSaveID, onSaveSeed })(Users);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder, onClick }) => {\n  return (\n    <div className={classnames('form-group', { 'has-error': error })}>\n      <label className=\"control-label\">{label}</label>\n      <input\n        onChange={onChange}\n        onClick={onClick}\n        onBlur={checkUserExists}\n        value={value}\n        type={type}\n        name={field}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        className=\"form-control\"\n      />\n    {error && <span className=\"help-block\">{error}</span>}\n    </div>  );\n}\n\nTextFieldGroup.propTypes = {\n  field: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checkUserExists: PropTypes.func\n}\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextFieldGroup;\n"],"sourceRoot":""}