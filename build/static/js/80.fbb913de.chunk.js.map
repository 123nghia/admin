{"version":3,"sources":["views/beauty/configWeb/BannerAia.js","views/beauty/configWeb/GameConfig.js","views/beauty/configWeb/dataList.js","views/beauty/configWeb/gameUser.js","views/beauty/configWeb/Content.js","views/beauty/configBeauty.js","views/Common/TextFieldGroup.js","views/components/Iframe.js"],"names":["BannerAia","setStateByName","name","value","props","onChangeImage","e","name_link","name_show","this","SaveAllConfigWeb","class","Button","variant","color","onClick","TextFieldGroup","field","label","type","onChange","target","alt","style","width","height","src","imageBannerDesktop","hrefImageBannerDesktop","placeholder","className","imageBannerMobile","hrefImageBannerMobile","Component","Seo","getTimeConver","datetime","moment","format","FormGroup","Label","Input","score","scoreMax","custom","size","status","Voucher","getstatusItem","state","modalCom","scoreInput","scoreMaxInput","statusInput","setState","item","console","log","id","_id","valueselect","key","val","openModal","window","location","reload","bodyRequest","axios","post","baseUrlapi","then","res","Swal","fire","title","timer","reloadPage","dataListBeauty","map","i","x","dataCompany","find","companyId","compnayName","Name","outline","editdata","Modal","isOpen","ModalHeader","ModalBody","ModalFooter","saveBeauty","GameUser","viewHistory","open","undefined","GameData","UserName","Phone","Image","ageGameReal","successGame","Date","Create_Date","toLocaleDateString","toLocaleTimeString","headers","Headers","auth","localStorage","getItem","append","ConfigWeb","valueLink","valueShow","files","reader","FileReader","readAsDataURL","onload","result","change","a","Constants","BASE_URL","url","newComany_id","company_id","tabNameConfig","icon","IoLogoBuffer","JSON","parse","poupintro","pupupSuccess","popupfail","fromDate","todate","fromtime","totime","dataGame","tabcontent","tablinks","document","getElementsByClassName","length","classList","add","remove","replace","animation","getAllDataCompany","getDataConfigWeb","setTimeout","getDataBeautyUser","ToggleViewConfigWeb","List_All_company","params","data","get","Output_newComany_id","dataGame1","isLoading","css","override","loading","speedMultiplier","List","sx","maxWidth","bgcolor","component","aria-labelledby","ListItemButton","pl","ListItemIcon","ListItemText","fontSize","primary","typeGetData","error","checkUserExists","readOnly","classnames","onBlur","defaultProps","Iframe","toggleView","link","closeModal","show","closeButton","display","position"],"mappings":"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","file":"static/js/80.fbb913de.chunk.js","sourcesContent":["import { Component } from \"react\";\r\nimport { Button } from \"reactstrap\";\r\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\r\n\r\nexport default class BannerAia extends Component {\r\n  \r\n    SaveAllConfigWeb(value) {\r\n        this.props.SaveAllConfigWeb(value);\r\n    }\r\n    setStateByName = (name, value) => {\r\n        this.props.setStateByName(name, value);\r\n      };\r\n    onChangeImage=(e, name, name_link, name_show) =>{\r\n        this.props.onChangeImage(e, name, name_link, name_show);\r\n    }\r\n\r\n  render() {\r\n      \r\n    return (\r\n      <>\r\n        <div class=\"text-center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={() => this.SaveAllConfigWeb(\"banner\")}\r\n          >\r\n            Lưu thay đổi\r\n          </Button>\r\n        </div>\r\n        <div class=\"mt-3\">\r\n          <h1>Banner trên PC</h1>\r\n          <TextFieldGroup\r\n            field=\"image\"\r\n            label=\"Hình ảnh\"\r\n            type={\"file\"}\r\n            onChange={(e) => this.onChangeImage(\r\n                e,\r\n                \"imageBannerDesktop\",\r\n                \"imageBannerDesktop_link\",\r\n                \"imageBannerDesktop_show\"\r\n              )}\r\n            onClick={(e) => {e.target.value = null;this.setStateByName(\"imageBannerDesktop_show\", \"\")}} \r\n   \r\n          />\r\n          <div class=\"text-center\">\r\n            <img\r\n              alt=\"\"\r\n              style={{ width: \"400px\" }}\r\n              height=\"auto\"\r\n              src={this.props.imageBannerDesktop}\r\n            />\r\n          </div>\r\n          <TextFieldGroup\r\n            field=\"hrefImageBannerDesktop\"\r\n            label=\"Đường dẫn(Nếu có)\"\r\n            value={this.props.hrefImageBannerDesktop}\r\n            placeholder=\"\"\r\n            type={\"text\"}\r\n            className=\"mt-3\"\r\n            onChange={(e) => {\r\n                this.setStateByName(\"hrefImageBannerDesktop\", e.target.value);\r\n              }}\r\n            \r\n          />\r\n        </div>\r\n        <hr />\r\n        <div class=\"mt-3\">\r\n          <h1>Banner trên điện thoại</h1>\r\n          <TextFieldGroup\r\n            field=\"image\"\r\n            label=\"Hình ảnh\"\r\n            type={\"file\"}\r\n            onChange={(e) => {\r\n              this.onChangeImage(\r\n                e,\r\n                \"imageBannerMobile\",\r\n                \"imageBannerMobile_link\",\r\n                \"imageBannerMobile_show\"\r\n              );\r\n            }}\r\n            onClick={(e) => {e.target.value = null;this.setStateByName(\"imageBannerMobile_show\", \"\")}} \r\n          />\r\n          <div class=\"text-center\">\r\n            <img\r\n              alt=\"\"\r\n              style={{ width: \"400px\" }}\r\n              height=\"auto\"\r\n              src={this.props.imageBannerMobile}\r\n            />\r\n          </div>\r\n          <TextFieldGroup\r\n            field=\"hrefImageBannerMobile\"\r\n            label=\"Đường dẫn(Nếu có)\"\r\n            value={this.props.hrefImageBannerMobile}\r\n            placeholder=\"\"\r\n            type={\"text\"}\r\n            className=\"mt-3\"\r\n            onChange={(e) => {\r\n              this.setStateByName(\"hrefImageBannerMobile\", e.target.value);\r\n            }}\r\n          />\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport moment from 'moment'\r\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\r\nimport { Button, FormGroup, Label,Input  } from \"reactstrap\";\r\nimport {\r\n\r\n  CLabel, CSelect, CRow, CCol\r\n} from \"@coreui/react\";\r\n\r\n\r\nexport default class Seo extends Component {\r\n  SaveAllConfigWeb() {\r\n    this.props.SaveAllConfigWeb();\r\n  }\r\n  setStateByName = (name, value) => {\r\n    this.props.setStateByName(name, value);\r\n  };\r\n  onChangeImage=(e, name, name_link, name_show) =>{\r\n    this.props.onChangeImage(e, name, name_link, name_show);\r\n}\r\ngetTimeConver = (datetime) => {\r\n  if(datetime ==null )\r\n          return '';\r\n   return  moment(datetime).format('YYYY-MM-DD');\r\n\r\n}\r\n\r\n  render() {\r\n    \r\n    return (\r\n      <>\r\n        <div className=\"text-center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={() => this.SaveAllConfigWeb()}\r\n          >\r\n            Lưu thay đổi\r\n          </Button>\r\n        </div>\r\n\r\n          \r\n      <FormGroup>\r\n    <Label >\r\n      Điểm mỗi lượt soi\r\n    </Label>\r\n    <Input\r\n      name =\"score\"\r\n      placeholder=\"Điểm mỗi lượt soi\"\r\n      type=\"number\"\r\n      value={this.props.score}\r\n      onChange={(e) => {\r\n        this.setStateByName( \"score\", e.target.value );\r\n      }}\r\n    />\r\n  </FormGroup>\r\n     \r\n  <FormGroup>\r\n    <Label >\r\n      Điểm tối đa ( theo ngày)\r\n    </Label>\r\n    <Input\r\n      name =\"scoreMax\"\r\n      placeholder=\"Điểm tối đa ( theo ngày)\"\r\n      type=\"number\"\r\n      value={this.props.scoreMax}\r\n      onChange={(e) => {\r\n        this.setStateByName( \"scoreMax\", e.target.value );\r\n      }}\r\n    />\r\n  </FormGroup>\r\n  <CSelect\r\n                 onChange={(e) => {\r\n                  this.setStateByName( \"status\", e.target.value );\r\n                }}   custom size=\"sm\" name=\"status\" \r\n                        value ={this.props.status}\r\n                 >\r\n                     \r\n                          <option   value =\"1\" >\r\n                          Hoạt động\r\n                          </option>\r\n                          <option   value =\"0\" >\r\n                          không hoạt động\r\n                          </option>\r\n                    \r\n                    </CSelect>\r\n\r\n\r\n        </>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\n\r\nimport CIcon from '@coreui/icons-react';\r\n\r\nimport {\r\n\r\nCSelect\r\n} from \"@coreui/react\";\r\nimport axios from \"axios\";\r\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\r\nimport { Button } from \"reactstrap\";\r\nimport {\r\n  CButton\r\n} from '@coreui/react'\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Col,\r\n  Row,\r\n  Input,\r\n  ModalHeader, ModalBody, ModalFooter, Modal,\r\n\r\n} from 'reactstrap';\r\nimport Swal from 'sweetalert2';\r\nexport default class Voucher extends Component {\r\n  \r\n  \r\n  SaveAllConfigWeb(value) {\r\n    this.props.SaveAllConfigWeb(value);\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n     \r\n      modalCom: false,\r\n      scoreInput: 0,\r\n      scoreMaxInput: 0,\r\n      statusInput: 0\r\n\r\n    };\r\n  }\r\n  setStateByName = (name, value) => {\r\n    this.props.setStateByName(name, value);\r\n  };\r\n  getstatusItem = (status)=> {\r\n    if(status ==\"1\")\r\n    {\r\n      return \"Hoạt động\";\r\n    }\r\n    return \"Không hoạt động\";\r\n  }\r\n\r\n  openModal() {\r\n    this.setState({\r\n      modalCom: !this.state.modalCom,\r\n    \r\n    })\r\n    \r\n  }\r\n\r\n  editdata (item){\r\n    console.log(item);\r\n \r\n\r\n    this.setState({\r\n      modalCom: !this.state.modalCom,\r\n      scoreMaxInput:  item.scoreMax,\r\n      id: item._id,\r\n      statusInput: item.status,\r\n      scoreInput:  item.score\r\n    \r\n    })\r\n  }\r\n\r\n  changeCompanySet (valueselect)\r\n  {\r\n\r\n  }\r\n  onChange(key, val) {\r\n    this.setState({ [key]: val })\r\n  }\r\n  reloadPage() {\r\n    \r\n   \r\n    this.openModal();\r\n    window.location.reload();\r\n\r\n  }\r\n\r\n  saveBeauty() {\r\n\r\n    \r\n  var baseUrlapi = \"https://api-soida.applamdep.com\";\r\n    let url = baseUrlapi + \"/api/gameBeauty/adminUpdate\";\r\n    \r\n    const bodyRequest = {\r\n        id: this.state.id,\r\n      status: this.state.statusInput,\r\n      score: this.state.scoreInput,\r\n      scoreMax: this.state.scoreMaxInput\r\n    };\r\n     axios\r\n    .post(url,bodyRequest )\r\n    .then((res) => {\r\n             Swal.fire({\r\n              title: 'thao tác thành công!',\r\n              timer: 3000,    \r\n            }\r\n            \r\n            );\r\n            this.reloadPage();\r\n    });\r\n \r\n};\r\n  render() {\r\n    return (\r\n      <>\r\n      \r\n       \r\n        <div class=\"flex-a-center config-box-border\">\r\n        \r\n        <table  className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                  <thead className=\"thead-light\">\r\n                    <tr>\r\n                      <th className=\"text-center\">STT.</th>\r\n                      <th className=\"text-center\">Tên công ty</th>\r\n                      <th className=\"text-center\">Điểm mỗi lươt soi</th>\r\n                      <th className=\"text-center\">Điểm tối đa\t</th>\r\n                         \r\n                      <th className=\"text-center\">Trạng thái</th>\r\n                      <th className=\"text-center\">Danh sách</th>\r\n                      <th className=\"text-center\">Chỉnh sửa</th>\r\n                          </tr>\r\n                  </thead>\r\n                  <tbody>\r\n             \r\n                    {\r\n                      this.props.dataListBeauty.map((item, i) => {\r\n                    \r\n                        var x =  this.props.dataCompany.find(x => x._id ===  item.companyId);\r\n\r\n                        const dataCompany = this.props.dataCompany;\r\n              \r\n                        var compnayName =\"\";\r\n                        if(x)\r\n                        {\r\n                          compnayName  = x.Name;\r\n                        }\r\n                        if(compnayName )\r\n                        {\r\n                        }\r\n                        else \r\n                        {\r\n                          return;\r\n                        }\r\n                        return (\r\n                              <tr >\r\n                                      <td className=\"text-center\">1 </td>\r\n                                      <td className=\"text-center\">{compnayName}</td>\r\n                                      <td className=\"text-center\">{item.score}</td>\r\n                                      <td className=\"text-center\">{item.scoreMax}</td>\r\n                                      <td className=\"text-center\">{this.getstatusItem(item.status)}</td>\r\n                                        \r\n                                      <td className=\"text-center\">\r\n                                          <CButton outline color=\"primary\" ><CIcon name=\"cil-magnifying-glass\" /> Xem chi tiết</CButton>\r\n                                      </td>\r\n                                      <td className=\"text-center\">\r\n                                          <CButton outline color=\"primary\"  onClick={e => this.editdata(item)} ><CIcon name=\"cis-update\" /> Sửa</CButton>\r\n                                      \r\n                                      </td>\r\n                            </tr>\r\n                        )\r\n\r\n                      })\r\n                     }\r\n                            \r\n                 \r\n                  </tbody>\r\n\r\n                </table>\r\n         \r\n        </div>\r\n\r\n\r\n        <Modal isOpen={this.state.modalCom} >\r\n            <ModalHeader>{'new' == 'new' ? `Tạo mới` : `Cập nhật`}</ModalHeader>\r\n            <ModalBody>\r\n              <TextFieldGroup\r\n                field=\"scoreInput\"\r\n                label=\"Điểm mỗi lượt soi\"\r\n              value ={this.state.scoreInput}\r\n              onChange={e => this.onChange(\"scoreInput\", e.target.value)}\r\n              />\r\n\r\n              <TextFieldGroup\r\n                field=\"scoreMaxInput\"\r\n                label=\"Điểm tối đa\"\r\n                value ={this.state.scoreMaxInput}\r\n                onChange={e => this.onChange(\"scoreMaxInput\", e.target.value)}\r\n              />\r\n               <CSelect\r\n                 onChange={e => this.onChange(\"statusInput\", e.target.value)}   custom size=\"sm\" name=\"company_idSearch\" \r\n                 value ={this.state.statusInput}\r\n                 id=\"company_idSearch\">\r\n                     \r\n                          <option   value =\"1\">\r\n                          Hoạt động\r\n                          </option>\r\n                          <option   value =\"0\">\r\n                          không hoạt động\r\n                          </option>\r\n                    \r\n                    </CSelect>\r\n\r\n            \r\n            </ModalBody>\r\n\r\n            <ModalFooter>\r\n              <CButton color=\"primary\"  onClick={e => this.saveBeauty()} >Lưu</CButton>\r\n              <CButton color=\"secondary\" onClick={e => this.openModal()} >Đóng</CButton>\r\n            </ModalFooter>\r\n          </Modal>\r\n       \r\n        \r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport TextFieldGroup from \"../../Common/TextFieldGroup\";\r\nimport { Button } from \"reactstrap\";\r\nimport IframeModal from '../../components/Iframe';\r\nimport CIcon from '@coreui/icons-react';\r\nimport {\r\n  CButton\r\n} from '@coreui/react'\r\nimport {\r\n    CTextarea,\r\n  } from \"@coreui/react\";\r\n  export default class GameUser extends Component {\r\n   \r\n  SaveAllConfigWeb() {\r\n    this.props.SaveAllConfigWeb();\r\n  }\r\n  setStateByName = (name, value) => {\r\n    this.props.setStateByName(name, value);\r\n  };\r\n  onChangeImage=(e, name, name_link, name_show) =>{\r\n    this.props.onChangeImage(e, name, name_link, name_show);\r\n}\r\n\r\n\r\nviewHistory = (e) => {\r\n\r\n  window.open(\"/#/lich-su-ca-nhan/\"+ e, \"_blank\");\r\n\r\n}\r\n  render() {\r\n    return (\r\n      <>\r\n      \r\n        <table  className=\"table table-hover table-outline mb-0  d-sm-table\">\r\n                  <thead className=\"thead-light\">\r\n                        <tr>\r\n                            <th className=\"text-center\">STT.</th>\r\n                            <th className=\"text-center\">Tên</th>\r\n                            <th className=\"text-center\">Số điện thoại</th>\r\n                            <th className=\"text-center\">Hình ảnh</th>\r\n                            <th className=\"text-center\">Thông tin kết quả</th>\r\n                            <th className=\"text-center\">Ngày than gia</th>\r\n                            <th className=\"text-center\">Thông tin</th>\r\n                        </tr>\r\n                  </thead>\r\n                  <tbody>\r\n           \r\n                   \r\n                    {\r\n                      this.props.GameData != undefined ?\r\n                      this.props.GameData.map((item, i) => {\r\n                      return (\r\n                             <tr key={i}>\r\n                              <td className=\"text-center\">{i+1}</td>\r\n                                   <td className=\"text-center\">{item.UserName}</td>\r\n                                   <td className=\"text-center\">{item.Phone}</td>\r\n                                   <td className=\"text-center\">\r\n                                         <img src={item.Image} style={{ width: '100px', height: 50 }} />\r\n                                   </td>\r\n                                   <td className=\"text-left\">\r\n                                    \r\n                                         <p>Loại game: <strong>Game tuổi da</strong>  </p>\r\n                                         <p>Độ tuổi trúng game:  <strong>26 </strong>  </p>\r\n                                         <p>Độ tuổi thực:  <strong>{ item.ageGameReal} </strong>  </p>\r\n\r\n                                         <p>Trúng thưởng:   <strong>{item.successGame? \"Trúng thưởng\": \"Không\" } </strong></p>\r\n                                    </td>\r\n                                   \r\n                                   <td className=\"text-center\">\r\n                                          <p>{(new Date(item.Create_Date)).toLocaleDateString()} </p> \r\n                                          \r\n                                          <p>{(new Date(item.Create_Date)).toLocaleTimeString()} </p>\r\n                                            \r\n                                    </td>\r\n\r\n                                    <td className=\"text-center\">\r\n                                      <CButton outline color=\"primary\" onClick={e => {\r\n                                      this.viewHistory(\r\n                                         item._id\r\n                                      )\r\n                                      }}\r\n                                \r\n                                ><CIcon name=\"cil-magnifying-glass\" /> Xem chi tiết</CButton>\r\n                                     </td>\r\n\r\n\r\n                              </tr>\r\n                          );\r\n                        }) : \"\"\r\n                    }\r\n                  </tbody>\r\n\r\n               \r\n        </table>\r\n      \r\n   \r\n      </>\r\n    );\r\n  }\r\n}\r\n","import { Component } from \"react\";\r\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\r\nimport { Button } from \"reactstrap\";\r\nimport {\r\n    CTextarea,\r\n  } from \"@coreui/react\";\r\nexport default class Seo extends Component {\r\n  SaveAllConfigWeb() {\r\n    this.props.SaveAllConfigWeb();\r\n  }\r\n  setStateByName = (name, value) => {\r\n    this.props.setStateByName(name, value);\r\n  };\r\n  onChangeImage=(e, name, name_link, name_show) =>{\r\n    this.props.onChangeImage(e, name, name_link, name_show);\r\n}\r\n  render() {\r\n    return (\r\n      <>\r\n        <div className=\"text-center\">\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"success\"\r\n            onClick={() => this.SaveAllConfigWeb()}\r\n          >\r\n            Lưu thay đổi\r\n          </Button>\r\n        </div>\r\n        <TextFieldGroup\r\n            field=\"poupintro\"\r\n            label=\"Poup giới thiệu:\"\r\n            value={this.props.poupintro}\r\n            placeholder={\"\"}\r\n            onChange={(e) => {\r\n              this.setStateByName( \"poupintro\", e.target.value );\r\n            }}\r\n        />\r\n        <TextFieldGroup\r\n            field=\"pupupSuccess\"\r\n            label=\"Câu thông  báo khi trúng thưởng:\"\r\n            value={this.props.pupupSuccess}\r\n            placeholder={\"\"}\r\n            onChange={(e) => {\r\n              this.setStateByName( \"pupupSuccess\", e.target.value );\r\n            }}\r\n        />\r\n        <TextFieldGroup\r\n            field=\"introduce\"\r\n            label=\"Câu thông báo khi không trúng thưởng:\"\r\n            value={this.props.popupfail}\r\n            placeholder={\"\"}\r\n            onChange={(e) => {\r\n              this.setStateByName( \"popupfail\", e.target.value );\r\n            }}\r\n        />  \r\n      </>\r\n    );\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport List from \"@mui/material/List\";\r\n\r\nimport ListItemButton from \"@mui/material/ListItemButton\";\r\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\r\nimport ListItemText from \"@mui/material/ListItemText\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport Constants from \"./../../contants/contants\";\r\nimport axios from \"axios\";\r\nimport { css } from \"@emotion/react\";\r\nimport DotLoader from \"react-spinners/DotLoader\";\r\nimport { IoLogoBuffer } from \"@react-icons/all-files/io/IoLogoBuffer\";\r\nimport BannerAia from \"./configWeb/BannerAia\";\r\nimport Logo from \"./configWeb/GameConfig\";\r\nimport DataList from \"./configWeb/dataList\";\r\n\r\nimport Seo from \"./configWeb/Content\";\r\nimport DataGame from \"./configWeb/gameUser\";\r\nimport { BiSlideshow } from \"react-icons/bi\";\r\nimport { MdOutlinePermDataSetting } from \"react-icons/md\";\r\nimport { BsChatDots } from \"react-icons/bs\";\r\n\r\nimport Swal from 'sweetalert2';\r\nlet headers = new Headers();\r\nconst auth = localStorage.getItem(\"auth\");\r\nheaders.append(\"Authorization\", \"Bearer \" + auth);\r\nheaders.append(\"Content-Type\", \"application/json\");\r\nclass ConfigWeb extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    if(localStorage.type !='2')\r\n    {\r\n      this.state = {\r\n        tabNameConfig: [\r\n           \r\n          {\r\n            _id: \"20\",\r\n            name: \"Nhà cung cấp\",\r\n            icon: <IoLogoBuffer style={{ width: \"24px \", height: \"24px \" }} />,\r\n          },\r\n        ],\r\n        company_id: JSON.parse(localStorage.getItem(\"user\")).company_id\r\n          ? JSON.parse(localStorage.getItem(\"user\")).company_id\r\n          : null,\r\n        poupintro: \"\",\r\n        pupupSuccess: \"\",\r\n        popupfail: \"\",\r\n        fromDate: \"\",\r\n        todate: \"\",\r\n        fromtime: \"\",\r\n        totime: \"\",\r\n        scoreMax: \"\",\r\n        dataGame:  [],\r\n        score: \"\",\r\n        dataListBeauty: [],\r\n        dataCompany: []\r\n  \r\n  \r\n      };\r\n    }\r\n    else \r\n    {\r\n      this.state = {\r\n        tabNameConfig: [\r\n            {\r\n            _id: \"4\",\r\n            name: \"Cài đặt\",\r\n            icon: <IoLogoBuffer style={{ width: \"24px \", height: \"24px \" }} />,\r\n          }\r\n          // ,\r\n          // {\r\n          //   _id: \"19\",\r\n          //   name: \"Danh sách\",\r\n          //   icon: <IoLogoBuffer style={{ width: \"24px \", height: \"24px \" }} />,\r\n          // }\r\n         \r\n        ],\r\n        company_id: JSON.parse(localStorage.getItem(\"user\")).company_id\r\n          ? JSON.parse(localStorage.getItem(\"user\")).company_id\r\n          : null,\r\n        poupintro: \"\",\r\n        pupupSuccess: \"\",\r\n        popupfail: \"\",\r\n        fromDate: \"\",\r\n        todate: \"\",\r\n        fromtime: \"\",\r\n        totime: \"\",\r\n        scoreMax: \"\",\r\n        dataGame:  [],\r\n        score: \"\",\r\n        dataListBeauty: [],\r\n        dataCompany: []\r\n  \r\n  \r\n      };\r\n    }\r\n   \r\n  }\r\n\r\n  ToggleViewConfigWeb(id) {\r\n    var i, tabcontent, tablinks;\r\n    tabcontent = document.getElementsByClassName(\"tabcontent\");\r\n    tablinks = document.getElementsByClassName(\"tablinks\");\r\n    const { tabNameConfig } = this.state;\r\n    for (i = 0; i < tabNameConfig.length; i++) {\r\n      if (tabNameConfig[i]._id === id) {\r\n        tablinks[i].classList.add(\"tabcontent-left-active\");\r\n      } else {\r\n        tablinks[i].classList.remove(\"tabcontent-left-active\");\r\n      }\r\n    }\r\n    for (i = 0; i < tabcontent.length; i++) {\r\n      if (tabcontent[i].id.replace(\"tabcontent\", \"\") === id) {\r\n        tabcontent[i].classList.add(\"defaultOpen\");\r\n        tabcontent[i].style.animation = \"hideOpa 1s ease-in-out\";\r\n      } else {\r\n        tabcontent[i].classList.remove(\"defaultOpen\");\r\n        tabcontent[i].style.animation = \"none\";\r\n      }\r\n    }\r\n  }\r\n  onChangeImage = (e, value, valueLink, valueShow) => {\r\n    let files = e.target.files;\r\n    let reader = new FileReader();\r\n    this.setState({ [valueLink]: files[0] });\r\n    reader.readAsDataURL(files[0]);\r\n    reader.onload = (e) => {\r\n      this.setState({ [value]: e.target.result, [valueShow]: e.target.result });\r\n    };\r\n  };\r\n  async componentDidMount() {\r\n    await this.getAllDataCompany();\r\n  \r\n      await this.getDataConfigWeb();\r\n\r\n      setTimeout(() => {\r\n         this.dataListBeauty();\r\n      }, 2000);\r\n\r\n   \r\n      if(localStorage.type =='2')\r\n      {\r\n        this.getDataBeautyUser();\r\n      }\r\n      \r\n \r\n      this.ToggleViewConfigWeb(\"4\");\r\n  }\r\n\r\n  async getAllDataCompany (){\r\n    \r\n    var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + Constants.List_All_company;\r\n   \r\n    await axios\r\n      .post(url, {\r\n        params: {\r\n\r\n        \r\n        },\r\n      })\r\n      .then((res) => {\r\n        \r\n        var data = res.data;\r\n      \r\n      \r\n           this.setState(\r\n          {\r\n        \r\n            dataCompany: data.data.dataCompany\r\n           \r\n          },\r\n          () => {\r\n\r\n           \r\n          }\r\n        );\r\n      });\r\n\r\n  }\r\n\r\n async dataListBeauty ()\r\n {\r\n\r\n  var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + \"/api/gameBeauty/getall\";\r\n   \r\n    await axios\r\n      .get(url, {\r\n        params: {\r\n\r\n        \r\n        },\r\n      })\r\n      .then((res) => {\r\n        \r\n        var data = res.data.data;\r\n      \r\n           this.setState(\r\n          {\r\n        \r\n            dataListBeauty: data\r\n           \r\n          },\r\n          () => {\r\n\r\n           \r\n          }\r\n        );\r\n      });\r\n\r\n }\r\n\r\n  async getDataConfigWeb() {\r\n    var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + \"/api/gameBeauty/getInfo\";\r\n    const newComany_id = this.state.company_id;\r\n    let Output_newComany_id;\r\n    if (newComany_id) {\r\n      Output_newComany_id = newComany_id;\r\n    } else {\r\n      Output_newComany_id = \"-1\";\r\n    }\r\n    await axios\r\n      .get(url, {\r\n        params: {\r\n\r\n          company_id: Output_newComany_id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        \r\n        var data = res.data.data;\r\n        console.log(data);\r\n        \r\n           this.setState(\r\n          {\r\n        \r\n            scoreMax: data.scoreMax,\r\n            score: data.score,\r\n            status:data.status,\r\n           \r\n          },\r\n          () => {\r\n\r\n            console.log(this.state);\r\n          }\r\n        );\r\n      });\r\n  }\r\n\r\n  async getDataGame1() {\r\n    var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + \"/api/get-game-data-11\";\r\n    const newComany_id = this.state.company_id;\r\n    let Output_newComany_id;\r\n    if (newComany_id) {\r\n      Output_newComany_id = newComany_id;\r\n    } else {\r\n      Output_newComany_id = \"-1\";\r\n    }\r\n    await axios\r\n      .get(url, {\r\n        params: {\r\n          company_id: Output_newComany_id,\r\n\r\n        },\r\n      })\r\n      .then((res) => {\r\n        \r\n         var data = res.data.data;\r\n          this.setState(\r\n          {\r\n            dataGame1 : data\r\n          },\r\n          () => {\r\n\r\n            \r\n          }\r\n        );\r\n      });\r\n  }\r\n\r\n  async getDataBeautyUser() {\r\n    var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + \"/api/get-data-beauty-user\";\r\n    const newComany_id = this.state.company_id;\r\n    let Output_newComany_id;\r\n    if (newComany_id) {\r\n      Output_newComany_id = newComany_id;\r\n    } else {\r\n      Output_newComany_id = \"-1\";\r\n    }\r\n    await axios\r\n      .get(url, {\r\n        params: {\r\n          company_id: Output_newComany_id,\r\n\r\n        },\r\n      })\r\n      .then((res) => {\r\n        \r\n         var data = res.data.data;\r\n          this.setState(\r\n          {\r\n            dataGame1 : data\r\n          },\r\n          () => {\r\n\r\n            \r\n          }\r\n        );\r\n      });\r\n  }\r\n  async getDataGame() {\r\n    var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + \"/api/get-game-data-1\";\r\n    const newComany_id = this.state.company_id;\r\n    let Output_newComany_id;\r\n    if (newComany_id) {\r\n      Output_newComany_id = newComany_id;\r\n    } else {\r\n      Output_newComany_id = \"-1\";\r\n    }\r\n    await axios\r\n      .get(url, {\r\n        params: {\r\n          company_id: Output_newComany_id,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        \r\n         var data = res.data.data;\r\n          this.setState(\r\n          {\r\n            dataGame : data\r\n          },\r\n          () => {\r\n\r\n            console.log(data);\r\n          }\r\n        );\r\n      });\r\n  }\r\n\r\n  SaveAllConfigWeb = async (change) => {\r\n\r\n   \r\n\r\n    var baseUrlapi = Constants.BASE_URL;\r\n    let url = baseUrlapi + \"/api/gameBeauty/update\";\r\n    const newComany_id = this.state.company_id;\r\n    let Output_newComany_id;\r\n    if (newComany_id) {\r\n      Output_newComany_id = newComany_id;\r\n    } else {\r\n      Output_newComany_id = \"-1\";\r\n    }\r\n    const bodyRequest = {\r\n    \r\n      company_id: Output_newComany_id,\r\n      status: this.state.status,\r\n      scoreMax: this.state.scoreMax,\r\n      score: this.state.score\r\n     \r\n\r\n\r\n};\r\n    \r\n\r\n    await axios\r\n    .post(url,bodyRequest )\r\n    .then((res) => {\r\n             Swal.fire({\r\n              title: 'thao tác thành công!',\r\n              timer: 3000,    \r\n            });\r\n    });\r\n \r\n  };\r\n\r\n  setStateByName = (name, value) => {\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  render() {\r\n    if (!this.state.isLoading) {\r\n      return (\r\n        <div className=\"animated fadeIn\">\r\n          <div className=\"flex-tabs\">\r\n            <div className=\"tab\">\r\n              <List\r\n                sx={{\r\n                  width: \"100%\",\r\n                  maxWidth: 360,\r\n                  bgcolor: \"background.paper\",\r\n                }}\r\n                component=\"nav\"\r\n                aria-labelledby=\"nested-list-subheader\"\r\n              >\r\n                {this.state.tabNameConfig\r\n                  ? this.state.tabNameConfig.map((item, i) => {\r\n                      return (\r\n                        <ListItemButton\r\n                          key={item._id}\r\n                          className={\r\n                            i === 0\r\n                              ? \" tablinks tabcontent-left-active\"\r\n                              : \" tablinks\"\r\n                          }\r\n                          onClick={() => this.ToggleViewConfigWeb(item._id)}\r\n                          sx={{ pl: 4 }}\r\n                        >\r\n                          <ListItemIcon>{item.icon}</ListItemIcon>\r\n                          <ListItemText\r\n                            className=\"tabcontent-left\"\r\n                            style={{\r\n                              fontSize: \"14px !important\",\r\n                              color: \"rgb(52, 71, 103)\",\r\n                            }}\r\n                            primary={item.name}\r\n                          />\r\n                        </ListItemButton>\r\n                      );\r\n                    })\r\n                  : null}\r\n              </List>\r\n            </div>\r\n            <div className=\"tabcontents\">\r\n              \r\n              \r\n\r\n              <div id=\"tabcontent12\" className=\"tabcontent\">\r\n                <DataGame\r\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\r\n                  setStateByName={this.setStateByName}\r\n                  GameData  = {this.state.dataGame}\r\n                  typeGetData = {0}\r\n                  pupupSuccess={this.state.pupupSuccess}\r\n                  poupintro={this.state.poupintro}\r\n                  popupfail={this.state.popupfail}\r\n                  fromDate={this.state.fromDate}\r\n                  todate={this.state.todate}\r\n                  fromtime={this.state.fromtime}\r\n                  totime={this.state.totime}\r\n                \r\n                  scoreMax={this.state.scoreMax}\r\n                  status={this.state.status}\r\n                  score={this.state.score}\r\n                />\r\n              </div>\r\n\r\n              <div id=\"tabcontent13\" className=\"tabcontent\">\r\n                <DataGame\r\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\r\n                  setStateByName={this.setStateByName}\r\n                  GameData  = {this.state.dataGame1}\r\n                  typeGetData = {1}\r\n                 \r\n                \r\n                  scoreMax={this.state.scoreMax}\r\n                  score={this.state.score}\r\n                  status= {this.state.status}\r\n                />\r\n              </div>\r\n\r\n              <div id=\"tabcontent19\" className=\"tabcontent\">\r\n                <DataGame\r\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\r\n                  setStateByName={this.setStateByName}\r\n                  GameData  = {this.state.dataGame1}\r\n                  typeGetData = {1}\r\n                 \r\n                \r\n                  scoreMax={this.state.scoreMax}\r\n                  score={this.state.score}\r\n                  status= {this.state.status}\r\n                />\r\n              </div>\r\n\r\n              <div id=\"tabcontent9\" className=\"tabcontent\">\r\n                <BannerAia\r\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\r\n                  setStateByName={this.setStateByName}\r\n                  onChangeImage = {this.onChangeImage}\r\n                  imageBannerDesktop={this.state.imageBannerDesktop}\r\n                  hrefImageBannerDesktop={this.state.hrefImageBannerDesktop}\r\n                  imageBannerMobile={this.state.imageBannerMobile}\r\n                  hrefImageBannerMobile={this.state.hrefImageBannerMobile}\r\n                />\r\n              </div>\r\n              <div id=\"tabcontent4\" className=\"tabcontent \">\r\n                <Logo\r\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\r\n                  setStateByName={this.setStateByName}\r\n              \r\n                  pupupSuccess={this.state.pupupSuccess}\r\n                  poupintro={this.state.poupintro}\r\n                  popupfail={this.state.popupfail}\r\n                  fromDate={this.state.fromDate}\r\n                  todate={this.state.todate}\r\n                  fromtime={this.state.fromtime}\r\n                  totime={this.state.totime}\r\n                  scoreMax={this.state.scoreMax}\r\n                  score={this.state.score}\r\n                  status= {this.state.status}\r\n                />\r\n              </div>\r\n              {\r\n\r\n                  this.state.company_id == undefined ? ( <div id=\"tabcontent20\" className=\"tabcontent\">\r\n                  <DataList\r\n                 \r\n                    dataListBeauty =  {this.state.dataListBeauty}\r\n                  \r\n                    dataCompany = {this.state.dataCompany}\r\n                    \r\n                  />\r\n                </div>) : <></>\r\n              }\r\n             \r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n    return (\r\n      <div className=\"sweet-loading\">\r\n        <DotLoader\r\n          css={override}\r\n          size={50}\r\n          color={\"#123abc\"}\r\n          loading={this.state.isLoading}\r\n          speedMultiplier={1.5}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nexport default ConfigWeb;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder, onClick }) => {\r\n  return (\r\n    <div className={classnames('form-group', { 'has-error': error })}>\r\n      <label className=\"control-label\">{label}</label>\r\n      <input\r\n        onChange={onChange}\r\n        onClick={onClick}\r\n        onBlur={checkUserExists}\r\n        value={value}\r\n        type={type}\r\n        name={field}\r\n        placeholder={placeholder}\r\n        readOnly={readOnly}\r\n        className=\"form-control\"\r\n      />\r\n    {error && <span className=\"help-block\">{error}</span>}\r\n    </div>  );\r\n}\r\n\r\nTextFieldGroup.propTypes = {\r\n  field: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  error: PropTypes.string,\r\n  type: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  checkUserExists: PropTypes.func\r\n}\r\n\r\nTextFieldGroup.defaultProps = {\r\n  type: 'text'\r\n}\r\n\r\nexport default TextFieldGroup;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Iframes from 'react-iframe'\r\n\r\nimport {\r\n  CButton,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n} from '@coreui/react'\r\n\r\nfunction Iframe({ toggleView, link, closeModal }) {\r\n\r\n  const handleClose = () => {\r\n    if (closeModal) {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  return (\r\n    <CModal\r\n      show={toggleView}\r\n      size=\"xl\"\r\n    >\r\n      <CModalHeader closeButton>\r\n        <CModalTitle>Chi tiết soi da</CModalTitle>\r\n      </CModalHeader>\r\n      <CModalBody>\r\n        <Iframes url={link}\r\n          width=\"100%\"\r\n          height=\"500px\"\r\n          display=\"initial\"\r\n          position=\"relative\" />\r\n      </CModalBody>\r\n      <CModalFooter>\r\n        <CButton color=\"secondary\" onClick={() => { handleClose() }}>Đóng</CButton>\r\n      </CModalFooter>\r\n    </CModal>\r\n  )\r\n}\r\n\r\nIframe.propTypes = {\r\n  link: PropTypes.string,\r\n  toggleView: PropTypes.bool\r\n}\r\n\r\nIframe.defaultProps = {\r\n  link: \"\",\r\n  toggleView: false\r\n};\r\n\r\nexport default Iframe\r\n\r\n"],"sourceRoot":""}