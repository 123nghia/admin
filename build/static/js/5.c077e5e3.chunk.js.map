{"version":3,"sources":["views/Common/TextArea.js","views/Company/index.js"],"names":["TextArea","field","value","label","error","type","onChange","checkUserExists","rows","className","classnames","onBlur","name","defaultProps","headers","Headers","auth","localStorage","getItem","append","Company","props","getData","a","setState","isLoading","axios","baseURL","url","method","res","data","dataApi","active","map","val","Status","totalActive","openDelete","item","modalDelete","state","delete","key","activePage","page","itemsCount","limit","modalCom","viewingUser","communities","updated","action","Name","Email","Phone","Fax","Address","Website","Code","this","d","toLocaleUpperCase","includes","push","alert","body","is_success","toggleModal","message","id","fetchData","fetch","global","BASE_URL","then","users","json","result","total","catch","console","log","pageNumber","getUsers","modal","image","isActive","errors","position","e","target","user","address","communityId","style","styles","success","danger","deleted","length","tags","searchInput","searchKey","placeholder","outline","color","floatRight","size","onClick","responsive","wh12","wh15","w5","i","row","openUpdate","isOpen","toggle","flexLabel","htmlFor","flexOption","addCompany","updateCompany","disabled","Component","width","textDecoration","float","marginTop","spinner","center","textAlign","tbody","height","overflowY","mgl5","marginLeft","marginRight","display","userActive","userPending","nagemonNameCol","borderRadius","marginBottom"],"mappings":"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","file":"static/js/5.c077e5e3.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextArea = ({ field, value, label, error, type, onChange, checkUserExists, rows }) => {\n  return (\n    <div className={classnames('form-group', { 'has-error': error })}>\n      <label className=\"control-label\">{label}</label>\n      <textarea\n        onChange={onChange}\n        onBlur={checkUserExists}\n        value={value}\n        type={type}\n        name={field}\n        className=\"form-control blacktext\"\n        rows={rows}\n      >\n      </textarea>\n    {error && <span className=\"help-block\">{error}</span>}\n    </div>  );\n}\nTextArea.propTypes = {\n  field: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  rows: PropTypes.string,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checkUserExists: PropTypes.func\n}\n\nTextArea.defaultProps = {\n  type: 'text',\n  rows: '3'\n}\n\nexport default TextArea;","import React, { Component } from 'react';\n\nimport {\n    Card,\n    CardBody,\n    CardHeader,\n    Col,\n    Row,\n    Table, Button, Input,\n    ModalHeader, ModalBody, ModalFooter, Modal,\n    Alert\n} from 'reactstrap';\nimport 'moment-timezone';\nimport TextArea from \"../Common/TextArea\";\nimport TextFieldGroup from \"../Common/TextFieldGroup\";\nimport Pagination from \"react-js-pagination\";\nimport axios from 'axios'\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\nclass Company extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            data: [],\n            key: '',\n            activePage: 1,\n            page: 1,\n            itemsCount: 0,\n            limit: 20,\n            totalActive: 0,\n            modalCom: false,\n            viewingUser: {},\n            communities: [],\n            updated: '',\n            dataApi: [],\n            action: 'new',\n            Name: '',\n            Email: '',\n            Phone: '',\n            Fax: 'Nam',\n            Address: '',\n            Website: '',\n            Code: '',\n            Status: '',\n            modalDelete: false,\n            delete: null\n        };\n    }\n    async componentDidMount() {\n        this.getData()\n    }\n\n    getData = async () => {\n        this.setState({ isLoading: true });\n        const res = await axios({\n            baseURL: 'http://thanhvien.applamdep.com',\n            url: '/api/list-company',\n            method: 'GET',\n        });\n\n        this.setState({ data: res.data.data, dataApi: res.data.data });\n\n        let active = 0\n\n        res.data.data.map(val => {\n            if (val.Status == \"Actived\") {\n                active = active + 1\n            }\n        })\n\n        this.setState({ isLoading: false, totalActive: active });\n    }\n\n    searchKey(key) {\n        this.setState({ key: key })\n\n        if (key != '') {\n            let d = []\n            this.state.dataApi.map(val => {\n                if (val.Name.toLocaleUpperCase().includes(key.toLocaleUpperCase()) || val.Email.toLocaleUpperCase().includes(key.toLocaleUpperCase())) {\n                    d.push(val)\n                }\n            })\n            let active = 0\n\n            d.map(val => {\n                if (val.Status == \"Actived\") {\n                    active = active + 1\n                }\n            })\n\n            this.setState({ data: d, totalActive: active })\n        } else {\n            let active = 0\n\n            this.state.dataApi.map(val => {\n                if (val.Status == \"Actived\") {\n                    active = active + 1\n                }\n            })\n\n            this.setState({ data: this.state.dataApi, totalActive: active })\n        }\n    }\n\n    toggleModal(key) {\n        if (key == 'new') {\n            this.setState({\n                modalCom: !this.state.modalCom,\n                action: key,\n                Name: '',\n                Email: '',\n                Phone: '',\n                Fax: '',\n                Address: '',\n                Website: '',\n                Code: ''\n            })\n        }\n    }\n\n    onChange(key, val) {\n        this.setState({ [key]: val })\n    }\n\n    async addCompany() {\n        const { Email, Name, Phone, Fax, Address, Website, Code } = this.state\n\n        if (Email == null || Email == ''\n            || Name == null || Name == ''\n            || Phone == null || Phone == ''\n            || Address == null || Address == ''\n            || Code == null || Code == '') {\n            alert(\"Please fill in all the requirements\");\n            return\n        }\n\n        const body = {\n            Name: Name,\n            Email: Email,\n            Phone: Phone,\n            Fax: Fax,\n            Address: Address,\n            Website: Website,\n            Code: Code\n        }\n\n        this.setState({ isLoading: true });\n        const res = await axios({\n            baseURL: 'http://thanhvien.applamdep.com',\n            url: '/api/add-company',\n            method: 'PUT',\n            data: body\n        });\n\n        if (res.data.is_success == true) {\n            this.getData();\n            this.toggleModal(\"new\");\n        } else {\n            alert(res.data.message);\n            this.setState({ isLoading: false });\n        }\n    }\n\n    openUpdate(item) {\n\n        this.setState({\n            modalCom: !this.state.modalCom,\n            action: \"update\",\n            Name: item.Name,\n            Email: item.Email,\n            Phone: item.Phone,\n            Fax: item.Fax,\n            Address: item.Address,\n            Website: item.Website,\n            Code: item.Code,\n            id: item['_id'],\n            Status: item.Status\n        })\n    }\n\n    async updateCompany() {\n        const { Email, Name, Phone, Fax, Address, Website, Code, Status } = this.state\n\n        if (Email == null || Email == ''\n            || Name == null || Name == ''\n            || Phone == null || Phone == ''\n            || Address == null || Address == '') {\n            alert(\"Please fill in all the requirements\");\n            return\n        }\n\n        const body = {\n            Name: Name,\n            Email: Email,\n            Phone: Phone,\n            Fax: Fax,\n            Address: Address,\n            Website: Website,\n            Code: Code,\n            Status: Status,\n            id: this.state.id\n        }\n\n        this.setState({ isLoading: true });\n        const res = await axios({\n            baseURL: 'http://thanhvien.applamdep.com',\n            url: '/api/update-company',\n            method: 'POST',\n            data: body\n        });\n\n        if (res.data.is_success == true) {\n            this.getData();\n            this.toggleModal(\"new\");\n        } else {\n            alert(res.data.message);\n            this.setState({ isLoading: false });\n        }\n    }\n\n    openDelete = (item) => {\n        this.setState({\n            modalDelete: !this.state.modalDelete,\n            delete: item\n        })\n    }\n\n    async delete() {\n        this.setState({ isLoading: true });\n        const res = await axios({\n            baseURL: 'http://thanhvien.applamdep.com',\n            url: '/api/delete-company',\n            method: 'DELETE',\n            data: {\n                \"id\": this.state.delete['_id']\n            }\n        });\n\n        if (res.data.is_success == true) {\n            this.getData();\n            this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n        } else {\n            alert(res.data.message);\n            this.setState({ isLoading: false });\n        }\n\n    }\n\n    getUsers(page = 1) {\n        const limit = this.state.limit;\n        const key = this.state.key || '';\n        const fetchData = {\n            method: 'GET',\n            headers: headers\n        };\n        fetch(global.BASE_URL + '/admin/users?key=' + key + '&page=' + page + '&limit=' + limit, fetchData).then(users => {\n            users.json().then(result => {\n                this.setState({\n                    data: result.data,\n                    itemsCount: result.total,\n                    activePage: page,\n                    totalActive: result.totalActive,\n                    updated: '',\n                });\n            })\n        }).catch(console.log);\n    }\n    async handlePageChange(pageNumber) {\n        this.getUsers(pageNumber);\n    }\n    toggle(action = '') {\n        this.setState({\n            modal: !this.state.modal,\n            image: '',\n            url: '',\n            isActive: false,\n            isLoading: false,\n            errors: {},\n            action,\n            position: 1,\n            data: [],\n            updated: '',\n        });\n    }\n    inputChange(e) {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n    goSearch() {\n        this.getUsers();\n    }\n    toggleChannel() {\n\n    }\n    execUpdateCommunity(user) {\n\n    }\n    setUserCommunityAdmin(address, communityId, admin = true) {\n    }\n    render() {\n        const { data, key, viewingUser, communities, action } = this.state;\n        if (!this.state.isLoading) {\n            return (\n                <div className=\"animated fadeIn\">\n                    <Row>\n                        <Col>\n                            <p style={styles.success}>{this.state.updated}</p>\n                            <p style={styles.danger}>{this.state.deleted}</p>\n                            <Card>\n                                <CardHeader>\n                                    <i className=\"fa fa-align-justify\"></i> USERS (Total: {this.state.data.length}, Active: {this.state.totalActive})\n                                    <div style={styles.tags}>\n                                        <div>\n                                            <Input style={styles.searchInput} onChange={(e) => this.searchKey(e.target.value)} name=\"key\" value={key} placeholder=\"Search\" />\n                                            <Button outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={e => this.toggleModal(\"new\")}>Add</Button>\n                                        </div>\n                                    </div>\n                                </CardHeader>\n                                <CardBody>\n                                    <Table responsive>\n                                        <thead>\n                                            <tr>\n                                                <th style={styles.wh12}>No.</th>\n                                                <th style={styles.wh12}>Name</th>\n                                                <th style={styles.wh12}>Email</th>\n                                                <th style={styles.wh15}>Phone</th>\n                                                <th style={styles.wh12}>Fax</th>\n                                                <th style={styles.wh12}>Address</th>\n                                                <th style={styles.wh12}>Website</th>\n                                                <th style={styles.wh12}>Code</th>\n                                                <th style={styles.wh12}>Status</th>\n                                                <th style={styles.w5}>Action</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {\n                                                data.map((item, i) => {\n                                                    return (\n                                                        <tr key={i} style={styles.row}>\n                                                            <td style={styles.wh12}>{i + 1}</td>\n                                                            <td style={styles.wh12}>{item.Name}</td>\n                                                            <td style={styles.wh12}>{item.Email}</td>\n                                                            <td style={styles.wh15}>{item.Phone}</td>\n                                                            <td style={styles.wh12}>{item.Fax}</td>\n                                                            <td style={styles.wh12}>{item.Address}</td>\n                                                            <td style={styles.wh12}>{item.Website}</td>\n                                                            <td style={styles.wh12}>{item.Code}</td>\n                                                            <td style={styles.wh12}>{item.Status}</td>\n                                                            <td style={styles.w5}>\n                                                                <Button outline color=\"primary\" size=\"sm\" onClick={(e) => this.openUpdate(item)} >Update</Button>{' '}\n                                                                <Button outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>Delete</Button>\n                                                            </td>\n                                                        </tr>\n                                                    );\n                                                })\n                                            }\n                                        </tbody>\n                                    </Table>\n                                </CardBody>\n                            </Card>\n                            {/* <Pagination\n                                activePage={this.state.activePage}\n                                itemsCountPerPage={this.state.limit}\n                                totalItemsCount={this.state.itemsCount}\n                                pageRangeDisplayed={10} // so luong item hien thi tren pagination number\n                                onChange={e => this.handlePageChange(e)}\n                                itemClass=\"page-item\"\n                                linkClass=\"page-link\"\n                            /> */}\n                        </Col>\n                    </Row>\n\n                    <Modal isOpen={this.state.modalCom} toggle={e => this.toggleModal('new')} className={this.props.className}>\n                        <ModalHeader toggle={e => this.toggleModal('new')}>{this.state.action == 'new' ? `Create` : `Update`}</ModalHeader>\n                        <ModalBody>\n                            <TextFieldGroup\n                                field=\"Email\"\n                                label=\"Email\"\n                                value={this.state.Email}\n                                // error={errors.title}\n                                onChange={e => this.onChange(\"Email\", e.target.value)}\n                            // rows=\"5\"\n                            />\n                            <TextFieldGroup\n                                field=\"Name\"\n                                label=\"Name\"\n                                value={this.state.Name}\n                                // error={errors.title}\n                                onChange={e => this.onChange(\"Name\", e.target.value)}\n                            // rows=\"5\"\n                            />\n\n                            <TextFieldGroup\n                                field=\"Phone\"\n                                label=\"Phone\"\n                                value={this.state.Phone}\n                                onChange={e => this.onChange(\"Phone\", e.target.value)}\n                            // rows=\"5\"\n                            />\n\n                            <TextFieldGroup\n                                field=\"Fax\"\n                                label=\"Fax\"\n                                value={this.state.Fax}\n                                // error={errors.title}\n                                onChange={e => this.onChange(\"Fax\", e.target.value)}\n                            // rows=\"5\"\n                            />\n\n                            <TextFieldGroup\n                                field=\"Address\"\n                                label=\"Address\"\n                                value={this.state.Address}\n                                // error={errors.title}\n                                onChange={e => this.onChange(\"Address\", e.target.value)}\n                            // rows=\"5\"\n                            />\n\n                            <TextFieldGroup\n                                field=\"Website\"\n                                label=\"Website\"\n                                value={this.state.Website}\n                                // error={errors.title}\n                                onChange={e => this.onChange(\"Website\", e.target.value)}\n                            // rows=\"5\"\n                            />\n\n                            <TextFieldGroup\n                                field=\"Code\"\n                                label=\"Code\"\n                                value={this.state.Code}\n                                // error={errors.title}\n                                onChange={e => this.onChange(\"Code\", e.target.value)}\n                            // rows=\"5\"\n                            />\n                            {\n                                action == 'new' ? \"\" : <div>\n                                    <label style={styles.flexLabel} htmlFor=\"tag\">Status    </label>\n                                    <select style={styles.flexOption} name=\"Status\" onChange={e => this.onChange(\"Status\", e.target.value)}>\n                                        <option value={this.state.Status}>{this.state.Status == '' ? ` - - - - - - - - - - ` : this.state.Status}</option>\n                                        <option value={'Actived'}>Actived</option>\n                                        <option value={'Locked'}>Locked</option>\n                                        <option value={'Deactived'}>Deactived</option>\n                                    </select>\n                                </div>\n                            }\n\n                        </ModalBody>\n\n                        <ModalFooter>\n                            <Button color=\"primary\" onClick={e => { this.state.action === 'new' ? this.addCompany() : this.updateCompany() }} disabled={this.state.isLoading}>Save</Button>{' '}\n                            <Button color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Cancel</Button>\n                        </ModalFooter>\n                    </Modal>\n\n                    <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n                        <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Delete`}</ModalHeader>\n                        <ModalBody>\n                            <label htmlFor=\"tag\">{`Do you want to delete user \"${this.state.delete ? this.state.delete.Email : ''}\" ?`}</label>\n                        </ModalBody>\n                        <ModalFooter>\n                            <Button color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Delete</Button>{' '}\n                            <Button color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Cancel</Button>\n                        </ModalFooter>\n                    </Modal>\n                </div>\n            );\n        }\n        return (\n            <div id=\"page-loading\">\n                <div className=\"three-balls\">\n                    <div className=\"ball ball1\"></div>\n                    <div className=\"ball ball2\"></div>\n                    <div className=\"ball ball3\"></div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst styles = {\n    flexLabel: {\n        width: 100\n    },\n    flexOption: {\n        width: 300\n    },\n    a: {\n        textDecoration: 'none'\n    },\n    floatRight: {\n        float: \"right\",\n        marginTop: '3px'\n    },\n    spinner: {\n        width: \"30px\"\n    },\n    center: {\n        textAlign: \"center\"\n    },\n    tbody: {\n        height: \"380px\",\n        overflowY: \"auto\"\n    },\n    wh12: {\n        width: \"9%\",\n        float: \"left\",\n        height: \"80px\"\n    },\n    wh15: {\n        width: \"15%\",\n        float: \"left\",\n        height: \"80px\"\n    },\n    w5: {\n        width: \"10%\",\n        float: \"left\",\n        height: \"80px\"\n    },\n    row: {\n        float: \"left\",\n        width: \"100%\"\n    },\n    success: {\n        color: 'green'\n    },\n    danger: {\n        color: 'red'\n    },\n    mgl5: {\n        marginLeft: '5px'\n    },\n    tags: {\n        float: \"right\",\n        marginRight: \"5px\",\n        width: \"250px\"\n    },\n    searchInput: {\n        width: \"190px\",\n        display: 'inline-block',\n    },\n    userActive: {\n        color: 'green'\n    },\n    userPending: {\n        color: 'red'\n    },\n    nagemonNameCol: {\n        width: '328px'\n    },\n    image: {\n        width: '100px',\n        height: '100px',\n        borderRadius: '99999px'\n    },\n    mgl5: {\n        marginBottom: '5px'\n    }\n}\n\nexport default Company;\n"],"sourceRoot":""}